{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u8de8\u94fe\u670d\u52a1\u5e73\u53f0 BitXHub BitXHub \u662f\u7531\u676d\u5dde\u8da3\u94fe\u79d1\u6280\u81ea\u4e3b\u7814\u53d1\u5e76\u5b8c\u5168\u5f00\u6e90\u7684\u533a\u5757\u94fe\u8de8\u94fe\u534f\u4f5c\u5e73\u53f0\uff0c\u652f\u6301\u5e94\u7528\u4e0e\u591a\u94fe\u4e92\u64cd\u4f5c\u3001\u540c/\u5f02\u6784\u94fe\u95f4\u4e92\u64cd\u4f5c\u7b49\u591a\u7ef4\u8de8\u94fe\u4ea4\u4e92\u3002","title":"\u8de8\u94fe\u670d\u52a1\u5e73\u53f0 BitXHub"},{"location":"#bitxhub","text":"BitXHub \u662f\u7531\u676d\u5dde\u8da3\u94fe\u79d1\u6280\u81ea\u4e3b\u7814\u53d1\u5e76\u5b8c\u5168\u5f00\u6e90\u7684\u533a\u5757\u94fe\u8de8\u94fe\u534f\u4f5c\u5e73\u53f0\uff0c\u652f\u6301\u5e94\u7528\u4e0e\u591a\u94fe\u4e92\u64cd\u4f5c\u3001\u540c/\u5f02\u6784\u94fe\u95f4\u4e92\u64cd\u4f5c\u7b49\u591a\u7ef4\u8de8\u94fe\u4ea4\u4e92\u3002","title":"\u8de8\u94fe\u670d\u52a1\u5e73\u53f0 BitXHub"},{"location":"bitxhub/community_introduction/","text":"\u793e\u533a\u4ecb\u7ecd \u5f00\u6e90\u5728\u533a\u5757\u94fe\u7684\u53d1\u5c55\u5386\u7a0b\u4e2d\uff0c\u53d1\u6325\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002\u5f00\u6e90\u7684\u672c\u8d28\u662f\u5171\u4eab\u6280\u672f\uff0c\u800c\u6280\u672f\u662f\u751f\u4ea7\u8d44\u6599\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u56e0\u6b64\u5f00\u6e90\u7684\u793e\u4f1a\u610f\u4e49\u5b9e\u9645\u4e0a\u662f\u5b9e\u73b0\u4e86\u751f\u4ea7\u8d44\u6599\u7684\u5171\u4eab\u3002\u5f00\u6e90\u7684\u5546\u4e1a\u610f\u4e49\u5219\u5728\u4e8e\u901a\u8fc7\u5171\u4eab\u6280\u672f\u3001\u63a8\u5e7f\u6280\u672f\u6807\u51c6\u4ece\u800c\u6253\u9020\u4e86\u4e00\u4e2a\u591a\u65b9\u5546\u4e1a\u5171\u540c\u4f53\u3002\u65e0\u8bba\u662f\u5bf9\u533a\u5757\u94fe\u884c\u4e1a\uff0c\u8fd8\u662f\u5bf9\u8da3\u94fe\u79d1\u6280\u672c\u8eab\uff0c\u5f00\u6e90\u90fd\u5177\u6709\u6781\u4e3a\u91cd\u8981\u7684\u610f\u4e49\uff0c\u901a\u8fc7\u5f00\u6e90\u793e\u533a\uff0c\u6211\u4eec\u5e0c\u671b\uff1a \u53ef\u4ee5\u66f4\u597d\u5730\u6253\u9020\u5171\u540c\u7e41\u8363\u7684\u6280\u672f\u793e\u533a\uff1b \u5404\u884c\u5404\u4e1a\u90fd\u53ef\u4ee5\u57fa\u4e8e\u5f00\u6e90\u4ea7\u54c1\u6784\u5efa\u81ea\u5df1\u7684\u751f\u6001\uff0c\u4fc3\u8fdb\u751f\u6001\u84ec\u52c3\u53d1\u5c55\uff1b \u4fc3\u8fdb\u534f\u8bae\u6807\u51c6\u5316\uff0c\u5f62\u6210\u533a\u5757\u94fe\u884c\u4e1a\u7684\u4e8b\u5b9e\u6807\u51c6\uff1b \u5f00\u6e90\u793e\u533a\u662f\u7fa4\u4f53\u7684\u81ea\u53d1\u8fdb\u5316\uff0c\u57fa\u4e8e\u793e\u533a\u6210\u957f\u7684\u6280\u672f\u5177\u6709\u66f4\u5f3a\u7684\u751f\u547d\u529b\u3002 \u8da3\u94fe\u79d1\u6280\u5c06\u533a\u5757\u94fe\u6280\u672f\u5e73\u53f0\u5f00\u6e90\uff0c\u5e0c\u671b**\u6253\u9020\u4e00\u4e2a\u66f4\u52a0\u5f00\u653e\u7684\u67b6\u6784\uff0c\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u53c2\u4e0e\u5230\u8de8\u94fe\u6280\u672f\u6807\u51c6\u5316\u548c\u9769\u65b0\u8fd0\u52a8\u4e2d**\uff0c\u4e00\u8d77\u7ee7\u7eed\u4e30\u5bcc\u5b8c\u5584\u8de8\u94fe\u6807\u51c6\uff0c\u6865\u63a5\u66f4\u591a\u7c7b\u578b\u5404\u5f02\u7684\u533a\u5757\u94fe\u5e73\u53f0\uff0c\u5171\u540c\u63a2\u7d22\u8de8\u94fe\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u771f\u6b63\u5b9e\u73b0\u533a\u5757\u94fe\u6280\u672f\u7684\u5546\u4e1a\u95ed\u73af\uff0c\u4ece\u800c\u63a8\u52a8\u4e2d\u56fd\u5f00\u6e90\u8fd0\u52a8\u66f4\u597d\u3001\u66f4\u5feb\u7684\u53d1\u5c55\u3002 BitXHub\u5b98\u7f51\u94fe\u63a5 https://bitxhub.hyperchain.cn/ BitXhub\u5f00\u6e90\u793e\u533a\u5730\u5740 https://github.com/meshplus/bitxhub","title":"\u793e\u533a\u4ecb\u7ecd"},{"location":"bitxhub/community_introduction/#_1","text":"\u5f00\u6e90\u5728\u533a\u5757\u94fe\u7684\u53d1\u5c55\u5386\u7a0b\u4e2d\uff0c\u53d1\u6325\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002\u5f00\u6e90\u7684\u672c\u8d28\u662f\u5171\u4eab\u6280\u672f\uff0c\u800c\u6280\u672f\u662f\u751f\u4ea7\u8d44\u6599\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u56e0\u6b64\u5f00\u6e90\u7684\u793e\u4f1a\u610f\u4e49\u5b9e\u9645\u4e0a\u662f\u5b9e\u73b0\u4e86\u751f\u4ea7\u8d44\u6599\u7684\u5171\u4eab\u3002\u5f00\u6e90\u7684\u5546\u4e1a\u610f\u4e49\u5219\u5728\u4e8e\u901a\u8fc7\u5171\u4eab\u6280\u672f\u3001\u63a8\u5e7f\u6280\u672f\u6807\u51c6\u4ece\u800c\u6253\u9020\u4e86\u4e00\u4e2a\u591a\u65b9\u5546\u4e1a\u5171\u540c\u4f53\u3002\u65e0\u8bba\u662f\u5bf9\u533a\u5757\u94fe\u884c\u4e1a\uff0c\u8fd8\u662f\u5bf9\u8da3\u94fe\u79d1\u6280\u672c\u8eab\uff0c\u5f00\u6e90\u90fd\u5177\u6709\u6781\u4e3a\u91cd\u8981\u7684\u610f\u4e49\uff0c\u901a\u8fc7\u5f00\u6e90\u793e\u533a\uff0c\u6211\u4eec\u5e0c\u671b\uff1a \u53ef\u4ee5\u66f4\u597d\u5730\u6253\u9020\u5171\u540c\u7e41\u8363\u7684\u6280\u672f\u793e\u533a\uff1b \u5404\u884c\u5404\u4e1a\u90fd\u53ef\u4ee5\u57fa\u4e8e\u5f00\u6e90\u4ea7\u54c1\u6784\u5efa\u81ea\u5df1\u7684\u751f\u6001\uff0c\u4fc3\u8fdb\u751f\u6001\u84ec\u52c3\u53d1\u5c55\uff1b \u4fc3\u8fdb\u534f\u8bae\u6807\u51c6\u5316\uff0c\u5f62\u6210\u533a\u5757\u94fe\u884c\u4e1a\u7684\u4e8b\u5b9e\u6807\u51c6\uff1b \u5f00\u6e90\u793e\u533a\u662f\u7fa4\u4f53\u7684\u81ea\u53d1\u8fdb\u5316\uff0c\u57fa\u4e8e\u793e\u533a\u6210\u957f\u7684\u6280\u672f\u5177\u6709\u66f4\u5f3a\u7684\u751f\u547d\u529b\u3002 \u8da3\u94fe\u79d1\u6280\u5c06\u533a\u5757\u94fe\u6280\u672f\u5e73\u53f0\u5f00\u6e90\uff0c\u5e0c\u671b**\u6253\u9020\u4e00\u4e2a\u66f4\u52a0\u5f00\u653e\u7684\u67b6\u6784\uff0c\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u53c2\u4e0e\u5230\u8de8\u94fe\u6280\u672f\u6807\u51c6\u5316\u548c\u9769\u65b0\u8fd0\u52a8\u4e2d**\uff0c\u4e00\u8d77\u7ee7\u7eed\u4e30\u5bcc\u5b8c\u5584\u8de8\u94fe\u6807\u51c6\uff0c\u6865\u63a5\u66f4\u591a\u7c7b\u578b\u5404\u5f02\u7684\u533a\u5757\u94fe\u5e73\u53f0\uff0c\u5171\u540c\u63a2\u7d22\u8de8\u94fe\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u771f\u6b63\u5b9e\u73b0\u533a\u5757\u94fe\u6280\u672f\u7684\u5546\u4e1a\u95ed\u73af\uff0c\u4ece\u800c\u63a8\u52a8\u4e2d\u56fd\u5f00\u6e90\u8fd0\u52a8\u66f4\u597d\u3001\u66f4\u5feb\u7684\u53d1\u5c55\u3002 BitXHub\u5b98\u7f51\u94fe\u63a5 https://bitxhub.hyperchain.cn/ BitXhub\u5f00\u6e90\u793e\u533a\u5730\u5740 https://github.com/meshplus/bitxhub","title":"\u793e\u533a\u4ecb\u7ecd"},{"location":"bitxhub/faq/","text":"FAQ \u8de8\u94fe\u6280\u672f 1. \u8de8\u94fe\u7684\u5fc5\u8981\u6027 \u4e00\u662f\u6280\u672f\u5c42\u9762\uff0c\u533a\u5757\u94fe\u6280\u672f\u5728\u5355\u94fe\u67b6\u6784\u4e0b\u672c\u8eab\u5b58\u5728\u7740\u6027\u80fd\u3001\u5bb9\u91cf\u4e0d\u8db3\u7b49\u95ee\u9898 \u3002\u5355\u94fe\u7531\u4e8e\u53d7\u5230\u76ee\u524d\u5171\u8bc6\u901f\u5ea6\u7684\u9650\u5236\uff0c\u8282\u70b9\u7684\u6267\u884c\u6027\u80fd\u65e0\u6cd5\u505a\u5230\u7ebf\u6027\u6269\u5c55\uff0c\u8fd9\u9650\u5236\u4e86\u9ad8\u4ea4\u6613\u541e\u5410\u91cf\u4f4e\u5ef6\u8fdf\u7684\u5546\u4e1a\u573a\u666f\u7684\u5e94\u7528\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u968f\u7740\u533a\u5757\u94fe\u8fd0\u884c\u65f6\u95f4\u7684\u589e\u957f\uff0c\u5176\u5b58\u50a8\u5bb9\u91cf\u4e5f\u5c06\u9010\u6e10\u589e\u957f\uff0c\u4e14\u8fd9\u79cd\u6570\u636e\u589e\u957f\u7684\u901f\u5ea6\u751a\u81f3\u4f1a\u8d85\u8fc7\u5355\u94fe\u5b58\u50a8\u4ecb\u8d28\u7684\u5bb9\u91cf\u4e0a\u9650\u3002\u76ee\u524d\u7684\u533a\u5757\u94fe\u5171\u8bc6\u7b97\u6cd5\u3001\u5b58\u50a8\u7ed3\u6784\u3001\u548c\u5b89\u5168\u673a\u5236\u4e0d\u540c\u5bfc\u81f4\u94fe\u4e0e\u94fe\u4e4b\u95f4\u7f3a\u4e4f\u7edf\u4e00\u7684\u4e92\u8054\u4e92\u901a\u673a\u5236\uff0c\u8fd9\u6781\u5927\u9650\u5236\u4e86\u533a\u5757\u94fe\u6280\u672f\u548c\u5e94\u7528\u751f\u6001\u7684\u5065\u5eb7\u53d1\u5c55\u3002 \u4e8c\u662f\u4e1a\u52a1\u5c42\u9762\u5b58\u5728\u8de8\u533a\u5757\u94fe\u4e1a\u52a1\u7684\u8d44\u4ea7\u4ea4\u6362\u548c\u4fe1\u606f\u4ea4\u6362\u9700\u6c42 \u3002\u5728\u8d44\u4ea7\u4ea4\u6362\u65b9\u9762\uff0c\u4e00\u4e9b\u533a\u5757\u94fe\u4e8b\u5b9e\u4e0a\u4ecd\u5904\u4e8e\u4e92\u76f8\u9694\u79bb\u7684\u72b6\u6001\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8d44\u4ea7\u4ea4\u6362\u4e3b\u8981\u4f9d\u9760\u4e2d\u5fc3\u5316\u7684\u4ea4\u6613\u6240\u6765\u5b8c\u6210\uff0c\u4e2d\u5fc3\u5316\u7684\u4ea4\u6362\u65b9\u5f0f\u65e2\u4e0d\u5b89\u5168\u89c4\u5219\u4e5f\u4e0d\u900f\u660e\u3002 \u800c\u4fe1\u606f\u4ea4\u6362\u7531\u4e8e\u6d89\u53ca\u94fe\u4e0e\u94fe\u4e4b\u95f4\u7684\u6570\u636e\u540c\u6b65\u548c\u76f8\u5e94\u7684\u8de8\u94fe\u8c03\u7528\uff0c\u5b9e\u73b0\u66f4\u4e3a\u590d\u6742\uff0c\u76ee\u524d\u5404\u4e2a\u533a\u5757\u94fe\u5e94\u7528\u4e4b\u95f4\u4e92\u901a\u58c1\u5792\u6781\u9ad8\uff0c\u65e0\u6cd5\u6709\u6548\u5730\u8fdb\u884c\u94fe\u4e0a\u4fe1\u606f\u5171\u4eab\u3002 2. \u8de8\u94fe\u6280\u672f\u7684\u53ef\u884c\u6027 \u76ee\u524d\u533a\u5757\u94fe\u884c\u4e1a\u5df2\u7ecf\u51fa\u73b0\u4e86\u5f88\u591a\u7684\u8de8\u94fe\u6280\u672f\u4ea7\u54c1\uff0c\u4e3b\u8981\u91c7\u7528\u516c\u8bc1\u4eba\u673a\u5236(notary schemes)\u3001\u4fa7\u94fe/\u4e2d\u7ee7(sidechains/relays)\u3001\u54c8\u5e0c\u9501\u5b9a(Hash-locking)\u7b49\u6280\u672f\uff0c\u5df2\u7ecf\u5728\u516c\u94fe\u7684\u573a\u666f\u4e2d\u6709\u5f88\u591a\u5e94\u7528\u4f8b\u5982\uff1a\u95ea\u7535\u7f51\u7edc\uff0c\u53bb\u4e2d\u5fc3\u5316\u4ea4\u6613\u6240\u7b49\u3002 \u8054\u76df\u94fe\u573a\u666f\u4e2d\u91c7\u7528\u7c7b\u4f3c\u6280\u672f\u53ca\u5176\u589e\u5f3a\u6280\u672f\uff0c\u89e3\u51b3\u8054\u76df\u94fe\u8de8\u94fe\u9700\u6c42\uff0c\u76ee\u524d\u7684\u4ea7\u54c1\u5df2\u7ecf\u80fd\u591f\u89e3\u51b3\u8de8\u94fe\u4e2d\u7684\u5173\u952e\u95ee\u9898\uff1a \u8de8\u94fe\u4ea4\u6613\u7684\u9a8c\u8bc1\u95ee\u9898\uff0c\u5982\u4f55\u786e\u8ba4\u8bb0\u5f55\u4ea4\u6613\u53d1\u751f\u7684\u533a\u5757\u5f97\u5230\u4e86\u8db3\u591f\u7684\u786e\u8ba4\uff0c\u5373\u4ea4\u6613\u4e8b\u52a1\u4e2d\u5404\u5206\u5e03\u5f0f\u7f51\u7edc\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\uff1b \u8de8\u94fe\u4e8b\u52a1\u7684\u539f\u5b50\u6027\u95ee\u9898\uff0c\u5982\u4f55\u7ba1\u7406\u8de8\u94fe\u4e8b\u52a1\u4e2d\u7684\u5404\u5b50\u4ea4\u6613\u786e\u4fdd\u8de8\u94fe\u4e8b\u52a1\u6574\u4f53\u5b8c\u6574\u7684\u539f\u5b50\u6027\uff0c\u5373\u8de8\u94fe\u4e8b\u52a1\u7684\u53d1\u751f\u53ea\u5b58\u5728\u4e24\u4e2d\u72b6\u6001\u5b8c\u6210\u6216\u5931\u8d25\uff1b \u4e0d\u540c\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u534f\u8bae\u9002\u914d\u95ee\u9898\uff0c\u5982\u4f55\u5bf9\u91c7\u7528\u4e0d\u540c\u67b6\u6784\u4e0e\u534f\u8bae\u7684\u533a\u5757\u94fe\u4e4b\u95f4\u8fdb\u884c\u9002\u914d\uff0c\u9700\u8981\u8de8\u94fe\u534f\u8bae\u4e2d\u8bbe\u8ba1\u53ef\u4ee5\u517c\u5bb9\u591a\u79cd\u5f02\u6784\u533a\u5757\u94fe\u7684\u6570\u636e\u7ed3\u6784\u3001\u547d\u540d\u89c4\u8303\u4ee5\u53ca\u901a\u4fe1\u65b9\u5f0f\u7b49\u3002 \u4ea7\u54c1\u529f\u80fd 1. \u4ea7\u54c1\u7b80\u4ecb \u8da3\u94fe\u79d1\u6280\u8de8\u94fe\u6280\u672f\u5e73\u53f0BitXHub\uff0c\u63d0\u51fa\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u901a\u7528\u8de8\u94fe\u4f20\u8f93\u534f\u8baeIBTP(Inter-Blokcchain Transfer Protocol), \u80fd\u591f\u5b8c\u7f8e\u652f\u6301\u548c\u517c\u5bb9\u4efb\u610f\u533a\u5757\u94fe\u7cfb\u7edf\uff0c\u5b9e\u73b0\u5f02\u6784\u533a\u5757\u94fe\u7684\u65e0\u7f1d\u8fde\u63a5\u3002BitXHub\u91c7\u7528\u5148\u8fdb\u7684\u4e2d\u7ee7+\u7f51\u5173\u7684\u7ec4\u5408\u6280\u672f\uff0c\u89e3\u51b3\u4e86\u8de8\u94fe\u4e2d\u7684\u4ea4\u6613\u6355\u83b7\u3001\u4f20\u8f93\u4ee5\u53ca\u9a8c\u8bc1\u7684\u6838\u5fc3\u96be\u9898\uff0c\u6240\u6709\u5173\u952e\u6280\u672f\u5747\u5177\u6709\u5b8c\u5168\u81ea\u4e3b\u77e5\u8bc6\u4ea7\u6743\u3002\u540c\u65f6\uff0c\u5e73\u53f0\u5177\u5907\u5b8c\u5584\u7684\u8de8\u94fe\u63a5\u53e3\u7ba1\u7406\u3001\u5f02\u6784\u94fe\u6210\u5458\u6cbb\u7406\u3001\u8054\u76df\u6743\u9650\u7ba1\u63a7\u7b49\u8054\u76df\u8de8\u94fe\u4e13\u7528\u673a\u5236\uff0c\u662f\u76ee\u524d\u4e1a\u754c\u6700\u5b8c\u5907\u7684\u5f02\u6784\u8054\u76df\u94fe\u8de8\u94fe\u6280\u672f\u5e73\u53f0\uff0c\u5df2\u7ecf\u5728\u91d1\u878d\u3001\u653f\u52a1\u7b49\u4e1a\u52a1\u573a\u666f\u4e2d\u8fdb\u884c\u4e86\u76f8\u5173\u5e94\u7528\u9a8c\u8bc1\u3002 2. \u5b9e\u73b0\u539f\u7406 BitXHub\u63d0\u51fa\u4e00\u79cd\u53ef\u6269\u5c55\u7684\u9002\u5e94\u4e0d\u540c\u5f02\u6784\u533a\u5757\u94fe\u7cfb\u7edf\u4e4b\u95f4\u7684\u8de8\u94fe\u65b9\u6848\uff0c\u901a\u8fc7\u8bbe\u8ba1\u53ef\u63d2\u62d4\u7684\u8de8\u94fe\u7f51\u5173\u6280\u672f\uff0c\u5b9e\u73b0\u533a\u5757\u94fe\u7f51\u7edc\u95f4\u7684\u7684\u534f\u8bae\u8f6c\u6362\uff0c\u5e76\u652f\u6301\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u4ea4\u6613\u9a8c\u8bc1\uff0c\u8be5\u65b9\u6848\u652f\u6301\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u4ea4\u6613\u7684\u53ef\u4fe1\u9a8c\u8bc1\u548c\u53ef\u9760\u4f20\u9012\u3002 \u5e94\u7528\u57fa\u4e8e\u63d2\u4ef6\u673a\u5236\u7684\u8de8\u94fe\u7f51\u5173\uff0c\u5b9e\u73b0\u5f02\u6784\u5e94\u7528\u94fe\u7684\u5feb\u901f\u9002\u914d\u4e0e\u7edf\u4e00\u7ba1\u7406\uff0c\u4ee5\u52a8\u6001\u52a0\u8f7d\u63d2\u4ef6\u7684\u5f62\u5f0f\u968f\u65f6\u52a0\u5165\u5e73\u53f0\uff1b\u5e94\u7528\u57fa\u4e8e\u667a\u80fd\u5408\u7ea6\u7684\u5f02\u6784\u4ea4\u6613\u9a8c\u8bc1\u6280\u672f\uff0c\u5c06\u4ea4\u6613\u9a8c\u8bc1\u89c4\u5219\u8fdb\u884c\u5168\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406\uff0c\u5b9e\u73b0\u7edf\u4e00\u3001\u9ad8\u6548\u7684\u8de8\u94fe\u4ea4\u6613\u5408\u6cd5\u6027\u9a8c\u8bc1\uff1b\u5e94\u7528\u57fa\u4e8e\u53ef\u4fe1\u4e8b\u4ef6\u7684\u8de8\u94fe\u4f20\u8f93\u534f\u8bae\uff0c\u6d88\u9664\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u6280\u672f\u673a\u5236\u7684\u5dee\u5f02\u6027\uff0c\u5b9e\u73b0\u8de8\u94fe\u4ea4\u6613\u683c\u5f0f\u7684\u901a\u7528\u5316\u4e0e\u6807\u51c6\u5316\uff0c\u8fbe\u6210\u533a\u5757\u94fe\u5e73\u53f0\u5728\u5e94\u7528\u7ea7\u522b\u7684\u53ef\u6269\u5c55\u6027\u3002 3. \u8de8\u94fe\u4ea4\u6613\u57fa\u672c\u6d41\u7a0b SDK \u8c03\u7528 \u5177\u4f53\u7684\u4e1a\u52a1\u94feA\u7684\u5408\u7ea6\u65b9\u6cd5\uff1b \u5408\u7ea6\u65b9\u6cd5\u88ab\u6267\u884c\uff0c\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6T1\uff1b \u4e1a\u52a1\u94feA\u7684\u8de8\u94fe\u7f51\u5173\u76d1\u542c\u5230T1, \u5c06\u5176\u8f6c\u6362\u6210IBTP\u7ed3\u6784\uff0c\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94feBitXHub\u4e0a\uff1b BitXHub \u4f9d\u636e\u76f8\u5173\u89c4\u5219\u5bf9T1\u8fdb\u884c\u9a8c\u8bc1\u4ee5\u53ca\u8def\u7531\uff1b \u4e1a\u52a1\u94feB\u7684\u8de8\u94fe\u7f51\u5173\u63a5\u53d7\u5230T1\u5e76\u6839\u636eIBTP\u7ed3\u6784\u8fdb\u884c\u89e3\u6790\uff0c\u8f6c\u6362\u6210\u4e1a\u52a1\u94feB\u53ef\u8bc6\u522b\u7684\u4ea4\u6613Tb B\u7684\u8de8\u94fe\u7f51\u5173\u5c06Tb\u63d0\u4ea4\u5230\u4e1a\u52a1\u94feB\u4e0a\u8fdb\u884c\u6267\u884c\uff1b 4. \u8de8\u94fe\u6548\u7387 \u8de8\u94fe\u7684\u5b8c\u6574\u6d41\u7a0b\u6240\u9700\u65f6\u95f4\uff1a T = Ta + Thub + Tb \u5176\u4e2d**Thub**\u662f\u4e2d\u7ee7\u94fe\u7684\u9a8c\u8bc1\u548c\u5171\u8bc6\u6240\u9700\u7684\u65f6\u95f4\uff0c\u53ef\u8fbe\u5230 5000TPS \u5de6\u53f3\uff1b**Ta**\u548c**Tb**\u5206\u522b\u662f\u5e94\u7528\u94feA\u548c\u5e94\u7528\u94feB\u7684\u6267\u884c\u65f6\u95f4\uff0c\u5176\u6027\u80fd\u53d6\u51b3\u4e8e\u5e94\u7528\u94fe\u672c\u8eab\u7684\u6267\u884c\u6548\u7387\u3002 5. \u793e\u533a\u7248\u4e0e\u5546\u4e1a\u7248\u6709\u4f55\u533a\u522b\uff1f \u793e\u533a\u7248\u548c\u5546\u4e1a\u7248\u90fd\u652f\u6301\u57fa\u7840\u529f\u80fd\uff1a - \u4e2d\u7ee7\u670d\u52a1\uff08\u8de8\u94fe\u4ea4\u6613\u9a8c\u8bc1\u4e0e\u8def\u7531\u3001\u8de8\u94fe\u6210\u5458\u7ba1\u7406\uff09 - \u7f51\u5173\u670d\u52a1\uff08\u8de8\u94fe\u4ea4\u6613\u6355\u83b7\u3001\u89e3\u6790\u4e0e\u8c03\u7528\uff09 - SDK\u7ec4\u4ef6\uff08GO\u3001JAVA\uff09 \u5176\u4ed6\u5bf9\u6bd4\u5982\u4e0b\uff1a 6. \u8de8\u94fe\u5e73\u53f0\u76ee\u524d\u9002\u914d\u4e86\u54ea\u51e0\u79cd\u5e94\u7528\u94fe\uff1f \u76ee\u524d\u5df2\u9002\u914d\u8da3\u94fe\u533a\u5757\u94fe\u5e73\u53f0\u548cHyperledger Fabric\uff0c\u5176\u4ed6\u7c7b\u578b\u533a\u5757\u94fe\uff08\u5305\u62ec\u516c\u94fe\uff09\u53ef\u4ee5\u6309\u9700\u901a\u8fc7\u63d2\u4ef6\u5f62\u5f0f\u7075\u6d3b\u63a5\u5165\u3002\u793e\u533a\u7248\u76ee\u524d\u5df2\u63d0\u4f9bFabric\u7684\u63d2\u4ef6\u3002 7. \u6240\u6709\u8de8\u94fe\u4ea4\u6613\u90fd\u4f1a\u7ecf\u8fc7\u4e2d\u7ee7\u94fe\u5904\u7406\uff0c\u662f\u5426\u4f1a\u5b58\u5728\u6570\u636e\u5b89\u5168\u6027\u95ee\u9898\uff1f\u5982\u4f55\u5b9e\u73b0\u4e0d\u540c\u4e1a\u52a1\u94fe\u8de8\u94fe\u65f6\u7684\u6570\u636e\u9694\u79bb\u548c\u9690\u79c1\u6027\uff1f \u4e2d\u7ee7\u94fe\u4e2d\u7684\u6240\u6709\u4ea4\u6613\u5747\u4ee5IBTP\u534f\u8bae\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u5b58\u50a8\u3001\u9a8c\u8bc1\uff1a \u53c2\u6570 \u8bf4\u660e From \u6765\u6e90\u94feID To \u76ee\u7684\u94feID Version \u534f\u8bae\u7248\u672c\u53f7 Index \u8de8\u94fe\u4ea4\u6613\u7d22\u5f15 Payload \u8de8\u94fe\u8c03\u7528\u5185\u5bb9\u7f16\u7801 Timestamp \u8de8\u94fe\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u6233 Proof \u8de8\u94fe\u4ea4\u6613\u8bc1\u660e Extra \u81ea\u5b9a\u4e49\u5b57\u6bb5 \u5176\u4e2d\u7684Payload\u662f\u8de8\u94fe\u4ea4\u6613\u7684\u6838\u5fc3\u5185\u5bb9\uff0cBitXHub\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u4fdd\u8bc1\u5176\u5b89\u5168\u6027\uff1a - \u91c7\u7528\u7279\u6b8a\u7684\u7f16\u7801\u673a\u5236\uff0c\u4ec5\u8de8\u94fe\u53cc\u65b9\u53ef\u89e3\uff1b - \u91c7\u7528\u52a0\u5bc6\u7684\u65b9\u5f0f\uff0c\u4ec5\u8de8\u94fe\u53cc\u65b9\u6301\u6709\u79d8\u94a5\uff1b - \u94fe\u4e0a\u6743\u9650\u63a7\u5236\uff0c\u975e\u76f8\u5173\u65b9\u65e0\u6cd5\u8bfb\u53d6\u76f8\u5e94\u4ea4\u6613\uff08\u4e4b\u540e\u5c06\u6838\u5fc3\u4ee3\u7801\u5f00\u6e90\u4ee5\u4fdd\u8bc1\u53ef\u4fe1\uff09\uff1b - \u91c7\u7528\u7c7b\u4f3c\u9690\u79c1\u4ea4\u6613\u7684\u673a\u5236\uff0c\u4ec5\u76f8\u5173\u63a7\u5236\u7684BitXHub\u8282\u70b9\u4e2d\u4fdd\u5b58\u76f8\u5173\u65b9\u8de8\u94fe\u4ea4\u6613 8. \u8de8\u94fe\u8f6c\u8d26\u4ea4\u6613\u5982\u4f55\u4fdd\u8bc1\u4e8b\u52a1\u6027\uff1f\u5982\u4f55\u505a\u56de\u6eda\u6216\u8865\u507f\u5462\uff1f \u76ee\u524d\u793e\u533a\u7248\u672c\u6682\u4e0d\u652f\u6301\uff0c\u4e3b\u8981\u65b9\u6848\u662f\u8de8\u94fe\u7f51\u5173\u7ed3\u5408\u4e2d\u7ee7\u94fe\u4e2d\u5b58\u50a8\u7684\u8de8\u94fe\u4ea4\u6613\u72b6\u6001\u4fe1\u606f\u5171\u540c\u4fdd\u969c\uff0c\u9884\u8ba1\u4e8e2020\u5e749\u6708\u4e0a\u7ebf\uff0c\u656c\u8bf7\u671f\u5f85\uff01 9. \u901a\u8fc7DataSwapper\u76f8\u4e92\u4f20\u9012\u7684\u6570\u636e\uff0c\u5982\u4f55\u4fdd\u8bc1\u771f\u5b9e\u6027\u5462\uff1f \u9a8c\u8bc1\u5f15\u64ce\u4f1a\u5bf9\u8de8\u94fe\u4ea4\u6613\u3001\u8de8\u94fe\u4ea4\u6613\u6267\u884c\u7ed3\u679c\u91c7\u7528SPV\u8bc1\u660e\u673a\u5236\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6765\u786e\u4fdd\u8de8\u94fe\u4ea4\u6613\u548c\u8de8\u94fe\u4ea4\u6613\u7684\u6267\u884c\u90fd\u662f\u771f\u5b9e\u5728\u94fe\u4e2d\u53d1\u751f\u7684\u3002 \u5e94\u7528\u94fe\u4e2d\u8de8\u94fe\u7684\u63a5\u53e3\u5fc5\u987b\u6309\u7167\u89c4\u5b9a\u5b9e\u73b0\uff0c\u9a8c\u8bc1\u5f15\u64ce\u4f1a\u5bf9\u6bd4\u8de8\u94fe\u8c03\u7528\u7684\u63a5\u53e3\u4ee5\u53ca\u901a\u8fc7SPV\u673a\u5236\u9a8c\u8bc1\u8c03\u7528\u63a5\u53e3\u6267\u884c\u540e\u8fd4\u56de\u7684\u6570\u636e\u7684\u6709\u6548\u6027\u3002 \u8de8\u94fe\u51c6\u5907 1. \u4e2d\u7ee7\u94fe\u7531\u8c01\u7ef4\u62a4\uff1f\u5982\u4f55\u642d\u5efa\uff1f \u4e2d\u7ee7\u94fe\u672c\u8eab\u5c31\u662f\u4e00\u6761\u8054\u76df\u94fe\uff0c\u4f5c\u4e3a\u53bb\u4e2d\u5fc3\u5316\u7684\u53ef\u4fe1\u4e2d\u4ecb\uff0c\u63a8\u8350\u7684\u642d\u5efa\u65b9\u6848\u662f\u7531\u53c2\u4e0e\u8de8\u94fe\u7684\u5404\u65b9\u5171\u540c\u7ef4\u62a4\u8282\u70b9\u6765\u642d\u5efa\u4e2d\u7ee7\u94fe\u3002 2. \u8de8\u94fe\u7f51\u5173\u5e94\u8be5\u90e8\u7f72\u5728\u54ea\u91cc\uff1f \u8de8\u94fe\u7f51\u5173\u90e8\u7f72\u662f\u7531\u5e94\u7528\u94fe\u65b9\u51b3\u5b9a\u7684\uff0c\u8de8\u94fe\u7f51\u5173\u53ea\u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u7684\u6536\u96c6\u3001\u8de8\u94fe\u771f\u5b9e\u6027\u51ed\u8bc1\u6536\u96c6\u548c\u8de8\u94fe\u4ea4\u6613\u6267\u884c\uff1b\u6574\u4e2a\u8de8\u94fe\u64cd\u4f5c\u7684\u53ef\u4fe1\u662f\u901a\u8fc7\u9a8c\u8bc1\u5f15\u64ce\u5bf9IBTP\u7684\u9a8c\u8bc1\u5b9e\u73b0\u7684\uff0c\u5982\u679c\u8de8\u94fe\u7f51\u5173\u7be1\u6539\u6570\u636e\uff0c\u4e2d\u7ee7\u94fe\u7684\u9a8c\u8bc1\u5f15\u64ce\u5c06\u4e0d\u4f1a\u9a8c\u8bc1\u901a\u8fc7\u3002 3. \u5bf9\u4e8e\u672a\u9002\u914d\u5e94\u7528\u94fe\u9700\u8981\u505a\u54ea\u4e9b\u5f00\u53d1\u5de5\u4f5c\uff0c\u6539\u9020\u7684\u5de5\u4f5c\u91cf\u662f\u591a\u5c11\uff1f \u5e94\u7528\u94fe\u9002\u914d\u5de5\u4f5c\u5305\u62ec\uff1a 1. \u6839\u636e\u6211\u4eec\u63d0\u4f9b\u7684\u6a21\u677f\u64b0\u5199\u8de8\u94fe\u8def\u7531\u5408\u7ea6broker, \u4e3b\u8981\u4e00\u65b9\u9762\u5c06\u81ea\u5df1\u7684\u5408\u7ea6\u67d0\u4e9b\u65b9\u6cd5\u63d0\u4f9b\u7ed9\u5176\u4ed6\u65b9\u4f7f\u7528\uff1b\u4e8c\u662f\u63d0\u4f9b\u63a5\u53d7\u6765\u81ea\u5176\u4ed6\u65b9\u7684\u4ea4\u6362\u7684\u4fe1\u606f\u6216\u8d44\u4ea7\u63a5\u53e3 2. \u5bf9\u4e8e\u9700\u8981\u8de8\u94fe\u7684\u65b9\u6cd5\uff0c\u6dfb\u52a0\u8c03\u7528\u8de8\u94fe\u7684\u903b\u8f91\uff0c\u5c31\u662f\u8c03\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u8de8\u94fe\u5408\u7ea6\u63a5\u53e3 3. \u90e8\u7f72\u8de8\u94fe\u7f51\u5173\uff08\u5e38\u89c1\u533a\u5757\u94fe\u65e0\u9700\u6539\u9020\uff0c\u7279\u6b8a\u7684\u533a\u5757\u94fe\u53ea\u9700\u8981\u63d0\u4f9b\u548c\u533a\u5757\u94fe\u76f8\u5173\u7684SDK\u57fa\u672c\u5c31\u53ef\u4ee5\uff09 4. \u5c06\u5e94\u7528\u94fe\u7684\u4fe1\u606f\u6ce8\u518c\u5230BitXHub\u4e2d\uff0c\u5982\u94fe\u7684ID\uff0c\u8282\u70b9\u6570\u91cf\uff0c\u5171\u8bc6\u7b97\u6cd5\u7c7b\u578b\u7b49 5. \u6839\u636e\u5e94\u7528\u94fe\u7684\u5171\u8bc6\u673a\u5236\u7f16\u5199\u4ea4\u6613\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u8be6\u89c1 \u9a8c\u8bc1\u89c4\u5219\u7f16\u5199\u6587\u6863 \u8de8\u94fe\u64cd\u4f5c 1. Fabric\u6ca1\u6709token\uff0c\u5728\u8de8\u94fe\u8f6c\u8d26\u65f6\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u8d44\u4ea7\u6a21\u578b\uff1f wiki\u4e2d\u7ed9\u51fa\u7684\u4f8b\u5b50\u662f\u4e00\u4e2a\u6a21\u62df\u8d44\u4ea7\u64cd\u4f5c\u7684\u4e00\u4e2a\u5408\u7ea6\uff0c\u5bf9\u8d44\u4ea7\u6a21\u578b\u6ca1\u505a\u7279\u5b9a\u7684\u5047\u8bbe\u3002 2. \u5bf9\u4e8e\u5df2\u7ecf\u5b58\u5728\u4e1a\u52a1\u7684\u5e94\u7528\u94fe\uff0c\u662f\u4e0d\u662f\u9700\u8981\u66f4\u6539\u539f\u6765\u7684\u4e1a\u52a1\u5408\u7ea6\u624d\u80fd\u517c\u5bb9\u65b0\u7684\u8d44\u4ea7\u7c7b\u578b\uff1f \u5bf9\u4e8e\u5df2\u6709\u7684\u4e1a\u52a1\u5408\u7ea6\u9700\u8981\u8fdb\u884c\u4e00\u5b9a\u7684\u6539\u9020\uff0c\u5373\u5b9e\u73b0\u89c4\u5b9a\u7684\u51e0\u4e2a\u63a5\u53e3\uff0c\u8be6\u89c1 \u4e1a\u52a1\u5408\u7ea6\u6539\u9020\u6587\u6863","title":"FAQ"},{"location":"bitxhub/faq/#faq","text":"","title":"FAQ"},{"location":"bitxhub/faq/#_1","text":"","title":"\u8de8\u94fe\u6280\u672f"},{"location":"bitxhub/faq/#1","text":"\u4e00\u662f\u6280\u672f\u5c42\u9762\uff0c\u533a\u5757\u94fe\u6280\u672f\u5728\u5355\u94fe\u67b6\u6784\u4e0b\u672c\u8eab\u5b58\u5728\u7740\u6027\u80fd\u3001\u5bb9\u91cf\u4e0d\u8db3\u7b49\u95ee\u9898 \u3002\u5355\u94fe\u7531\u4e8e\u53d7\u5230\u76ee\u524d\u5171\u8bc6\u901f\u5ea6\u7684\u9650\u5236\uff0c\u8282\u70b9\u7684\u6267\u884c\u6027\u80fd\u65e0\u6cd5\u505a\u5230\u7ebf\u6027\u6269\u5c55\uff0c\u8fd9\u9650\u5236\u4e86\u9ad8\u4ea4\u6613\u541e\u5410\u91cf\u4f4e\u5ef6\u8fdf\u7684\u5546\u4e1a\u573a\u666f\u7684\u5e94\u7528\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u968f\u7740\u533a\u5757\u94fe\u8fd0\u884c\u65f6\u95f4\u7684\u589e\u957f\uff0c\u5176\u5b58\u50a8\u5bb9\u91cf\u4e5f\u5c06\u9010\u6e10\u589e\u957f\uff0c\u4e14\u8fd9\u79cd\u6570\u636e\u589e\u957f\u7684\u901f\u5ea6\u751a\u81f3\u4f1a\u8d85\u8fc7\u5355\u94fe\u5b58\u50a8\u4ecb\u8d28\u7684\u5bb9\u91cf\u4e0a\u9650\u3002\u76ee\u524d\u7684\u533a\u5757\u94fe\u5171\u8bc6\u7b97\u6cd5\u3001\u5b58\u50a8\u7ed3\u6784\u3001\u548c\u5b89\u5168\u673a\u5236\u4e0d\u540c\u5bfc\u81f4\u94fe\u4e0e\u94fe\u4e4b\u95f4\u7f3a\u4e4f\u7edf\u4e00\u7684\u4e92\u8054\u4e92\u901a\u673a\u5236\uff0c\u8fd9\u6781\u5927\u9650\u5236\u4e86\u533a\u5757\u94fe\u6280\u672f\u548c\u5e94\u7528\u751f\u6001\u7684\u5065\u5eb7\u53d1\u5c55\u3002 \u4e8c\u662f\u4e1a\u52a1\u5c42\u9762\u5b58\u5728\u8de8\u533a\u5757\u94fe\u4e1a\u52a1\u7684\u8d44\u4ea7\u4ea4\u6362\u548c\u4fe1\u606f\u4ea4\u6362\u9700\u6c42 \u3002\u5728\u8d44\u4ea7\u4ea4\u6362\u65b9\u9762\uff0c\u4e00\u4e9b\u533a\u5757\u94fe\u4e8b\u5b9e\u4e0a\u4ecd\u5904\u4e8e\u4e92\u76f8\u9694\u79bb\u7684\u72b6\u6001\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8d44\u4ea7\u4ea4\u6362\u4e3b\u8981\u4f9d\u9760\u4e2d\u5fc3\u5316\u7684\u4ea4\u6613\u6240\u6765\u5b8c\u6210\uff0c\u4e2d\u5fc3\u5316\u7684\u4ea4\u6362\u65b9\u5f0f\u65e2\u4e0d\u5b89\u5168\u89c4\u5219\u4e5f\u4e0d\u900f\u660e\u3002 \u800c\u4fe1\u606f\u4ea4\u6362\u7531\u4e8e\u6d89\u53ca\u94fe\u4e0e\u94fe\u4e4b\u95f4\u7684\u6570\u636e\u540c\u6b65\u548c\u76f8\u5e94\u7684\u8de8\u94fe\u8c03\u7528\uff0c\u5b9e\u73b0\u66f4\u4e3a\u590d\u6742\uff0c\u76ee\u524d\u5404\u4e2a\u533a\u5757\u94fe\u5e94\u7528\u4e4b\u95f4\u4e92\u901a\u58c1\u5792\u6781\u9ad8\uff0c\u65e0\u6cd5\u6709\u6548\u5730\u8fdb\u884c\u94fe\u4e0a\u4fe1\u606f\u5171\u4eab\u3002","title":"1. \u8de8\u94fe\u7684\u5fc5\u8981\u6027"},{"location":"bitxhub/faq/#2","text":"\u76ee\u524d\u533a\u5757\u94fe\u884c\u4e1a\u5df2\u7ecf\u51fa\u73b0\u4e86\u5f88\u591a\u7684\u8de8\u94fe\u6280\u672f\u4ea7\u54c1\uff0c\u4e3b\u8981\u91c7\u7528\u516c\u8bc1\u4eba\u673a\u5236(notary schemes)\u3001\u4fa7\u94fe/\u4e2d\u7ee7(sidechains/relays)\u3001\u54c8\u5e0c\u9501\u5b9a(Hash-locking)\u7b49\u6280\u672f\uff0c\u5df2\u7ecf\u5728\u516c\u94fe\u7684\u573a\u666f\u4e2d\u6709\u5f88\u591a\u5e94\u7528\u4f8b\u5982\uff1a\u95ea\u7535\u7f51\u7edc\uff0c\u53bb\u4e2d\u5fc3\u5316\u4ea4\u6613\u6240\u7b49\u3002 \u8054\u76df\u94fe\u573a\u666f\u4e2d\u91c7\u7528\u7c7b\u4f3c\u6280\u672f\u53ca\u5176\u589e\u5f3a\u6280\u672f\uff0c\u89e3\u51b3\u8054\u76df\u94fe\u8de8\u94fe\u9700\u6c42\uff0c\u76ee\u524d\u7684\u4ea7\u54c1\u5df2\u7ecf\u80fd\u591f\u89e3\u51b3\u8de8\u94fe\u4e2d\u7684\u5173\u952e\u95ee\u9898\uff1a \u8de8\u94fe\u4ea4\u6613\u7684\u9a8c\u8bc1\u95ee\u9898\uff0c\u5982\u4f55\u786e\u8ba4\u8bb0\u5f55\u4ea4\u6613\u53d1\u751f\u7684\u533a\u5757\u5f97\u5230\u4e86\u8db3\u591f\u7684\u786e\u8ba4\uff0c\u5373\u4ea4\u6613\u4e8b\u52a1\u4e2d\u5404\u5206\u5e03\u5f0f\u7f51\u7edc\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\uff1b \u8de8\u94fe\u4e8b\u52a1\u7684\u539f\u5b50\u6027\u95ee\u9898\uff0c\u5982\u4f55\u7ba1\u7406\u8de8\u94fe\u4e8b\u52a1\u4e2d\u7684\u5404\u5b50\u4ea4\u6613\u786e\u4fdd\u8de8\u94fe\u4e8b\u52a1\u6574\u4f53\u5b8c\u6574\u7684\u539f\u5b50\u6027\uff0c\u5373\u8de8\u94fe\u4e8b\u52a1\u7684\u53d1\u751f\u53ea\u5b58\u5728\u4e24\u4e2d\u72b6\u6001\u5b8c\u6210\u6216\u5931\u8d25\uff1b \u4e0d\u540c\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u534f\u8bae\u9002\u914d\u95ee\u9898\uff0c\u5982\u4f55\u5bf9\u91c7\u7528\u4e0d\u540c\u67b6\u6784\u4e0e\u534f\u8bae\u7684\u533a\u5757\u94fe\u4e4b\u95f4\u8fdb\u884c\u9002\u914d\uff0c\u9700\u8981\u8de8\u94fe\u534f\u8bae\u4e2d\u8bbe\u8ba1\u53ef\u4ee5\u517c\u5bb9\u591a\u79cd\u5f02\u6784\u533a\u5757\u94fe\u7684\u6570\u636e\u7ed3\u6784\u3001\u547d\u540d\u89c4\u8303\u4ee5\u53ca\u901a\u4fe1\u65b9\u5f0f\u7b49\u3002","title":"2. \u8de8\u94fe\u6280\u672f\u7684\u53ef\u884c\u6027"},{"location":"bitxhub/faq/#_2","text":"","title":"\u4ea7\u54c1\u529f\u80fd"},{"location":"bitxhub/faq/#1_1","text":"\u8da3\u94fe\u79d1\u6280\u8de8\u94fe\u6280\u672f\u5e73\u53f0BitXHub\uff0c\u63d0\u51fa\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u901a\u7528\u8de8\u94fe\u4f20\u8f93\u534f\u8baeIBTP(Inter-Blokcchain Transfer Protocol), \u80fd\u591f\u5b8c\u7f8e\u652f\u6301\u548c\u517c\u5bb9\u4efb\u610f\u533a\u5757\u94fe\u7cfb\u7edf\uff0c\u5b9e\u73b0\u5f02\u6784\u533a\u5757\u94fe\u7684\u65e0\u7f1d\u8fde\u63a5\u3002BitXHub\u91c7\u7528\u5148\u8fdb\u7684\u4e2d\u7ee7+\u7f51\u5173\u7684\u7ec4\u5408\u6280\u672f\uff0c\u89e3\u51b3\u4e86\u8de8\u94fe\u4e2d\u7684\u4ea4\u6613\u6355\u83b7\u3001\u4f20\u8f93\u4ee5\u53ca\u9a8c\u8bc1\u7684\u6838\u5fc3\u96be\u9898\uff0c\u6240\u6709\u5173\u952e\u6280\u672f\u5747\u5177\u6709\u5b8c\u5168\u81ea\u4e3b\u77e5\u8bc6\u4ea7\u6743\u3002\u540c\u65f6\uff0c\u5e73\u53f0\u5177\u5907\u5b8c\u5584\u7684\u8de8\u94fe\u63a5\u53e3\u7ba1\u7406\u3001\u5f02\u6784\u94fe\u6210\u5458\u6cbb\u7406\u3001\u8054\u76df\u6743\u9650\u7ba1\u63a7\u7b49\u8054\u76df\u8de8\u94fe\u4e13\u7528\u673a\u5236\uff0c\u662f\u76ee\u524d\u4e1a\u754c\u6700\u5b8c\u5907\u7684\u5f02\u6784\u8054\u76df\u94fe\u8de8\u94fe\u6280\u672f\u5e73\u53f0\uff0c\u5df2\u7ecf\u5728\u91d1\u878d\u3001\u653f\u52a1\u7b49\u4e1a\u52a1\u573a\u666f\u4e2d\u8fdb\u884c\u4e86\u76f8\u5173\u5e94\u7528\u9a8c\u8bc1\u3002","title":"1. \u4ea7\u54c1\u7b80\u4ecb"},{"location":"bitxhub/faq/#2_1","text":"BitXHub\u63d0\u51fa\u4e00\u79cd\u53ef\u6269\u5c55\u7684\u9002\u5e94\u4e0d\u540c\u5f02\u6784\u533a\u5757\u94fe\u7cfb\u7edf\u4e4b\u95f4\u7684\u8de8\u94fe\u65b9\u6848\uff0c\u901a\u8fc7\u8bbe\u8ba1\u53ef\u63d2\u62d4\u7684\u8de8\u94fe\u7f51\u5173\u6280\u672f\uff0c\u5b9e\u73b0\u533a\u5757\u94fe\u7f51\u7edc\u95f4\u7684\u7684\u534f\u8bae\u8f6c\u6362\uff0c\u5e76\u652f\u6301\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u4ea4\u6613\u9a8c\u8bc1\uff0c\u8be5\u65b9\u6848\u652f\u6301\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u4ea4\u6613\u7684\u53ef\u4fe1\u9a8c\u8bc1\u548c\u53ef\u9760\u4f20\u9012\u3002 \u5e94\u7528\u57fa\u4e8e\u63d2\u4ef6\u673a\u5236\u7684\u8de8\u94fe\u7f51\u5173\uff0c\u5b9e\u73b0\u5f02\u6784\u5e94\u7528\u94fe\u7684\u5feb\u901f\u9002\u914d\u4e0e\u7edf\u4e00\u7ba1\u7406\uff0c\u4ee5\u52a8\u6001\u52a0\u8f7d\u63d2\u4ef6\u7684\u5f62\u5f0f\u968f\u65f6\u52a0\u5165\u5e73\u53f0\uff1b\u5e94\u7528\u57fa\u4e8e\u667a\u80fd\u5408\u7ea6\u7684\u5f02\u6784\u4ea4\u6613\u9a8c\u8bc1\u6280\u672f\uff0c\u5c06\u4ea4\u6613\u9a8c\u8bc1\u89c4\u5219\u8fdb\u884c\u5168\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406\uff0c\u5b9e\u73b0\u7edf\u4e00\u3001\u9ad8\u6548\u7684\u8de8\u94fe\u4ea4\u6613\u5408\u6cd5\u6027\u9a8c\u8bc1\uff1b\u5e94\u7528\u57fa\u4e8e\u53ef\u4fe1\u4e8b\u4ef6\u7684\u8de8\u94fe\u4f20\u8f93\u534f\u8bae\uff0c\u6d88\u9664\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u6280\u672f\u673a\u5236\u7684\u5dee\u5f02\u6027\uff0c\u5b9e\u73b0\u8de8\u94fe\u4ea4\u6613\u683c\u5f0f\u7684\u901a\u7528\u5316\u4e0e\u6807\u51c6\u5316\uff0c\u8fbe\u6210\u533a\u5757\u94fe\u5e73\u53f0\u5728\u5e94\u7528\u7ea7\u522b\u7684\u53ef\u6269\u5c55\u6027\u3002","title":"2. \u5b9e\u73b0\u539f\u7406"},{"location":"bitxhub/faq/#3","text":"SDK \u8c03\u7528 \u5177\u4f53\u7684\u4e1a\u52a1\u94feA\u7684\u5408\u7ea6\u65b9\u6cd5\uff1b \u5408\u7ea6\u65b9\u6cd5\u88ab\u6267\u884c\uff0c\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6T1\uff1b \u4e1a\u52a1\u94feA\u7684\u8de8\u94fe\u7f51\u5173\u76d1\u542c\u5230T1, \u5c06\u5176\u8f6c\u6362\u6210IBTP\u7ed3\u6784\uff0c\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94feBitXHub\u4e0a\uff1b BitXHub \u4f9d\u636e\u76f8\u5173\u89c4\u5219\u5bf9T1\u8fdb\u884c\u9a8c\u8bc1\u4ee5\u53ca\u8def\u7531\uff1b \u4e1a\u52a1\u94feB\u7684\u8de8\u94fe\u7f51\u5173\u63a5\u53d7\u5230T1\u5e76\u6839\u636eIBTP\u7ed3\u6784\u8fdb\u884c\u89e3\u6790\uff0c\u8f6c\u6362\u6210\u4e1a\u52a1\u94feB\u53ef\u8bc6\u522b\u7684\u4ea4\u6613Tb B\u7684\u8de8\u94fe\u7f51\u5173\u5c06Tb\u63d0\u4ea4\u5230\u4e1a\u52a1\u94feB\u4e0a\u8fdb\u884c\u6267\u884c\uff1b","title":"3. \u8de8\u94fe\u4ea4\u6613\u57fa\u672c\u6d41\u7a0b"},{"location":"bitxhub/faq/#4","text":"\u8de8\u94fe\u7684\u5b8c\u6574\u6d41\u7a0b\u6240\u9700\u65f6\u95f4\uff1a T = Ta + Thub + Tb \u5176\u4e2d**Thub**\u662f\u4e2d\u7ee7\u94fe\u7684\u9a8c\u8bc1\u548c\u5171\u8bc6\u6240\u9700\u7684\u65f6\u95f4\uff0c\u53ef\u8fbe\u5230 5000TPS \u5de6\u53f3\uff1b**Ta**\u548c**Tb**\u5206\u522b\u662f\u5e94\u7528\u94feA\u548c\u5e94\u7528\u94feB\u7684\u6267\u884c\u65f6\u95f4\uff0c\u5176\u6027\u80fd\u53d6\u51b3\u4e8e\u5e94\u7528\u94fe\u672c\u8eab\u7684\u6267\u884c\u6548\u7387\u3002","title":"4. \u8de8\u94fe\u6548\u7387"},{"location":"bitxhub/faq/#5","text":"\u793e\u533a\u7248\u548c\u5546\u4e1a\u7248\u90fd\u652f\u6301\u57fa\u7840\u529f\u80fd\uff1a - \u4e2d\u7ee7\u670d\u52a1\uff08\u8de8\u94fe\u4ea4\u6613\u9a8c\u8bc1\u4e0e\u8def\u7531\u3001\u8de8\u94fe\u6210\u5458\u7ba1\u7406\uff09 - \u7f51\u5173\u670d\u52a1\uff08\u8de8\u94fe\u4ea4\u6613\u6355\u83b7\u3001\u89e3\u6790\u4e0e\u8c03\u7528\uff09 - SDK\u7ec4\u4ef6\uff08GO\u3001JAVA\uff09 \u5176\u4ed6\u5bf9\u6bd4\u5982\u4e0b\uff1a","title":"5. \u793e\u533a\u7248\u4e0e\u5546\u4e1a\u7248\u6709\u4f55\u533a\u522b\uff1f"},{"location":"bitxhub/faq/#6","text":"\u76ee\u524d\u5df2\u9002\u914d\u8da3\u94fe\u533a\u5757\u94fe\u5e73\u53f0\u548cHyperledger Fabric\uff0c\u5176\u4ed6\u7c7b\u578b\u533a\u5757\u94fe\uff08\u5305\u62ec\u516c\u94fe\uff09\u53ef\u4ee5\u6309\u9700\u901a\u8fc7\u63d2\u4ef6\u5f62\u5f0f\u7075\u6d3b\u63a5\u5165\u3002\u793e\u533a\u7248\u76ee\u524d\u5df2\u63d0\u4f9bFabric\u7684\u63d2\u4ef6\u3002","title":"6. \u8de8\u94fe\u5e73\u53f0\u76ee\u524d\u9002\u914d\u4e86\u54ea\u51e0\u79cd\u5e94\u7528\u94fe\uff1f"},{"location":"bitxhub/faq/#7","text":"\u4e2d\u7ee7\u94fe\u4e2d\u7684\u6240\u6709\u4ea4\u6613\u5747\u4ee5IBTP\u534f\u8bae\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u5b58\u50a8\u3001\u9a8c\u8bc1\uff1a \u53c2\u6570 \u8bf4\u660e From \u6765\u6e90\u94feID To \u76ee\u7684\u94feID Version \u534f\u8bae\u7248\u672c\u53f7 Index \u8de8\u94fe\u4ea4\u6613\u7d22\u5f15 Payload \u8de8\u94fe\u8c03\u7528\u5185\u5bb9\u7f16\u7801 Timestamp \u8de8\u94fe\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u6233 Proof \u8de8\u94fe\u4ea4\u6613\u8bc1\u660e Extra \u81ea\u5b9a\u4e49\u5b57\u6bb5 \u5176\u4e2d\u7684Payload\u662f\u8de8\u94fe\u4ea4\u6613\u7684\u6838\u5fc3\u5185\u5bb9\uff0cBitXHub\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u4fdd\u8bc1\u5176\u5b89\u5168\u6027\uff1a - \u91c7\u7528\u7279\u6b8a\u7684\u7f16\u7801\u673a\u5236\uff0c\u4ec5\u8de8\u94fe\u53cc\u65b9\u53ef\u89e3\uff1b - \u91c7\u7528\u52a0\u5bc6\u7684\u65b9\u5f0f\uff0c\u4ec5\u8de8\u94fe\u53cc\u65b9\u6301\u6709\u79d8\u94a5\uff1b - \u94fe\u4e0a\u6743\u9650\u63a7\u5236\uff0c\u975e\u76f8\u5173\u65b9\u65e0\u6cd5\u8bfb\u53d6\u76f8\u5e94\u4ea4\u6613\uff08\u4e4b\u540e\u5c06\u6838\u5fc3\u4ee3\u7801\u5f00\u6e90\u4ee5\u4fdd\u8bc1\u53ef\u4fe1\uff09\uff1b - \u91c7\u7528\u7c7b\u4f3c\u9690\u79c1\u4ea4\u6613\u7684\u673a\u5236\uff0c\u4ec5\u76f8\u5173\u63a7\u5236\u7684BitXHub\u8282\u70b9\u4e2d\u4fdd\u5b58\u76f8\u5173\u65b9\u8de8\u94fe\u4ea4\u6613","title":"7. \u6240\u6709\u8de8\u94fe\u4ea4\u6613\u90fd\u4f1a\u7ecf\u8fc7\u4e2d\u7ee7\u94fe\u5904\u7406\uff0c\u662f\u5426\u4f1a\u5b58\u5728\u6570\u636e\u5b89\u5168\u6027\u95ee\u9898\uff1f\u5982\u4f55\u5b9e\u73b0\u4e0d\u540c\u4e1a\u52a1\u94fe\u8de8\u94fe\u65f6\u7684\u6570\u636e\u9694\u79bb\u548c\u9690\u79c1\u6027\uff1f"},{"location":"bitxhub/faq/#8","text":"\u76ee\u524d\u793e\u533a\u7248\u672c\u6682\u4e0d\u652f\u6301\uff0c\u4e3b\u8981\u65b9\u6848\u662f\u8de8\u94fe\u7f51\u5173\u7ed3\u5408\u4e2d\u7ee7\u94fe\u4e2d\u5b58\u50a8\u7684\u8de8\u94fe\u4ea4\u6613\u72b6\u6001\u4fe1\u606f\u5171\u540c\u4fdd\u969c\uff0c\u9884\u8ba1\u4e8e2020\u5e749\u6708\u4e0a\u7ebf\uff0c\u656c\u8bf7\u671f\u5f85\uff01","title":"8. \u8de8\u94fe\u8f6c\u8d26\u4ea4\u6613\u5982\u4f55\u4fdd\u8bc1\u4e8b\u52a1\u6027\uff1f\u5982\u4f55\u505a\u56de\u6eda\u6216\u8865\u507f\u5462\uff1f"},{"location":"bitxhub/faq/#9-dataswapper","text":"\u9a8c\u8bc1\u5f15\u64ce\u4f1a\u5bf9\u8de8\u94fe\u4ea4\u6613\u3001\u8de8\u94fe\u4ea4\u6613\u6267\u884c\u7ed3\u679c\u91c7\u7528SPV\u8bc1\u660e\u673a\u5236\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6765\u786e\u4fdd\u8de8\u94fe\u4ea4\u6613\u548c\u8de8\u94fe\u4ea4\u6613\u7684\u6267\u884c\u90fd\u662f\u771f\u5b9e\u5728\u94fe\u4e2d\u53d1\u751f\u7684\u3002 \u5e94\u7528\u94fe\u4e2d\u8de8\u94fe\u7684\u63a5\u53e3\u5fc5\u987b\u6309\u7167\u89c4\u5b9a\u5b9e\u73b0\uff0c\u9a8c\u8bc1\u5f15\u64ce\u4f1a\u5bf9\u6bd4\u8de8\u94fe\u8c03\u7528\u7684\u63a5\u53e3\u4ee5\u53ca\u901a\u8fc7SPV\u673a\u5236\u9a8c\u8bc1\u8c03\u7528\u63a5\u53e3\u6267\u884c\u540e\u8fd4\u56de\u7684\u6570\u636e\u7684\u6709\u6548\u6027\u3002","title":"9. \u901a\u8fc7DataSwapper\u76f8\u4e92\u4f20\u9012\u7684\u6570\u636e\uff0c\u5982\u4f55\u4fdd\u8bc1\u771f\u5b9e\u6027\u5462\uff1f"},{"location":"bitxhub/faq/#_3","text":"","title":"\u8de8\u94fe\u51c6\u5907"},{"location":"bitxhub/faq/#1_2","text":"\u4e2d\u7ee7\u94fe\u672c\u8eab\u5c31\u662f\u4e00\u6761\u8054\u76df\u94fe\uff0c\u4f5c\u4e3a\u53bb\u4e2d\u5fc3\u5316\u7684\u53ef\u4fe1\u4e2d\u4ecb\uff0c\u63a8\u8350\u7684\u642d\u5efa\u65b9\u6848\u662f\u7531\u53c2\u4e0e\u8de8\u94fe\u7684\u5404\u65b9\u5171\u540c\u7ef4\u62a4\u8282\u70b9\u6765\u642d\u5efa\u4e2d\u7ee7\u94fe\u3002","title":"1. \u4e2d\u7ee7\u94fe\u7531\u8c01\u7ef4\u62a4\uff1f\u5982\u4f55\u642d\u5efa\uff1f"},{"location":"bitxhub/faq/#2_2","text":"\u8de8\u94fe\u7f51\u5173\u90e8\u7f72\u662f\u7531\u5e94\u7528\u94fe\u65b9\u51b3\u5b9a\u7684\uff0c\u8de8\u94fe\u7f51\u5173\u53ea\u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u7684\u6536\u96c6\u3001\u8de8\u94fe\u771f\u5b9e\u6027\u51ed\u8bc1\u6536\u96c6\u548c\u8de8\u94fe\u4ea4\u6613\u6267\u884c\uff1b\u6574\u4e2a\u8de8\u94fe\u64cd\u4f5c\u7684\u53ef\u4fe1\u662f\u901a\u8fc7\u9a8c\u8bc1\u5f15\u64ce\u5bf9IBTP\u7684\u9a8c\u8bc1\u5b9e\u73b0\u7684\uff0c\u5982\u679c\u8de8\u94fe\u7f51\u5173\u7be1\u6539\u6570\u636e\uff0c\u4e2d\u7ee7\u94fe\u7684\u9a8c\u8bc1\u5f15\u64ce\u5c06\u4e0d\u4f1a\u9a8c\u8bc1\u901a\u8fc7\u3002","title":"2. \u8de8\u94fe\u7f51\u5173\u5e94\u8be5\u90e8\u7f72\u5728\u54ea\u91cc\uff1f"},{"location":"bitxhub/faq/#3_1","text":"\u5e94\u7528\u94fe\u9002\u914d\u5de5\u4f5c\u5305\u62ec\uff1a 1. \u6839\u636e\u6211\u4eec\u63d0\u4f9b\u7684\u6a21\u677f\u64b0\u5199\u8de8\u94fe\u8def\u7531\u5408\u7ea6broker, \u4e3b\u8981\u4e00\u65b9\u9762\u5c06\u81ea\u5df1\u7684\u5408\u7ea6\u67d0\u4e9b\u65b9\u6cd5\u63d0\u4f9b\u7ed9\u5176\u4ed6\u65b9\u4f7f\u7528\uff1b\u4e8c\u662f\u63d0\u4f9b\u63a5\u53d7\u6765\u81ea\u5176\u4ed6\u65b9\u7684\u4ea4\u6362\u7684\u4fe1\u606f\u6216\u8d44\u4ea7\u63a5\u53e3 2. \u5bf9\u4e8e\u9700\u8981\u8de8\u94fe\u7684\u65b9\u6cd5\uff0c\u6dfb\u52a0\u8c03\u7528\u8de8\u94fe\u7684\u903b\u8f91\uff0c\u5c31\u662f\u8c03\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u8de8\u94fe\u5408\u7ea6\u63a5\u53e3 3. \u90e8\u7f72\u8de8\u94fe\u7f51\u5173\uff08\u5e38\u89c1\u533a\u5757\u94fe\u65e0\u9700\u6539\u9020\uff0c\u7279\u6b8a\u7684\u533a\u5757\u94fe\u53ea\u9700\u8981\u63d0\u4f9b\u548c\u533a\u5757\u94fe\u76f8\u5173\u7684SDK\u57fa\u672c\u5c31\u53ef\u4ee5\uff09 4. \u5c06\u5e94\u7528\u94fe\u7684\u4fe1\u606f\u6ce8\u518c\u5230BitXHub\u4e2d\uff0c\u5982\u94fe\u7684ID\uff0c\u8282\u70b9\u6570\u91cf\uff0c\u5171\u8bc6\u7b97\u6cd5\u7c7b\u578b\u7b49 5. \u6839\u636e\u5e94\u7528\u94fe\u7684\u5171\u8bc6\u673a\u5236\u7f16\u5199\u4ea4\u6613\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u8be6\u89c1 \u9a8c\u8bc1\u89c4\u5219\u7f16\u5199\u6587\u6863","title":"3. \u5bf9\u4e8e\u672a\u9002\u914d\u5e94\u7528\u94fe\u9700\u8981\u505a\u54ea\u4e9b\u5f00\u53d1\u5de5\u4f5c\uff0c\u6539\u9020\u7684\u5de5\u4f5c\u91cf\u662f\u591a\u5c11\uff1f"},{"location":"bitxhub/faq/#_4","text":"","title":"\u8de8\u94fe\u64cd\u4f5c"},{"location":"bitxhub/faq/#1-fabrictoken","text":"wiki\u4e2d\u7ed9\u51fa\u7684\u4f8b\u5b50\u662f\u4e00\u4e2a\u6a21\u62df\u8d44\u4ea7\u64cd\u4f5c\u7684\u4e00\u4e2a\u5408\u7ea6\uff0c\u5bf9\u8d44\u4ea7\u6a21\u578b\u6ca1\u505a\u7279\u5b9a\u7684\u5047\u8bbe\u3002","title":"1. Fabric\u6ca1\u6709token\uff0c\u5728\u8de8\u94fe\u8f6c\u8d26\u65f6\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u8d44\u4ea7\u6a21\u578b\uff1f"},{"location":"bitxhub/faq/#2_3","text":"\u5bf9\u4e8e\u5df2\u6709\u7684\u4e1a\u52a1\u5408\u7ea6\u9700\u8981\u8fdb\u884c\u4e00\u5b9a\u7684\u6539\u9020\uff0c\u5373\u5b9e\u73b0\u89c4\u5b9a\u7684\u51e0\u4e2a\u63a5\u53e3\uff0c\u8be6\u89c1 \u4e1a\u52a1\u5408\u7ea6\u6539\u9020\u6587\u6863","title":"2. \u5bf9\u4e8e\u5df2\u7ecf\u5b58\u5728\u4e1a\u52a1\u7684\u5e94\u7528\u94fe\uff0c\u662f\u4e0d\u662f\u9700\u8981\u66f4\u6539\u539f\u6765\u7684\u4e1a\u52a1\u5408\u7ea6\u624d\u80fd\u517c\u5bb9\u65b0\u7684\u8d44\u4ea7\u7c7b\u578b\uff1f"},{"location":"bitxhub/join_us/","text":"\u52a0\u5165\u6211\u4eec \u6211\u4eec\u63d0\u4f9b\u4e86\u9ad8\u8d28\u91cf\u7684\u533a\u5757\u94fe\u8de8\u94fe\u4ea4\u6d41\u793e\u7fa4\uff0c\u793e\u7fa4\u5185\u4e0d\u4ec5\u53ef\u4ee5\u4e0e\u533a\u5757\u94fe\u884c\u4e1a\u5927\u5496\u3001\u533a\u5757\u94fe\u6280\u672f\u4e13\u5bb6\u96f6\u8ddd\u79bb\u4ea4\u6d41\uff0c\u8fd8\u4f1a\u6709\u4e0d\u5b9a\u671f\u7684\u5c0f\u793c\u54c1\u7b49\u5f85\u7740\u5927\u5bb6\u3002\u6b22\u8fce\u5404\u4f4d\u670b\u53cb\u8e0a\u8dc3\u52a0\u5165\uff0c\u8ba9\u6211\u4eec\u4e00\u8d77\u63a2\u8ba8\u548c\u611f\u53d7\u8de8\u94fe\u7684\u9b45\u529b\u3002 BitXHub\u5f00\u6e90\u793e\u533a\u5fae\u4fe1\u7fa4\u00b7\u5c0f\u52a9\u624b **\u8da3\u94fe\u79d1\u6280\u5b98\u65b9\u516c\u5171\u53f7 **","title":"\u52a0\u5165\u6211\u4eec"},{"location":"bitxhub/join_us/#_1","text":"\u6211\u4eec\u63d0\u4f9b\u4e86\u9ad8\u8d28\u91cf\u7684\u533a\u5757\u94fe\u8de8\u94fe\u4ea4\u6d41\u793e\u7fa4\uff0c\u793e\u7fa4\u5185\u4e0d\u4ec5\u53ef\u4ee5\u4e0e\u533a\u5757\u94fe\u884c\u4e1a\u5927\u5496\u3001\u533a\u5757\u94fe\u6280\u672f\u4e13\u5bb6\u96f6\u8ddd\u79bb\u4ea4\u6d41\uff0c\u8fd8\u4f1a\u6709\u4e0d\u5b9a\u671f\u7684\u5c0f\u793c\u54c1\u7b49\u5f85\u7740\u5927\u5bb6\u3002\u6b22\u8fce\u5404\u4f4d\u670b\u53cb\u8e0a\u8dc3\u52a0\u5165\uff0c\u8ba9\u6211\u4eec\u4e00\u8d77\u63a2\u8ba8\u548c\u611f\u53d7\u8de8\u94fe\u7684\u9b45\u529b\u3002 BitXHub\u5f00\u6e90\u793e\u533a\u5fae\u4fe1\u7fa4\u00b7\u5c0f\u52a9\u624b **\u8da3\u94fe\u79d1\u6280\u5b98\u65b9\u516c\u5171\u53f7 **","title":"\u52a0\u5165\u6211\u4eec"},{"location":"bitxhub/quick_start/","text":"\u5feb\u901f\u5f00\u59cb \u6211\u4eec\u63d0\u4f9b\u4e86Goduck\u8fd0\u7ef4\u5c0f\u5de5\u5177\u6765\u5feb\u901f\u4f53\u9a8c\u8de8\u94fe\u6d41\u7a0b\u3002 1 \u73af\u5883\u51c6\u5907 Goduck\u5feb\u901f\u5f00\u59cb\u4f9d\u8d56\u4e8eDocker\u548cDocker-Compose\uff0c\u9700\u8981\u63d0\u524d\u51c6\u5907\u597ddocker\u73af\u5883\u3002 2 \u4e0b\u8f7d Goduck \uff01\uff01\uff01\u6ce8\u610f\uff1a \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u7684\u8def\u5f84\u4e0b\u5e94\u8be5\u6ca1\u6709goduck\u540c\u540d\u76ee\u5f55 \u4e0b\u8f7dGoduck\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a curl https://raw.githubusercontent.com/meshplus/goduck/release-1.0/scripts/goduck.sh -L -o - | bash 3 \u521d\u59cb\u5316 \u521d\u59cb\u5316goduck\u914d\u7f6e\u6587\u4ef6\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a goduck init 4 \u542f\u52a8\u8de8\u94fe\u7f51\u7edc \u5728\u672c\u5730\u542f\u52a8\u4e00\u4e2asolo\u7248\u672c\u7684BitXHub\u8282\u70b9\u3001\u4e24\u6761\u4ee5\u592a\u574a\u79c1\u6709\u94fe\u4ee5\u53ca\u76f8\u5e94\u7684\u4e24\u4e2a\u8de8\u94fe\u7f51\u5173\uff0c\u542f\u52a8\u547d\u4ee4\u5982\u4e0b\uff1a goduck playground start \u8be5\u547d\u4ee4\u6267\u884c\u7684\u5177\u4f53\u64cd\u4f5c\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u83b7\u53d6\u76f8\u5173\u955c\u50cf \u955c\u50cf\u62c9\u53d6\u6210\u529f\u540e\u5c06\u4f1a\u6253\u5370\u65e5\u5fd7\u5982\u4e0b\uff1a Creating network \"quick_start_default\" with the default driver Creating ethereum-1 ... done Creating bitxhub_solo ... done Creating ethereum-2 ... done Creating pier-ethereum-2 ... done Creating pier-ethereum-1 ... done Attaching to bitxhub_solo, ethereum-2, ethereum-1, pier-ethereum-1, pier-ethereum-2 \u542f\u52a8\u4e24\u6761\u4ee5\u592a\u574a\u79c1\u6709\u94fe \u4ee5\u592a\u574a\u79c1\u6709\u94feethereum-1\u548cethereum-2\u542f\u52a8\u6210\u529f\u540e\uff0c\u6700\u7ec8\u4f1a\u6253\u5370\u51fa\u65e5\u5fd7\u5982\u4e0b\uff1a ethereum-2 | INFO [ 04 -02 | 02 :41:57.348 ] Sealing paused, waiting for transactions ethereum-1 | INFO [ 04 -02 | 02 :41:57.349 ] Sealing paused, waiting for transactions \u542f\u52a8\u4e2d\u7ee7\u94fe \u542f\u52a8\u4e00\u6761solo\u6a21\u5f0f\u7684\u4e2d\u7ee7\u94fe\uff0c\u542f\u52a8\u6210\u529f\u540e\u5c06\u4f1a\u6253\u5370\u51faBitXHub\u7684logo\u5982\u4e0b\uff1a bitxhub_solo | ======================================================= bitxhub_solo | ____ _ __ _ __ __ __ __ bitxhub_solo | / __ ) ( _ ) / /_ | | / / / / / / __ __ / /_ bitxhub_solo | / __ | / / / __/ | / / /_/ / / / / / / __ \\ bitxhub_solo | / /_/ / / / / /_ / | / __ / / /_/ / / /_/ / bitxhub_solo | /_____/ /_/ \\_ _/ /_/ | _ | /_/ /_/ \\_ _,_/ /_.___/ bitxhub_solo | bitxhub_solo | ======================================================= \u6ce8\u518c\u5e94\u7528\u94fe \u521b\u5efa\u4e24\u4e2a\u4e0e\u5e94\u7528\u94fe\u5bf9\u5e94\u7684\u8de8\u94fe\u7f51\u5173\uff0c\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u5411\u4e2d\u7ee7\u94fe\u6ce8\u518c\u5e94\u7528\u94fe\u4fe1\u606f\uff0c\u6ce8\u518c\u6210\u529f\u540e\u4f1a\u6253\u5370\u51fa\u5e94\u7528\u94feid\u5982\u4e0b\uff1a pier-ethereum-1 | appchain register successfully, id is 0xb132702a7500507411f3bd61ab33d9d350d41a37 pier-ethereum-2 | appchain register successfully, id is 0x9f5cf4b97965ababe19fcf3f1f12bb794a7dc279 \u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219 \u8de8\u94fe\u7f51\u5173\u5411\u4e2d\u7ee7\u94fe\u90e8\u7f72\u5e94\u7528\u94fe\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u90e8\u7f72\u6210\u529f\u540e\u5c06\u6253\u5370\u65e5\u5fd7\u5982\u4e0b\uff1a pier-ethereum-1 | Deploy rule to bitxhub successfully pier-ethereum-2 | Deploy rule to bitxhub successfully \u542f\u52a8\u8de8\u94fe\u7f51\u5173 \u8de8\u94fe\u7f51\u5173\u5b8c\u6210\u6ce8\u518c\u5e94\u7528\u94fe\u3001\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u4e24\u6b65\u540e\u5373\u53ef\u542f\u52a8\uff0c\u542f\u52a8\u6210\u529f\u540e\u8de8\u94fe\u7f51\u5173\u4f1a\u6253\u5370\u51fa\u65e5\u5fd7\u5982\u4e0b\uff1a pier-ethereum-1 | time = \"02:42:02.287\" level = info msg = \"Exchanger started\" module = exchanger pier-ethereum-2 | time = \"02:42:02.349\" level = info msg = \"Exchanger started\" module = exchanger \u4e2d\u7ee7\u94fe\u4f1a\u6253\u5370\u51fa\u65e5\u5fd7\u5982\u4e0b\uff1a bitxhub_solo | time=\"02:42:02.291\" level=info msg=\"Add pier\" id=0xb132702a7500507411f3bd61ab33d9d350d41a37 module=router bitxhub_solo | time=\"02:42:02.353\" level=info msg=\"Add pier\" id=0x9f5cf4b97965ababe19fcf3f1f12bb794a7dc279 module=router \uff01\uff01\uff01\u6ce8\u610f\uff1a \u5982\u9047\u7f51\u7edc\u95ee\u9898\uff0c\u8fd0\u884c\u4e0b\u9762\u547d\u4ee4\uff1a goduck playground clean 5 \u8de8\u94fe\u4ea4\u6613 \u5206\u522b\u5728\u4e24\u6761\u4ee5\u592a\u574a\u5e94\u7528\u94fe\u4e0a\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\uff0c\u6267\u884c\u547d\u4ee4\u5982\u4e0b\uff1a goduck playground transfer \u8be5\u547d\u4ee4\u4f1a\u8c03\u7528\u4ee5\u592a\u574a\u4e0a\u7684\u5408\u7ea6\uff08\u4ee5\u592a\u574a\u955c\u50cf\u4e0a\u5df2\u7ecf\u90e8\u7f72\u597d\u5408\u7ea6\uff09\u53d1\u8d77\u4e24\u7b14\u8de8\u94fe\u4ea4\u6613\uff1a - \u4eceethereum-1\u7684Alice\u8d26\u6237\u8f6c\u8d261\u5230ethereum-2\u7684Alice\u8d26\u6237 - \u4eceethereum-2\u7684Alice\u8d26\u6237\u8f6c\u8d261\u5230ethereum-1\u7684Alice\u8d26\u6237 \u4fe1\u606f\u6253\u5370\u51fa\u5982\u4e0b\uff1a // \u67e5\u8be2\u8d26\u6237\u4f59\u989d 1 . Query original accounts in appchains // \u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10000 Query Alice account in ethereum-1 appchain ======= invoke function getBalance ======= call result: 10000 // \u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10000 Query Alice account in ethereum-2 appchain ======= invoke function getBalance ======= call result: 10000 // \u4ece\u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237\u8f6c\u8d261\u5230\u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237 2 . Send 1 coin from Alice in ethereum-1 to Alice in ethereum-2 ======= invoke function transfer ======= =============== Transaction hash is ============== 0xff42eb87410f7ed4c8bf394716b7f202d4f307191e5ac2ef3cfb77fabd8211a0 // \u67e5\u8be2\u8d26\u6237\u4f59\u989d 3 . Query accounts after the first-round invocation // \u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a9999 Query Alice account in ethereum-1 appchain ======= invoke function getBalance ======= call result: 9999 // \u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10001 Query Alice account in ethereum-2 appchain ======= invoke function getBalance ======= call result: 10001 // \u4ece\u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237\u8f6c\u8d261\u5230\u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237 4 . Send 1 coin from Alice in ethereum-2 to Alice in ethereum-1 ======= invoke function transfer ======= =============== Transaction hash is ============== 0x0c8042a3539cd49ce5d0570afbdb625697aadf71a040203f6bc03e3a43fb71b5 // \u67e5\u8be2\u8d26\u6237\u4f59\u989d 5 . Query accounts after the second-round invocation // \u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10000 Query Alice account in ethereum-1 appchain ======= invoke function getBalance ======= call result: 10000 // \u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10000 Query Alice account in ethereum-2 appchain ======= invoke function getBalance ======= call result: 10000","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"bitxhub/quick_start/#_1","text":"\u6211\u4eec\u63d0\u4f9b\u4e86Goduck\u8fd0\u7ef4\u5c0f\u5de5\u5177\u6765\u5feb\u901f\u4f53\u9a8c\u8de8\u94fe\u6d41\u7a0b\u3002","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"bitxhub/quick_start/#1","text":"Goduck\u5feb\u901f\u5f00\u59cb\u4f9d\u8d56\u4e8eDocker\u548cDocker-Compose\uff0c\u9700\u8981\u63d0\u524d\u51c6\u5907\u597ddocker\u73af\u5883\u3002","title":"1 \u73af\u5883\u51c6\u5907"},{"location":"bitxhub/quick_start/#2-goduck","text":"\uff01\uff01\uff01\u6ce8\u610f\uff1a \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u7684\u8def\u5f84\u4e0b\u5e94\u8be5\u6ca1\u6709goduck\u540c\u540d\u76ee\u5f55 \u4e0b\u8f7dGoduck\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a curl https://raw.githubusercontent.com/meshplus/goduck/release-1.0/scripts/goduck.sh -L -o - | bash","title":"2 \u4e0b\u8f7d Goduck"},{"location":"bitxhub/quick_start/#3","text":"\u521d\u59cb\u5316goduck\u914d\u7f6e\u6587\u4ef6\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a goduck init","title":"3 \u521d\u59cb\u5316"},{"location":"bitxhub/quick_start/#4","text":"\u5728\u672c\u5730\u542f\u52a8\u4e00\u4e2asolo\u7248\u672c\u7684BitXHub\u8282\u70b9\u3001\u4e24\u6761\u4ee5\u592a\u574a\u79c1\u6709\u94fe\u4ee5\u53ca\u76f8\u5e94\u7684\u4e24\u4e2a\u8de8\u94fe\u7f51\u5173\uff0c\u542f\u52a8\u547d\u4ee4\u5982\u4e0b\uff1a goduck playground start \u8be5\u547d\u4ee4\u6267\u884c\u7684\u5177\u4f53\u64cd\u4f5c\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a","title":"4 \u542f\u52a8\u8de8\u94fe\u7f51\u7edc"},{"location":"bitxhub/quick_start/#_2","text":"\u955c\u50cf\u62c9\u53d6\u6210\u529f\u540e\u5c06\u4f1a\u6253\u5370\u65e5\u5fd7\u5982\u4e0b\uff1a Creating network \"quick_start_default\" with the default driver Creating ethereum-1 ... done Creating bitxhub_solo ... done Creating ethereum-2 ... done Creating pier-ethereum-2 ... done Creating pier-ethereum-1 ... done Attaching to bitxhub_solo, ethereum-2, ethereum-1, pier-ethereum-1, pier-ethereum-2","title":"\u83b7\u53d6\u76f8\u5173\u955c\u50cf"},{"location":"bitxhub/quick_start/#_3","text":"\u4ee5\u592a\u574a\u79c1\u6709\u94feethereum-1\u548cethereum-2\u542f\u52a8\u6210\u529f\u540e\uff0c\u6700\u7ec8\u4f1a\u6253\u5370\u51fa\u65e5\u5fd7\u5982\u4e0b\uff1a ethereum-2 | INFO [ 04 -02 | 02 :41:57.348 ] Sealing paused, waiting for transactions ethereum-1 | INFO [ 04 -02 | 02 :41:57.349 ] Sealing paused, waiting for transactions","title":"\u542f\u52a8\u4e24\u6761\u4ee5\u592a\u574a\u79c1\u6709\u94fe"},{"location":"bitxhub/quick_start/#_4","text":"\u542f\u52a8\u4e00\u6761solo\u6a21\u5f0f\u7684\u4e2d\u7ee7\u94fe\uff0c\u542f\u52a8\u6210\u529f\u540e\u5c06\u4f1a\u6253\u5370\u51faBitXHub\u7684logo\u5982\u4e0b\uff1a bitxhub_solo | ======================================================= bitxhub_solo | ____ _ __ _ __ __ __ __ bitxhub_solo | / __ ) ( _ ) / /_ | | / / / / / / __ __ / /_ bitxhub_solo | / __ | / / / __/ | / / /_/ / / / / / / __ \\ bitxhub_solo | / /_/ / / / / /_ / | / __ / / /_/ / / /_/ / bitxhub_solo | /_____/ /_/ \\_ _/ /_/ | _ | /_/ /_/ \\_ _,_/ /_.___/ bitxhub_solo | bitxhub_solo | =======================================================","title":"\u542f\u52a8\u4e2d\u7ee7\u94fe"},{"location":"bitxhub/quick_start/#_5","text":"\u521b\u5efa\u4e24\u4e2a\u4e0e\u5e94\u7528\u94fe\u5bf9\u5e94\u7684\u8de8\u94fe\u7f51\u5173\uff0c\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u5411\u4e2d\u7ee7\u94fe\u6ce8\u518c\u5e94\u7528\u94fe\u4fe1\u606f\uff0c\u6ce8\u518c\u6210\u529f\u540e\u4f1a\u6253\u5370\u51fa\u5e94\u7528\u94feid\u5982\u4e0b\uff1a pier-ethereum-1 | appchain register successfully, id is 0xb132702a7500507411f3bd61ab33d9d350d41a37 pier-ethereum-2 | appchain register successfully, id is 0x9f5cf4b97965ababe19fcf3f1f12bb794a7dc279","title":"\u6ce8\u518c\u5e94\u7528\u94fe"},{"location":"bitxhub/quick_start/#_6","text":"\u8de8\u94fe\u7f51\u5173\u5411\u4e2d\u7ee7\u94fe\u90e8\u7f72\u5e94\u7528\u94fe\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u90e8\u7f72\u6210\u529f\u540e\u5c06\u6253\u5370\u65e5\u5fd7\u5982\u4e0b\uff1a pier-ethereum-1 | Deploy rule to bitxhub successfully pier-ethereum-2 | Deploy rule to bitxhub successfully","title":"\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219"},{"location":"bitxhub/quick_start/#_7","text":"\u8de8\u94fe\u7f51\u5173\u5b8c\u6210\u6ce8\u518c\u5e94\u7528\u94fe\u3001\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u4e24\u6b65\u540e\u5373\u53ef\u542f\u52a8\uff0c\u542f\u52a8\u6210\u529f\u540e\u8de8\u94fe\u7f51\u5173\u4f1a\u6253\u5370\u51fa\u65e5\u5fd7\u5982\u4e0b\uff1a pier-ethereum-1 | time = \"02:42:02.287\" level = info msg = \"Exchanger started\" module = exchanger pier-ethereum-2 | time = \"02:42:02.349\" level = info msg = \"Exchanger started\" module = exchanger \u4e2d\u7ee7\u94fe\u4f1a\u6253\u5370\u51fa\u65e5\u5fd7\u5982\u4e0b\uff1a bitxhub_solo | time=\"02:42:02.291\" level=info msg=\"Add pier\" id=0xb132702a7500507411f3bd61ab33d9d350d41a37 module=router bitxhub_solo | time=\"02:42:02.353\" level=info msg=\"Add pier\" id=0x9f5cf4b97965ababe19fcf3f1f12bb794a7dc279 module=router \uff01\uff01\uff01\u6ce8\u610f\uff1a \u5982\u9047\u7f51\u7edc\u95ee\u9898\uff0c\u8fd0\u884c\u4e0b\u9762\u547d\u4ee4\uff1a goduck playground clean","title":"\u542f\u52a8\u8de8\u94fe\u7f51\u5173"},{"location":"bitxhub/quick_start/#5","text":"\u5206\u522b\u5728\u4e24\u6761\u4ee5\u592a\u574a\u5e94\u7528\u94fe\u4e0a\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\uff0c\u6267\u884c\u547d\u4ee4\u5982\u4e0b\uff1a goduck playground transfer \u8be5\u547d\u4ee4\u4f1a\u8c03\u7528\u4ee5\u592a\u574a\u4e0a\u7684\u5408\u7ea6\uff08\u4ee5\u592a\u574a\u955c\u50cf\u4e0a\u5df2\u7ecf\u90e8\u7f72\u597d\u5408\u7ea6\uff09\u53d1\u8d77\u4e24\u7b14\u8de8\u94fe\u4ea4\u6613\uff1a - \u4eceethereum-1\u7684Alice\u8d26\u6237\u8f6c\u8d261\u5230ethereum-2\u7684Alice\u8d26\u6237 - \u4eceethereum-2\u7684Alice\u8d26\u6237\u8f6c\u8d261\u5230ethereum-1\u7684Alice\u8d26\u6237 \u4fe1\u606f\u6253\u5370\u51fa\u5982\u4e0b\uff1a // \u67e5\u8be2\u8d26\u6237\u4f59\u989d 1 . Query original accounts in appchains // \u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10000 Query Alice account in ethereum-1 appchain ======= invoke function getBalance ======= call result: 10000 // \u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10000 Query Alice account in ethereum-2 appchain ======= invoke function getBalance ======= call result: 10000 // \u4ece\u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237\u8f6c\u8d261\u5230\u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237 2 . Send 1 coin from Alice in ethereum-1 to Alice in ethereum-2 ======= invoke function transfer ======= =============== Transaction hash is ============== 0xff42eb87410f7ed4c8bf394716b7f202d4f307191e5ac2ef3cfb77fabd8211a0 // \u67e5\u8be2\u8d26\u6237\u4f59\u989d 3 . Query accounts after the first-round invocation // \u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a9999 Query Alice account in ethereum-1 appchain ======= invoke function getBalance ======= call result: 9999 // \u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10001 Query Alice account in ethereum-2 appchain ======= invoke function getBalance ======= call result: 10001 // \u4ece\u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237\u8f6c\u8d261\u5230\u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237 4 . Send 1 coin from Alice in ethereum-2 to Alice in ethereum-1 ======= invoke function transfer ======= =============== Transaction hash is ============== 0x0c8042a3539cd49ce5d0570afbdb625697aadf71a040203f6bc03e3a43fb71b5 // \u67e5\u8be2\u8d26\u6237\u4f59\u989d 5 . Query accounts after the second-round invocation // \u4ee5\u592a\u574a1\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10000 Query Alice account in ethereum-1 appchain ======= invoke function getBalance ======= call result: 10000 // \u4ee5\u592a\u574a2\u7684Alice\u8d26\u6237\u4f59\u989d\u4e3a10000 Query Alice account in ethereum-2 appchain ======= invoke function getBalance ======= call result: 10000","title":"5 \u8de8\u94fe\u4ea4\u6613"},{"location":"bitxhub/changelog/bitxhub_v1.0.0/","text":"BitXHub v1.0.0 \u4e2d\u7ee7\u94feV1.0.0 \u65b0\u529f\u80fd \u63a5\u5165\u533a\u5757\u94fe\u5e76\u9002\u914d Ethereum\uff1b \u6dfb\u52a0Prometheus\u76d1\u63a7\u6a21\u5757\u5e76\u4e14\u4e30\u5bcc\u76f8\u5173\u57cb\u70b9\uff1b \u6dfb\u52a0Solo\u7248\u672c\u7684Dockerfile\uff1b \u5b9e\u73b0Docker Compose\u542f\u52a8\u96c6\u7fa4\u529f\u80fd\uff1b \u5185\u7f6e\u5408\u7ea6\u6dfb\u52a0\u67e5\u8be2\u8de8\u94fe\u7d22\u5f15\u7684\u529f\u80fd\uff1b \u6dfb\u52a0Rust\u9a8c\u8bc1\u89c4\u5219\u6a21\u7248\uff1b \u5b8c\u5584\u533a\u5757\u5934\u4ea4\u6613Merkle\u6811\u7684\u6784\u9020\u3002 \u5f00\u53d1\u5de5\u5177 \u65b0\u589e\u4e86\u8fd0\u7ef4\u5de5\u5177\u9879\u76eeGoDuck\uff0c\u540e\u7eed\u5c06\u6301\u7eed\u8fdb\u884c\u4f18\u5316\uff1b \u6dfb\u52a0\u5feb\u901f\u542f\u52a8Fabric\u7f51\u7edc\u548cEthereum\u7f51\u7edc\u7684\u529f\u80fd\uff1b \u6dfb\u52a0Prometheus+Grafana\u5feb\u901f\u542f\u52a8docker-compose\u7684\u914d\u7f6e\u6587\u4ef6\uff1b \u52a0\u5165BitXHub\u548cPier\u914d\u7f6e\u5feb\u901f\u751f\u6210\u529f\u80fd\uff1b \u5b9e\u73b0\u4e8c\u8fdb\u5236\u7ba1\u7406\u529f\u80fd\u3002 \u7f3a\u9677\u4fee\u590d \u4fee\u590d\u9a8c\u8bc1\u89c4\u5219\u65e0\u6cd5\u89e3\u6790\u7684Bug\uff1b \u4fee\u590d\u5e94\u7528\u94fe\u6ce8\u518c\u65f6ID\u672a\u627e\u5230\u7684Bug\uff1b \u4fee\u590dDockerfile\u672a\u7f16\u8bd1raft\u5171\u8bc6\u7b97\u6cd5\u63d2\u4ef6\u7684Bug\uff1b \u8de8\u94fe\u7f51\u5173V1.0.0 \u91cd\u6784\u8de8\u94fe\u7f51\u5173\u62c9\u53d6\u4e2d\u7ee7\u94fe\u4e0a\u7684\u8de8\u94fe\u4ea4\u6613\u65f6Wrapper\u7684\u6570\u636e\u7ed3\u6784\uff1b \u6dfb\u52a0p2p ID \u7684\u547d\u4ee4\u884c\u5b50\u547d\u4ee4\uff1b \u7f3a\u9677\u4fee\u590d \u4fee\u590d\u8de8\u94fe\u7f51\u5173\u548c\u63d2\u4ef6\u4f9d\u8d56\u5e93\u7248\u672c\u51b2\u7a81\u7684Bug\uff1b \u4fee\u590d\u9a8c\u8bc1\u6765\u81ea\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4ea4\u6613\u4e3a\u7a7a\u65f6\u5904\u7406\u7684Bug\u3002","title":"BitXHub v1.0.0"},{"location":"bitxhub/changelog/bitxhub_v1.0.0/#bitxhub-v100","text":"","title":"BitXHub v1.0.0"},{"location":"bitxhub/changelog/bitxhub_v1.0.0/#v100","text":"","title":"\u4e2d\u7ee7\u94feV1.0.0"},{"location":"bitxhub/changelog/bitxhub_v1.0.0/#_1","text":"\u63a5\u5165\u533a\u5757\u94fe\u5e76\u9002\u914d Ethereum\uff1b \u6dfb\u52a0Prometheus\u76d1\u63a7\u6a21\u5757\u5e76\u4e14\u4e30\u5bcc\u76f8\u5173\u57cb\u70b9\uff1b \u6dfb\u52a0Solo\u7248\u672c\u7684Dockerfile\uff1b \u5b9e\u73b0Docker Compose\u542f\u52a8\u96c6\u7fa4\u529f\u80fd\uff1b \u5185\u7f6e\u5408\u7ea6\u6dfb\u52a0\u67e5\u8be2\u8de8\u94fe\u7d22\u5f15\u7684\u529f\u80fd\uff1b \u6dfb\u52a0Rust\u9a8c\u8bc1\u89c4\u5219\u6a21\u7248\uff1b \u5b8c\u5584\u533a\u5757\u5934\u4ea4\u6613Merkle\u6811\u7684\u6784\u9020\u3002","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.0.0/#_2","text":"\u65b0\u589e\u4e86\u8fd0\u7ef4\u5de5\u5177\u9879\u76eeGoDuck\uff0c\u540e\u7eed\u5c06\u6301\u7eed\u8fdb\u884c\u4f18\u5316\uff1b \u6dfb\u52a0\u5feb\u901f\u542f\u52a8Fabric\u7f51\u7edc\u548cEthereum\u7f51\u7edc\u7684\u529f\u80fd\uff1b \u6dfb\u52a0Prometheus+Grafana\u5feb\u901f\u542f\u52a8docker-compose\u7684\u914d\u7f6e\u6587\u4ef6\uff1b \u52a0\u5165BitXHub\u548cPier\u914d\u7f6e\u5feb\u901f\u751f\u6210\u529f\u80fd\uff1b \u5b9e\u73b0\u4e8c\u8fdb\u5236\u7ba1\u7406\u529f\u80fd\u3002","title":"\u5f00\u53d1\u5de5\u5177"},{"location":"bitxhub/changelog/bitxhub_v1.0.0/#_3","text":"\u4fee\u590d\u9a8c\u8bc1\u89c4\u5219\u65e0\u6cd5\u89e3\u6790\u7684Bug\uff1b \u4fee\u590d\u5e94\u7528\u94fe\u6ce8\u518c\u65f6ID\u672a\u627e\u5230\u7684Bug\uff1b \u4fee\u590dDockerfile\u672a\u7f16\u8bd1raft\u5171\u8bc6\u7b97\u6cd5\u63d2\u4ef6\u7684Bug\uff1b","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.0.0/#v100_1","text":"\u91cd\u6784\u8de8\u94fe\u7f51\u5173\u62c9\u53d6\u4e2d\u7ee7\u94fe\u4e0a\u7684\u8de8\u94fe\u4ea4\u6613\u65f6Wrapper\u7684\u6570\u636e\u7ed3\u6784\uff1b \u6dfb\u52a0p2p ID \u7684\u547d\u4ee4\u884c\u5b50\u547d\u4ee4\uff1b","title":"\u8de8\u94fe\u7f51\u5173V1.0.0"},{"location":"bitxhub/changelog/bitxhub_v1.0.0/#_4","text":"\u4fee\u590d\u8de8\u94fe\u7f51\u5173\u548c\u63d2\u4ef6\u4f9d\u8d56\u5e93\u7248\u672c\u51b2\u7a81\u7684Bug\uff1b \u4fee\u590d\u9a8c\u8bc1\u6765\u81ea\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4ea4\u6613\u4e3a\u7a7a\u65f6\u5904\u7406\u7684Bug\u3002","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/","text":"BitXHub v1.3.0 \u4e2d\u7ee7\u94feV1.3.0 \u65b0\u529f\u80fd \u91cd\u6784\u8de8\u94fe\u9a8c\u8bc1 \u4e2d\u7ee7\u94fePendingPool\u529f\u80fd\u4f18\u5316\uff0c\u63d0\u5347\u6027\u80fd\uff1b \u4e2d\u7ee7\u94fe\u5b9e\u73b0\u4ea4\u6613\u6267\u884c\u5e76\u884c\u5316\uff1b \u4e2d\u7ee7\u94fe\u8de8\u94fe\u9a8c\u8bc1\u53bb\u9664IBTP\u7684Proof\uff0c\u51cf\u5c11\u5b58\u50a8\u538b\u529b\uff1b \u7f3a\u9677\u4fee\u590d \u65e0 \u8de8\u94fe\u7f51\u5173V1.3.0 \u65b0\u529f\u80fd \u9002\u914d\u4e2d\u7ee7\u94fe\u7684PendingPool\u6a21\u5f0f\uff0c\u7ef4\u62a4\u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u7684Nonce\u5e76\u4e14\u987a\u5e8f\u9012\u589e\uff1b \u4f18\u5316\u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u6a21\u5f0f\u7684\u6027\u80fd\uff0c\u5b9e\u73b0IBTP\u5f02\u6b65\u53d1\u9001\u548c\u63a5\u6536\uff1b \u5b9e\u73b0\u521d\u7248pier-client-fake\u4ee5\u652f\u6301Pier\u76f4\u8fde\u6a21\u5f0f\u6d4b\u8bd5\uff1b \u7f3a\u9677\u4fee\u590d \u4fee\u590dPier\u5728\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u8de8\u94fe\u5408\u7ea6\u6570\u636e\u4e0d\u4e00\u81f4\u60c5\u51b5\u4e0b\u4e00\u76f4\u5411\u4e2d\u7ee7\u94fe\u53d1\u4ea4\u6613\u7684Bug \u8fd0\u7ef4\u5de5\u5177 \u65b0\u529f\u80fd Goduck\u6dfb\u52a0\u6839\u636e\u7248\u672c\u8fdc\u7a0b\u90e8\u7f72BITXHUB\u548cPier\u7684\u529f\u80fd\uff1b Goduck\u652f\u6301prometheus\u76d1\u63a7\u542f\u52a8\uff1b Goduck\u652f\u6301\u6309\u7248\u672c\u542f\u52a8playground \u7f3a\u9677\u4fee\u590d \u4fee\u590dlinux\u7cfb\u7edf\u4e0adocker\u6a21\u5f0f\u542f\u52a8pier\u5931\u8d25\u7684bug\uff1b \u4fee\u590dkey\u547d\u4ee4path\u53c2\u6570\u65e0\u6548\u7684bug \u4fee\u590dinfo\u547d\u4ee4\u65e0\u54cd\u5e94\u7684bug \u5176\u5b83 \u65e0","title":"BitXHub v1.3.0"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#bitxhub-v130","text":"","title":"BitXHub v1.3.0"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#v130","text":"","title":"\u4e2d\u7ee7\u94feV1.3.0"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#_1","text":"\u91cd\u6784\u8de8\u94fe\u9a8c\u8bc1 \u4e2d\u7ee7\u94fePendingPool\u529f\u80fd\u4f18\u5316\uff0c\u63d0\u5347\u6027\u80fd\uff1b \u4e2d\u7ee7\u94fe\u5b9e\u73b0\u4ea4\u6613\u6267\u884c\u5e76\u884c\u5316\uff1b \u4e2d\u7ee7\u94fe\u8de8\u94fe\u9a8c\u8bc1\u53bb\u9664IBTP\u7684Proof\uff0c\u51cf\u5c11\u5b58\u50a8\u538b\u529b\uff1b","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#_2","text":"\u65e0","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#v130_1","text":"","title":"\u8de8\u94fe\u7f51\u5173V1.3.0"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#_3","text":"\u9002\u914d\u4e2d\u7ee7\u94fe\u7684PendingPool\u6a21\u5f0f\uff0c\u7ef4\u62a4\u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u7684Nonce\u5e76\u4e14\u987a\u5e8f\u9012\u589e\uff1b \u4f18\u5316\u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u6a21\u5f0f\u7684\u6027\u80fd\uff0c\u5b9e\u73b0IBTP\u5f02\u6b65\u53d1\u9001\u548c\u63a5\u6536\uff1b \u5b9e\u73b0\u521d\u7248pier-client-fake\u4ee5\u652f\u6301Pier\u76f4\u8fde\u6a21\u5f0f\u6d4b\u8bd5\uff1b","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#_4","text":"\u4fee\u590dPier\u5728\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u8de8\u94fe\u5408\u7ea6\u6570\u636e\u4e0d\u4e00\u81f4\u60c5\u51b5\u4e0b\u4e00\u76f4\u5411\u4e2d\u7ee7\u94fe\u53d1\u4ea4\u6613\u7684Bug","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#_5","text":"","title":"\u8fd0\u7ef4\u5de5\u5177"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#_6","text":"Goduck\u6dfb\u52a0\u6839\u636e\u7248\u672c\u8fdc\u7a0b\u90e8\u7f72BITXHUB\u548cPier\u7684\u529f\u80fd\uff1b Goduck\u652f\u6301prometheus\u76d1\u63a7\u542f\u52a8\uff1b Goduck\u652f\u6301\u6309\u7248\u672c\u542f\u52a8playground","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#_7","text":"\u4fee\u590dlinux\u7cfb\u7edf\u4e0adocker\u6a21\u5f0f\u542f\u52a8pier\u5931\u8d25\u7684bug\uff1b \u4fee\u590dkey\u547d\u4ee4path\u53c2\u6570\u65e0\u6548\u7684bug \u4fee\u590dinfo\u547d\u4ee4\u65e0\u54cd\u5e94\u7684bug","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.3.0/#_8","text":"\u65e0","title":"\u5176\u5b83"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/","text":"BitXHub v1.4.0 \u4e2d\u7ee7\u94feV1.4.0 \u65b0\u529f\u80fd \u4e2d\u7ee7\u94fe\u63a5\u5165\u4e86\u5f3a\u9c81\u68d2\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5RBFT\uff0c\u5176\u5931\u6548\u6570\u636e\u6062\u590d\u3001\u52a8\u6001\u8282\u70b9\u589e\u5220\u7b49\u673a\u5236\u4fdd\u8bc1\u4e86\u4e2d\u7ee7\u94fe\u5929\u7136\u7684\u9ad8\u53ef\u7528\u6027\uff1b \u589e\u52a0Sync Protocol\u8282\u70b9\u6062\u590d\u673a\u5236\uff0c\u4fdd\u8bc1\u4e2d\u7ee7\u94fe\u8282\u70b9\u72b6\u6001\u7684\u4e00\u81f4\u6027\uff1b \u4e2d\u7ee7\u94feDID\u5185\u7f6e\u5408\u7ea6\u5f00\u53d1\u53ca\u4f18\u5316\uff1b \u65b0\u589e\u4e8b\u52a1\u7ba1\u7406\u6a21\u5757\uff0c\u63d0\u4f9b\u591a\u94fe\u6d88\u606f\u8868\u548c\u4e2d\u7ee7\u591a\u7b7e\u8d44\u4ea7\u4ea4\u6362\u4e24\u79cd\u8de8\u94fe\u4e8b\u52a1\u3002\u4f7f\u7528\u591a\u94fe\u6d88\u606f\u8868\u6280\u672f\u5b9e\u73b0\u4e00\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a\u8de8\u94fe\uff1b \u4e2d\u7ee7\u94fe\u7684GRPC\u901a\u4fe1\u589e\u52a0TLS\u52a0\u5bc6\u529f\u80fd\uff1b \u4e2d\u7ee7\u94femempool\u5b9e\u73b0\uff0c\u6dfb\u52a0\u4ea4\u6613\u6c60\u7684\u8d85\u65f6\u5904\u7406\u673a\u5236 \u7f3a\u9677\u4fee\u590d \u4fee\u590d\u521b\u5efa\u79c1\u94a5\u5fc5\u987b\u5728\u5df2\u6709\u76ee\u5f55\u7684bug\uff1b \u4fee\u590d\u4e2d\u7ee7\u94feSolo\u6a21\u5f0f\u4e0b\u4e0d\u652f\u6301\u4ea4\u6613\u6c60\u7684bug\uff1b \u4fee\u590dbitxhub client validators\u547d\u4ee4\u8fd4\u56de\u9519\u8bef\u7684Bug\uff1b \u4fee\u590draft\u9009\u4e3e\u5f02\u5e38\u7684bug \u8de8\u94fe\u7f51\u5173V1.4.0 \u65b0\u529f\u80fd \u8de8\u94fe\u7f51\u5173\u7684GRPC\u901a\u4fe1\u589e\u52a0TLS\u52a0\u5bc6\u529f\u80fd\uff1b \u91cd\u6784\u8de8\u94fe\u7f51\u5173\u6267\u884c\u3001\u76d1\u542c\u548c\u540c\u6b65\u7b49\u6a21\u5757\uff1b \u8de8\u94fe\u7f51\u5173\u4e3b\u5907\u6a21\u5757\u5316\uff1b \u9002\u914dBCOS\uff1b \u7f3a\u9677\u4fee\u590d \u4fee\u590dPier\u4e2d\u7ee7\u6a21\u5f0f\u542f\u52a8\u4f9d\u8d56\u5e94\u7528\u94fe\u7684Bug\uff1b \u4fee\u590dfabric\u63d2\u4ef6\u4e2d\u8f6e\u8be2chaincode\u4ea4\u6613\u8fc7\u591a\u7684bug\uff1b \u4fee\u590d\u5220\u9664\u8de8\u94fe\u7f51\u5173\u5b58\u50a8\u91cd\u542f\u5bfc\u81f4Get out Message not found\u7684Bug\uff1b \u4fee\u590dPier\u91cd\u542f\u6062\u590d\u8fc7\u7a0b\u4e2d\u751f\u6210IBTP\u56de\u6267\u65f6IBTP\u53c2\u6570\u8bbe\u7f6e\u9519\u8bef\u7684Bug \u8fd0\u7ef4\u5de5\u5177 \u65b0\u529f\u80fd Goduck\u547d\u4ee4\u683c\u5f0f\u8c03\u6574\u4f18\u5316\uff1b Goduck\u6dfb\u52a0\u8fdc\u7a0b\u90e8\u7f72pier\u548cbitxhub\u7684\u7ed3\u679c\u68c0\u67e5\uff1b Goduck\u7684status\u547d\u4ee4\u5f00\u53d1\uff0c\u6dfb\u52a0docker\u7ec4\u4ef6\u4fe1\u606f\uff1b \u7f3a\u9677\u4fee\u590d \u4fee\u590dGoduck pier config\u547d\u4ee4\u4e2did\u53c2\u6570\u65e0\u6548\u7684bug\uff1b \u4fee\u590dGoduck info\u547d\u4ee4\u4e2d\u5224\u65ad\u5df2\u9000\u51fa\u4f46\u914d\u7f6e\u76ee\u5f55\u4ecd\u5b58\u5728\u7684\u7ec4\u4ef6\u72b6\u6001\u9519\u8bef\u7684bug\uff1b \u4fee\u590dGoduck\u8fdc\u7a0b\u91cd\u590d\u90e8\u7f72pier\u65f6\u51fa\u73b0\u7684\u6587\u4ef6\u540d\u4e0d\u4e00\u81f4\u7684bug\uff1b \u4fee\u590dGoduck pier\u76f4\u8fde\u6a21\u5f0fpeers\u4fe1\u606f\u9519\u8bef\u7684bug\uff1b \u5176\u5b83 \u65e0","title":"BitXHub v1.4.0"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#bitxhub-v140","text":"","title":"BitXHub v1.4.0"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#v140","text":"","title":"\u4e2d\u7ee7\u94feV1.4.0"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#_1","text":"\u4e2d\u7ee7\u94fe\u63a5\u5165\u4e86\u5f3a\u9c81\u68d2\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5RBFT\uff0c\u5176\u5931\u6548\u6570\u636e\u6062\u590d\u3001\u52a8\u6001\u8282\u70b9\u589e\u5220\u7b49\u673a\u5236\u4fdd\u8bc1\u4e86\u4e2d\u7ee7\u94fe\u5929\u7136\u7684\u9ad8\u53ef\u7528\u6027\uff1b \u589e\u52a0Sync Protocol\u8282\u70b9\u6062\u590d\u673a\u5236\uff0c\u4fdd\u8bc1\u4e2d\u7ee7\u94fe\u8282\u70b9\u72b6\u6001\u7684\u4e00\u81f4\u6027\uff1b \u4e2d\u7ee7\u94feDID\u5185\u7f6e\u5408\u7ea6\u5f00\u53d1\u53ca\u4f18\u5316\uff1b \u65b0\u589e\u4e8b\u52a1\u7ba1\u7406\u6a21\u5757\uff0c\u63d0\u4f9b\u591a\u94fe\u6d88\u606f\u8868\u548c\u4e2d\u7ee7\u591a\u7b7e\u8d44\u4ea7\u4ea4\u6362\u4e24\u79cd\u8de8\u94fe\u4e8b\u52a1\u3002\u4f7f\u7528\u591a\u94fe\u6d88\u606f\u8868\u6280\u672f\u5b9e\u73b0\u4e00\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a\u8de8\u94fe\uff1b \u4e2d\u7ee7\u94fe\u7684GRPC\u901a\u4fe1\u589e\u52a0TLS\u52a0\u5bc6\u529f\u80fd\uff1b \u4e2d\u7ee7\u94femempool\u5b9e\u73b0\uff0c\u6dfb\u52a0\u4ea4\u6613\u6c60\u7684\u8d85\u65f6\u5904\u7406\u673a\u5236","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#_2","text":"\u4fee\u590d\u521b\u5efa\u79c1\u94a5\u5fc5\u987b\u5728\u5df2\u6709\u76ee\u5f55\u7684bug\uff1b \u4fee\u590d\u4e2d\u7ee7\u94feSolo\u6a21\u5f0f\u4e0b\u4e0d\u652f\u6301\u4ea4\u6613\u6c60\u7684bug\uff1b \u4fee\u590dbitxhub client validators\u547d\u4ee4\u8fd4\u56de\u9519\u8bef\u7684Bug\uff1b \u4fee\u590draft\u9009\u4e3e\u5f02\u5e38\u7684bug","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#v140_1","text":"","title":"\u8de8\u94fe\u7f51\u5173V1.4.0"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#_3","text":"\u8de8\u94fe\u7f51\u5173\u7684GRPC\u901a\u4fe1\u589e\u52a0TLS\u52a0\u5bc6\u529f\u80fd\uff1b \u91cd\u6784\u8de8\u94fe\u7f51\u5173\u6267\u884c\u3001\u76d1\u542c\u548c\u540c\u6b65\u7b49\u6a21\u5757\uff1b \u8de8\u94fe\u7f51\u5173\u4e3b\u5907\u6a21\u5757\u5316\uff1b \u9002\u914dBCOS\uff1b","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#_4","text":"\u4fee\u590dPier\u4e2d\u7ee7\u6a21\u5f0f\u542f\u52a8\u4f9d\u8d56\u5e94\u7528\u94fe\u7684Bug\uff1b \u4fee\u590dfabric\u63d2\u4ef6\u4e2d\u8f6e\u8be2chaincode\u4ea4\u6613\u8fc7\u591a\u7684bug\uff1b \u4fee\u590d\u5220\u9664\u8de8\u94fe\u7f51\u5173\u5b58\u50a8\u91cd\u542f\u5bfc\u81f4Get out Message not found\u7684Bug\uff1b \u4fee\u590dPier\u91cd\u542f\u6062\u590d\u8fc7\u7a0b\u4e2d\u751f\u6210IBTP\u56de\u6267\u65f6IBTP\u53c2\u6570\u8bbe\u7f6e\u9519\u8bef\u7684Bug","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#_5","text":"","title":"\u8fd0\u7ef4\u5de5\u5177"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#_6","text":"Goduck\u547d\u4ee4\u683c\u5f0f\u8c03\u6574\u4f18\u5316\uff1b Goduck\u6dfb\u52a0\u8fdc\u7a0b\u90e8\u7f72pier\u548cbitxhub\u7684\u7ed3\u679c\u68c0\u67e5\uff1b Goduck\u7684status\u547d\u4ee4\u5f00\u53d1\uff0c\u6dfb\u52a0docker\u7ec4\u4ef6\u4fe1\u606f\uff1b","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#_7","text":"\u4fee\u590dGoduck pier config\u547d\u4ee4\u4e2did\u53c2\u6570\u65e0\u6548\u7684bug\uff1b \u4fee\u590dGoduck info\u547d\u4ee4\u4e2d\u5224\u65ad\u5df2\u9000\u51fa\u4f46\u914d\u7f6e\u76ee\u5f55\u4ecd\u5b58\u5728\u7684\u7ec4\u4ef6\u72b6\u6001\u9519\u8bef\u7684bug\uff1b \u4fee\u590dGoduck\u8fdc\u7a0b\u91cd\u590d\u90e8\u7f72pier\u65f6\u51fa\u73b0\u7684\u6587\u4ef6\u540d\u4e0d\u4e00\u81f4\u7684bug\uff1b \u4fee\u590dGoduck pier\u76f4\u8fde\u6a21\u5f0fpeers\u4fe1\u606f\u9519\u8bef\u7684bug\uff1b","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.4.0/#_8","text":"\u65e0","title":"\u5176\u5b83"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/","text":"BitXHub v1.5.0 \u4e2d\u7ee7\u94feV1.5.0 \u65b0\u529f\u80fd \u4e2d\u7ee7\u94fe\u63d0\u4f9b\u94fe\u95f4\u8de8\u94fe\u529f\u80fd\uff1b \u4e2d\u7ee7\u94feMempool\u4ea4\u6613\u8d85\u65f6\u8f6c\u53d1\u529f\u80fd\uff1b \u5b9e\u73b0libp2p-cert\u5e93\uff0c\u91cd\u6784\u8282\u70b9\u95f4\u8bc1\u4e66\u9a8c\u8bc1\u529f\u80fd\uff1b DID\u6a21\u5757\u6574\u5408IPFS\u5b58\u50a8\u529f\u80fd\uff1b \u5b9e\u73b0StateUpdate\u529f\u80fd\uff0c\u89e3\u51b3\u843d\u540e\u8282\u70b9\u6570\u636e\u540c\u6b65\u529f\u80fd\uff1b \u5b9e\u73b0Minifile\u6a21\u5757\uff0c\u51cf\u8f7b\u5171\u8bc6\u5b58\u50a8\u538b\u529b\uff1b \u7f3a\u9677\u4fee\u590d \u4fee\u590d\u4e2d\u7ee7\u94fe\u8ba2\u9605 nil \u7684\u5730\u5740\u5bfc\u81f4 Panic \u7684Bug\uff1b \u4fee\u590d\u4e2d\u7ee7\u94fe GOSDK \u4e2d\u548c\u5b95\u673a\u8282\u70b9\u5f02\u6b65\u5efa\u7acb\u8fde\u63a5\u5bfc\u81f4\u540e\u7eed\u4f7f\u7528\u8fde\u63a5\u65f6\u51fa\u9519\u7684Bug\uff1b \u4fee\u590d RAFT mempool \u672a\u6301\u4e45\u5316 pending nonce \u7684Bug\uff1b \u4fee\u590d\u4e2d\u7ee7\u94fe\u547d\u4ee4\u884c\u663e\u793a\u7684Bug\u3002 \u8de8\u94fe\u7f51\u5173V1.5.0 \u65b0\u529f\u80fd \u8de8\u94fe\u7f51\u5173\u91cd\u6784\uff08\u4f18\u5316\u5e8f\u53f7\u5f02\u5e38\u5904\u7406\u65b9\u5f0f\u3001\u91cd\u6784Monitor\u3001Executor\u3001Syncer\u7b49\u6a21\u5757\uff09\uff1b \u652f\u6301\u914d\u7f6e\u591a\u4e2a\u4e2d\u7ee7\u94fe\u8282\u70b9\u5e76\u81ea\u52a8\u5207\u6362\u7684\u529f\u80fd\uff0c\u4f18\u5316\u5728\u5f31\u7f51\u73af\u5883\u4e0b\u7684\u8de8\u94fe\u8f6c\u53d1\u80fd\u529b\uff1b \u8de8\u94fe\u7f51\u5173\u589e\u52a0\u8de8\u4e2d\u7ee7\u94fe\u8def\u7531\u7684Union \u6a21\u5f0f\u4e0b\u7684\u8de8\u94fe\u6d88\u606f\u4f20\u9012\u529f\u80fd\uff0c\u9002\u5e94\u5927\u89c4\u6a21\u8de8\u94fe\u573a\u666f\u4e0b\u7684\u9700\u6c42\uff1b \u8de8\u94fe\u7f51\u5173\u9002\u914d\u4e1a\u52a1\u5408\u7ea6\u529f\u80fd\uff1b \u7f3a\u9677\u4fee\u590d \u4fee\u590d Pier executor \u5730\u5740\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684Bug\uff1b \u4fee\u590dexecutor \u6267\u884c\u8de8\u94fe\u4ea4\u6613\u540e\u6539\u53d8 IBTP \u5185\u5bb9\u7b49Bug\uff1b \u4fee\u590d\u91cd\u6784\u8de8\u94fe\u7f51\u5173\u65e0\u6cd5\u914d\u7f6e\u63d2\u4ef6\u540d\u548c\u6253\u5370\u7248\u672c\u4fe1\u606f\u4e0d\u5b8c\u5584\u7684Bug\uff1b \u4fee\u590d\u8de8\u94fe\u7f51\u5173\u4e3b\u5907\u8282\u70b9\u5207\u6362\u65f6\u9519\u8bef\u5173\u95ed\u63d2\u4ef6\u8fdb\u7a0b\u7684Bug\uff1b \u8fd0\u7ef4\u5de5\u5177 \u65b0\u529f\u80fd Goduck\u9002\u914d1.5.0\u7248\u672c\u7684pier\u548cbitxhub\uff1b \u7f3a\u9677\u4fee\u590d \u65e0 \u5176\u5b83 \u65e0","title":"BitXHub v1.5.0"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#bitxhub-v150","text":"","title":"BitXHub v1.5.0"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#v150","text":"","title":"\u4e2d\u7ee7\u94feV1.5.0"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#_1","text":"\u4e2d\u7ee7\u94fe\u63d0\u4f9b\u94fe\u95f4\u8de8\u94fe\u529f\u80fd\uff1b \u4e2d\u7ee7\u94feMempool\u4ea4\u6613\u8d85\u65f6\u8f6c\u53d1\u529f\u80fd\uff1b \u5b9e\u73b0libp2p-cert\u5e93\uff0c\u91cd\u6784\u8282\u70b9\u95f4\u8bc1\u4e66\u9a8c\u8bc1\u529f\u80fd\uff1b DID\u6a21\u5757\u6574\u5408IPFS\u5b58\u50a8\u529f\u80fd\uff1b \u5b9e\u73b0StateUpdate\u529f\u80fd\uff0c\u89e3\u51b3\u843d\u540e\u8282\u70b9\u6570\u636e\u540c\u6b65\u529f\u80fd\uff1b \u5b9e\u73b0Minifile\u6a21\u5757\uff0c\u51cf\u8f7b\u5171\u8bc6\u5b58\u50a8\u538b\u529b\uff1b","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#_2","text":"\u4fee\u590d\u4e2d\u7ee7\u94fe\u8ba2\u9605 nil \u7684\u5730\u5740\u5bfc\u81f4 Panic \u7684Bug\uff1b \u4fee\u590d\u4e2d\u7ee7\u94fe GOSDK \u4e2d\u548c\u5b95\u673a\u8282\u70b9\u5f02\u6b65\u5efa\u7acb\u8fde\u63a5\u5bfc\u81f4\u540e\u7eed\u4f7f\u7528\u8fde\u63a5\u65f6\u51fa\u9519\u7684Bug\uff1b \u4fee\u590d RAFT mempool \u672a\u6301\u4e45\u5316 pending nonce \u7684Bug\uff1b \u4fee\u590d\u4e2d\u7ee7\u94fe\u547d\u4ee4\u884c\u663e\u793a\u7684Bug\u3002","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#v150_1","text":"","title":"\u8de8\u94fe\u7f51\u5173V1.5.0"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#_3","text":"\u8de8\u94fe\u7f51\u5173\u91cd\u6784\uff08\u4f18\u5316\u5e8f\u53f7\u5f02\u5e38\u5904\u7406\u65b9\u5f0f\u3001\u91cd\u6784Monitor\u3001Executor\u3001Syncer\u7b49\u6a21\u5757\uff09\uff1b \u652f\u6301\u914d\u7f6e\u591a\u4e2a\u4e2d\u7ee7\u94fe\u8282\u70b9\u5e76\u81ea\u52a8\u5207\u6362\u7684\u529f\u80fd\uff0c\u4f18\u5316\u5728\u5f31\u7f51\u73af\u5883\u4e0b\u7684\u8de8\u94fe\u8f6c\u53d1\u80fd\u529b\uff1b \u8de8\u94fe\u7f51\u5173\u589e\u52a0\u8de8\u4e2d\u7ee7\u94fe\u8def\u7531\u7684Union \u6a21\u5f0f\u4e0b\u7684\u8de8\u94fe\u6d88\u606f\u4f20\u9012\u529f\u80fd\uff0c\u9002\u5e94\u5927\u89c4\u6a21\u8de8\u94fe\u573a\u666f\u4e0b\u7684\u9700\u6c42\uff1b \u8de8\u94fe\u7f51\u5173\u9002\u914d\u4e1a\u52a1\u5408\u7ea6\u529f\u80fd\uff1b","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#_4","text":"\u4fee\u590d Pier executor \u5730\u5740\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684Bug\uff1b \u4fee\u590dexecutor \u6267\u884c\u8de8\u94fe\u4ea4\u6613\u540e\u6539\u53d8 IBTP \u5185\u5bb9\u7b49Bug\uff1b \u4fee\u590d\u91cd\u6784\u8de8\u94fe\u7f51\u5173\u65e0\u6cd5\u914d\u7f6e\u63d2\u4ef6\u540d\u548c\u6253\u5370\u7248\u672c\u4fe1\u606f\u4e0d\u5b8c\u5584\u7684Bug\uff1b \u4fee\u590d\u8de8\u94fe\u7f51\u5173\u4e3b\u5907\u8282\u70b9\u5207\u6362\u65f6\u9519\u8bef\u5173\u95ed\u63d2\u4ef6\u8fdb\u7a0b\u7684Bug\uff1b","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#_5","text":"","title":"\u8fd0\u7ef4\u5de5\u5177"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#_6","text":"Goduck\u9002\u914d1.5.0\u7248\u672c\u7684pier\u548cbitxhub\uff1b","title":"\u65b0\u529f\u80fd"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#_7","text":"\u65e0","title":"\u7f3a\u9677\u4fee\u590d"},{"location":"bitxhub/changelog/bitxhub_v1.5.0/#_8","text":"\u65e0","title":"\u5176\u5b83"},{"location":"bitxhub/design/consensus_plugin/","text":"\u5171\u8bc6\u7b97\u6cd5\u63d2\u4ef6 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u529f\u80fd\u7684\u5171\u8bc6\u670d\u52a1\u3002\u8fc7\u7a0b\u4e2d\u80fd\u5b66\u4e60\u57fa\u672c\u7684\u6982\u5ff5\u548c\u5177\u4f53\u4f7f\u7528\u7ec6\u8282\u3002\u8be5\u793a\u4f8b\u5c06\u5c55\u793a\u5982\u4f55\u5feb\u901f\u3001\u8f7b\u677e\u5730**\u63a5\u5165\u81ea\u5df1\u7684\u5171\u8bc6\u7b97\u6cd5\u5230BitXHub\u4e2d\u6765**\u3002 1. \u5f00\u53d1\u8981\u6c42 \u5b89\u88c5 go1.13+ \u8bbe\u7f6e\u597d$GOPATH\u7b49\u73af\u5883 2. \u51c6\u5907 \u4e3a\u4e86\u66f4\u52a0\u4fbf\u6377\u7684\u5f00\u53d1\u5171\u8bc6\u670d\u52a1\u63a5\u5165\u5230 BitXHub \u4e2d\u6765\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u63a5\u53e3\u548c\u53c2\u6570\u3002 2.1 Order\u63a5\u53e3 \u6211\u4eec\u89c4\u5b9a\u4e86\u4e0b\u9762\u4e00\u4e9b\u5fc5\u8981\u7684\u63a5\u53e3\uff0c\u8fd9\u4e9b\u63a5\u53e3\u662f BitXHub \u4e0e\u5171\u8bc6\u670d\u52a1\u7684\u4ea4\u4e92\u63a5\u53e3\u3002 type Order interface { //\u5f00\u542f\u5171\u8bc6\u670d\u52a1 Start () error //\u505c\u6b62\u5171\u8bc6\u670d\u52a1\uff0c\u5173\u95ed\u5171\u8bc6\u670d\u52a1\u8d44\u6e90 Stop () //\u4ea4\u6613\u53d1\u9001\u5230\u5171\u8bc6\u670d\u52a1\uff0c\u5171\u8bc6\u670d\u52a1\u5c06\u5904\u7406\u5e76\u6253\u5305\u8be5\u4ea4\u6613 Prepare ( tx * pb . Transaction ) error //\u8fd4\u56de\u6253\u5305\u7684\u533a\u5757 Commit () chan * pb . Block //\u4ece\u7f51\u7edc\u63a5\u6536\u5230\u7684\u5171\u8bc6\u6d88\u606f Step ( ctx context . Context , msg [] byte ) error //\u96c6\u7fa4\u4e2d\u4ea7\u751f\u4e86\u65b0Leader\uff0c\u7cfb\u7edf\u901a\u8fc7\u8be5\u63a5\u53e3\u5224\u65ad\u5171\u8bc6\u670d\u52a1\u662f\u5426\u6b63\u5e38 Ready () bool //\u7cfb\u7edf\u4f1a\u901a\u77e5\u8be5\u63a5\u53e3\u5df2\u7ecf\u6301\u4e45\u5316\u7684\u533a\u5757\uff0c ReportState ( height uint64 , hash types . Hash ) //\u96c6\u7fa4\u4e2d\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u7684\u6700\u5c11\u8282\u70b9\u6570\u91cf\uff0c\u5982\u5728raft\u4e2d\u8981\u6c42\u6b63\u5e38\u8282\u70b9\u6570\u662fN/2+1 Quorum () uint64 //\u83b7\u53d6\u8d26\u6237\u6700\u65b0\u7684nonce GetPendingNonceByAccount ( account string ) uint64 //\u4ece\u5171\u8bc6\u5220\u9664\u6307\u5b9a\u7684\u8282\u70b9 DelNode ( delID uint64 ) error } 2.2 Config\u53c2\u6570 \u6211\u4eec\u89c4\u5b9a\u4e86\u4e0b\u9762\u4e00\u4e9b\u53c2\u6570\u53ef\u4ee5\u4eceBitXHub\u4f20\u9012\u7ed9\u5171\u8bc6\u670d\u52a1\u3002 type Config struct { Id uint64 //\u8282\u70b9ID RepoRoot string //\u6839\u8def\u5f84 StoragePath string //\u5b58\u50a8\u6587\u4ef6\u8def\u5f84 PluginPath string //\u63d2\u4ef6\u6587\u4ef6\u8def\u5f84 PeerMgr peermgr . PeerManager //\u7f51\u7edc\u6a21\u5757\u7ec4\u4ef6 PrivKey crypto . PrivateKey //\u8282\u70b9\u79c1\u94a5 Logger logrus . FieldLogger //\u65e5\u5fd7\u7ec4\u4ef6 Nodes map [ uint64 ] types . Address //\u96c6\u7fa4\u8282\u70b9\u7f51\u7edc\u5730\u5740 Applied uint64 //\u5f53\u524d\u533a\u5757\u9ad8\u5ea6 Digest string //\u5f53\u524d\u533a\u5757\u54c8\u5e0c GetTransactionFunc func ( hash types . Hash ) ( * pb . Transaction , error ) // \u83b7\u53d6\u5df2\u7ecf\u6301\u4e45\u5316\u7684\u4ea4\u6613\u51fd\u6570 GetBlockByHeight func ( height uint64 ) ( * pb . Block , error ) // \u83b7\u53d6\u6307\u5b9a\u9ad8\u5ea6\u7684\u533a\u5757 GetAccountNonce func ( address * types . Address ) uint64 // \u83b7\u53d6\u6307\u5b9a\u8d26\u6237\u7684nonce } 3. \u7a0b\u5e8f\u76ee\u7684 \u672c\u6559\u7a0b\u4ee5\u5f00\u53d1\u4e00\u4e2a\u7b80\u5355Solo\u7248\u672c\u7684\u5171\u8bc6\u7b97\u6cd5\u4e3a\u4f8b\u3002 3.1 \u5f00\u59cb\u7f16\u5199\u4f60\u7684\u7a0b\u5e8f \u9996\u5148\u9009\u62e9\u4f60\u7684\u5de5\u7a0b\u76ee\u5f55\uff0c\u6309\u7167\u6b63\u5e38\u7684GO\u7a0b\u5e8f\u7684\u6d41\u7a0b\u5efa\u7acb\u9879\u76ee $ go version // \u786e\u8ba4\u4f60\u5b89\u88c5\u7684GO\u7248\u672c $ mkdir ${ YOUR_PROJECT } $ cd ${ YOUR_PROJECT } $ go mod init 3.2 Node\u5bf9\u8c61 \u9996\u5148\u521b\u5efa\u4e00\u4e2a node.go \u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u5171\u8bc6Plugin\u7684\u6838\u5fc3\u548c\u5165\u53e3\uff0c\u6765\u770b\u770b Node \u5177\u4f53\u7ed3\u6784 type Node struct { ID uint64 commitC chan * pb . CommitEvent // block channel logger logrus . FieldLogger // logger mempool mempool . MemPool // transaction pool proposeC chan * raftproto . RequestBatch // proposed listenReadyBlock, input channel stateC chan * mempool . ChainState txCache * mempool . TxCache // cache the transactions received from api batchMgr * etcdraft . BatchTimer lastExec uint64 // the index of the last-applied block packSize int // maximum number of transaction packages blockTick time . Duration // block packed period peerMgr peermgr . PeerManager // network manager ctx context . Context cancel context . CancelFunc sync . RWMutex } \u7136\u540e\u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2a Order \u7684\u5b9e\u4f8b\u5316\u7684\u63a5\u53e3\uff08\u7c7b\u4f3c\u4e8e\u6784\u9020\u51fd\u6570\uff09\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a func NewNode ( opts ... order . Option ) ( order . Order , error ) { //\u5904\u7406Order\u53c2\u6570 config , err := order . GenerateConfig ( opts ... ) if err != nil { return nil , fmt . Errorf ( \"generate config: %w\" , err ) } ctx , cancel := context . WithCancel ( context . Background ()) //\u8bfb\u53d6mempool\u76f8\u5173\u914d\u7f6e\uff0cbatchTimeout\u51fa\u5757\u65f6\u95f4\uff0cmemConfig\u914d\u7f6e batchTimeout , memConfig , err := generateSoloConfig ( config . RepoRoot ) mempoolConf := & mempool . Config { ID : config . ID , //\u8282\u70b9ID ChainHeight : config . Applied , //\u5f53\u524d\u533a\u5757\u9ad8\u5ea6 Logger : config . Logger , //\u65e5\u5fd7\u7ec4\u4ef6 StoragePath : config . StoragePath , //\u5b58\u50a8\u8def\u5f84 GetAccountNonce : config . GetAccountNonce , // \u83b7\u53d6\u8d26\u6237nonce BatchSize : memConfig . BatchSize , //\u533a\u5757\u6700\u5927\u4ea4\u6613\u6570 PoolSize : memConfig . PoolSize , //\u4ea4\u6613\u6c60\u5bb9\u7eb3\u6700\u5927\u4ea4\u6613\u6570 TxSliceSize : memConfig . TxSliceSize , //\u5355\u6b21\u5e7f\u64ad\u6700\u5927\u4ea4\u6613\u6570 TxSliceTimeout : memConfig . TxSliceTimeout , //\u5355\u6b21\u5e7f\u64ad\u4ea4\u6613\u95f4\u9694 } batchC := make ( chan * raftproto . RequestBatch ) //\u5b9e\u4f8b\u5316mempool\uff0cmempool\u7684\u4f5c\u7528\u662f\u4ea4\u6613\u6392\u5e8f mempoolInst , err := mempool . NewMempool ( mempoolConf ) if err != nil { return nil , fmt . Errorf ( \"create mempool instance: %w\" , err ) } //\u5b9e\u4f8b\u5316txCache\u4ea4\u6613\u6c60 txCache := mempool . NewTxCache ( mempoolConf . TxSliceTimeout , mempoolConf . TxSliceSize , config . Logger ) batchTimerMgr := etcdraft . NewTimer ( batchTimeout , config . Logger ) soloNode := & Node { ID : config . ID , commitC : make ( chan * pb . CommitEvent , 1024 ), stateC : make ( chan * mempool . ChainState ), lastExec : config . Applied , mempool : mempoolInst , txCache : txCache , batchMgr : batchTimerMgr , peerMgr : config . PeerMgr , proposeC : batchC , logger : config . Logger , ctx : ctx , cancel : cancel , } soloNode . logger . Infof ( \"SOLO lastExec = %d\" , soloNode . lastExec ) soloNode . logger . Infof ( \"SOLO batch timeout = %v\" , batchTimeout ) return soloNode , nil } 3.3 Node\u4e3b\u8981\u65b9\u6cd5 \u901a\u8fc7\u63cf\u8ff0Node\u7684\u4e3b\u8981\u65b9\u6cd5\uff0c\u4ecb\u7ecdpending\u7684\u4ea4\u6613\u662f\u5982\u4f55\u88ab\u6253\u5305\u5230\u533a\u5757\u4e2d\u4ee5\u53ca\u5982\u4f55\u4e0e BitXHub \u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u3002 3.3.1 Start\u65b9\u6cd5 \u529f\u80fd\uff1a\u5b9a\u65f6\u5728\u4ea4\u6613\u6c60\u4e2d\u626b\u63cf\u4ea4\u6613\u5e76\u51fa\u5757\u3002 func ( n * Node ) Start () error { //\u4ea4\u6613\u6c60\u6253\u5305\u533a\u5757 go n . txCache . ListenEvent () //solo\u76d1\u542c\u65b0\u533a\u5757 go n . listenReadyBlock () return nil } // Schedule to collect txs to the listenReadyBlock channel func ( n * Node ) listenReadyBlock () { go func () { for { select { case proposal := <- n . proposeC : n . logger . WithFields ( logrus . Fields { \"proposal_height\" : proposal . Height , \"tx_count\" : len ( proposal . TxList ), }). Debugf ( \"Receive proposal from mempool\" ) if proposal . Height != n . lastExec + 1 { n . logger . Warningf ( \"Expects to execute seq=%d, but get seq=%d, ignore it\" , n . lastExec + 1 , proposal . Height ) return } n . logger . Infof ( \"======== Call execute, height=%d\" , proposal . Height ) block := & pb . Block { BlockHeader : & pb . BlockHeader { Version : [] byte ( \"1.0.0\" ), Number : proposal . Height , Timestamp : time . Now (). UnixNano (), }, Transactions : proposal . TxList , } localList := make ([] bool , len ( proposal . TxList )) for i := 0 ; i < len ( proposal . TxList ); i ++ { localList [ i ] = true } executeEvent := & pb . CommitEvent { Block : block , LocalList : localList , } n . commitC <- executeEvent n . lastExec ++ } } }() for { select { case <- n . ctx . Done (): n . logger . Info ( \"----- Exit listen ready block loop -----\" ) return case txSet := <- n . txCache . TxSetC : // start batch timer when this node receives the first transaction if ! n . batchMgr . IsBatchTimerActive () { n . batchMgr . StartBatchTimer () } if batch := n . mempool . ProcessTransactions ( txSet . TxList , true , true ); batch != nil { n . batchMgr . StopBatchTimer () n . proposeC <- batch } case state := <- n . stateC : //\u6bcf\u5341\u4e2a\u533a\u5757\u505a\u4e00\u4e2aCheck Point if state . Height % 10 == 0 { n . logger . WithFields ( logrus . Fields { \"height\" : state . Height , \"hash\" : state . BlockHash . String (), }). Info ( \"Report checkpoint\" ) } n . mempool . CommitTransactions ( state ) case <- n . batchMgr . BatchTimeoutEvent (): n . batchMgr . StopBatchTimer () n . logger . Debug ( \"Batch timer expired, try to create a batch\" ) if n . mempool . HasPendingRequest () { if batch := n . mempool . GenerateBlock (); batch != nil { n . postProposal ( batch ) } } else { n . logger . Debug ( \"The length of priorityIndex is 0, skip the batch timer\" ) } } } } 3.3.2 Stop\u65b9\u6cd5 \u529f\u80fd\uff1a\u505c\u6b62\u5171\u8bc6\uff0c\u91ca\u653e\u5171\u8bc6\u76f8\u5173\u8d44\u6e90\u3002 func ( n * Node ) Stop () { n . cancel () } 3.3.3 Prepare\u65b9\u6cd5 \u529f\u80fd\uff1a\u4ece BitXHub \u7cfb\u7edf\u4e2d\u4f20\u5165\u4ea4\u6613\uff0c\u6536\u96c6\u8fdb\u4ea4\u6613\u6c60\u3002 func ( n * Node ) Prepare ( tx * pb . Transaction ) error { //\u5224\u65ad\u5f53\u524d\u5171\u8bc6\u662f\u5426\u6b63\u5e38 if err := n . Ready (); err != nil { return err } //\u4ea4\u6613\u8fdb\u5165\u4ea4\u6613\u6c60 n . txCache . RecvTxC <- tx return nil } 3.3.4 Commit\u65b9\u6cd5 \u529f\u80fd\uff1a\u8fd4\u56de\u65b0\u533a\u5757\u7684 channel \u3002 func ( n * Node ) Commit () chan * pb . Block { return n . commitC } 3.3.5 Step\u65b9\u6cd5 \u529f\u80fd\uff1a\u901a\u8fc7\u8be5\u63a5\u53e3\u63a5\u6536\u5171\u8bc6\u7684\u7f51\u7edc\u6d88\u606f\u3002 //\u7531\u4e8e\u793a\u4f8b\u662fSolo\u7684\u7248\u672c\uff0c\u6545\u5177\u4f53\u4e0d\u5b9e\u73b0\u8be5\u65b9\u6cd5 func ( n * Node ) Step ( ctx context . Context , msg [] byte ) error { return nil } 3.3.6 Ready\u65b9\u6cd5 \u529f\u80fd\uff1a\u5224\u65ad\u5171\u8bc6\u662f\u5426\u5b8c\u6210\uff0cLeader\u662f\u5426\u5b8c\u6210\u9009\u4e3e\u3002 //\u7531\u4e8e\u793a\u4f8b\u662fSolo\u7684\u7248\u672c\uff0c\u5355\u8282\u70b9\u76f4\u63a5\u8fd4\u56deTrue func ( n * Node ) Ready () bool { return true } 3.3.7 ReportState\u65b9\u6cd5 \u529f\u80fd\uff1a\u65b0\u533a\u5757\u88ab\u6301\u4e45\u5316\u540e\uff0c BitXHub \u4f1a\u8c03\u7528\u8be5\u63a5\u53e3\u901a\u77e5\u5171\u8bc6\u670d\u52a1 func ( n * Node ) ReportState ( height uint64 , blockHash * types . Hash , txHashList [] * types . Hash ) { state := & mempool . ChainState { Height : height , BlockHash : blockHash , TxHashList : txHashList , } //\u7ed3\u5408listenReadyBlock()\uff0c\u8d26\u672c\u843d\u76d8\u533a\u5757\u540e\u901a\u77e5\u5171\u8bc6\u6e05\u7406\u76f8\u5173\u8d44\u6e90 n . stateC <- state } 3.3.8 Quorum\u65b9\u6cd5 \u529f\u80fd\uff1a\u96c6\u7fa4\u4e2d\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u7684\u6700\u5c11\u8282\u70b9\u6570\u91cf\uff08\u6bd4\u5982\u5728raft\u4e2d\u8981\u6c42\u6b63\u5e38\u8282\u70b9\u6570\u662fN/2+1\uff09\u3002 //\u7531\u4e8e\u793a\u4f8b\u662fSolo\u7684\u7248\u672c\uff0c\u76f4\u63a5\u8fd4\u56de1 func ( n * Node ) Quorum () uint64 { return 1 } 3.3.9 GetPendingNonceByAccount\u65b9\u6cd5 \u529f\u80fd\uff1a\u83b7\u53d6\u6307\u5b9a\u8d26\u6237\u6700\u65b0\u7684nonce\u503c\u3002 func ( n * Node ) GetPendingNonceByAccount ( account string ) uint64 { // \u76f4\u63a5\u4ece\u4ea4\u6613\u6c60\u4e2d\u83b7\u53d6\u5f53\u524d\u8d26\u6237\u7684\u6700\u65b0nonce\uff0c\u7531\u4e8e\u4ea4\u6613\u6c60\u4e2d\u53ef\u80fd\u6709\u8be5\u8d26\u53f7\u7684\u591a\u7b14\u4ea4\u6613\uff0c // \u9700\u8981\u628a\u7b26\u5408\u6761\u4ef6\u7684nonce\u5237\u9009\u51fa\u3002 return n . mempool . GetPendingNonceByAccount ( account ) } 3.3.10 DelNode\u65b9\u6cd5 \u529f\u80fd\uff1a\u5220\u9664\u6307\u5b9a\u7684\u5171\u8bc6\u8282\u70b9\u3002 //\u7531\u4e8e\u793a\u4f8b\u662fSolo\u7684\u7248\u672c\uff0c\u76f4\u63a5\u8fd4\u56denil func ( n * Node ) DelNode ( delID uint64 ) error { return nil } 4. \u63a5\u5165\u5171\u8bc6\u7b97\u6cd5 4.1 \u914d\u7f6e\u6587\u4ef6 \u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e order.toml \u6587\u4ef6\uff0c\u81ea\u5b9a\u4e49\u4f60\u7684\u5171\u8bc6\u7b97\u6cd5\u3002 [solo] batch_timeout = \"0.3s\" # Block packaging time period. [solo.mempool] batch_size = 200 # How many transactions should the primary pack. pool_size = 50000 # How many transactions could the txPool stores in total. tx_slice_size = 10 # How many transactions should the node broadcast at once tx_slice_timeout = \"0.1s\" # Node broadcasts transactions if there are cached transactions, although set_size isn't reached yet 4.2 \u9879\u76ee\u7ed3\u6784 \u8be5\u9879\u76ee\u4e3aBitXHub\u63d0\u4f9b\u5171\u8bc6\u7b97\u6cd5\u7684\u63d2\u4ef6\u5316\uff0c\u5177\u4f53\u9879\u76ee\u7ed3\u6784\u5982\u4e0b\uff1a ./ \u251c\u2500\u2500 Makefile //\u7f16\u8bd1\u6587\u4ef6 \u251c\u2500\u2500 README.md \u251c\u2500\u2500 build \u2502 \u2514\u2500\u2500 rbft.so //\u7f16\u8bd1\u540e\u7684\u5171\u8bc6\u7b97\u6cd5\u4e8c\u8fdb\u5236\u63d2\u4ef6 \u251c\u2500\u2500 go.mod \u251c\u2500\u2500 go.sum \u251c\u2500\u2500 order.toml //\u5171\u8bc6\u914d\u7f6e\u6587\u4ef6 \u2514\u2500\u2500 rbft //\u5171\u8bc6\u7b97\u6cd5\u4ee3\u7801 \u251c\u2500\u2500 config.go \u251c\u2500\u2500 node.go \u2514\u2500\u2500 stack.go \u5176\u4e2d\u6ce8\u610f\u5728 go.mod \u4e2d\u9700\u8981\u5f15\u7528BitXHub\u9879\u76ee\u6e90\u7801\uff0c\u9700\u8981\u8ba9\u8be5\u63d2\u4ef6\u9879\u76ee\u4e0eBitXHub\u5728\u540c\u4e00\u76ee\u5f55\u4e0b\uff08\u5efa\u8bae\u5728$GOPATH\u8def\u5f84\u4e0b\uff09\u3002 replace github.com/meshplus/bitxhub => ../bitxhub/ 4.3 \u7f16\u8bd1Plugin \u6211\u4eec\u91c7\u7528GO\u8bed\u8a00\u63d0\u4f9b\u7684\u63d2\u4ef6\u6a21\u5f0f\uff0c\u5b9e\u73b0 BitXHub \u5bf9\u4e8ePlugin\u7684\u52a8\u6001\u52a0\u8f7d\u3002 \u7f16\u5199 Makefile \u7f16\u8bd1\u6587\u4ef6\uff1a SHELL : = /bin/bash CURRENT_PATH = $( shell pwd ) GO = GO111MODULE = on go plugin: @mkdir -p build $( GO ) build --buildmode = plugin -o build/rbft.so rbft/*.go \u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u80fd\u591f\u5f97\u5230 rbft.so \u6587\u4ef6\u3002 $ make plugin \u4fee\u6539\u8282\u70b9\u7684 bitxhub.toml [order] plugin = \"plugins/rbft.so\" \u5c06\u4f60\u7f16\u5199\u7684\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\u548c order.toml \u6587\u4ef6\uff0c\u5206\u522b\u653e\u5230\u8282\u70b9\u7684plugins\u6587\u4ef6\u5939\u548c\u914d\u7f6e\u6587\u4ef6\u4e0b\u3002 ./ \u251c\u2500\u2500 api \u251c\u2500\u2500 bitxhub.toml \u251c\u2500\u2500 certs \u2502 \u251c\u2500\u2500 agency.cert \u2502 \u251c\u2500\u2500 ca.cert \u2502 \u251c\u2500\u2500 node.cert \u2502 \u2514\u2500\u2500 node.priv \u251c\u2500\u2500 key.json \u251c\u2500\u2500 logs \u251c\u2500\u2500 network.toml \u251c\u2500\u2500 order.toml //\u5171\u8bc6\u7b97\u6cd5\u914d\u7f6e\u6587\u4ef6 \u251c\u2500\u2500 plugins \u2502 \u251c\u2500\u2500 rbft.so //\u5171\u8bc6\u7b97\u6cd5\u63d2\u4ef6 \u251c\u2500\u2500 start.sh \u2514\u2500\u2500 storage \u7ed3\u5408\u6211\u4eec\u63d0\u4f9b\u7684 BitXHub \u4e2d\u7ee7\u94fe\uff0c\u5c31\u80fd\u63a5\u5165\u5230\u8de8\u94fe\u5e73\u53f0\u6765\u3002","title":"\u5171\u8bc6\u7b97\u6cd5\u63d2\u4ef6\u65b9\u6848"},{"location":"bitxhub/design/consensus_plugin/#_1","text":"\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u529f\u80fd\u7684\u5171\u8bc6\u670d\u52a1\u3002\u8fc7\u7a0b\u4e2d\u80fd\u5b66\u4e60\u57fa\u672c\u7684\u6982\u5ff5\u548c\u5177\u4f53\u4f7f\u7528\u7ec6\u8282\u3002\u8be5\u793a\u4f8b\u5c06\u5c55\u793a\u5982\u4f55\u5feb\u901f\u3001\u8f7b\u677e\u5730**\u63a5\u5165\u81ea\u5df1\u7684\u5171\u8bc6\u7b97\u6cd5\u5230BitXHub\u4e2d\u6765**\u3002","title":"\u5171\u8bc6\u7b97\u6cd5\u63d2\u4ef6"},{"location":"bitxhub/design/consensus_plugin/#1","text":"\u5b89\u88c5 go1.13+ \u8bbe\u7f6e\u597d$GOPATH\u7b49\u73af\u5883","title":"1. \u5f00\u53d1\u8981\u6c42"},{"location":"bitxhub/design/consensus_plugin/#2","text":"\u4e3a\u4e86\u66f4\u52a0\u4fbf\u6377\u7684\u5f00\u53d1\u5171\u8bc6\u670d\u52a1\u63a5\u5165\u5230 BitXHub \u4e2d\u6765\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u63a5\u53e3\u548c\u53c2\u6570\u3002","title":"2. \u51c6\u5907"},{"location":"bitxhub/design/consensus_plugin/#21-order","text":"\u6211\u4eec\u89c4\u5b9a\u4e86\u4e0b\u9762\u4e00\u4e9b\u5fc5\u8981\u7684\u63a5\u53e3\uff0c\u8fd9\u4e9b\u63a5\u53e3\u662f BitXHub \u4e0e\u5171\u8bc6\u670d\u52a1\u7684\u4ea4\u4e92\u63a5\u53e3\u3002 type Order interface { //\u5f00\u542f\u5171\u8bc6\u670d\u52a1 Start () error //\u505c\u6b62\u5171\u8bc6\u670d\u52a1\uff0c\u5173\u95ed\u5171\u8bc6\u670d\u52a1\u8d44\u6e90 Stop () //\u4ea4\u6613\u53d1\u9001\u5230\u5171\u8bc6\u670d\u52a1\uff0c\u5171\u8bc6\u670d\u52a1\u5c06\u5904\u7406\u5e76\u6253\u5305\u8be5\u4ea4\u6613 Prepare ( tx * pb . Transaction ) error //\u8fd4\u56de\u6253\u5305\u7684\u533a\u5757 Commit () chan * pb . Block //\u4ece\u7f51\u7edc\u63a5\u6536\u5230\u7684\u5171\u8bc6\u6d88\u606f Step ( ctx context . Context , msg [] byte ) error //\u96c6\u7fa4\u4e2d\u4ea7\u751f\u4e86\u65b0Leader\uff0c\u7cfb\u7edf\u901a\u8fc7\u8be5\u63a5\u53e3\u5224\u65ad\u5171\u8bc6\u670d\u52a1\u662f\u5426\u6b63\u5e38 Ready () bool //\u7cfb\u7edf\u4f1a\u901a\u77e5\u8be5\u63a5\u53e3\u5df2\u7ecf\u6301\u4e45\u5316\u7684\u533a\u5757\uff0c ReportState ( height uint64 , hash types . Hash ) //\u96c6\u7fa4\u4e2d\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u7684\u6700\u5c11\u8282\u70b9\u6570\u91cf\uff0c\u5982\u5728raft\u4e2d\u8981\u6c42\u6b63\u5e38\u8282\u70b9\u6570\u662fN/2+1 Quorum () uint64 //\u83b7\u53d6\u8d26\u6237\u6700\u65b0\u7684nonce GetPendingNonceByAccount ( account string ) uint64 //\u4ece\u5171\u8bc6\u5220\u9664\u6307\u5b9a\u7684\u8282\u70b9 DelNode ( delID uint64 ) error }","title":"2.1 Order\u63a5\u53e3"},{"location":"bitxhub/design/consensus_plugin/#22-config","text":"\u6211\u4eec\u89c4\u5b9a\u4e86\u4e0b\u9762\u4e00\u4e9b\u53c2\u6570\u53ef\u4ee5\u4eceBitXHub\u4f20\u9012\u7ed9\u5171\u8bc6\u670d\u52a1\u3002 type Config struct { Id uint64 //\u8282\u70b9ID RepoRoot string //\u6839\u8def\u5f84 StoragePath string //\u5b58\u50a8\u6587\u4ef6\u8def\u5f84 PluginPath string //\u63d2\u4ef6\u6587\u4ef6\u8def\u5f84 PeerMgr peermgr . PeerManager //\u7f51\u7edc\u6a21\u5757\u7ec4\u4ef6 PrivKey crypto . PrivateKey //\u8282\u70b9\u79c1\u94a5 Logger logrus . FieldLogger //\u65e5\u5fd7\u7ec4\u4ef6 Nodes map [ uint64 ] types . Address //\u96c6\u7fa4\u8282\u70b9\u7f51\u7edc\u5730\u5740 Applied uint64 //\u5f53\u524d\u533a\u5757\u9ad8\u5ea6 Digest string //\u5f53\u524d\u533a\u5757\u54c8\u5e0c GetTransactionFunc func ( hash types . Hash ) ( * pb . Transaction , error ) // \u83b7\u53d6\u5df2\u7ecf\u6301\u4e45\u5316\u7684\u4ea4\u6613\u51fd\u6570 GetBlockByHeight func ( height uint64 ) ( * pb . Block , error ) // \u83b7\u53d6\u6307\u5b9a\u9ad8\u5ea6\u7684\u533a\u5757 GetAccountNonce func ( address * types . Address ) uint64 // \u83b7\u53d6\u6307\u5b9a\u8d26\u6237\u7684nonce }","title":"2.2 Config\u53c2\u6570"},{"location":"bitxhub/design/consensus_plugin/#3","text":"\u672c\u6559\u7a0b\u4ee5\u5f00\u53d1\u4e00\u4e2a\u7b80\u5355Solo\u7248\u672c\u7684\u5171\u8bc6\u7b97\u6cd5\u4e3a\u4f8b\u3002","title":"3. \u7a0b\u5e8f\u76ee\u7684"},{"location":"bitxhub/design/consensus_plugin/#31","text":"\u9996\u5148\u9009\u62e9\u4f60\u7684\u5de5\u7a0b\u76ee\u5f55\uff0c\u6309\u7167\u6b63\u5e38\u7684GO\u7a0b\u5e8f\u7684\u6d41\u7a0b\u5efa\u7acb\u9879\u76ee $ go version // \u786e\u8ba4\u4f60\u5b89\u88c5\u7684GO\u7248\u672c $ mkdir ${ YOUR_PROJECT } $ cd ${ YOUR_PROJECT } $ go mod init","title":"3.1 \u5f00\u59cb\u7f16\u5199\u4f60\u7684\u7a0b\u5e8f"},{"location":"bitxhub/design/consensus_plugin/#32-node","text":"\u9996\u5148\u521b\u5efa\u4e00\u4e2a node.go \u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u5171\u8bc6Plugin\u7684\u6838\u5fc3\u548c\u5165\u53e3\uff0c\u6765\u770b\u770b Node \u5177\u4f53\u7ed3\u6784 type Node struct { ID uint64 commitC chan * pb . CommitEvent // block channel logger logrus . FieldLogger // logger mempool mempool . MemPool // transaction pool proposeC chan * raftproto . RequestBatch // proposed listenReadyBlock, input channel stateC chan * mempool . ChainState txCache * mempool . TxCache // cache the transactions received from api batchMgr * etcdraft . BatchTimer lastExec uint64 // the index of the last-applied block packSize int // maximum number of transaction packages blockTick time . Duration // block packed period peerMgr peermgr . PeerManager // network manager ctx context . Context cancel context . CancelFunc sync . RWMutex } \u7136\u540e\u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2a Order \u7684\u5b9e\u4f8b\u5316\u7684\u63a5\u53e3\uff08\u7c7b\u4f3c\u4e8e\u6784\u9020\u51fd\u6570\uff09\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a func NewNode ( opts ... order . Option ) ( order . Order , error ) { //\u5904\u7406Order\u53c2\u6570 config , err := order . GenerateConfig ( opts ... ) if err != nil { return nil , fmt . Errorf ( \"generate config: %w\" , err ) } ctx , cancel := context . WithCancel ( context . Background ()) //\u8bfb\u53d6mempool\u76f8\u5173\u914d\u7f6e\uff0cbatchTimeout\u51fa\u5757\u65f6\u95f4\uff0cmemConfig\u914d\u7f6e batchTimeout , memConfig , err := generateSoloConfig ( config . RepoRoot ) mempoolConf := & mempool . Config { ID : config . ID , //\u8282\u70b9ID ChainHeight : config . Applied , //\u5f53\u524d\u533a\u5757\u9ad8\u5ea6 Logger : config . Logger , //\u65e5\u5fd7\u7ec4\u4ef6 StoragePath : config . StoragePath , //\u5b58\u50a8\u8def\u5f84 GetAccountNonce : config . GetAccountNonce , // \u83b7\u53d6\u8d26\u6237nonce BatchSize : memConfig . BatchSize , //\u533a\u5757\u6700\u5927\u4ea4\u6613\u6570 PoolSize : memConfig . PoolSize , //\u4ea4\u6613\u6c60\u5bb9\u7eb3\u6700\u5927\u4ea4\u6613\u6570 TxSliceSize : memConfig . TxSliceSize , //\u5355\u6b21\u5e7f\u64ad\u6700\u5927\u4ea4\u6613\u6570 TxSliceTimeout : memConfig . TxSliceTimeout , //\u5355\u6b21\u5e7f\u64ad\u4ea4\u6613\u95f4\u9694 } batchC := make ( chan * raftproto . RequestBatch ) //\u5b9e\u4f8b\u5316mempool\uff0cmempool\u7684\u4f5c\u7528\u662f\u4ea4\u6613\u6392\u5e8f mempoolInst , err := mempool . NewMempool ( mempoolConf ) if err != nil { return nil , fmt . Errorf ( \"create mempool instance: %w\" , err ) } //\u5b9e\u4f8b\u5316txCache\u4ea4\u6613\u6c60 txCache := mempool . NewTxCache ( mempoolConf . TxSliceTimeout , mempoolConf . TxSliceSize , config . Logger ) batchTimerMgr := etcdraft . NewTimer ( batchTimeout , config . Logger ) soloNode := & Node { ID : config . ID , commitC : make ( chan * pb . CommitEvent , 1024 ), stateC : make ( chan * mempool . ChainState ), lastExec : config . Applied , mempool : mempoolInst , txCache : txCache , batchMgr : batchTimerMgr , peerMgr : config . PeerMgr , proposeC : batchC , logger : config . Logger , ctx : ctx , cancel : cancel , } soloNode . logger . Infof ( \"SOLO lastExec = %d\" , soloNode . lastExec ) soloNode . logger . Infof ( \"SOLO batch timeout = %v\" , batchTimeout ) return soloNode , nil }","title":"3.2 Node\u5bf9\u8c61"},{"location":"bitxhub/design/consensus_plugin/#33-node","text":"\u901a\u8fc7\u63cf\u8ff0Node\u7684\u4e3b\u8981\u65b9\u6cd5\uff0c\u4ecb\u7ecdpending\u7684\u4ea4\u6613\u662f\u5982\u4f55\u88ab\u6253\u5305\u5230\u533a\u5757\u4e2d\u4ee5\u53ca\u5982\u4f55\u4e0e BitXHub \u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u3002","title":"3.3 Node\u4e3b\u8981\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#331-start","text":"\u529f\u80fd\uff1a\u5b9a\u65f6\u5728\u4ea4\u6613\u6c60\u4e2d\u626b\u63cf\u4ea4\u6613\u5e76\u51fa\u5757\u3002 func ( n * Node ) Start () error { //\u4ea4\u6613\u6c60\u6253\u5305\u533a\u5757 go n . txCache . ListenEvent () //solo\u76d1\u542c\u65b0\u533a\u5757 go n . listenReadyBlock () return nil } // Schedule to collect txs to the listenReadyBlock channel func ( n * Node ) listenReadyBlock () { go func () { for { select { case proposal := <- n . proposeC : n . logger . WithFields ( logrus . Fields { \"proposal_height\" : proposal . Height , \"tx_count\" : len ( proposal . TxList ), }). Debugf ( \"Receive proposal from mempool\" ) if proposal . Height != n . lastExec + 1 { n . logger . Warningf ( \"Expects to execute seq=%d, but get seq=%d, ignore it\" , n . lastExec + 1 , proposal . Height ) return } n . logger . Infof ( \"======== Call execute, height=%d\" , proposal . Height ) block := & pb . Block { BlockHeader : & pb . BlockHeader { Version : [] byte ( \"1.0.0\" ), Number : proposal . Height , Timestamp : time . Now (). UnixNano (), }, Transactions : proposal . TxList , } localList := make ([] bool , len ( proposal . TxList )) for i := 0 ; i < len ( proposal . TxList ); i ++ { localList [ i ] = true } executeEvent := & pb . CommitEvent { Block : block , LocalList : localList , } n . commitC <- executeEvent n . lastExec ++ } } }() for { select { case <- n . ctx . Done (): n . logger . Info ( \"----- Exit listen ready block loop -----\" ) return case txSet := <- n . txCache . TxSetC : // start batch timer when this node receives the first transaction if ! n . batchMgr . IsBatchTimerActive () { n . batchMgr . StartBatchTimer () } if batch := n . mempool . ProcessTransactions ( txSet . TxList , true , true ); batch != nil { n . batchMgr . StopBatchTimer () n . proposeC <- batch } case state := <- n . stateC : //\u6bcf\u5341\u4e2a\u533a\u5757\u505a\u4e00\u4e2aCheck Point if state . Height % 10 == 0 { n . logger . WithFields ( logrus . Fields { \"height\" : state . Height , \"hash\" : state . BlockHash . String (), }). Info ( \"Report checkpoint\" ) } n . mempool . CommitTransactions ( state ) case <- n . batchMgr . BatchTimeoutEvent (): n . batchMgr . StopBatchTimer () n . logger . Debug ( \"Batch timer expired, try to create a batch\" ) if n . mempool . HasPendingRequest () { if batch := n . mempool . GenerateBlock (); batch != nil { n . postProposal ( batch ) } } else { n . logger . Debug ( \"The length of priorityIndex is 0, skip the batch timer\" ) } } } }","title":"3.3.1 Start\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#332-stop","text":"\u529f\u80fd\uff1a\u505c\u6b62\u5171\u8bc6\uff0c\u91ca\u653e\u5171\u8bc6\u76f8\u5173\u8d44\u6e90\u3002 func ( n * Node ) Stop () { n . cancel () }","title":"3.3.2 Stop\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#333-prepare","text":"\u529f\u80fd\uff1a\u4ece BitXHub \u7cfb\u7edf\u4e2d\u4f20\u5165\u4ea4\u6613\uff0c\u6536\u96c6\u8fdb\u4ea4\u6613\u6c60\u3002 func ( n * Node ) Prepare ( tx * pb . Transaction ) error { //\u5224\u65ad\u5f53\u524d\u5171\u8bc6\u662f\u5426\u6b63\u5e38 if err := n . Ready (); err != nil { return err } //\u4ea4\u6613\u8fdb\u5165\u4ea4\u6613\u6c60 n . txCache . RecvTxC <- tx return nil }","title":"3.3.3 Prepare\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#334-commit","text":"\u529f\u80fd\uff1a\u8fd4\u56de\u65b0\u533a\u5757\u7684 channel \u3002 func ( n * Node ) Commit () chan * pb . Block { return n . commitC }","title":"3.3.4 Commit\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#335-step","text":"\u529f\u80fd\uff1a\u901a\u8fc7\u8be5\u63a5\u53e3\u63a5\u6536\u5171\u8bc6\u7684\u7f51\u7edc\u6d88\u606f\u3002 //\u7531\u4e8e\u793a\u4f8b\u662fSolo\u7684\u7248\u672c\uff0c\u6545\u5177\u4f53\u4e0d\u5b9e\u73b0\u8be5\u65b9\u6cd5 func ( n * Node ) Step ( ctx context . Context , msg [] byte ) error { return nil }","title":"3.3.5 Step\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#336-ready","text":"\u529f\u80fd\uff1a\u5224\u65ad\u5171\u8bc6\u662f\u5426\u5b8c\u6210\uff0cLeader\u662f\u5426\u5b8c\u6210\u9009\u4e3e\u3002 //\u7531\u4e8e\u793a\u4f8b\u662fSolo\u7684\u7248\u672c\uff0c\u5355\u8282\u70b9\u76f4\u63a5\u8fd4\u56deTrue func ( n * Node ) Ready () bool { return true }","title":"3.3.6 Ready\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#337-reportstate","text":"\u529f\u80fd\uff1a\u65b0\u533a\u5757\u88ab\u6301\u4e45\u5316\u540e\uff0c BitXHub \u4f1a\u8c03\u7528\u8be5\u63a5\u53e3\u901a\u77e5\u5171\u8bc6\u670d\u52a1 func ( n * Node ) ReportState ( height uint64 , blockHash * types . Hash , txHashList [] * types . Hash ) { state := & mempool . ChainState { Height : height , BlockHash : blockHash , TxHashList : txHashList , } //\u7ed3\u5408listenReadyBlock()\uff0c\u8d26\u672c\u843d\u76d8\u533a\u5757\u540e\u901a\u77e5\u5171\u8bc6\u6e05\u7406\u76f8\u5173\u8d44\u6e90 n . stateC <- state }","title":"3.3.7 ReportState\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#338-quorum","text":"\u529f\u80fd\uff1a\u96c6\u7fa4\u4e2d\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u7684\u6700\u5c11\u8282\u70b9\u6570\u91cf\uff08\u6bd4\u5982\u5728raft\u4e2d\u8981\u6c42\u6b63\u5e38\u8282\u70b9\u6570\u662fN/2+1\uff09\u3002 //\u7531\u4e8e\u793a\u4f8b\u662fSolo\u7684\u7248\u672c\uff0c\u76f4\u63a5\u8fd4\u56de1 func ( n * Node ) Quorum () uint64 { return 1 }","title":"3.3.8 Quorum\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#339-getpendingnoncebyaccount","text":"\u529f\u80fd\uff1a\u83b7\u53d6\u6307\u5b9a\u8d26\u6237\u6700\u65b0\u7684nonce\u503c\u3002 func ( n * Node ) GetPendingNonceByAccount ( account string ) uint64 { // \u76f4\u63a5\u4ece\u4ea4\u6613\u6c60\u4e2d\u83b7\u53d6\u5f53\u524d\u8d26\u6237\u7684\u6700\u65b0nonce\uff0c\u7531\u4e8e\u4ea4\u6613\u6c60\u4e2d\u53ef\u80fd\u6709\u8be5\u8d26\u53f7\u7684\u591a\u7b14\u4ea4\u6613\uff0c // \u9700\u8981\u628a\u7b26\u5408\u6761\u4ef6\u7684nonce\u5237\u9009\u51fa\u3002 return n . mempool . GetPendingNonceByAccount ( account ) }","title":"3.3.9 GetPendingNonceByAccount\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#3310-delnode","text":"\u529f\u80fd\uff1a\u5220\u9664\u6307\u5b9a\u7684\u5171\u8bc6\u8282\u70b9\u3002 //\u7531\u4e8e\u793a\u4f8b\u662fSolo\u7684\u7248\u672c\uff0c\u76f4\u63a5\u8fd4\u56denil func ( n * Node ) DelNode ( delID uint64 ) error { return nil }","title":"3.3.10 DelNode\u65b9\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#4","text":"","title":"4. \u63a5\u5165\u5171\u8bc6\u7b97\u6cd5"},{"location":"bitxhub/design/consensus_plugin/#41","text":"\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e order.toml \u6587\u4ef6\uff0c\u81ea\u5b9a\u4e49\u4f60\u7684\u5171\u8bc6\u7b97\u6cd5\u3002 [solo] batch_timeout = \"0.3s\" # Block packaging time period. [solo.mempool] batch_size = 200 # How many transactions should the primary pack. pool_size = 50000 # How many transactions could the txPool stores in total. tx_slice_size = 10 # How many transactions should the node broadcast at once tx_slice_timeout = \"0.1s\" # Node broadcasts transactions if there are cached transactions, although set_size isn't reached yet","title":"4.1 \u914d\u7f6e\u6587\u4ef6"},{"location":"bitxhub/design/consensus_plugin/#42","text":"\u8be5\u9879\u76ee\u4e3aBitXHub\u63d0\u4f9b\u5171\u8bc6\u7b97\u6cd5\u7684\u63d2\u4ef6\u5316\uff0c\u5177\u4f53\u9879\u76ee\u7ed3\u6784\u5982\u4e0b\uff1a ./ \u251c\u2500\u2500 Makefile //\u7f16\u8bd1\u6587\u4ef6 \u251c\u2500\u2500 README.md \u251c\u2500\u2500 build \u2502 \u2514\u2500\u2500 rbft.so //\u7f16\u8bd1\u540e\u7684\u5171\u8bc6\u7b97\u6cd5\u4e8c\u8fdb\u5236\u63d2\u4ef6 \u251c\u2500\u2500 go.mod \u251c\u2500\u2500 go.sum \u251c\u2500\u2500 order.toml //\u5171\u8bc6\u914d\u7f6e\u6587\u4ef6 \u2514\u2500\u2500 rbft //\u5171\u8bc6\u7b97\u6cd5\u4ee3\u7801 \u251c\u2500\u2500 config.go \u251c\u2500\u2500 node.go \u2514\u2500\u2500 stack.go \u5176\u4e2d\u6ce8\u610f\u5728 go.mod \u4e2d\u9700\u8981\u5f15\u7528BitXHub\u9879\u76ee\u6e90\u7801\uff0c\u9700\u8981\u8ba9\u8be5\u63d2\u4ef6\u9879\u76ee\u4e0eBitXHub\u5728\u540c\u4e00\u76ee\u5f55\u4e0b\uff08\u5efa\u8bae\u5728$GOPATH\u8def\u5f84\u4e0b\uff09\u3002 replace github.com/meshplus/bitxhub => ../bitxhub/","title":"4.2 \u9879\u76ee\u7ed3\u6784"},{"location":"bitxhub/design/consensus_plugin/#43-plugin","text":"\u6211\u4eec\u91c7\u7528GO\u8bed\u8a00\u63d0\u4f9b\u7684\u63d2\u4ef6\u6a21\u5f0f\uff0c\u5b9e\u73b0 BitXHub \u5bf9\u4e8ePlugin\u7684\u52a8\u6001\u52a0\u8f7d\u3002 \u7f16\u5199 Makefile \u7f16\u8bd1\u6587\u4ef6\uff1a SHELL : = /bin/bash CURRENT_PATH = $( shell pwd ) GO = GO111MODULE = on go plugin: @mkdir -p build $( GO ) build --buildmode = plugin -o build/rbft.so rbft/*.go \u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u80fd\u591f\u5f97\u5230 rbft.so \u6587\u4ef6\u3002 $ make plugin \u4fee\u6539\u8282\u70b9\u7684 bitxhub.toml [order] plugin = \"plugins/rbft.so\" \u5c06\u4f60\u7f16\u5199\u7684\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\u548c order.toml \u6587\u4ef6\uff0c\u5206\u522b\u653e\u5230\u8282\u70b9\u7684plugins\u6587\u4ef6\u5939\u548c\u914d\u7f6e\u6587\u4ef6\u4e0b\u3002 ./ \u251c\u2500\u2500 api \u251c\u2500\u2500 bitxhub.toml \u251c\u2500\u2500 certs \u2502 \u251c\u2500\u2500 agency.cert \u2502 \u251c\u2500\u2500 ca.cert \u2502 \u251c\u2500\u2500 node.cert \u2502 \u2514\u2500\u2500 node.priv \u251c\u2500\u2500 key.json \u251c\u2500\u2500 logs \u251c\u2500\u2500 network.toml \u251c\u2500\u2500 order.toml //\u5171\u8bc6\u7b97\u6cd5\u914d\u7f6e\u6587\u4ef6 \u251c\u2500\u2500 plugins \u2502 \u251c\u2500\u2500 rbft.so //\u5171\u8bc6\u7b97\u6cd5\u63d2\u4ef6 \u251c\u2500\u2500 start.sh \u2514\u2500\u2500 storage \u7ed3\u5408\u6211\u4eec\u63d0\u4f9b\u7684 BitXHub \u4e2d\u7ee7\u94fe\uff0c\u5c31\u80fd\u63a5\u5165\u5230\u8de8\u94fe\u5e73\u53f0\u6765\u3002","title":"4.3 \u7f16\u8bd1Plugin"},{"location":"bitxhub/design/erc20_interchian/","text":"ERC20\u8d44\u4ea7\u8de8\u94fe 1. \u6982\u8ff0 \u89e3\u51b3ERC20\u8d44\u4ea7\u8de8\u94fe\u95ee\u9898\uff0c\u652f\u6301\u4efb\u610fERC20\u8d44\u4ea7\u7684\u8de8\u94fe\u4ea4\u6613\u3002 2.\u8be6\u7ec6\u8bbe\u8ba1 ERC20\u8d44\u4ea7\u8de8\u94fe\u65b9\u6848\u91c7\u7528\u4e2d\u7ee7\u8282\u70b9\u591a\u7b7e\u7684\u8d44\u4ea7\u4ea4\u6362\u65b9\u6848\uff0c\u4e2d\u7ee7\u94fe\u6bcf\u4e2a\u8282\u70b9\u662f\u5e94\u7528\u94fe\u6258\u7ba1\u5408\u7ea6\u7684\u6210\u5458\uff0c\u8282\u70b9\u9700\u540c\u6b65\u5bf9\u5e94\u5e94\u7528\u94fe\u7684\u533a\u5757\u5934\u4fe1\u606f\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\uff0c\u5173\u4e8e\u9a8c\u8bc1\u7684\u8fc7\u7a0b\u53ef\u4ee5\u653e\u5728\u9a8c\u8bc1\u89c4\u5219\u5185\uff0c\u540c\u65f6\u5728\u7528\u6237\u5145\u503c\u548c\u63d0\u73b0\u7684\u6d41\u7a0b\u4e2d\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u539f\u5b50\u6027\uff0c\u8fbe\u5230\u8de8\u94fe\u8d44\u4ea7\u4e0e\u951a\u5b9a\u8d44\u4ea7\u7684\u4e00\u81f4\u6027\u3002\u8fd9\u91cc\u4ee5\u4e09\u4e2a\u65b9\u9762\u6765\u89e3\u51b3ERC20\u7684\u8de8\u94fe\u95ee\u9898\uff1a \u5982\u4f55\u540c\u6b65\u53ef\u9760\u7684\u5e94\u7528\u94fe\u533a\u5757\u5934\uff1b \u5982\u4f55\u8bbe\u8ba1\u6258\u7ba1\u5408\u7ea6\uff0c\u540c\u65f6\u517c\u987e\u5176\u5b89\u5168\u6027\uff1b \u5982\u4f55\u8bbe\u8ba1\u7528\u6237\u7684\u5145\u503c\u3001\u63d0\u73b0\u6d41\u7a0b\uff0c\u5c3d\u91cf\u7b80\u5316\u7528\u6237\u64cd\u4f5c\uff1b 2.1 \u540c\u6b65\u533a\u5757\u5934 \u540c\u6b65\u533a\u5757\u5934\u6709\u4e24\u79cd\u65b9\u6848\uff0c\u4e00\u79cd\u662fOracle\u9884\u8a00\u673a\u7684\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u7cfb\u7edf\u5185\u7f6e\u96c6\u6210\u540c\u6b65\u533a\u5757\u5934\u6a21\u5757\u3002 \u65b9\u6848\u4e00\uff1a \u901a\u8fc7Oracle\u53ef\u4fe1\u9884\u8a00\u673a(\u8de8\u94fe\u7f51\u5173)\uff0c\u5411\u4e2d\u7ee7\u94fe\u533a\u5757\u5934\u5408\u7ea6\u6ce8\u5165\u5e94\u7528\u94fe\u7684\u533a\u5757\u5934\uff0c\u533a\u5757\u5934\u5408\u7ea6\u5305\u542b\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u548c\u589e\u52a0\u533a\u5757\u7684\u529f\u80fd\u3002\u8be5\u65b9\u6848\u7684\u4f18\u70b9\u662f\u53ef\u4ee5\u7075\u6d3b\u9002\u914d\u5404\u4e2a\u5e94\u7528\u94fe\uff0c\u7f3a\u70b9\u662f\u4f9d\u8d56\u5916\u90e8\u7684\u53ef\u4fe1\u6570\u636e\u6e90\u3002 \u533a\u5757\u5934\u5408\u7ea6\u7684\u4e3b\u8981\u63a5\u53e3\u5982\u4e0b\uff1a func AppendAppchainBlockHeader ( appchainId , blockHeader ) func VerifyInterchainTxProof ( originTx , proof , blockHeight ) \u65b9\u6848\u4e8c\uff1a \u8de8\u94fe\u5e73\u53f0\u5185\u7f6e\u96c6\u6210\u540c\u6b65\u533a\u5757\u5934\u6a21\u5757\uff0c\u8be5\u65b9\u6848\u7684\u4f18\u70b9\u662f\u53bb\u4e2d\u5fc3\u5316\uff0c\u7f3a\u70b9\u662f\u8026\u5408\u6027\u5f3a\uff0c\u6bcf\u63a5\u5165\u65b0\u7684\u5e94\u7528\u94fe\u9700\u8981\u52a0\u5165\u65b0\u7684\u540c\u6b65\u533a\u5757\u5934\u6a21\u5757\uff1b\u540c\u6b65\u533a\u5757\u5934\u662f\u4e2d\u7ee7\u94fe\u8282\u70b9\u4e3b\u52a8\u83b7\u53d6\uff0c\u8fd8\u9700\u8981\u8003\u8651\u7f51\u7edc\u95ee\u9898\u3002 \u533a\u5757\u5934\u6a21\u5757\u7684\u4e3b\u8981\u63a5\u53e3\u5982\u4e0b\uff1a func FetchAppchainBlockHeader ( blockHeader ) func VerifyInterchainTxProof ( originTx , proof , blockHeight ) 2.2 \u6258\u7ba1\u5408\u7ea6 ERC20\u5305\u542b\u5982\u4e0b\u63a5\u53e3\uff1a interface IERC20 { function totalSupply () external view returns ( uint256 ); function balanceOf ( address account ) external view returns ( uint256 ); function transfer ( address recipient , uint256 amount ) external returns ( bool ); function allowance ( address owner , address spender ) external view returns ( uint256 ); function approve ( address spender , uint256 amount ) external returns ( bool ); function transferFrom ( address sender , address recipient , uint256 amount ) external returns ( bool ); event Transfer ( address indexed from , address indexed to , uint256 value ); event Approval ( address indexed owner , address indexed spender , uint256 value ); } \u5728\u8de8\u94fe\u5145\u503c\u8fc7\u7a0b\u4e2d\u6211\u4eec\u9700\u8981\u7528\u5230ERC20\u5408\u7ea6\u4e2d\u7684**approve**\u6388\u6743\u65b9\u6cd5\u548c**transferFrom**\u8f6c\u8d26\u65b9\u6cd5\uff0c \u540c\u65f6\u8fd8\u9700\u8981\u63d0\u4f9b**name**\u548c**decimal**\u7684\u5143\u4fe1\u606f\u3002 function approve ( address spender , uint256 amount ) external returns ( bool ); function transferFrom ( address sender , address recipient , uint256 amount ) external returns ( bool ); \u5728\u8de8\u94fe\u63d0\u73b0\u8fc7\u7a0b\u4e2d\u6211\u4eec\u9700\u8981\u7528\u5230ERC20\u5408\u7ea6\u4e2d\u7684**transfer**\u8f6c\u8d26\u65b9\u6cd5\u3002 function transfer ( address recipient , uint256 amount ) external returns ( bool ); \u6258\u7ba1\u5408\u7ea6\u4e3b\u8981\u63a5\u53e3\u5982\u4e0b\uff1a event lock ( address erc20Token , uint256 amount , string relay_addr ) event unlock ( address unlock , uint256 amount , string ralay_tx_hash ,) // \u6dfb\u52a0\u4e2d\u7ee7\u94fe\u591a\u7b7e\u8282\u70b9\u5730\u5740 func addRelayAdmin ( address relay_admin ) onlyAdmin external returns ( bool ) // \u79fb\u9664\u4e2d\u7ee7\u94fe\u591a\u7b7e\u8282\u70b9\u5730\u5740 func removeRelayAdmin ( address relay_admin ) onlyAdmin external returns ( bool ) // \u7528\u6237\u6388\u6743\u6258\u7ba1\u5408\u7ea6\u53ef\u4ee5\u4f7f\u7528ERC20\u7684\u4ee3\u5e01 function approve ( address erc20Token , address spender , uint256 amount ) external returns ( bool ) // \u7528\u6237\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613,\u5c06ERC20\u4ee3\u5e01\u9501\u4ed3\u8fdb\u6258\u7ba1\u5408\u7ea6 function lock ( address erc20Token , uint256 amount , string relay_addr ) external returns ( bool ); // \u4e2d\u7ee7\u94fe\u89e3\u9501\u8de8\u94fe\u8d44\u4ea7\uff0c\u5c06ERC20\u4ee3\u5e01\u5f52\u8fd8\u7528\u6237 // \u8be5\u63a5\u53e3\u9700\u8981\u63a5\u6536quorum\u4e2a\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u7b7e\u540d\u540e\u624d\u53ef\u5f52\u8fd8\u8d44\u4ea7 function unlock ( address erc20Token , uint256 amount , address unlocker , string ralay_tx_hash , r [][] byte , s [][] byte , v [][] byte ) external returns ( bool ); 2.3 \u5145\u503c\u3001\u63d0\u73b0\u6d41\u7a0b\u8bbe\u8ba1 \u7528\u6237\u5145\u503c\u6d41\u7a0b\uff1a \u7528\u6237\u8c03\u7528\u6258\u7ba1\u5408\u7ea6\uff0c\u6388\u6743\u6258\u7ba1\u5408\u7ea6\u5141\u8bb8\u4f7f\u7528\u6307\u5b9aERC20\u7684\u8d44\u4ea7\uff1b \u7528\u6237\u8c03\u7528\u6258\u7ba1\u5408\u7ea6\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\uff1b \u6258\u7ba1\u5408\u7ea6\u63a5\u6536\u5230ERC20\u8d44\u4ea7\uff0c\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6\uff08ERC20_Contract\u3001ERC20_Name\u3001ERC20_Decimal\u3001ERC20_Amount\u3001Relay_Addr\uff09; \u8de8\u94fe\u7f51\u5173\u76d1\u542c\u5230\u8de8\u94fe\u4e8b\u4ef6\uff0c\u5c01\u88c5IBTP\uff08\u539f\u5e94\u7528\u94feTx\u3001\u8de8\u94fe\u4ea4\u6613\u8bc1\u660e\u3001\u4e2d\u7ee7\u94fe\u5730\u5740\u3001\u8de8\u94fe\u91d1\u989d\u7b49\u7b49\uff09\uff1b \u8de8\u94fe\u7f51\u5173\u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u7ed9\u4e2d\u7ee7\u94fe\uff1b \u4e2d\u7ee7\u94fe\u63a5\u6536\u5230\u8de8\u94fe\u4ea4\u6613\u540e\uff0c\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\uff1b \u9a8c\u8bc1\u5931\u8d25\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u8bda\u4fe1\u5408\u7ea6\u60e9\u7f5a\u5bf9\u5e94\u7684\u8de8\u94fe\u7f51\u5173\uff08\u5f85\u5b9a\uff09\uff1b \u9a8c\u8bc1\u6210\u529f\u540e\u68c0\u67e5\u8d44\u4ea7\u5217\u8868\uff0c\u5982\u679c\u662f\u65b0\u589e\u8d44\u4ea7\u5219\u65b0\u5efa\u5bf9\u5e94\u7684ERC20\u8d44\u4ea7\u6258\u7ba1\u5408\u7ea6\uff1b \u901a\u8fc7\u8de8\u94fe\u4ea4\u6613\u7684\uff08Amount\u3001Addr\uff09\u589e\u53d1\u7b49\u989d\u7684\u951a\u5b9a\u8d44\u4ea7\uff0c\u7528\u6237\u5b8c\u6210\u8de8\u94fe\u5145\u503c\u64cd\u4f5c\uff1b \u7528\u6237\u63d0\u73b0\u6d41\u7a0b\uff1a \u7528\u6237\u5728\u4e2d\u7ee7\u94fe\u4e0a\u53d1\u8d77\u63d0\u73b0\u8bf7\u6c42\uff08\u76ee\u7684\u94fe\u5730\u5740\uff0cERC20\u5730\u5740\uff0c\u91d1\u989d\uff0c\u7528\u6237\u5e94\u7528\u94fe\u5730\u5740\uff09\uff1b \u4e2d\u7ee7\u94fe\u63a5\u6536\u5230\u4ea4\u6613\uff0c\u51bb\u7ed3\u7528\u6237\u5728\u4e2d\u7ee7\u94fe\u7b49\u989d\u7684\u951a\u5b9a\u8d44\u4ea7\uff1b \u4e2d\u7ee7\u94fe\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\uff0c\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6\uff08\u76ee\u7684\u94fe\u5730\u5740\uff0cERC20\u5730\u5740\uff0c\u91d1\u989d\uff0c\u7528\u6237\u5e94\u7528\u94fe\u5730\u5740\uff09\uff1b \u8de8\u94fe\u7f51\u5173\u76d1\u542c\u5230\u8de8\u94fe\u4e8b\u4ef6\uff0c\u6784\u9020\u5bf9\u5e94\u5e94\u7528\u94fe\u7684\u4ea4\u6613\uff1b \u8de8\u94fe\u7f51\u5173\u5c06\u5e94\u7528\u94fe\u7684\u4ea4\u6613\u53d1\u5f80\u4e2d\u7ee7\u94fe\uff1b \u4e2d\u7ee7\u94fe\u89e3\u6790\u5e76\u6821\u9a8c\u5e94\u7528\u94fe\u7684\u4ea4\u6613\uff0c\u5305\u62ec\u5730\u5740\uff0c\u91d1\u989d\u7b49\u7b49\uff1b \u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u901a\u8fc7\u540e\u7b7e\u540d\uff0c\u53d1\u5b8c\u5176\u5b83\u4e2d\u7ee7\u94fe\u8981\u6c42\u5176\u7b7e\u540d\uff1b \u8de8\u94fe\u7f51\u5173\u83b7\u53d6\u5230\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u591a\u91cd\u7b7e\u540d\u6570\u636e\uff0c\u8c03\u7528\u5e94\u7528\u94fe\u7684\u6258\u7ba1\u5408\u7ea6\uff1b \u5e94\u7528\u94fe\u5f52\u8fd8\u8d44\u4ea7\uff0c\u629b\u51fa\u89e3\u9501\u4e8b\u4ef6\uff1b \u8de8\u94fe\u7f51\u5173\u76d1\u542c\u5230\u89e3\u9501\u4e8b\u4ef6\uff0c\u53d1\u5f80\u4e2d\u7ee7\u94fe\uff1b \u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u901a\u8fc7\u540e\u9500\u6bc1\u5bf9\u5e94\u7684\u951a\u5b9a\u8d44\u4ea7\uff1b","title":"ERC20\u8d44\u4ea7\u8de8\u94fe"},{"location":"bitxhub/design/erc20_interchian/#erc20","text":"","title":"ERC20\u8d44\u4ea7\u8de8\u94fe"},{"location":"bitxhub/design/erc20_interchian/#1","text":"\u89e3\u51b3ERC20\u8d44\u4ea7\u8de8\u94fe\u95ee\u9898\uff0c\u652f\u6301\u4efb\u610fERC20\u8d44\u4ea7\u7684\u8de8\u94fe\u4ea4\u6613\u3002","title":"1. \u6982\u8ff0"},{"location":"bitxhub/design/erc20_interchian/#2","text":"ERC20\u8d44\u4ea7\u8de8\u94fe\u65b9\u6848\u91c7\u7528\u4e2d\u7ee7\u8282\u70b9\u591a\u7b7e\u7684\u8d44\u4ea7\u4ea4\u6362\u65b9\u6848\uff0c\u4e2d\u7ee7\u94fe\u6bcf\u4e2a\u8282\u70b9\u662f\u5e94\u7528\u94fe\u6258\u7ba1\u5408\u7ea6\u7684\u6210\u5458\uff0c\u8282\u70b9\u9700\u540c\u6b65\u5bf9\u5e94\u5e94\u7528\u94fe\u7684\u533a\u5757\u5934\u4fe1\u606f\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\uff0c\u5173\u4e8e\u9a8c\u8bc1\u7684\u8fc7\u7a0b\u53ef\u4ee5\u653e\u5728\u9a8c\u8bc1\u89c4\u5219\u5185\uff0c\u540c\u65f6\u5728\u7528\u6237\u5145\u503c\u548c\u63d0\u73b0\u7684\u6d41\u7a0b\u4e2d\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u539f\u5b50\u6027\uff0c\u8fbe\u5230\u8de8\u94fe\u8d44\u4ea7\u4e0e\u951a\u5b9a\u8d44\u4ea7\u7684\u4e00\u81f4\u6027\u3002\u8fd9\u91cc\u4ee5\u4e09\u4e2a\u65b9\u9762\u6765\u89e3\u51b3ERC20\u7684\u8de8\u94fe\u95ee\u9898\uff1a \u5982\u4f55\u540c\u6b65\u53ef\u9760\u7684\u5e94\u7528\u94fe\u533a\u5757\u5934\uff1b \u5982\u4f55\u8bbe\u8ba1\u6258\u7ba1\u5408\u7ea6\uff0c\u540c\u65f6\u517c\u987e\u5176\u5b89\u5168\u6027\uff1b \u5982\u4f55\u8bbe\u8ba1\u7528\u6237\u7684\u5145\u503c\u3001\u63d0\u73b0\u6d41\u7a0b\uff0c\u5c3d\u91cf\u7b80\u5316\u7528\u6237\u64cd\u4f5c\uff1b","title":"2.\u8be6\u7ec6\u8bbe\u8ba1"},{"location":"bitxhub/design/erc20_interchian/#21","text":"\u540c\u6b65\u533a\u5757\u5934\u6709\u4e24\u79cd\u65b9\u6848\uff0c\u4e00\u79cd\u662fOracle\u9884\u8a00\u673a\u7684\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u7cfb\u7edf\u5185\u7f6e\u96c6\u6210\u540c\u6b65\u533a\u5757\u5934\u6a21\u5757\u3002 \u65b9\u6848\u4e00\uff1a \u901a\u8fc7Oracle\u53ef\u4fe1\u9884\u8a00\u673a(\u8de8\u94fe\u7f51\u5173)\uff0c\u5411\u4e2d\u7ee7\u94fe\u533a\u5757\u5934\u5408\u7ea6\u6ce8\u5165\u5e94\u7528\u94fe\u7684\u533a\u5757\u5934\uff0c\u533a\u5757\u5934\u5408\u7ea6\u5305\u542b\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u548c\u589e\u52a0\u533a\u5757\u7684\u529f\u80fd\u3002\u8be5\u65b9\u6848\u7684\u4f18\u70b9\u662f\u53ef\u4ee5\u7075\u6d3b\u9002\u914d\u5404\u4e2a\u5e94\u7528\u94fe\uff0c\u7f3a\u70b9\u662f\u4f9d\u8d56\u5916\u90e8\u7684\u53ef\u4fe1\u6570\u636e\u6e90\u3002 \u533a\u5757\u5934\u5408\u7ea6\u7684\u4e3b\u8981\u63a5\u53e3\u5982\u4e0b\uff1a func AppendAppchainBlockHeader ( appchainId , blockHeader ) func VerifyInterchainTxProof ( originTx , proof , blockHeight ) \u65b9\u6848\u4e8c\uff1a \u8de8\u94fe\u5e73\u53f0\u5185\u7f6e\u96c6\u6210\u540c\u6b65\u533a\u5757\u5934\u6a21\u5757\uff0c\u8be5\u65b9\u6848\u7684\u4f18\u70b9\u662f\u53bb\u4e2d\u5fc3\u5316\uff0c\u7f3a\u70b9\u662f\u8026\u5408\u6027\u5f3a\uff0c\u6bcf\u63a5\u5165\u65b0\u7684\u5e94\u7528\u94fe\u9700\u8981\u52a0\u5165\u65b0\u7684\u540c\u6b65\u533a\u5757\u5934\u6a21\u5757\uff1b\u540c\u6b65\u533a\u5757\u5934\u662f\u4e2d\u7ee7\u94fe\u8282\u70b9\u4e3b\u52a8\u83b7\u53d6\uff0c\u8fd8\u9700\u8981\u8003\u8651\u7f51\u7edc\u95ee\u9898\u3002 \u533a\u5757\u5934\u6a21\u5757\u7684\u4e3b\u8981\u63a5\u53e3\u5982\u4e0b\uff1a func FetchAppchainBlockHeader ( blockHeader ) func VerifyInterchainTxProof ( originTx , proof , blockHeight )","title":"2.1 \u540c\u6b65\u533a\u5757\u5934"},{"location":"bitxhub/design/erc20_interchian/#22","text":"ERC20\u5305\u542b\u5982\u4e0b\u63a5\u53e3\uff1a interface IERC20 { function totalSupply () external view returns ( uint256 ); function balanceOf ( address account ) external view returns ( uint256 ); function transfer ( address recipient , uint256 amount ) external returns ( bool ); function allowance ( address owner , address spender ) external view returns ( uint256 ); function approve ( address spender , uint256 amount ) external returns ( bool ); function transferFrom ( address sender , address recipient , uint256 amount ) external returns ( bool ); event Transfer ( address indexed from , address indexed to , uint256 value ); event Approval ( address indexed owner , address indexed spender , uint256 value ); } \u5728\u8de8\u94fe\u5145\u503c\u8fc7\u7a0b\u4e2d\u6211\u4eec\u9700\u8981\u7528\u5230ERC20\u5408\u7ea6\u4e2d\u7684**approve**\u6388\u6743\u65b9\u6cd5\u548c**transferFrom**\u8f6c\u8d26\u65b9\u6cd5\uff0c \u540c\u65f6\u8fd8\u9700\u8981\u63d0\u4f9b**name**\u548c**decimal**\u7684\u5143\u4fe1\u606f\u3002 function approve ( address spender , uint256 amount ) external returns ( bool ); function transferFrom ( address sender , address recipient , uint256 amount ) external returns ( bool ); \u5728\u8de8\u94fe\u63d0\u73b0\u8fc7\u7a0b\u4e2d\u6211\u4eec\u9700\u8981\u7528\u5230ERC20\u5408\u7ea6\u4e2d\u7684**transfer**\u8f6c\u8d26\u65b9\u6cd5\u3002 function transfer ( address recipient , uint256 amount ) external returns ( bool ); \u6258\u7ba1\u5408\u7ea6\u4e3b\u8981\u63a5\u53e3\u5982\u4e0b\uff1a event lock ( address erc20Token , uint256 amount , string relay_addr ) event unlock ( address unlock , uint256 amount , string ralay_tx_hash ,) // \u6dfb\u52a0\u4e2d\u7ee7\u94fe\u591a\u7b7e\u8282\u70b9\u5730\u5740 func addRelayAdmin ( address relay_admin ) onlyAdmin external returns ( bool ) // \u79fb\u9664\u4e2d\u7ee7\u94fe\u591a\u7b7e\u8282\u70b9\u5730\u5740 func removeRelayAdmin ( address relay_admin ) onlyAdmin external returns ( bool ) // \u7528\u6237\u6388\u6743\u6258\u7ba1\u5408\u7ea6\u53ef\u4ee5\u4f7f\u7528ERC20\u7684\u4ee3\u5e01 function approve ( address erc20Token , address spender , uint256 amount ) external returns ( bool ) // \u7528\u6237\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613,\u5c06ERC20\u4ee3\u5e01\u9501\u4ed3\u8fdb\u6258\u7ba1\u5408\u7ea6 function lock ( address erc20Token , uint256 amount , string relay_addr ) external returns ( bool ); // \u4e2d\u7ee7\u94fe\u89e3\u9501\u8de8\u94fe\u8d44\u4ea7\uff0c\u5c06ERC20\u4ee3\u5e01\u5f52\u8fd8\u7528\u6237 // \u8be5\u63a5\u53e3\u9700\u8981\u63a5\u6536quorum\u4e2a\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u7b7e\u540d\u540e\u624d\u53ef\u5f52\u8fd8\u8d44\u4ea7 function unlock ( address erc20Token , uint256 amount , address unlocker , string ralay_tx_hash , r [][] byte , s [][] byte , v [][] byte ) external returns ( bool );","title":"2.2 \u6258\u7ba1\u5408\u7ea6"},{"location":"bitxhub/design/erc20_interchian/#23","text":"\u7528\u6237\u5145\u503c\u6d41\u7a0b\uff1a \u7528\u6237\u8c03\u7528\u6258\u7ba1\u5408\u7ea6\uff0c\u6388\u6743\u6258\u7ba1\u5408\u7ea6\u5141\u8bb8\u4f7f\u7528\u6307\u5b9aERC20\u7684\u8d44\u4ea7\uff1b \u7528\u6237\u8c03\u7528\u6258\u7ba1\u5408\u7ea6\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\uff1b \u6258\u7ba1\u5408\u7ea6\u63a5\u6536\u5230ERC20\u8d44\u4ea7\uff0c\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6\uff08ERC20_Contract\u3001ERC20_Name\u3001ERC20_Decimal\u3001ERC20_Amount\u3001Relay_Addr\uff09; \u8de8\u94fe\u7f51\u5173\u76d1\u542c\u5230\u8de8\u94fe\u4e8b\u4ef6\uff0c\u5c01\u88c5IBTP\uff08\u539f\u5e94\u7528\u94feTx\u3001\u8de8\u94fe\u4ea4\u6613\u8bc1\u660e\u3001\u4e2d\u7ee7\u94fe\u5730\u5740\u3001\u8de8\u94fe\u91d1\u989d\u7b49\u7b49\uff09\uff1b \u8de8\u94fe\u7f51\u5173\u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u7ed9\u4e2d\u7ee7\u94fe\uff1b \u4e2d\u7ee7\u94fe\u63a5\u6536\u5230\u8de8\u94fe\u4ea4\u6613\u540e\uff0c\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\uff1b \u9a8c\u8bc1\u5931\u8d25\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u8bda\u4fe1\u5408\u7ea6\u60e9\u7f5a\u5bf9\u5e94\u7684\u8de8\u94fe\u7f51\u5173\uff08\u5f85\u5b9a\uff09\uff1b \u9a8c\u8bc1\u6210\u529f\u540e\u68c0\u67e5\u8d44\u4ea7\u5217\u8868\uff0c\u5982\u679c\u662f\u65b0\u589e\u8d44\u4ea7\u5219\u65b0\u5efa\u5bf9\u5e94\u7684ERC20\u8d44\u4ea7\u6258\u7ba1\u5408\u7ea6\uff1b \u901a\u8fc7\u8de8\u94fe\u4ea4\u6613\u7684\uff08Amount\u3001Addr\uff09\u589e\u53d1\u7b49\u989d\u7684\u951a\u5b9a\u8d44\u4ea7\uff0c\u7528\u6237\u5b8c\u6210\u8de8\u94fe\u5145\u503c\u64cd\u4f5c\uff1b \u7528\u6237\u63d0\u73b0\u6d41\u7a0b\uff1a \u7528\u6237\u5728\u4e2d\u7ee7\u94fe\u4e0a\u53d1\u8d77\u63d0\u73b0\u8bf7\u6c42\uff08\u76ee\u7684\u94fe\u5730\u5740\uff0cERC20\u5730\u5740\uff0c\u91d1\u989d\uff0c\u7528\u6237\u5e94\u7528\u94fe\u5730\u5740\uff09\uff1b \u4e2d\u7ee7\u94fe\u63a5\u6536\u5230\u4ea4\u6613\uff0c\u51bb\u7ed3\u7528\u6237\u5728\u4e2d\u7ee7\u94fe\u7b49\u989d\u7684\u951a\u5b9a\u8d44\u4ea7\uff1b \u4e2d\u7ee7\u94fe\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\uff0c\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6\uff08\u76ee\u7684\u94fe\u5730\u5740\uff0cERC20\u5730\u5740\uff0c\u91d1\u989d\uff0c\u7528\u6237\u5e94\u7528\u94fe\u5730\u5740\uff09\uff1b \u8de8\u94fe\u7f51\u5173\u76d1\u542c\u5230\u8de8\u94fe\u4e8b\u4ef6\uff0c\u6784\u9020\u5bf9\u5e94\u5e94\u7528\u94fe\u7684\u4ea4\u6613\uff1b \u8de8\u94fe\u7f51\u5173\u5c06\u5e94\u7528\u94fe\u7684\u4ea4\u6613\u53d1\u5f80\u4e2d\u7ee7\u94fe\uff1b \u4e2d\u7ee7\u94fe\u89e3\u6790\u5e76\u6821\u9a8c\u5e94\u7528\u94fe\u7684\u4ea4\u6613\uff0c\u5305\u62ec\u5730\u5740\uff0c\u91d1\u989d\u7b49\u7b49\uff1b \u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u901a\u8fc7\u540e\u7b7e\u540d\uff0c\u53d1\u5b8c\u5176\u5b83\u4e2d\u7ee7\u94fe\u8981\u6c42\u5176\u7b7e\u540d\uff1b \u8de8\u94fe\u7f51\u5173\u83b7\u53d6\u5230\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u591a\u91cd\u7b7e\u540d\u6570\u636e\uff0c\u8c03\u7528\u5e94\u7528\u94fe\u7684\u6258\u7ba1\u5408\u7ea6\uff1b \u5e94\u7528\u94fe\u5f52\u8fd8\u8d44\u4ea7\uff0c\u629b\u51fa\u89e3\u9501\u4e8b\u4ef6\uff1b \u8de8\u94fe\u7f51\u5173\u76d1\u542c\u5230\u89e3\u9501\u4e8b\u4ef6\uff0c\u53d1\u5f80\u4e2d\u7ee7\u94fe\uff1b \u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u901a\u8fc7\u540e\u9500\u6bc1\u5bf9\u5e94\u7684\u951a\u5b9a\u8d44\u4ea7\uff1b","title":"2.3 \u5145\u503c\u3001\u63d0\u73b0\u6d41\u7a0b\u8bbe\u8ba1"},{"location":"bitxhub/design/interchain_transaction/","text":"\u8de8\u94fe\u4e8b\u52a1\u65b9\u6848 \u8de8\u94fe\u9700\u8981\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u539f\u5b50\u6027\u548c\u4e00\u81f4\u6027\uff0c\u5373\u6765\u6e90\u94fe\u548c\u76ee\u7684\u94fe\u4e0a\u7684\u4ea4\u6613\u8981\u4e48\u90fd\u6210\u529f\uff0c\u8981\u4e48\u90fd\u5931\u8d25\u56de\u6eda\u3002 \u4e3a\u6b64\uff0c\u4e2d\u7ee7\u94fe\u63d0\u4f9b\u4e86\u4e8b\u52a1\u7ba1\u7406\u673a\u5236\uff0c\u901a\u8fc7\u5185\u7f6e\u7684\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\uff0c\u6765\u4fdd\u8bc1\u4e0d\u540c\u4e1a\u52a1\u573a\u666f\u4e0b\u8de8\u94fe\u4ea4\u6613\u7684\u4e8b\u52a1\u6027\u3002 \u591a\u94fe\u6d88\u606f\u8868\u4e8b\u52a1\u65b9\u6848\u662f\u9488\u5bf9\u975e\u8d44\u4ea7\u4ea4\u6362\u7c7b\u4e1a\u52a1\u573a\u666f\u7684\u4e8b\u52a1\u65b9\u6848\uff0c\u5b83\u53ef\u4ee5\u652f\u6301\u4e00\u5bf9\u4e00\u8de8\u94fe\u548c\u4e00\u5bf9\u591a\u8de8\u94fe\u3002 \u4e00\u5bf9\u4e00\u8de8\u94fe \u5f53\u6765\u6e90\u94fe\u4e1a\u52a1\u5408\u7ea6\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\u65f6\uff0c\u9664\u4e86\u63d0\u4f9b\u76ee\u7684\u94fe\u7684\u76ee\u6807\u4e1a\u52a1\u5408\u7ea6\u4e2d\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u548c\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u6765\u6e90\u94fe\u7684\u56de\u8c03\u65b9\u6cd5\u548c\u56de\u6eda\u65b9\u6cd5\u3002 \u6765\u6e90\u94fe\u8de8\u94fe\u7f51\u5173\u6355\u83b7\u8de8\u94fe\u4e8b\u4ef6\u5c01\u88c5\u6210IBTP\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\uff0c\u5e76\u7531\u4e2d\u7ee7\u94fe\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u8fdb\u884c\u5904\u7406\u3002\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u5c06\u521d\u59cb\u5316\u8be5\u8de8\u94fe\u4ea4\u6613\u6240\u5bf9\u5e94\u7684\u8de8\u94fe\u4e8b\u52a1\uff0c \u5728\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u4e2d\u4ee5KV\u5f62\u5f0f\u8bb0\u5f55\u8de8\u94fe\u4e8b\u52a1ID\u548c\u4e8b\u52a1\u72b6\u6001\u4fe1\u606f\uff0c\u5176\u4e2d\u8de8\u94fe\u4e8b\u52a1ID\u7531**\u6765\u6e90\u94feID || \u76ee\u7684\u94feID || IBTP index**\u7ec4\u6210\uff0c\u521d\u59cb\u7684\u8de8\u94fe\u72b6\u6001\u4fe1\u606f\u4e3aTransactionStatus_BEGIN\u3002 \u5f53\u76ee\u7684\u94fe\u6267\u884c\u5b8c\u8de8\u94fe\u4ea4\u6613\u65f6\uff0c\u7531\u76ee\u7684\u94fe\u8de8\u94fe\u7f51\u5173\u5f97\u5230\u6267\u884c\u7684\u7ed3\u679c\uff08\u6210\u529f\u6216\u5931\u8d25\uff09\uff0c\u5e76\u5c06\u8be5\u4fe1\u606f\u5c01\u88c5\u6210IBTP receipt\u63d0\u4ea4\u7ed9\u4e2d\u7ee7\u94fe\u3002 \u4e2d\u7ee7\u94fe\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u6839\u636e\u5176\u4e2d\u7684\u56de\u6267\u4fe1\u606f\uff0c\u66f4\u65b0\u8de8\u94fe\u4e8b\u52a1ID\u7684\u72b6\u6001\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u72b6\u6001\u66f4\u65b0\u4e3aTransactionStatus_SUCCESS\uff0c\u5426\u5219\u4e3aTransactionStatus_FAILURE\u3002 \u5982\u679c\u8de8\u94fe\u4e8b\u52a1\u6700\u7ec8\u72b6\u6001\u662f\u6210\u529f\uff0c\u5219\u6765\u6e90\u94fe\u8de8\u94fe\u7f51\u5173\u8c03\u7528\u6765\u6e90\u94fe\u4e1a\u52a1\u5408\u7ea6\u6ce8\u518c\u7684\u56de\u8c03\u51fd\u6570\u8fdb\u884c\u56de\u8c03\uff1b\u5982\u679c\u8de8\u94fe\u4e8b\u52a1\u72b6\u6001\u4e3a\u5931\u8d25\uff0c\u5219\u6765\u6e90\u94fe\u8de8\u94fe\u7f51\u5173\u5c06\u8c03\u7528\u6765\u6e90\u94fe\u4e1a\u52a1\u5408\u7ea6\u6ce8\u518c\u7684\u56de\u6eda\u51fd\u6570\u8fdb\u884c\u56de\u6eda\u64cd\u4f5c\u3002 \u4e00\u5bf9\u591a\u8de8\u94fe \u4e00\u5bf9\u591a\u8de8\u94fe\u662f\u6307\uff0c\u5728\u4e00\u4e2a\u6765\u6e90\u94fe\u7684\u4e1a\u52a1\u5408\u7ea6\u7684\u4ea4\u6613\u4e2d\uff0c\u629b\u51fa\u4e86\u591a\u4e2a\u6307\u5411\u4e0d\u540c\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u4e8b\u4ef6\u3002 \u4e00\u5bf9\u591a\u8de8\u94fe\u548c\u4e00\u5bf9\u4e00\u8de8\u94fe\u7684\u6574\u4f53\u6d41\u7a0b\u4e00\u6837\uff0c\u53ea\u662f\u5176\u4e2d\u4e8b\u52a1\u5206\u4e3a\u5168\u5c40\u4e8b\u52a1\u548c\u5b50\u4e8b\u52a1\u7684\u6982\u5ff5\uff1a \u5b50\u4e8b\u52a1\uff1a\u6307\u6765\u6e90\u94fe\u548c\u67d0\u4e2a\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u4e8b\u52a1 \u5168\u5c40\u4e8b\u52a1\uff1a\u7efc\u5408\u5404\u4e2a\u5b50\u4e8b\u52a1\u7684\u6574\u4f53\u4e8b\u52a1 \u56e0\u6b64\u5728\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u4e2d\uff0c\u4e3a\u4e00\u5bf9\u591a\u8de8\u94fe\u4e8b\u52a1\u7279\u522b\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u4e8b\u52a1\u4fe1\u606f\u7ed3\u6784\u6765\u652f\u6301\u8be5\u573a\u666f\u4e0b\u7684\u8de8\u94fe\u4e8b\u52a1\u72b6\u6001\u8bb0\u5f55\u548c\u66f4\u65b0\u3002\u8be5\u7ed3\u6784\u5982\u4e0b\uff1a type txInfo struct { // \u5168\u5c40\u4e8b\u52a1\u72b6\u6001 globalState string // \u5b50\u4e8b\u52a1\u4fe1\u606f\uff0ckey\u4e3a\u5b50\u4e8b\u52a1ID\uff0c\u5373\u5404\u76ee\u7684\u94fe\u7684\u5730\u5740\uff0cvalue\u4e3a\u5b50\u4e8b\u52a1\u72b6\u6001 childTxInfo map < string , string > } \u5176\u4e2d\uff0c\u5168\u5c40\u4e8b\u52a1\u72b6\u6001\u548c\u5b50\u4e8b\u52a1\u521d\u59cb\u72b6\u6001\u4e3aBEGIN\u3002\u4e4b\u540e\uff0c\u5404\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u7f51\u5173\u83b7\u53d6\u8de8\u94fe\u4ea4\u6613\u5e76\u63d0\u4ea4\u7ed9\u5404\u76ee\u7684\u94fe\u6267\u884c\uff0c\u76ee\u7684\u94fe\u6267\u884c\u5b8c\u5b50\u4e8b\u52a1\u540e\u7531\u8de8\u94fe\u7f51\u5173\u6839\u636e\u6267\u884c\u7ed3\u679c\u5411\u4e2d\u7ee7\u94fe\u53cd\u9988\u5b50\u4e8b\u52a1\u72b6\u6001\uff0c\u4e2d\u7ee7\u94fe\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u5c06\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u65b0\uff1a \u5982\u679c\u4ea4\u6613\u6267\u884c\u6210\u529f\uff0c\u5219\u5c06\u5bf9\u5e94\u7684\u5b50\u4e8b\u52a1\u72b6\u6001\u8bbe\u7f6e\u4e3aSUCCESS\uff0c\u5f53\u6240\u6709\u5b50\u4e8b\u52a1\u72b6\u6001\u5747\u4e3aSUCCESS\u65f6\uff0c\u8de8\u94fe\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u5c06\u8be5\u5168\u5c40\u4e8b\u52a1ID\u5bf9\u5e94\u7684\u4e8b\u52a1\u72b6\u6001\u66f4\u65b0\u4e3aSUCCESS \u5982\u679c\u4ea4\u6613\u6267\u884c\u5931\u8d25\uff0c\u5219\u5c06\u5bf9\u5e94\u7684\u5b50\u4e8b\u52a1\u72b6\u6001\u8bbe\u7f6e\u4e3aFAILURE\uff0c\u5e76\u5c06\u8be5\u5168\u5c40\u4e8b\u52a1ID\u5bf9\u5e94\u7684\u4e8b\u52a1\u72b6\u6001\u66f4\u65b0\u4e3aFAILURE\uff0c \u4e4b\u540e\uff0c\u5404\u4e2a\u5e94\u7528\u94fe\uff08\u5305\u542b\u6765\u6e90\u94fe\u548c\u76ee\u7684\u94fe\uff09\u7684\u8de8\u94fe\u7f51\u5173\u53ef\u4ee5\u83b7\u53d6\u4e2d\u7ee7\u94fe\u7684\u5168\u5c40\u4e8b\u52a1\u548c\u5b50\u4e8b\u52a1\u7684\u72b6\u6001\uff0c \u6765\u5bf9\u5e94\u7528\u94fe\u8fdb\u884c\u4e1a\u52a1\u4e0a\u7684\u201c\u56de\u8c03\u201d\u64cd\u4f5c\u6216\u201c\u56de\u6eda\u201d\u64cd\u4f5c\u3002 \u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u8bbe\u8ba1 \u4e2d\u7ee7\u94fe\u4e0a\u7684\u8de8\u94fe\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u63a5\u53e3\u8bbe\u8ba1\u5982\u4e0b\uff1a // \u4e00\u5bf9\u4e00\u8de8\u94fe\u4e8b\u52a1\u521d\u59cb\u5316 Begin ( txId string ) // \u4e00\u5bf9\u591a\u8de8\u94fe\u4e8b\u52a1\u521d\u59cb\u5316 BeginMultiTXs ( globalId string , childTxIds ... string ) // \u62a5\u544a\u4e8b\u52a1\u6267\u884c\u7ed3\u679c Report ( txId string , result int32 ) // \u83b7\u53d6\u4e8b\u52a1\u72b6\u6001 GetStatus ( txId string )","title":"\u8de8\u94fe\u4e8b\u52a1\u65b9\u6848"},{"location":"bitxhub/design/interchain_transaction/#_1","text":"\u8de8\u94fe\u9700\u8981\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u539f\u5b50\u6027\u548c\u4e00\u81f4\u6027\uff0c\u5373\u6765\u6e90\u94fe\u548c\u76ee\u7684\u94fe\u4e0a\u7684\u4ea4\u6613\u8981\u4e48\u90fd\u6210\u529f\uff0c\u8981\u4e48\u90fd\u5931\u8d25\u56de\u6eda\u3002 \u4e3a\u6b64\uff0c\u4e2d\u7ee7\u94fe\u63d0\u4f9b\u4e86\u4e8b\u52a1\u7ba1\u7406\u673a\u5236\uff0c\u901a\u8fc7\u5185\u7f6e\u7684\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\uff0c\u6765\u4fdd\u8bc1\u4e0d\u540c\u4e1a\u52a1\u573a\u666f\u4e0b\u8de8\u94fe\u4ea4\u6613\u7684\u4e8b\u52a1\u6027\u3002 \u591a\u94fe\u6d88\u606f\u8868\u4e8b\u52a1\u65b9\u6848\u662f\u9488\u5bf9\u975e\u8d44\u4ea7\u4ea4\u6362\u7c7b\u4e1a\u52a1\u573a\u666f\u7684\u4e8b\u52a1\u65b9\u6848\uff0c\u5b83\u53ef\u4ee5\u652f\u6301\u4e00\u5bf9\u4e00\u8de8\u94fe\u548c\u4e00\u5bf9\u591a\u8de8\u94fe\u3002","title":"\u8de8\u94fe\u4e8b\u52a1\u65b9\u6848"},{"location":"bitxhub/design/interchain_transaction/#_2","text":"\u5f53\u6765\u6e90\u94fe\u4e1a\u52a1\u5408\u7ea6\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\u65f6\uff0c\u9664\u4e86\u63d0\u4f9b\u76ee\u7684\u94fe\u7684\u76ee\u6807\u4e1a\u52a1\u5408\u7ea6\u4e2d\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u548c\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u6765\u6e90\u94fe\u7684\u56de\u8c03\u65b9\u6cd5\u548c\u56de\u6eda\u65b9\u6cd5\u3002 \u6765\u6e90\u94fe\u8de8\u94fe\u7f51\u5173\u6355\u83b7\u8de8\u94fe\u4e8b\u4ef6\u5c01\u88c5\u6210IBTP\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\uff0c\u5e76\u7531\u4e2d\u7ee7\u94fe\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u8fdb\u884c\u5904\u7406\u3002\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u5c06\u521d\u59cb\u5316\u8be5\u8de8\u94fe\u4ea4\u6613\u6240\u5bf9\u5e94\u7684\u8de8\u94fe\u4e8b\u52a1\uff0c \u5728\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u4e2d\u4ee5KV\u5f62\u5f0f\u8bb0\u5f55\u8de8\u94fe\u4e8b\u52a1ID\u548c\u4e8b\u52a1\u72b6\u6001\u4fe1\u606f\uff0c\u5176\u4e2d\u8de8\u94fe\u4e8b\u52a1ID\u7531**\u6765\u6e90\u94feID || \u76ee\u7684\u94feID || IBTP index**\u7ec4\u6210\uff0c\u521d\u59cb\u7684\u8de8\u94fe\u72b6\u6001\u4fe1\u606f\u4e3aTransactionStatus_BEGIN\u3002 \u5f53\u76ee\u7684\u94fe\u6267\u884c\u5b8c\u8de8\u94fe\u4ea4\u6613\u65f6\uff0c\u7531\u76ee\u7684\u94fe\u8de8\u94fe\u7f51\u5173\u5f97\u5230\u6267\u884c\u7684\u7ed3\u679c\uff08\u6210\u529f\u6216\u5931\u8d25\uff09\uff0c\u5e76\u5c06\u8be5\u4fe1\u606f\u5c01\u88c5\u6210IBTP receipt\u63d0\u4ea4\u7ed9\u4e2d\u7ee7\u94fe\u3002 \u4e2d\u7ee7\u94fe\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u6839\u636e\u5176\u4e2d\u7684\u56de\u6267\u4fe1\u606f\uff0c\u66f4\u65b0\u8de8\u94fe\u4e8b\u52a1ID\u7684\u72b6\u6001\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u72b6\u6001\u66f4\u65b0\u4e3aTransactionStatus_SUCCESS\uff0c\u5426\u5219\u4e3aTransactionStatus_FAILURE\u3002 \u5982\u679c\u8de8\u94fe\u4e8b\u52a1\u6700\u7ec8\u72b6\u6001\u662f\u6210\u529f\uff0c\u5219\u6765\u6e90\u94fe\u8de8\u94fe\u7f51\u5173\u8c03\u7528\u6765\u6e90\u94fe\u4e1a\u52a1\u5408\u7ea6\u6ce8\u518c\u7684\u56de\u8c03\u51fd\u6570\u8fdb\u884c\u56de\u8c03\uff1b\u5982\u679c\u8de8\u94fe\u4e8b\u52a1\u72b6\u6001\u4e3a\u5931\u8d25\uff0c\u5219\u6765\u6e90\u94fe\u8de8\u94fe\u7f51\u5173\u5c06\u8c03\u7528\u6765\u6e90\u94fe\u4e1a\u52a1\u5408\u7ea6\u6ce8\u518c\u7684\u56de\u6eda\u51fd\u6570\u8fdb\u884c\u56de\u6eda\u64cd\u4f5c\u3002","title":"\u4e00\u5bf9\u4e00\u8de8\u94fe"},{"location":"bitxhub/design/interchain_transaction/#_3","text":"\u4e00\u5bf9\u591a\u8de8\u94fe\u662f\u6307\uff0c\u5728\u4e00\u4e2a\u6765\u6e90\u94fe\u7684\u4e1a\u52a1\u5408\u7ea6\u7684\u4ea4\u6613\u4e2d\uff0c\u629b\u51fa\u4e86\u591a\u4e2a\u6307\u5411\u4e0d\u540c\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u4e8b\u4ef6\u3002 \u4e00\u5bf9\u591a\u8de8\u94fe\u548c\u4e00\u5bf9\u4e00\u8de8\u94fe\u7684\u6574\u4f53\u6d41\u7a0b\u4e00\u6837\uff0c\u53ea\u662f\u5176\u4e2d\u4e8b\u52a1\u5206\u4e3a\u5168\u5c40\u4e8b\u52a1\u548c\u5b50\u4e8b\u52a1\u7684\u6982\u5ff5\uff1a \u5b50\u4e8b\u52a1\uff1a\u6307\u6765\u6e90\u94fe\u548c\u67d0\u4e2a\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u4e8b\u52a1 \u5168\u5c40\u4e8b\u52a1\uff1a\u7efc\u5408\u5404\u4e2a\u5b50\u4e8b\u52a1\u7684\u6574\u4f53\u4e8b\u52a1 \u56e0\u6b64\u5728\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u4e2d\uff0c\u4e3a\u4e00\u5bf9\u591a\u8de8\u94fe\u4e8b\u52a1\u7279\u522b\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u4e8b\u52a1\u4fe1\u606f\u7ed3\u6784\u6765\u652f\u6301\u8be5\u573a\u666f\u4e0b\u7684\u8de8\u94fe\u4e8b\u52a1\u72b6\u6001\u8bb0\u5f55\u548c\u66f4\u65b0\u3002\u8be5\u7ed3\u6784\u5982\u4e0b\uff1a type txInfo struct { // \u5168\u5c40\u4e8b\u52a1\u72b6\u6001 globalState string // \u5b50\u4e8b\u52a1\u4fe1\u606f\uff0ckey\u4e3a\u5b50\u4e8b\u52a1ID\uff0c\u5373\u5404\u76ee\u7684\u94fe\u7684\u5730\u5740\uff0cvalue\u4e3a\u5b50\u4e8b\u52a1\u72b6\u6001 childTxInfo map < string , string > } \u5176\u4e2d\uff0c\u5168\u5c40\u4e8b\u52a1\u72b6\u6001\u548c\u5b50\u4e8b\u52a1\u521d\u59cb\u72b6\u6001\u4e3aBEGIN\u3002\u4e4b\u540e\uff0c\u5404\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u7f51\u5173\u83b7\u53d6\u8de8\u94fe\u4ea4\u6613\u5e76\u63d0\u4ea4\u7ed9\u5404\u76ee\u7684\u94fe\u6267\u884c\uff0c\u76ee\u7684\u94fe\u6267\u884c\u5b8c\u5b50\u4e8b\u52a1\u540e\u7531\u8de8\u94fe\u7f51\u5173\u6839\u636e\u6267\u884c\u7ed3\u679c\u5411\u4e2d\u7ee7\u94fe\u53cd\u9988\u5b50\u4e8b\u52a1\u72b6\u6001\uff0c\u4e2d\u7ee7\u94fe\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u5c06\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u65b0\uff1a \u5982\u679c\u4ea4\u6613\u6267\u884c\u6210\u529f\uff0c\u5219\u5c06\u5bf9\u5e94\u7684\u5b50\u4e8b\u52a1\u72b6\u6001\u8bbe\u7f6e\u4e3aSUCCESS\uff0c\u5f53\u6240\u6709\u5b50\u4e8b\u52a1\u72b6\u6001\u5747\u4e3aSUCCESS\u65f6\uff0c\u8de8\u94fe\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u5c06\u8be5\u5168\u5c40\u4e8b\u52a1ID\u5bf9\u5e94\u7684\u4e8b\u52a1\u72b6\u6001\u66f4\u65b0\u4e3aSUCCESS \u5982\u679c\u4ea4\u6613\u6267\u884c\u5931\u8d25\uff0c\u5219\u5c06\u5bf9\u5e94\u7684\u5b50\u4e8b\u52a1\u72b6\u6001\u8bbe\u7f6e\u4e3aFAILURE\uff0c\u5e76\u5c06\u8be5\u5168\u5c40\u4e8b\u52a1ID\u5bf9\u5e94\u7684\u4e8b\u52a1\u72b6\u6001\u66f4\u65b0\u4e3aFAILURE\uff0c \u4e4b\u540e\uff0c\u5404\u4e2a\u5e94\u7528\u94fe\uff08\u5305\u542b\u6765\u6e90\u94fe\u548c\u76ee\u7684\u94fe\uff09\u7684\u8de8\u94fe\u7f51\u5173\u53ef\u4ee5\u83b7\u53d6\u4e2d\u7ee7\u94fe\u7684\u5168\u5c40\u4e8b\u52a1\u548c\u5b50\u4e8b\u52a1\u7684\u72b6\u6001\uff0c \u6765\u5bf9\u5e94\u7528\u94fe\u8fdb\u884c\u4e1a\u52a1\u4e0a\u7684\u201c\u56de\u8c03\u201d\u64cd\u4f5c\u6216\u201c\u56de\u6eda\u201d\u64cd\u4f5c\u3002","title":"\u4e00\u5bf9\u591a\u8de8\u94fe"},{"location":"bitxhub/design/interchain_transaction/#_4","text":"\u4e2d\u7ee7\u94fe\u4e0a\u7684\u8de8\u94fe\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u63a5\u53e3\u8bbe\u8ba1\u5982\u4e0b\uff1a // \u4e00\u5bf9\u4e00\u8de8\u94fe\u4e8b\u52a1\u521d\u59cb\u5316 Begin ( txId string ) // \u4e00\u5bf9\u591a\u8de8\u94fe\u4e8b\u52a1\u521d\u59cb\u5316 BeginMultiTXs ( globalId string , childTxIds ... string ) // \u62a5\u544a\u4e8b\u52a1\u6267\u884c\u7ed3\u679c Report ( txId string , result int32 ) // \u83b7\u53d6\u4e8b\u52a1\u72b6\u6001 GetStatus ( txId string )","title":"\u8de8\u94fe\u4e8b\u52a1\u5408\u7ea6\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/","text":"\u8de8\u94fe\u7f51\u5173\u8bbe\u8ba1\u65b9\u6848 \u6574\u4f53\u67b6\u6784 \u5728\u4e2d\u7ee7\u94fe\u7684\u8bbe\u8ba1\u4e2d\uff0c\u5bf9\u4e8e\u8de8\u94fe\u7f51\u5173\u7684\u4e3b\u8981\u529f\u80fd\u4f5c\u4e86\u7b80\u8981\u7684\u4ecb\u7ecd\u3002\u672c\u6587\u4e3b\u8981\u8be6\u7ec6\u4ecb\u7ecd\u8de8\u94fe\u7f51\u5173\u7684\u4e3b\u8981\u8bbe\u8ba1\u67b6\u6784\u601d\u60f3\u3002 \u4ece\u8de8\u94fe\u7f51\u5173\u7684**\u529f\u80fd**\u4e0a\u6765\u8bf4\uff0c\u8bbe\u8ba1\u4e0a\u9700\u8981\u89e3\u51b3\u7684\u96be\u70b9\u5305\u62ec\u4ee5\u4e0b\u51e0\u70b9\uff1a \u8de8\u94fe\u7f51\u5173\u9700\u8981\u5bf9\u63a5\u4e0d\u540c\u67b6\u6784\u7684\u533a\u5757\u94fe\uff0c\u5982\u4f55\u7b80\u5316\u8de8\u94fe\u7f51\u5173\u63a5\u5165\u4e0d\u540c\u533a\u5757\u94fe\u7684\u8de8\u94fe\u7f51\u5173\u8bbe\u8ba1\u4e0a\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u3002 \u8de8\u94fe\u7f51\u5173\u9700\u8981\u652f\u6301\u4e2d\u7ee7\u6a21\u5f0f\uff08\u76f4\u63a5\u548c\u4e2d\u7ee7\u94fe\u8fde\u63a5\uff09\u548c\u76f4\u8fde\u6a21\u5f0f\uff08\u76f4\u63a5\u548c\u5176\u4ed6\u7684\u8de8\u94fe\u7f51\u5173\u8fdb\u884c\u8fde\u63a5\uff09\uff0c\u5982\u4f55\u5728\u4e0d\u540c\u6a21\u5f0f\u95f4\u5207\u6362\u65f6\u8bbe\u8ba1\u4e0a\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u3002 \u4ece\u603b\u4f53\u67b6\u6784\u6765\u8bf4\uff0c\u8de8\u94fe\u7f51\u5173\u6839\u636e\u4e0d\u540c\u7684\u529f\u80fd\u91c7\u53d6\u4e86\u6a21\u5757\u5212\u5206\u7684\u65b9\u5f0f\uff0c\u4e3b\u8981\u7684\u529f\u80fd\u6a21\u5757\u6709Monitor\uff0cExecutor\uff0cExchanger \uff0cValidate Engine\uff0cAppchain Manager\uff0cNetwork\u7b49\u3002 \u5904\u7406\u6d41\u7a0b \u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u5904\u7406\u8fc7\u7a0b\u5982\u4e0b\uff1a A\uff0eMonitor\u76d1\u542c \u8de8\u94fe\u7f51\u5173PA\u542f\u52a8\u4e4b\u540e\uff0cAppchain A\u53d1\u8d77\u4e00\u7b14\u8de8\u94fe\u4ea4\u6613\uff0cMonitor\u6a21\u5757\u76d1\u542c\u5230\u8be5\u8de8\u94fe\u4ea4\u6613\uff0c\u8de8\u94fe\u7f51\u5173\u5bf9\u4e8e\u8be5\u8de8\u94fe\u4ea4\u6613\u505a\u51fa\u68c0\u67e5\u4e4b\u540e\uff0c\u4fdd\u5b58\u76f8\u5e94\u7684\u8de8\u94fe\u4ea4\u6613\u3002 B\uff0eExchanger\u8f6c\u53d1 Exchanger\u83b7\u53d6Monitor\u6536\u5230\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u4f5c\u76f8\u5e94\u7684\u68c0\u67e5\u540e\uff0c\u8fdb\u884c\u8f6c\u53d1\u3002\u8f6c\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6839\u636e\u8de8\u94fe\u4ea4\u6613\u7684\u76ee\u7684\u94feID\u4ee5\u53ca\u8fde\u63a5\u7684\u662f\u4e2d\u7ee7\u94fe\u8fd8\u662f\u76f4\u8fde\u7684\u5176\u4ed6\u8de8\u94fe\u7f51\u5173\u7b49\u4fe1\u606f\uff0c\u8f6c\u53d1\u5230\u6b63\u786e\u7684\u8def\u7531\u8def\u5f84\u3002 \u4e2d\u7ee7\u94fe\u6a21\u5f0f \u901a\u8fc7\u4e2d\u7ee7\u94fe\u7684SDK\uff0c\u63d0\u4ea4\u8de8\u94fe\u4ea4\u6613\u5230\u4e2d\u7ee7\u94fe\u7684\u5185\u7f6e\u5408\u7ea6\u4e0a\uff0c\u4e2d\u7ee7\u94fe\u8bb0\u5f55\u5e76\u6267\u884c\u9a8c\u8bc1\uff0c\u8f6c\u53d1\u7b49\u64cd\u4f5c\u3002 \u76f4\u8fde\u6a21\u5f0f \u901a\u8fc7P2P\u7f51\u7edc\u8fde\u63a5\u5176\u4ed6\u8de8\u94fe\u7f51\u5173\uff0c\u901a\u8fc7\u8de8\u94fe\u4ea4\u6613\u7684\u76ee\u7684\u94feID\u6765\u8f6c\u53d1\u5230\u76f8\u5e94\u7684\u8de8\u94fe\u7f51\u5173\u3002 C. Exchanger\u63a5\u53d7\u5916\u90e8\u8de8\u94fe\u4ea4\u6613 \u4e2d\u7ee7\u94fe\u6a21\u5f0f Exchanger \u7684\u5b50\u6a21\u5757Lite\u548cSyncer\u8d1f\u8d23\u540c\u6b65\u4e2d\u7ee7\u94fe\u7684\u533a\u5757\u5934\u548c\u8de8\u94fe\u4ea4\u6613\u7684\u4fe1\u606f\uff0c\u5bf9\u4e8e\u9a8c\u8bc1\u901a\u8fc7\u7684\u8de8\u94fe\u4ea4\u6613\uff0cExchanger\u8fdb\u884c\u8f6c\u9001\u5230Executor\u4e2d\u3002 \u76f4\u8fde\u6a21\u5f0f Exchanger\u901a\u8fc7P2P\u7f51\u7edc\u6536\u5230\u5bf9\u65b9\u8de8\u94fe\u7f51\u5173\u53d1\u9001\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u9a8c\u8bc1\u64cd\u4f5c\u3002\u9a8c\u8bc1\u901a\u8fc7\u7684\u8de8\u94fe\u4ea4\u6613\u8f6c\u9001\u5230Executor\u4e2d\u3002 Executor\u63d0\u4ea4\u8de8\u94fe\u4ea4\u6613\u5230\u5e94\u7528\u94fe\u4e0a\uff0c\u5e76\u6839\u636e\u6267\u884c\u7684\u7ed3\u679c\uff0c\u6784\u9020\u8fd4\u56de\u7684\u56de\u6267\u7c7b\u578b\u7684IBTP\u5305\uff0c\u8f6c\u9001\u5230Exchanger\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u8f6c\u53d1\u5de5\u4f5c\u3002 C\uff0e\u8de8\u94fe\u4ea4\u6613\u5728\u76ee\u7684\u94fe\u6267\u884c\u4e4b\u540e\uff0c\u8fd4\u56de\u56de\u6267\u4fe1\u606f\u3002 \u4e2d\u7ee7\u94fe\u6a21\u5f0f Exchanger \u7684\u5b50\u6a21\u5757Lite\u548cSyncer\u8d1f\u8d23\u540c\u6b65\u4e2d\u7ee7\u94fe\u7684\u533a\u5757\u5934\u548c\u8de8\u94fe\u4ea4\u6613\u7684\u4fe1\u606f\uff0c\u5bf9\u4e8e\u9a8c\u8bc1\u901a\u8fc7\u7684\u8de8\u94fe\u4ea4\u6613\u548c\u56de\u6267\u4fe1\u606f\uff0cExchanger\u8fdb\u884c\u8f6c\u9001\u5230Executor\u4e2d\u3002 \u76f4\u8fde\u6a21\u5f0f Exchanger\u901a\u8fc7P2P\u7f51\u7edc\u6536\u5230\u5bf9\u65b9\u8de8\u94fe\u7f51\u5173\u53d1\u9001\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u9a8c\u8bc1\u64cd\u4f5c\u3002\u9a8c\u8bc1\u901a\u8fc7\u7684\u8de8\u94fe\u4ea4\u6613\u6216\u8005\u56de\u6267\u8f6c\u9001\u5230Executor\u4e2d\u3002 \u4ee5\u4e0a\uff0c\u5c31\u662f\u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u6267\u884c\u8fc7\u7a0b\u3002 \u6a21\u5757\u4f9d\u8d56\u5173\u7cfb \u5728\u4e2d\u7ee7\u94fe\u6a21\u5f0f\u4e0b \u5728\u76f4\u8fde\u6a21\u5f0f\u4e0b \u9519\u8bef\u573a\u666f\u5904\u7406 \u5728\u6211\u4eec\u7684\u8bbe\u8ba1\u4e2d\uff0c\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u8de8\u94fe\u7f51\u5173\u53ef\u4ee5\u5728\u6ca1\u6709\u4fdd\u5b58\u4efb\u4f55\u8de8\u94fe\u76f8\u5173\u7684\u6570\u636e\u5c31\u80fd\u6b63\u786e\u542f\u52a8\u3002\u5f53\u7136\u8fd9\u9700\u8981\u4e0d\u65ad\u7684\u6062\u590d\u4e4b\u524d\u7684\u6570\u636e\uff0c\u91cd\u542f\u7684\u7f51\u7edc\u901a\u4fe1\u4ee3\u4ef7\u6bd4\u8f83\u5927\u3002\u4e3a\u4e86\u51cf\u5c11\u7f51\u7edc\u4f20\u8f93\u7684\u542f\u52a8\u8d1f\u62c5\uff0c\u6211\u4eec\u5728\u5bf9\u4e8e\u4e00\u4e9b\u5173\u952e\u7684\u8de8\u94fe\u4fe1\u606f\u8fd8\u662f\u8fdb\u884c\u4e86\u6570\u636e\u5e93\u7684\u4fdd\u5b58\u64cd\u4f5c\u3002 Executor \u5f00\u6e90\u7248\u672c\u9519\u8bef\u5206\u6790 \u4e2d\u7ee7\u94fe\u6e05\u9664\u6570\u636e \u4e2d\u7ee7\u94fe\u6e05\u9664\u6570\u636e\u4e4b\u540e\uff1a \u5982\u679cA\u94fe\u7684\u8de8\u94fe\u7f51\u5173\u4e0d\u91cd\u542f\uff0c\u518d\u4ece\u5176\u4ed6\u94fe\uff08\u5982B\u94fe\uff09\u53d1\u6765\u4ea4\u6613B-1\u3002Exchanger \u6a21\u5757\u5fc5\u5b9a\u662f\u5ffd\u7565\u8fd9\u4e9b\u4ea4\u6613\u7684\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53ea\u9700\u591a\u53d1\u51e0\u6761\u4ea4\u6613\u8986\u76d6\u524d\u9762\u5e8f\u53f7\u7684\u8de8\u94fe\u4ea4\u6613\u5373\u53ef\u3002 \u4f46\u662f\u5982\u679c\u4ece\u8be5\u8de8\u94fe\u7f51\u5173\u53d1\u9001\u65b0\u7684\u8de8\u94fe\u4ea4\u6613\u5230\u4e2d\u7ee7\u94fe\uff0c\u4e2d\u7ee7\u94fe\u4f1a\u6709\u5e8f\u53f7\u4e0d\u5bf9\u7684\u62a5\u9519\u3002\u4f46\u662f\u8de8\u94fe\u7f51\u5173\u5bf9\u8fd9\u90e8\u5206\u8fd8\u6ca1\u6709\u76f8\u5e94\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\u3002 \u5982\u679cA\u94fe\u7684\u8de8\u94fe\u7f51\u5173\u91cd\u542f \u6267\u884c\u6a21\u5757\u5bf9\u6bd4\u4e24\u8fb9\u7684\u6700\u65b0\u5e8f\u53f7\uff0c\u65e0\u6cd5\u8fdb\u884c\u6709\u6548\u64cd\u4f5c\u3002\u56e0\u4e3a\u5df2\u7ecf\u6709\u8de8\u94fe\u4ea4\u6613\u5199\u5165\u5e94\u7528\u94fe\u7684\u8d26\u672c\u4e86\uff0c\u518d\u6b21\u6267\u884c\u7684\u8bdd\u53ef\u80fd\u4f1a\u6709\u6f5c\u5728\u7684\u98ce\u9669\uff08\u6bd4\u5982\u8f6c\u8d26\u7684\u64cd\u4f5c\uff09 \u5408\u7ea6\u6e05\u9664\u6570\u636e \u5408\u7ea6\u6e05\u9664\u6570\u636e\u4e4b\u540e \u5982\u679c\u8de8\u94fe\u7f51\u5173\u4e0d\u91cd\u542f\uff0c\u6267\u884c\u6a21\u5757\u5185\u5b58\u4e2d\u8fd8\u662f\u6b63\u786e\u7684\u5e8f\u53f7\u3002 \u63a5\u53d7\u5176\u4ed6\u94fe\u7684\u4ea4\u6613\uff0c\u6267\u884c\u6a21\u5757\u4f1a\u8ba4\u4e3a\u6b63\u5e38\u2014\u2014\u4f46\u662f\u63d0\u4ea4\u5230\u5408\u7ea6\u4e0a\u65f6\u4f1a\u6709\u5e8f\u53f7\u9519\u8bef\u7684\u51fa\u9519\u60c5\u51b5\uff0c\u4ece\u800c\u6267\u884c\u6a21\u5757\u6784\u9020\u8de8\u94fe\u4ea4\u6613\u5931\u8d25\u7684\u56de\u6267\uff08\u6765\u6e90\u94fe\u4e0a\u53ef\u80fd\u4f1a\u91c7\u53d6\u56de\u6eda\u64cd\u4f5c\uff09\u3002\u540e\u7eed\u7684\u6267\u884c\u5168\u90e8\u90fd\u4f1a\u662f\u8fd9\u79cd\u5931\u8d25\u7684\u60c5\u51b5\u3002 \u5982\u679c\u8de8\u94fe\u7f51\u5173\u91cd\u542f \u6267\u884c\u6a21\u5757\u67e5\u8be2\u7684\u6700\u65b0\u5e8f\u53f7\u4e3a 0 \uff0c\u201c\u5176\u4ed6\u65b9\u201d\u53ef\u80fd\u4e3a5\u3002\u8be5\u79cd\u60c5\u51b5\u4f1a\u91cd\u65b0\u4e0a\u94fe\u6267\u884c\uff0c\u4f46\u662f\u53d1\u56de\u7684\u56de\u6267\u4fe1\u606f\u4f1a**\u56e0\u4e3a\u5e8f\u53f7\u9519\u4e71\u88ab\u201c\u5176\u4ed6\u65b9\u201d\u62d2\u7edd**\u3002\uff08\u6f5c\u5728\u98ce\u9669\u662f\u91cd\u65b0\u6267\u884c\u7684\u7ed3\u679c\u548c\u4e4b\u524d\u7684\u4e0d\u4e00\u81f4\uff09\u4f46\u662f\u8986\u76d6\u5b8c\u4e4b\u524d\u7684\u5e8f\u53f7\u4e4b\u540e\uff0c\u80fd\u591f\u6b63\u5e38\u8de8\u94fe\u3002 Monitor \u6a21\u5757\u9519\u8bef\u573a\u666f\u5206\u6790 \u4e2d\u7ee7\u94fe\u6e05\u9664\u6570\u636e \u4e2d\u7ee7\u94fe\u6e05\u9664\u6570\u636e\u4e4b\u540e\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u5206\u6790 \u5982\u679c\u8de8\u94fe\u7f51\u5173\u4e0d\u91cd\u542f\uff0c\u63d2\u4ef6\u51fa\u73b0\u65b0\u7684\u4ea4\u6613\u7684\u8bdd\uff0cMonitor \u6b63\u5e38\u629b\u7ed9\u5176\u4ed6\u6a21\u5757\uff0c\u53d1\u9001\u5230\u4e2d\u7ee7\u94fe\uff0c\u4f1a\u56e0\u4e3a IBTP\u7684 Index \u88ab\u62d2\u7edd\u6267\u884c\u3002 \u6309\u7167\u73b0\u5728\u7684\u60c5\u51b5\uff0c\u4f1a\u4e0d\u65ad\u91cd\u8bd5 \u5982\u679c\u8de8\u94fe\u7f51\u5173\u91cd\u542f\uff0c\u4e2d\u7ee7\u94fe\u8bb0\u5f55\u7684 Index \u503c\u6e05\u96f6\u3002Monitor \u6309\u7167\u5e94\u7528\u94fe\u8bb0\u5f55\u7684\u4ea4\u6613\u5168\u90e8\u91cd\u53d1\u3002\u5982\u679c\u76ee\u7684\u94fe\u7684\u8bb0\u5f55\u6ca1\u6709\u6e05\u7a7a\u7684\u8bdd\uff0c\u4e4b\u524d\u5904\u7406\u8fc7\u7684\u4f1a\u88ab\u5e94\u7528\u94fe\u62d2\u7edd\uff0c\u540e\u7eed\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff1b\u5982\u679c\u76ee\u7684\u94fe\u8bb0\u5f55\u6e05\u7a7a\u7684\u8bdd\uff0c\u4f1a\u9020\u6210\u4ea4\u6613\u91cd\u590d\u6267\u884c\uff08\u770b\u573a\u666f\u80fd\u4e0d\u80fd\u63a5\u53d7\u91cd\u590d\u6267\u884c\uff09 \u5408\u7ea6\u6e05\u9664\u6570\u636e \u5408\u7ea6\u6e05\u7a7a Pier \u4e0d\u91cd\u542f\uff0c\u65b0\u7684\u4ea4\u6613\u8fc7\u6765\u7684\u8bdd\uff0c\u4f1a\u88abMonitor \u6a21\u5757\u62d2\u7edd\uff08\u53ef\u80fd\u9700\u8981\u591a\u53d1\u51e0\u7b14\u65e0\u7528\u4ea4\u6613\u8986\u76d6\uff09\uff0c\u4e4b\u540e\u80fd\u591f\u91cd\u65b0\u5de5\u4f5c\u3002 Pier \u91cd\u542f\u7684\u8bdd\uff0cMonitor \u67e5\u8be2\u7684\u4ea4\u6613\u4e3a\u7a7a\uff0c\u4e2d\u7ee7\u94fe\u5374\u6709\u8bb0\u5f55\uff0cMonitor \u6ca1\u6709\u6709\u6548\u7684\u5904\u7406\u624b\u6bb5\uff0c\u5fc5\u987b\u6709\u5916\u90e8\u6765\u63a8\u9001\u65b0\u4ea4\u6613\u3002 Exchanger \u6a21\u5757\u8bbe\u8ba1 \u5728\u65b0\u7684\u8bbe\u8ba1\u4e2d\uff0c\u7edf\u4e00\u7531Exchanger\u6a21\u5757\u7ef4\u62a4 Index \u76f8\u5173\u7684\u4fe1\u606f\uff0c\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\u70b9\u3002 \u63a5\u53d7\u6765\u81ea Monitor\u6a21\u5757\u7684\u4ea4\u6613\u5e76\u6821\u9a8cindex\uff0c\u6821\u9a8c\u6210\u529f\u540e\u4ea4\u4e0e Syncer \u6a21\u5757\u63d0\u4ea4\u7ed9\u4e2d\u7ee7\u94fe\u6267\u884cIBTP\uff1b \u63a5\u53d7\u6765\u81ea Syncer \u6a21\u5757\u7684\u4ea4\u6613\u5e76\u6821\u9a8c index\uff0c\u6821\u9a8c\u6210\u529f\u4ea4\u4e0eExcuter\u6a21\u5757\u63d0\u4ea4\u7ed9\u5e94\u7528\u94fe\u6267\u884cIBTP\uff1b \u7136\u540e\u5904\u7406IBTP\u56de\u6267\u3002 \u5bf9\u4e8e\u4e22\u5931\u7684IBTP\u4ea4\u6613\uff0c\u8981\u6c42 Syncer \u548c Monitor \u63d0\u4f9b\u6309\u7167 IBTP_ID \u7684\u67e5\u8be2\u65b9\u5f0f\uff1b \u5bf9\u4e8e\u4e22\u5931\u7684IBTP\u56de\u6267\uff0c\u8981\u6c42 Executor \u63d0\u4f9b\u6309\u7167 IBTP_ID \u7684\u67e5\u8be2\u65b9\u5f0f\uff1b \u9519\u8bef\u5904\u7406 \u7531\u4e8eExchanger\u4f5c\u4e3a\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u7684\u6a21\u5757\u4e2d\u7684\u8f6c\u53d1\u6a21\u5757\uff0c\u5bf9Index\u7684\u6821\u9a8c\u7684\u8981\u6c42\u975e\u5e38\u9ad8\uff0c\u8981\u6c42\u4e00\u5b9a\u8981\u6839\u636eFrom\u6309\u5e8f\u8fdb\u884c\u3002 \u4e2d\u7ee7\u94fe -> \u8de8\u94fe\u7f51\u5173 \u5982\u679cExchanger\u6a21\u5757\u6536\u5230\u4e86Sycner\u6765\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u6bd4\u8f83\u6536\u5230\u7684IBTP\u7684\u5e8f\u53f7 Index1 \u548c\u5185\u5b58\u4e2d\u7ef4\u62a4\u7684\u5e8f\u53f7\u4fe1\u606f Index2 \uff1a Index1 = Index2 + 1\uff0c\u662f\u6b63\u5e38\u5904\u7406\u7684\u903b\u8f91 Index1 < Index2 + 1 \u8bf4\u660eAgent\u91cd\u590d\u63d0\u4ea4\u4e86\u8be5IBTP\uff0c\u76f4\u63a5\u629b\u5f03\u8be5IBTP\u5373\u53ef\u3002 Index1 > Index2 + 1 \u8bf4\u660eSycner\u6f0f\u6389\u4e86\u67d0\u4e9bIBTP\u6ca1\u6709\u53d1\u9001\uff0c\u6309\u7167\u6f0f\u6389\u7684 IBTP \u7684 IBTP_ID \uff0c\u8c03\u7528Agent\u7684\u67e5\u8be2\u63a5\u53e3\u6062\u590d\u6f0f\u6389\u7684 IBTP \u5373\u53ef\u3002 \u8de8\u94fe\u7f51\u5173 -> \u4e2d\u7ee7\u94fe \u5982\u679cExchanger\u6a21\u5757\u6536\u5230\u4e86\u4eceMonitor\u6765\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u6bd4\u8f83\u6536\u5230\u7684IBTP\u7684\u5e8f\u53f7 Index1 \u548c\u5185\u5b58\u4e2d\u7ef4\u62a4\u7684\u5e8f\u53f7\u4fe1\u606f Index2 \uff1a Index1 = Index2 + 1\uff0c\u662f\u6b63\u5e38\u5904\u7406\u7684\u903b\u8f91 Index1 < Index2 + 1 \u8bf4\u660eMonitor\u91cd\u590d\u63d0\u4ea4\u4e86\u8be5IBTP\uff0c\u76f4\u63a5\u629b\u5f03\u8be5IBTP\u5373\u53ef\u3002 Index1 > Index2 + 1 \u8bf4\u660eMonitor\u6f0f\u6389\u4e86\u67d0\u4e9bIBTP\u6ca1\u6709\u53d1\u9001\uff0c\u6309\u7167\u6f0f\u6389\u7684 IBTP \u7684 IBTP_ID \uff0c\u8c03\u7528Monitor\u7684\u67e5\u8be2\u63a5\u53e3\u6062\u590d\u6f0f\u6389\u7684 IBTP \u5373\u53ef\u3002 \u5982\u679c\u5728\u6062\u590dIBTP\u7684\u8fc7\u7a0b\u4e2d\u51fa\u9519\uff0c\u5219\u4ea4\u7531\u76f8\u5e94\u6a21\u5757\u4e00\u76f4retry\uff08\u4e0d\u8003\u8651\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u5220\u9664\u6570\u636e\u7684\u60c5\u51b5\uff09\u3002 \u67b6\u6784\u56fe \u6062\u590d\u673a\u5236 \u672a\u63d0\u4ea4\u7684\u8de8\u94fe\u4ea4\u6613 pier\u5728\u5b95\u673a\u91cd\u542f\u540e\uff0c\u9700\u8981\u628a\u5e94\u7528\u94fe\u4e2d\u672a\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4ea4\u6613\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\uff0c\u90a3\u4e48\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u4eceMonitor\u6a21\u5757\u83b7\u53d6\u5e94\u7528\u94fe\u5f53\u524d\u7684\u8de8\u94fe\u4ea4\u6613\u4fe1\u606f\uff0c\u5408\u7ea6\u4e2d\u4f7f\u7528outterMeta\u4fdd\u5b58 \u4eceSync\u6a21\u5757\u4e2d\u83b7\u53d6\u5df2\u7ecf\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4ea4\u6613\u4fe1\u606f\uff0c\u4e2d\u7ee7\u94fe\u4e2d\u4f7f\u7528interchainMeta\u4fdd\u5b58 \u904d\u5386outterMeta\u548cinterchainMeta\u5bf9\u6bd4\u8fd8\u6ca1\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u7136\u540e\u8c03\u7528Monitor\u6a21\u5757\u83b7\u53d6\u76f8\u5e94\u7684\u8de8\u94fe\u4ea4\u6613\u5e76\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe \u672a\u6267\u884c\u7684\u8de8\u94fe\u4ea4\u6613 \u5728 pier \u5b95\u673a\u91cd\u542f\u4e4b\u540e\uff0c\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u672a\u6267\u884c\u4ea4\u6613\uff1a \u4ece\u5176\u4ed6\u94fe\u53d1\u8fc7\u6765\u7684\u8de8\u94fe\u4ea4\u6613\u672a\u6267\u884c \u7531\u4e8e\u7f51\u5173\u90fd\u662f\u6309\u7167\u4e2d\u7ee7\u94fe\u9ad8\u5ea6\u987a\u5e8f\u6267\u884c\u7684\uff0c\u8fd9\u90e8\u5206\u4e0d\u7528\u7279\u6b8a\u7684\u6062\u590d\u673a\u5236\u3002\u91cd\u542f\u4e4b\u540e Syncer \u4ece\u4e0a\u6b21\u8bb0\u5f55\u7684\u9ad8\u5ea6\u91cd\u65b0\u6267\u884c\u3002 \u5df2\u7ecf\u6267\u884c\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u4f46\u662f\u56de\u6267\u672a\u53d1\u56de\u53bb \u901a\u8fc7 Executor \u6a21\u5757\u83b7\u53d6 InnerMeta\uff0c\u518d\u4ece Syncer \u83b7\u53d6 SourceReceiptCounter \u904d\u5386 InnerMeta \u548c SourceReceiptCounter \u5bf9\u6bd4\u80fd\u591f\u77e5\u9053\u90a3\u4e9b\u4ea4\u6613\u5df2\u7ecf\u6267\u884c\u4f46\u662f\u56de\u6267\u8fd8\u6ca1\u8fd4\u56de\u7ed9\u4e2d\u7ee7\u94fe\uff0c\u5e76\u901a\u8fc7 Executor \u6a21\u5757\u53bb\u5e94\u7528\u94fe\u83b7\u53d6IBTP \u56de\u6267\u3002 \u8fd8\u672a\u6267\u884c\u7684Callback \u4ea4\u6613\uff08\u5bf9\u5e94\u81ea\u5df1\u5df2\u7ecf\u53d1\u51fa\u7684\u5e26Callback\u7684\u8de8\u94fe\u4ea4\u6613\uff09 \u7531\u4e8e\u8de8\u94fe\u4ea4\u6613\u56de\u6267\u4e5f\u662f\u4e00\u79cd**\u8de8\u94fe\u4ea4\u6613\uff0c\u4e2d\u7ee7\u94fe\u4f1a\u6253\u5305\u5728 InterchainWrapper\u4e2d\uff0c\u8de8\u94fe\u7f51\u5173\u6309\u7167\u987a\u5e8f\u6765\u81ea\u7136\u4f1a\u6267\u884c\u5230\uff0c\u4e0d\u7528\u989d\u5916\u7684\u6062\u590d\u673a\u5236\u3002** Monitor \u6a21\u5757\u8bbe\u8ba1 Monitor\u4e0d\u518d\u7ef4\u62a4index\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u7531Exchanger\u7edf\u4e00\u8fdb\u884c\u7ef4\u62a4\u3002\u9700\u8981\u6ee1\u8db3\u4e00\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\u70b9\uff1a \u901a\u8fc7\u63d2\u4ef6\u76d1\u542c\u533a\u5757\u94fe\u4e0a\u7684\u8de8\u94fe\u4ea4\u6613 \u63d0\u4f9b\u67e5\u8be2IBTP\u7684\u63a5\u53e3\uff08\u6839\u636eibtp id\uff09 \u63d0\u4f9b\u67e5\u8be2\u5e94\u7528\u94fe\u4e0a\u8de8\u94fe\u4ea4\u6613Meta\u4fe1\u606f\u7684\u63a5\u53e3 \u63a5\u53e3\u8bbe\u8ba1 type Monitor interface { // Start starts the service of monitor Start () error // Stop stops the service of monitor Stop () error // listen on interchain ibtp from appchain ListenIBTP () <- chan * pb . IBTP // query historical ibtp by its id QueryIBTP ( id string ) ( * pb . IBTP , error ) // QueryOuterMeta queries latest index map of ibtps throwed on appchain QueryOuterMeta () map [ string ] uint64 } \u9519\u8bef\u5904\u7406 \u5e94\u7528\u94fe\u76d1\u542c\u51fa\u95ee\u9898 \u67e5\u8be2IBTP\u53ef\u80fd\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef\uff1a \u8f93\u5165\u7684IBTP ID\u683c\u5f0f\u6709\u8bef index\u4e0d\u5b58\u5728\uff08\u53ea\u8981\u5408\u7ea6\u4e0d\u52a8\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u60c5\u51b5\uff09 \u5408\u7ea6\u8c03\u7528\u51fa\u9519\uff0c\u6bd4\u5982\u5408\u7ea6\u5730\u5740\u4e0d\u5bf9\uff0c\u65b9\u6cd5\u540d\u51fa\u9519\u7b49\uff08\u91cd\u8bd5\uff0c\u9700\u8981\u6253log\u8fdb\u884c\u6392\u67e5\u6216\u8005\u66f4\u6362\u914d\u7f6e\uff09 \u8c03\u7528\u65f6\u7f51\u7edc\u51fa\u9519\uff08\u9700\u8981\u91cd\u8bd5\uff09 \u67e5\u8be2meta\u51fa\u9519\uff0c\u9700\u8981retry \u4e3b\u5907\u6a21\u5757\u8bbe\u8ba1 \u5728\u65b0\u7684\u8bbe\u8ba1\u4e2d\uff0c\u4e3b\u5907\u9ad8\u53ef\u7528\u5c06\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u6a21\u5757\uff0c\u5e76\u4e14\u5728Pier\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u79fb\u9664\u4e3b\u5907\u8282\u70b9\u7f16\u53f7\u7684\u914d\u7f6e\u9879\uff0c\u6539\u4e3a\u518d\u4e3b\u5907\u8282\u70b9\u542f\u52a8\u65f6\u968f\u673a\u751f\u6210\u5e8f\u53f7\u7684\u65b9\u6848\u3002\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\u70b9\uff1a \u80fd\u591f\u5728\u542f\u52a8\u65f6\u81ea\u4e3b\u53d1\u73b0\u81ea\u5df1\u662f\u4e3b\u8282\u70b9\u8fd8\u662f\u5907\u7528\u8282\u70b9 \u5907\u7528\u8282\u70b9\u80fd\u591f\u5728\u4e3b\u8282\u70b9\u5b95\u673a\u7684\u60c5\u51b5\u4e0b\u4e3b\u52a8\u5347\u7ea7\u6210\u4e3a\u4e3b\u8282\u70b9\uff0c\u7ee7\u7eed\u5b8c\u6210\u8de8\u94fe\u8bf7\u6c42 \u4e3b\u5907\u8282\u70b9\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\uff0c\u4e0d\u4f1a\u51fa\u73b0\u8de8\u94fe\u4ea4\u6613\u7684\u91cd\u590d\u6267\u884c \u63a5\u53e3\u8bbe\u8ba1 type HAMng interface { Start () error // \u542f\u52a8Pier\u7684\u4e3b\u4ece\u6a21\u5f0f Stop () error // \u505c\u6b62Pier\u7684\u4e3b\u4ece\u6a21\u5f0f IsMain () <- chan bool // \u5224\u65ad\u662f\u4e3b\u8282\u70b9\u8fd8\u662f\u5907\u7528\u8282\u70b9 } \u9519\u8bef\u5904\u7406 \u540c\u65f6\u6709\u4e24\u4e2a\u4e3b\u8282\u70b9\uff1a \u5982\u679c\u4e3b\u5907\u4e24\u4e2a\u8282\u70b9\u540c\u65f6\u8fde\u63a5\u4e2d\u7ee7\u94fe\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u540c\u65f6\u6709\u4e24\u4e2a\u4e3b\u8282\u70b9\u7684\u9519\u8bef\u4e0d\u4f1a\u4ea7\u751f\uff1b \u5982\u679c\u4e3b\u5907\u4e24\u4e2a\u8282\u70b9\u8fde\u63a5\u4e2d\u7ee7\u94fe\u7684\u4e24\u4e2a\u4e0d\u540c\u8282\u70b9\uff0c\u6709\u6781\u4f4e\u6982\u7387\u4ea7\u751f\u540c\u65f6\u6709\u4e24\u4e2a\u4e3b\u8282\u70b9\u7684\u9519\u8bef\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a\u9488\u5bf9\u8be5\u95ee\u9898\uff0c\u65b0\u7684\u8bbe\u8ba1\u5c06\u4f1a\u5728\u4e2d\u7ee7\u94fe\u8282\u70b9\u6536\u5230\u5e7f\u64ad\u8be2\u95ee\u540e\u67e5\u8be2\u672c\u5730\u7684\u4e3b\u8282\u70b9\u5217\u8868\u901a\u9053\uff0c\u5982\u679c\u6709\u901a\u9053\u8bf7\u6c42\u5c06\u4f1a\u8fd4\u56de\u5df2\u6709\u4e3b\u8282\u70b9\u7684\u56de\u590d\uff0c\u5e76\u4e14\u7f13\u51b2\u56de\u590d\u7ed9Pier\uff0c\u8ba9Pier\u7684\u4e3b\u5907\u8282\u70b9\u53d1\u8d77\u65b0\u4e00\u8f6e\u7684\u7ade\u4e89\u3002 Executor\u6a21\u5757\u8bbe\u8ba1 \u5728\u65b0\u7684\u8bbe\u8ba1\u4e2d\uff0cExecutor \u4e0d\u518d\u7ef4\u62a4 Index \u76f8\u5173\u7684\u4fe1\u606f\uff0c\u53ea\u662f\u4f5c\u4e3a\u5355\u7eaf\u7684\u6267\u884c\u5668\u3002\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\u70b9\u3002 \u63a5\u53d7\u6765\u81ea Exchanger \u6a21\u5757\u7684\u4ea4\u6613\uff0c\u5e76\u63d0\u4ea4\u5230\u63d2\u4ef6\u6267\u884c \u5bf9\u4e8e\u6267\u884c\u7684\u7ed3\u679c\uff0c\u6784\u9020\u51fa\u65b0\u7684IBTP\uff0c\u53d1\u56de\u7ed9 Exchanger \u6a21\u5757 \u5bf9\u4e8e\u4e22\u5931\u7684IBTP\u4ea4\u6613\uff0c\u63d0\u4f9b\u6309\u7167 From + Index \u7684\u67e5\u8be2\u65b9\u5f0f \u91cd\u542f\u4e4b\u540e\u67e5\u8be2\u5e94\u7528\u4e86\u4e0a\u6700\u65b0\u7684\u5df2\u6267\u884c\u7684 Meta \u4fe1\u606f \u63a5\u53e3\u8bbe\u8ba1 type Executor interface { Start () error // \u542f\u52a8Executor\u6a21\u5757 Stop () error // \u505c\u6b62Executor\u6a21\u5757 // \u6267\u884cIBTP\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u5982\u679c\u6ca1\u6709\u6267\u884c\u7ed3\u679c\uff0c\u8fd4\u56de nil ExecuteIBTP ( ibtp * pb . IBTP ) ( * pb . IBTP , error ) // \u67e5\u8be2\u6700\u65b0\u7684\u94fe\u4e0a\u5df2\u6267\u884c\u7684 Meta \u4fe1\u606f QueryInterchainMeta () map [ string ] uint64 // \u67e5\u8be2\u6700\u65b0\u7684\u94fe\u4e0a\u5df2\u6536\u5230\u56de\u8c03\u7684 Meta \u4fe1\u606f QueryCallbackMeta () map [ string ] uint64 // \u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u4ea4\u6613\u7684\u6267\u884c\u7ed3\u679c\u7684\u56de\u6267 QueryIBTPReceipt ( from string , index uint64 , originalIBTP * pb . IBTP ) ( * pb . IBTP , error ) } \u9519\u8bef\u5904\u7406 \u6267\u884c\u6a21\u5757\u76f8\u4fe1\u6267\u884c\u4f20\u8fdb\u6765\u7684IBTP\u662f\u6709\u5e8f\u7684\uff0c\u5e8f\u53f7\u7684\u7ef4\u62a4\u7531\u5176\u4ed6\u6a21\u5757\u7ef4\u62a4\u3002\u73b0\u5728\u8be5\u6a21\u5757\u53ea\u9700\u8981\u63d0\u4ea4\u4ea4\u6613\u4e0a\u94fe\u5373\u53ef\u3002 \u63d0\u4ea4\u4ea4\u6613\u5230\u5e94\u7528\u94fe \u56e0\u4e3a\u8de8\u94fe\u7f51\u5173\u63d0\u4ea4\u4ea4\u6613\u5230\u5e94\u7528\u94fe\u4e5f\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u60c5\u51b5\u51fa\u73b0\uff0c\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u5904\u7406\u65b9\u5f0f\u4e0d\u4e00\u81f4\u3002 - \u56e0\u4e3a\u7f51\u7edc\u51fa\u9519\u5bfc\u81f4\u63d0\u4ea4\u4ea4\u6613\u65e0\u6cd5\u6210\u529f\uff08\u5176\u4ed6\u7c7b\u578b\u9700\u8981\u91cd\u8bd5\u7684\u60c5\u51b5\uff09 \u8fd9\u79cd\u60c5\u51b5\u6267\u884c\u91cd\u8bd5\u5373\u53ef \uff08\u4f46\u662f\u5fc5\u987b\u786e\u5b9a\u662f\u7f51\u7edc\u9519\u8bef\uff09 - \u56e0\u4e3a\u8de8\u94fe\u4ea4\u6613\u53c2\u6570\u8bbe\u7f6e\u51fa\u9519 - \u51fd\u6570\u6216\u8005\u51fd\u6570\u53c2\u6570\u51fa\u9519\uff0c\u6216\u8005ABI\u6587\u4ef6\u914d\u7f6e\u51fa\u9519 \u8fd9\u79cd\u60c5\u51b5\u4e0b\u8c03\u7528\u5408\u7ea6\u7684\u4e13\u95e8\u7684\u51fa\u9519\u51fd\u6570\uff0c\u4f7f\u5f97\u8be5 Index \u88ab\u6d88\u8017\u3002 - \u51fd\u6570\u53c2\u6570\u90fd\u6b63\u786e\uff0c\u4f46\u662f\u5408\u7ea6\u6267\u884c\u65f6\u76ee\u7684\u5408\u7ea6\u4e0d\u5b58\u5728\u7b49\u9519\u8bef \u76f4\u63a5\u5728\u5408\u7ea6\u8bb0\u5f55\u8be5\u4ea4\u6613\u4e3a\u5931\u8d25\uff0c\u5e76\u8fd4\u56de\uff0cIndex \u88ab\u6d88\u8017\u3002 - \u63d0\u4ea4\u4e0a\u94fe\u6210\u529f\uff0c\u4f46\u662f\u6784\u9020\u56de\u6267\u5931\u8d25\uff08Core\u6253\u5370\u9519\u8bef\uff09 \u7531\u4e8e\u56de\u6267IBTP\u662f\u7531\u63d2\u4ef6\u8fdb\u884c\u6784\u9020\u7684\uff0c\u6240\u4ee5\u8de8\u94fe\u7f51\u5173\u9700\u8981\u9884\u8bbe\u63d2\u4ef6\u4e00\u5b9a\u4f1a\u6784\u9020\u56de\u6267\u8fd4\u56de\u51fa\u6765\u3002\uff08\u8de8\u94fe\u7f51\u5173**\u9700\u8981\u5bf9\u63d2\u4ef6\u8fd4\u56de\u7684\u4e1c\u897f\u8fdb\u884c\u68c0\u67e5\uff0c\u9632\u6b62\u4e0d\u5fc5\u8981\u7684Panic**\uff09 Syncer \u6a21\u5757\u8bbe\u8ba1 Syncer \u6a21\u5757\u8d1f\u8d23\u548c\u4e2d\u7ee7\u94fe\u7684\u4ea4\u4e92\uff0cExchanger \u6709\u4efb\u4f55\u4ece\u4e2d\u7ee7\u94fe\u83b7\u53d6\u4fe1\u606f\u7684\u9700\u6c42\u90fd\u662f\u901a\u8fc7 Syncer \u6a21\u5757\u8fdb\u884c\u3002Syncer \u9700\u8981\u63d0\u4f9b\u7684\u529f\u80fd\uff1a \u76d1\u542c\u4e2d\u7ee7\u94fe\u4e0a\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u5e76\u63a8\u9001\u8de8\u94fe\u4ea4\u6613\u5230 Exchanger \u4e2d \u6839\u636e\u5e94\u7528\u94fe ID \u67e5\u8be2\u4e2d\u7ee7\u94fe\u4e0a\u7684Meta\u4fe1\u606f \u6839\u636e IBTP ID \u67e5\u8be2\u4e2d\u7ee7\u94fe\u4e0a\u8de8\u94fe\u4ea4\u6613 \u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u5230\u4e2d\u7ee7\u94fe\u4e0a \u5411\u4e2d\u7ee7\u94fe\u67e5\u8be2\u8d44\u4ea7\u4ea4\u6362\u7c7b\u578b\u8de8\u94fe\u4ea4\u6613\u7684\u591a\u7b7e\u4fe1\u606f \u63a5\u53e3\u8bbe\u8ba1 \u7ed3\u5408\u73b0\u5728 Exchanger \u7684\u8bbe\u8ba1\uff0cSyncer \u9700\u8981\u63d0\u4f9b\u4ee5\u4e0b\u7684\u63a5\u53e3 type Syncer interface { // \u542f\u52a8Syncer\u6a21\u5757 Start () error // \u505c\u6b62Syncer\u6a21\u5757 Stop () error // \u67e5\u8be2\u4e2d\u7ee7\u94fe\u4e0a\u5df2\u6536\u5230\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u6700\u65b0 Index \u7684Meta\u4fe1\u606f QueryInterchainMeta () map [ string ] uint64 // \u6839\u636e IBTP \u7684 ID \u67e5\u8be2\u4e2d\u7ee7\u94fe\u4e0a\u7684\u8bb0\u5f55 QueryIBTP ( ibtpID string ) ( * pb . IBTP , error ) // \u76d1\u542c\u94fe\u4e0a\u629b\u51fa\u7684\u8de8\u94fe\u4ea4\u6613 ListenIBTP () <- chan * pb . IBTP // \u53d1\u9001\u5176\u4ed6\u94fe\u7684 IBTP \u5230\u5e94\u7528\u94fe\u4e0a\u6267\u884c\u3002 SendIBTP ( ibtp * pb . IBTP ) error // \u4ece\u4e2d\u7ee7\u94fe\u83b7\u53d6\u8d44\u4ea7\u4ea4\u6362\u7684\u591a\u7b7e\u4fe1\u606f GetAssetExchangeSigns ( id string ) ([] byte , error ) // \u4ece\u4e2d\u7ee7\u94fe\u96c6\u7fa4\u83b7\u53d6IBTP\u7684\u591a\u7b7e\u4fe1\u606f GetIBTPSigns ( ibtp * pb . IBTP ) ([] byte , error ) // \u4ece\u4e2d\u7ee7\u94fe\u83b7\u53d6\u5df2\u6ce8\u518c\u7684\u5e94\u7528\u94fe\u7ec4 GetAppchains () ([] * rpcx . Appchain , error ) // \u901a\u8fc7appchain id\u83b7\u53d6 interchain meta\u4fe1\u606f GetInterchainById ( from string ) * pb . Interchain // \u6ce8\u518cUnion\u6a21\u5f0f\u4e0b\u7684recover\u5904\u7406\u5668 RegisterRecoverHandler ( RecoverUnionHandler ) error // \u6ce8\u518c\u53ef\u62c9\u53d6appchains\u4fe1\u606f\u7684\u5904\u7406\u5668 RegisterAppchainHandler ( handler AppchainHandler ) error } \u6062\u590d\u5904\u7406 Syncer \u4ece\u4e2d\u7ee7\u94fe\u540c\u6b65\u5230\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u6682\u65f6\u5b58\u653e\u5728\u672c\u5730\u7684\u5b58\u50a8\u4e2d\u3002\u9700\u8981\u8bb0\u5f55\u7684\u4fe1\u606f\u662f\uff1a \u4e0a\u6b21\u6267\u884c\u5230\u6700\u540e\u4e00\u4e2a\u533a\u5757\u9ad8\u5ea6 \u5df2\u7ecf\u63a5\u6536\u5230\u7684IBTP\u7684\u4fe1\u606f \u91cd\u542f\u4e4b\u540e\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a \u5982\u679c\u5b58\u50a8\u6ca1\u6709\u5220\u9664\uff0c\u67e5\u8be2\u5230\u6700\u540e\u4e00\u4e2a\u5904\u7406\u8fc7\u7684\u533a\u5757\u9ad8\u5ea6\uff0c\u4ece\u8fd9\u4e2a\u9ad8\u5ea6\u5f00\u59cb\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613\u7684\u5904\u7406\uff08\u53ef\u80fd\u4f1a\u6709\u90e8\u5206\u8de8\u94fe\u4ea4\u6613\u91cd\u590d\u63d0\u4ea4\uff0c\u4f46\u662f\u6ca1\u5173\u7cfb\uff0cExchanger\u4f1a\u5ffd\u7565\u8fd9\u4e9b\u91cd\u590d\u63d0\u4ea4\u7684\u4ea4\u6613\uff09 \u5982\u679c\u5b58\u50a8\u88ab\u5220\u9664\uff0cSyncer \u91cd\u7b2c\u4e00\u4e2a\u533a\u5757\u5f00\u59cb\u540c\u6b65\uff0c\u5e76\u63d0\u4ea4\u8fd9\u4e9b\u533a\u5757\u7684\u6240\u6709\u4ea4\u6613\uff08\u8fd9\u91cc\u4e5f\u4f1a\u7531 Exchanger \u6a21\u5757\u6765\u5ffd\u7565\u5df2\u7ecf\u6267\u884c\u8fc7\u7684\u4ea4\u6613\uff09 \u63d2\u4ef6\u8bbe\u8ba1 \u6982\u8ff0 \u7531\u4e8e\u73b0\u5728\u91c7\u7528\u533a\u5757\u94fe\u670d\u52a1\u7684\u5404\u79cd\u5e94\u7528\u53ef\u80fd\u5728\u4f7f\u7528\u591a\u79cd\u4e0d\u540c\u67b6\u6784\u7684\u533a\u5757\u94fe\uff0c\u6240\u4ee5\u5982\u679c\u8de8\u94fe\u5e73\u53f0\u60f3\u8981\u83b7\u5f97\u5bf9\u63a5\u5404\u79cd\u533a\u5757\u94fe\u7684\u8de8\u94fe\u80fd\u529b\u7684\u8bdd\uff0c\u5fc5\u7136\u4f7f\u5f97\u9002\u914d\u5f02\u6784\u533a\u5757\u94fe\u7684\u90e8\u5206\u8fc7\u4e8e\u590d\u6742\u3002 \u4e3a\u4e86\u7b80\u5316\u8de8\u94fe\u7f51\u5173\u5bf9\u4e8e\u4e0d\u540c\u67b6\u6784\u7684\u533a\u5757\u94fe\u7684\u9002\u914d\u5de5\u4f5c\uff0c\u6211\u4eec\u5c06\u6240\u6709\u76f4\u63a5\u548c\u5e94\u7528\u94fe\u76f4\u63a5\u4ea4\u4e92\u7684\u90e8\u5206\u62bd\u8c61\u5230Plugin\u4e2d\uff0cPlugin\u4e3a\u8de8\u94fe\u7f51\u5173\u63d0\u4f9b\u5fc5\u8981\u7684\u67e5\u8be2\u5e94\u7528\u94fe\u72b6\u6001\u3001\u63d0\u4ea4\u8de8\u94fe\u4ea4\u6613\u5230\u5e94\u7528\u94fe\u7b49\u670d\u52a1\u7684\u63a5\u53e3\uff0c\u505a\u5230\u4e86\u5bf9\u4e8e\u5e94\u7528\u94fe\u672c\u8eab\u67b6\u6784\u590d\u6742\u6027\u5bf9\u4e8e\u8de8\u94fe\u7f51\u5173\u662f\u900f\u660e\u7684\u3002 Plugin\u6a21\u5f0f\u7684\u4e00\u5927\u7279\u70b9\u662f\u5c06Pier\u4e0e\u5e94\u7528\u94fe\u7684\u4ea4\u4e92\u6a21\u5757\u548cPier\u6838\u5fc3\u6a21\u5757\u8fdb\u884c\u89e3\u8026\uff0c\u4ece\u800c\u65b9\u4fbf\u66f4\u591a\u7684\u5e94\u7528\u94fe\u52a0\u5165\u8de8\u94fe\u7cfb\u7edf\u4e2d\u3002Plugin\u4f5c\u4e3a\u4e00\u4e2a\u548cPier\u76f8\u5bf9\u72ec\u7acb\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u662f\u901a\u8fc7Pier\u8fd0\u884c\u65f6\u5916\u90e8\u542f\u52a8\u670d\u52a1\u7684\u65b9\u5f0f\u8fdb\u884c\u4f7f\u7528\u3002\u4e3a\u4e86\u80fd\u5b9e\u73b0\u4e0e\u5e94\u7528\u94fe\u7684\u4ea4\u4e92\u80fd\u529b\uff0cPlugin\u9700\u8981\u6839\u636e\u4e0d\u540c\u533a\u5757\u94fe\u7684\u673a\u5236\u5177\u4f53\u5b9e\u73b0\u7279\u5b9a\u7684\u63a5\u53e3\u3002\u63a5\u53e3\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u529f\u80fd\uff1a \u76d1\u542c\u76f8\u5e94\u533a\u5757\u94fe\u4e0a\u7684\u8de8\u94fe\u4e8b\u4ef6\u5e76\u4f20\u9012\u7ed9Pier\u5904\u7406\uff1b \u6267\u884c\u6765\u81ea\u4e8e\u5176\u4ed6\u533a\u5757\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\uff1b \u80fd\u591f\u67e5\u8be2\u76f8\u5e94\u533a\u5757\u94fe\u4e0a\u8de8\u94fe\u4ea4\u6613\u76f8\u5173\u7684\u5143\u6570\u636e\u3002 \u80fd\u591f\u67e5\u8be2\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u548c\u8de8\u94fe\u8bf7\u6c42\u7684\u5386\u53f2\u6570\u636e \u603b\u7684\u6765\u8bf4\uff0c\u91c7\u7528Plugin\u673a\u5236\u7684\u4f18\u52bf\u6709\u5982\u4e0b\u4e24\u70b9\uff1a \u65b9\u4fbf\u66f4\u65b0\uff0c\u80fd\u591f\u5728\u4e0d\u505c\u6b62Pier\u7684\u65b9\u5f0f\u4e0b\u66f4\u65b0Plugin\uff1b \u65b9\u4fbf\u9002\u914d\u4e0d\u540c\u7684\u533a\u5757\u94fe\uff0c\u800c\u4e0d\u7528\u6539\u52a8Pier\u3002 Plugin\u63a5\u53e3\u8bbe\u8ba1 \u4e3a\u4e86\u51cf\u5c11Pier core\u548c\u5e94\u7528\u94fe\u4e4b\u95f4\u7684\u8026\u5408\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86Plugin\u7684\u7edf\u4e00\u7684\u63a5\u53e3\uff0cPlugin\u4e3b\u8981\u4e3aPier core\u63d0\u4f9b\u5411\u5e94\u7528\u94fe\u7684\u72b6\u6001\u67e5\u8be2\u548c\u8d44\u6e90\u8c03\u7528\u7684\u63a5\u53e3\u3002\u5177\u4f53\u7684\u63a5\u53e3\u548c\u8bf4\u660e\u5982\u4e0b\uff1a type Client interface { // \u4f20\u9012\u76f8\u5e94\u7684\u4fe1\u606f\u8fdb\u884c\u521d\u59cb\u5316 Initialize ( configPath string , pierID string , extra [] byte ) error // \u542f\u52a8Plugin\u670d\u52a1\u7684\u63a5\u53e3 Start () error \u200b // \u505c\u6b62Plugin\u670d\u52a1\u7684\u63a5\u53e3 Stop () error \u200b // Plugin\u8d1f\u8d23\u5c06\u533a\u5757\u94fe\u4e0a\u4ea7\u751f\u7684\u8de8\u94fe\u4e8b\u4ef6\u8f6c\u5316\u4e3a\u6807\u51c6\u7684IBTP\u683c\u5f0f\uff0cPier\u901a\u8fc7GetIBTP\u63a5\u53e3\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u518d\u8fdb\u884c\u5904\u7406 GetIBTP () chan * pb . IBTP \u200b // Plugin \u8d1f\u8d23\u6267\u884c\u5176\u4ed6\u94fe\u8fc7\u6765\u7684\u8de8\u94fe\u8bf7\u6c42\uff0cPier\u8c03\u7528SubmitIBTP\u63d0\u4ea4\u6536\u5230\u7684\u8de8\u94fe\u8bf7\u6c42\u3002[][]byte \u4e3a\u6267\u884c\u8de8\u94fe\u8bf7\u6c42\u7684\u7ed3\u679c\u3002 SubmitIBTP ( * pb . IBTP ) ( * pb . SubmitIBTPResponse , error ) // GetOutMessage \u8d1f\u8d23\u5728\u8de8\u94fe\u5408\u7ea6\u4e2d\u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u3002\u67e5\u8be2\u952e\u503c\u4e2dto\u6307\u5b9a\u76ee\u7684\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u6765\u6e90\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 GetOutMessage ( to string , idx uint64 ) ( * pb . IBTP , error ) \u200b // GetInMessage \u8d1f\u8d23\u5728\u8de8\u94fe\u5408\u7ea6\u4e2d\u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u3002\u67e5\u8be2\u952e\u503c\u4e2dfrom\u6307\u5b9a\u6765\u6e90\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 GetInMessage ( from string , idx uint64 ) ([][] byte , error ) \u200b // GetInMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u76ee\u7684\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219\u53ef\u80fd\u6709\u591a\u6761\u94fe\u548cA\u8fdb\u884c\u8de8\u94fe\uff0c\u5982B->A:3; C->A:5\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u6765\u6e90\u94feID\uff0cvalue\u5bf9\u5e94\u8be5\u6765\u6e90\u94fe\u5df2\u53d1\u9001\u7684\u6700\u65b0\u7684\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 GetInMeta () ( map [ string ] uint64 , error ) \u200b // GetOutMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5df2\u53d1\u9001\u5230\u8be5\u76ee\u7684\u94fe\u7684\u6700\u65b0\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 GetOutMeta () ( map [ string ] uint64 , error ) \u200b // GetCallbackMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\uff1b\u540c\u65f6\u7531\u4e8e\u8de8\u94fe\u8bf7\u6c42\u4e2d\u652f\u6301\u56de\u8c03\u64cd\u4f5c\uff0c\u5373A->B->A\u4e3a\u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u56de\u8c03\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\uff0c\u5982A->B->:2; A->C\u2014>A:4\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5230\u8be5\u76ee\u7684\u94fe\u6700\u65b0\u7684\u5e26\u56de\u8c03\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:2, C:4}\u3002\uff08\u6ce8\u610f CallbackMeta\u5e8f\u53f7\u53ef\u80fd\u548coutMeta\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u7531A\u53d1\u51fa\u7684\u8de8\u94fe\u8bf7\u6c42\u90e8\u5206\u662f\u6ca1\u6709\u56de\u8c03\u7684\uff09 GetCallbackMeta () ( map [ string ] uint64 , error ) \u200b // CommitCallback \u6267\u884c\u5b8cIBTP\u5305\u4e4b\u540e\u8fdb\u884c\u4e00\u4e9b\u56de\u8c03\u64cd\u4f5c\u3002 CommitCallback ( ibtp * pb . IBTP ) error \u200b // Name \u63cf\u8ff0Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u7684\u81ea\u5b9a\u4e49\u540d\u79f0\uff0c\u4e00\u822c\u548c\u4e1a\u52a1\u76f8\u5173\uff0c\u5982\u53f8\u6cd5\u94fe\u7b49\u3002 Name () string \u200b // Type \u63cf\u8ff0Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u7c7b\u578b\uff0c\u6bd4\u5982Fabric Type () string } \u8bbe\u8ba1\u8bf4\u660e \u7531\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u533a\u5757\u94fe\u5728\u67b6\u6784\u4e0a\u7684\u4e0d\u540c\uff0c\u5177\u4f53\u5b9e\u73b0\u4e0a\u8ff0\u7684\u63a5\u53e3\u5fc5\u7136\u6709\u6240\u4e0d\u540c\uff0c\u6211\u4eec\u6ca1\u53d1\u4ece\u4ee3\u7801\u5c42\u9762\u4ed4\u7ec6\u4ecb\u7ecd\uff0c\u4f46\u662f\u80fd\u591f\u5927\u6982\u4ecb\u7ecd\u4e00\u4e0bPlugin\u7684\u5b9e\u73b0\u7684\u601d\u8def\u3002 \u5728\u6211\u4eec\u7684\u8bbe\u8ba1\u4e2d\uff0c\u8de8\u94fe\u7f51\u5173\u548cPlugin\u4e4b\u95f4\u6d89\u53ca\u5230\u8de8\u94fe\u4ea4\u6613\u7684\u63a5\u53e3\u90fd\u662f\u901a\u8fc7IBTP\u6765\u4ea4\u4e92\u7684\uff0c\u8de8\u94fe\u7f51\u5173\u4e0d\u9700\u8981\u5173\u5fc3\u5728\u5e94\u7528\u94fe\u4e0a\u8de8\u94fe\u8bf7\u6c42\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\uff0c\u9700\u8981\u5904\u7406\u7684\u90fd\u662fIBTP Package\u3002\u6240\u4ee5\u5728\u5b9e\u73b0Plugin\u4e0a\u4e5f\u9700\u8981\u56f4\u7ed5IBTP Package\u4f5c\u51fa\u4e00\u5b9a\u7684\u9002\u914d\u3002\u603b\u7684\u6765\u8bf4\u5177\u4f53\u9700\u8981\u505a\u5230\u5982\u4e0b\u7684\u51e0\u70b9\uff1a \u76d1\u542c\u5e94\u7528\u533a\u5757\u94fe\u4e0a\u7684\u8de8\u94fe\u4e8b\u4ef6\uff0c\u5e76\u4f20\u9012\u7ed9Pier core\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u4e2a\u4e00\u822c\u53ef\u4ee5\u901a\u8fc7\u8ba2\u9605\u533a\u5757\u94fe\u7684\u4e8b\u4ef6\u7684\u529f\u80fd\u6765\u505a\u5230\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cPlugin\u9700\u8981\u8d1f\u8d23\u8de8\u94fe\u4e8b\u4ef6\u5230IBTP Package\u7684\u8f6c\u6362\u3002Plugin\u91cd\u8981\u7684\u7279\u70b9\u4e4b\u4e00\u5c31\u662f\u5c4f\u853d\u4e86\u5e95\u5c42\u5e94\u7528\u94fe\u4e0d\u540c\u6570\u636e\u683c\u5f0f\u4e4b\u95f4\u7684\u590d\u6742\u6027\uff0c\u5411Pier core\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684IBTP Package\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u5bf9\u4e8ePier core\u7684\u5904\u7406\u6765\u8bf4\u66f4\u52a0\u4fbf\u6377\u3002 \u63d0\u4f9b\u67e5\u8be2\u5e94\u7528\u94fe\u8de8\u94fe\u5408\u7ea6\u7ef4\u62a4\u7684\u8de8\u94feMeta\u4fe1\u606f\u63a5\u53e3\u3002Pier\u672c\u8eab\u662f\u4e0d\u4fdd\u5b58\u8de8\u94fe\u4ea4\u6613\u7684\u72b6\u6001\u4fe1\u606f\u7684\uff0c\u9700\u8981\u957f\u65f6\u95f4\u5b58\u50a8\u7684\u8de8\u94fe\u4ea4\u6613\u8bb0\u5f55\u4fe1\u606f\u90fd\u5e94\u8be5\u5728\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u4e0a\u8fdb\u884c\u8bb0\u5f55\u3002\u6240\u4ee5Pier\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u90fd\u5e94\u8be5\u53ef\u4ee5\u4ece\u5b95\u673a\u7b49\u60c5\u51b5\u4e2d\u6062\u590d\uff0c\u6062\u590d\u7684\u8fc7\u7a0b\u4e5f\u6b63\u9700\u8981\u8fd9\u4e9b\u63a5\u53e3\u8fdb\u884c\u67e5\u8be2\u3002 \u63d0\u4ea4\u5176\u4ed6\u94fe\u4e0a\u6765\u7684\u8de8\u94fe\u8bf7\u6c42\u3002\u8fd9\u4e00\u6b65\u662f\u76d1\u542c\u672c\u5e94\u7528\u94fe\u8de8\u94fe\u8bf7\u6c42\u7684\u9006\u64cd\u4f5c\uff0c\u4f46\u662fPlugin\u548cPier core\u5728\u4ea4\u4e92\u4e0a\u90fd\u5e94\u8be5\u662fIBTP\u683c\u5f0f\u7684Package\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u529f\u80fd\u4e2d\uff0cPlugin\u9700\u8981\u89e3\u5f00IBTP package\uff0c\u8f6c\u5316\u4e3a\u5e94\u7528\u94fe\u53ef\u4ee5\u8bc6\u522b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5728\u63d0\u4ea4\u5230\u8de8\u94fe\u5408\u7ea6\u4e0a\u8fdb\u884c\u6267\u884c\u3002\u540c\u65f6\u5bf9\u4e8e\u8de8\u94fe\u4ea4\u6613\u53ef\u80fd\u7684\u6267\u884c\u51fa\u9519\uff0cPlugin\u4e5f\u5e94\u8be5\u63d0\u4f9b\u4e00\u5b9a\u7684\u9519\u8bef\u5904\u7406\u80fd\u529b\u3002\u5bf9\u4e8e\u6267\u884c\u7684\u7ed3\u679c\uff0c\u4e5f\u9700\u8981\u4e3aPier core \u63d0\u4f9b\u7edf\u4e00\u7684Response\u6570\u636e\u7ed3\u6784\u3002 \u8de8\u94fe\u5408\u7ea6\u8bbe\u8ba1 \u6309\u7167IBTP\u7ed3\u6784\u7684\u8bbe\u8ba1\u7684\u8bdd\uff0cBitxHub\u53ea\u8d1f\u8d23\u8bb0\u5f55\u5e94\u7528\u94fe\u8fd9\u4e2a\u7c92\u5ea6\u7684\u8de8\u94fe\u4ea4\u6613\u7684Index\u3002\u4f46\u662f\u5728Pier\u8c03\u7528\u5e94\u7528\u94fe\u667a\u80fd\u5408\u7ea6\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u65f6\uff0c\u6709\u591a\u4e2a\u667a\u80fd\u5408\u7ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u5f88\u96be\u7ef4\u62a4\u4e00\u4e2a\u5e94\u7528\u94fe\u5c42\u9762\u7684Index\u3002 \u6240\u4ee5\u6211\u4eec\u8003\u8651\u5728\u5404\u4e2a\u5e94\u7528\u94fe\u4e0a\u7ef4\u62a4\u4e24\u4e2a\u4e0d\u540c\u7684\u5408\u7ea6\u3002\u4e00\u4e2a\u5408\u7ea6\u8d1f\u8d23\u5bf9\u63a5\u8de8\u94fe\u7f51\u5173Pier\uff0c\u4e3a\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\uff1b\u4e00\u4e2a\u5408\u7ea6\u8d1f\u8d23\u5177\u4f53\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u4e3a\u4e1a\u52a1\u5408\u7ea6\u3002\u4e1a\u52a1\u5408\u7ea6\u9700\u8981\u8de8\u94fe\u65f6\uff0c\u8981\u7edf\u4e00\u5c06\u8de8\u94fe\u8bf7\u6c42\u63d0\u4ea4\u5230Broker\u5408\u7ea6\u4e0a\uff0cBroker\u7edf\u4e00\u548cPier\u8fdb\u884c\u4ea4\u4e92\u3002\u4e00\u4e2aBroker\u5408\u7ea6\u53ef\u4ee5\u8d1f\u8d23\u5bf9\u63a5\u591a\u4e2a\u4e1a\u52a1\u5408\u7ea6\u3002 Broker\u5408\u7ea6 Broker\u6709\u4e09\u90e8\u5206\u4e3b\u8981\u7684\u5185\u5bb9\u9700\u8981\u7ef4\u62a4\uff1a\u4ea4\u6613\u5e8f\u53f7\u3001\u5386\u53f2\u4ea4\u6613\u3001\u9519\u8bef\u5904\u7406 \u4ea4\u6613\u5e8f\u53f7 \u8be5\u5408\u7ea6\u6709\u4e09\u4e2a\u8de8\u94fe\u4ea4\u6613\u7684\u5e8f\u53f7\u9700\u8981\u7ef4\u62a4\uff1a // key\u503c\u4e3a\u76ee\u7684\u94fe\u5730\u5740to,value\u4e3a\u53d1\u5f80\u8be5\u94fe\u7684\u6700\u540eindex mapping ( address => uint64 ) outerMeta ; // key\u503c\u4e3a\u6765\u6e90\u94fe\u5730\u5740from,value\u4e3a\u4ece\u8be5\u94fe\u53d1\u8fc7\u6765\u7684\u6700\u540eindex map ( address => uint64 ) innerMeta ; // key\u503c\u4e3a\u76ee\u7684\u94fe\u5730\u5740to,value\u4e3a\u8be5\u94fe\u5df2\u7ecf\u6267\u884c\u56de\u8c03\u7684\u6700\u540eindex map ( address => uint64 ) callbackrMeta ; \u4e0a\u8ff0\u7684\u4e09\u4e2a\u5e8f\u53f7\u4e3b\u8981\u80fd\u591f\u9632\u6b62\u91cd\u653e\u653b\u51fb\u548c\u4fdd\u8bc1\u8de8\u94fe\u7f51\u5173\u63d0\u4ea4\u4ea4\u6613\u7684\u5e42\u7b49\u6027\uff08\u67d0\u4e9b\u573a\u666f\u4e0b\u8de8\u94fe\u7f51\u5173\u80fd\u591f\u653e\u5fc3\u7684\u591a\u6b21\u63d0\u4ea4\u800c\u4e0d\u7528\u62c5\u5fc3\u91cd\u590d\u4e0a\u94fe\uff09\u3002 \u5386\u53f2\u4ea4\u6613 \u5386\u53f2\u6570\u636e\u53c8\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u81ea\u8eab\u94fe\u4e0a\u53d1\u8d77\u7684\u8de8\u94fe\u8bf7\u6c42\uff08\u53d1\u9001\u5230\u5176\u4ed6\u94fe\u4e0a\u53bb\uff09\uff1b\u4e00\u4e2a\u662f\u4ece\u5176\u4ed6\u94fe\u6536\u5230\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u6267\u884c\u5b8c\u6210\u540e\u7684\u8bb0\u5f55\u3002 // \u76ee\u7684\u94fe\u5730\u5740 + \u4ea4\u6613\u5e8f\u53f7\u4f5c\u4e3a\u5e8f\u53f7\uff0c\u81ea\u8eab\u94fe\u4e0a\u53d1\u8d77\u7684\u8de8\u94fe\u8bf7\u6c42\u5185\u5bb9\u4f5c\u4e3a value mapping ( address + uint64 => record ) outMessages ; // \u6765\u6e90\u94fe\u5730\u5740 + \u4ea4\u6613\u5e8f\u53f7\u4f5c\u4e3a\u5e8f\u53f7\uff0c\u5176\u4ed6\u94fe\u53d1\u8d77\u7684\u8de8\u94fe\u4ea4\u6613\u6267\u884c\u7ed3\u679c\u4f5c\u4e3a value mapping ( address + uint64 => result )) inMessages ; \u901a\u8fc7\u5728 Broker \u5408\u7ea6\u4e0a\u8bb0\u5f55\u5386\u53f2\u6570\u636e\uff0c\u53ef\u4ee5\u8ba9\u8de8\u94fe\u7f51\u5173\u5728\u91cd\u542f\u3001\u4ea4\u6613\u4e22\u5931\u7b49\u60c5\u51b5\u4e0b\u6062\u590d\u3002\u4ee5\u4e0a\u53ea\u662f\u4f2a\u4ee3\u7801\u7684\u63cf\u8ff0\uff0c\u5177\u4f53\u5728\u4e0d\u540c\u533a\u5757\u94fe\u7684\u667a\u80fd\u5408\u7ea6\u4e0a\u5b9e\u73b0\u65f6\u4f1a\u6709\u4e0d\u540c\u7684\u7b56\u7565\u3002 \u9519\u8bef\u5904\u7406 \u7531\u4e8eBroker \u4e0a\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u8981\u6c42\u4ea4\u6613\u5e8f\u53f7\u4e25\u683c\u9012\u589e\u3002\u8fd9\u5bfc\u81f4\u5728\u67d0\u4e9b\u8de8\u94fe\u4ea4\u6613\u56e0\u4e3a\u53c2\u6570\u9519\u8bef\u7b49\u539f\u56e0\u65e0\u6cd5\u8c03\u7528\u5230\u8de8\u94fe\u4ea4\u6613\u5904\u7406\u51fd\u6570\uff0c\u5e8f\u53f7\u65e0\u6cd5\u6d88\u8017\uff0c\u4ece\u800c\u540e\u9762\u6240\u6709\u7684\u4ea4\u6613\u90fd\u88ab\u8ba4\u4e3a\u662f\u65e0\u6548\u7684\u60c5\u51b5\u3002 \u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5728Broker \u5408\u7ea6\u4e13\u95e8\u63d0\u4f9b\u4e86\u9519\u8bef\u5904\u7406\u51fd\u6570\u3002\u5f53\u67d0\u4e2a\u8de8\u94fe\u4ea4\u6613\u65e0\u6cd5\u5904\u7406\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u8c03\u7528\u8be5\u51fd\u6570\u53ef\u4ee5\u6d88\u8017\u8be5\u8de8\u94fe\u4ea4\u6613\u7684\u5e8f\u53f7\uff0c\u8ba9\u540e\u9762\u7684\u8de8\u94fe\u4ea4\u6613\u80fd\u591f\u6b63\u5e38\u8fdb\u884c\u3002 // \u7528\u6765\u6d88\u8017\u6267\u884c\u5176\u4ed6\u94fe\u53d1\u8d77\u7684\u8de8\u94fe\u4ea4\u6613\u51fa\u9519\u65f6\u7684\u5e8f\u53f7 function interchainError ( address sourceChainID , uint64 index ) public returns ( bool ); // \u7528\u6765\u6d88\u8017\u6267\u884c\u5176\u4ed6\u94fe\u8fd4\u56de\u7684\u56de\u8c03\u4ea4\u6613\u51fa\u9519\u65f6\u7684\u5e8f\u53f7 function interchainConfirmError ( address sourceChainID , uint64 index ) public returns ( bool ); \u5927\u89c4\u6a21\u8de8\u94fe \u6982\u8ff0 \u73b0\u6709\u7684\u8de8\u94fe\u7f51\u7edc\u5206\u4e3a**\u4e2d\u7ee7\u94fe+\u8de8\u94fe\u7f51\u5173**\u6a21\u5f0f\u548c**\u8de8\u94fe\u7f51\u5173\u76f4\u8fde**\u6a21\u5f0f\uff0c\u5982\u679c\u8981\u7ec4\u6210\u5927\u89c4\u6a21\u6df7\u5408\u8de8\u94fe\u7f51\u7edc\u7684\u4e07\u94fe\u4e92\u8fde\u7cfb\u7edf\uff0c\u5c31\u9700\u8981\u8de8\u94fe\u7f51\u5173\u6dfb\u52a0**\u5206\u5e03\u5f0f\u54c8\u5e0c\u8868DHT**\u548c**\u8de8\u94fe\u4ea4\u6613\u8def\u7531**\u7684\u529f\u80fd\u3002 \u8de8\u94fe\u4ea4\u6613\u8def\u7531\u6d41\u7a0b\uff1a \u4e2d\u7ee7\u94feA\u4e2d\u5e94\u7528\u94feA\u2018\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6\uff0c\u76ee\u7684\u94fe\u662f\u4e2d\u7ee7\u94feB\u4e2d\u7684\u5e94\u7528\u94feB\u2019\u3002 \u5e94\u7528\u94feA\u2018\u7684\u8de8\u94fe\u7f51\u5173\u6536\u5230\u8de8\u94fe\u4e8b\u4ef6\uff0c\u53d1\u9001IBTP\u7ed9\u4e2d\u7ee7\u94feA\uff0c\u4e2d\u7ee7\u94feA\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\uff0c\u9a8c\u8bc1\u6210\u529f\u540e\u5c06\u8be5\u7b14\u4ea4\u6613\u6253\u5305\u51fa\u5757\u3002 \u8de8\u94fe\u7f51\u5173A\u89e3\u6790\u4e2d\u7ee7\u94feA\u7684\u533a\u5757\uff0c\u89e3\u6790\u5230IBTP\u7684\u76ee\u7684\u94fe\u4e0d\u5c5e\u4e8e\u4e2d\u7ee7\u94feA\u7ba1\u7406\u7684\u5e94\u7528\u94fe\uff0c\u968f\u540e\u8de8\u94fe\u7f51\u5173A\u6839\u636eDHT\u8def\u7531\u5230\u76ee\u7684\u4e2d\u7ee7\u94feB\u7684\u8de8\u94fe\u7f51\u5173B\u3002 \u8de8\u94fe\u7f51\u5173B\u6536\u5230IBTP\uff0c\u5c06\u8de8\u94fe\u4ea4\u6613\u53d1\u9001\u5230\u76f8\u5e94\u7684\u4e2d\u7ee7\u94fe\u3002 \u4e2d\u7ee7\u94feB\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\uff0c\u9a8c\u8bc1\u6210\u529f\u540e\u5c06\u8be5\u7b14\u4ea4\u6613\u6253\u5305\u51fa\u5757\u3002 \u5e94\u7528\u94feB\u2018\u7684\u8de8\u94fe\u7f51\u5173\u540c\u6b65\u4e2d\u7ee7\u94feB\u7684\u533a\u5757\uff0c\u6536\u5230\u4e2d\u7ee7\u94feB\u2018\u8def\u7531\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u53d1\u9001\u7ed9\u5e94\u7528\u94feB\u2019\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u3002 \u8be6\u7ec6\u8bbe\u8ba1 \u5728\u5927\u89c4\u6a21\u8de8\u94fe\u7f51\u7edc\u4e2d\uff0c\u7f51\u7edc\u62d3\u6251\u56fe\u5982\u4e0b\uff1a \u8def\u7531\u4f20\u8f93 \u6bcf\u4e2a\u8de8\u94fe\u7f51\u5173\u7ef4\u62a4\u4e24\u4e2a\u8868\uff0c\u4e00\u4e2a\u4e3a**\u8de8\u94fe\u7f51\u5173\u8def\u7531\u8868(PTable)**\uff0c\u8bb0\u5f55\u5e94\u7528\u94feID\u548c\u5e94\u7528\u94fe\u7f51\u7edc\u5730\u5740\u7684\u5173\u8054\u5173\u7cfb\uff0c\u5177\u4f53\u5b9e\u73b0\u4e3aDHT\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a AppID AppAddr 0xe6f8c9cf6e38bd506fae93b73ee5e80cc8f73667 /ip4/111.132.1.111/quic/5001/p2p/QmZZFk1Tj6p25ecz98SpyHxb6joDPxR3wVPptDwuc8fue1 0x8374bb1e41d4a4bb4ac465e74caa37d242825efc /ip4/171.132.1.131/quic/4002/p2p/QmNRgD6djYJERNpDpHqRn3mxjJ9SYiiGWzExNSy4sEmSNL \u53e6\u4e00\u4e2a\u672c\u5730\u7f13\u5b58\u7684**\u7f51\u5173\u4e2d\u7ee7\u5173\u8054\u8868(PBTable)**\uff0c\u8bb0\u5f55\u5e94\u7528\u94feID\u548c\u4e2d\u7ee7\u94fe\u7684\u5173\u7cfb\u3002\u5982\u4e0b\u8868\u6240\u793a\uff1a AppID BxhID 0xe6f8c9cf6e38bd506fae93b73ee5e80cc8f73667 bxhA 0xe1sdddcf6e38bdxxxae93b73ecscs0cc8f73112 bxhA \u79cd\u5b50\u8282\u70b9\uff1a**\u7531\u6bcf\u4e2a\u63a5\u5165\u5230\u8def\u7531\u7f51\u7edc\u7684\u8de8\u94fe\u7f51\u5173\u7ef4\u62a4\uff0c\u5982\u4e0a\u56fe\u79cd\u5b50\u8282\u70b9\u53ef\u4ee5\u662fPierA\u548cPierB \u3002** Pier\u65b0\u589e\uff1a Pier\u8fde\u63a5\u5230\u4e2d\u7ee7\u94fe\uff0c\u4e2d\u7ee7\u94fe\u8def\u7531\u6a21\u5757\u53d1\u751fAdd Pier\u52a8\u4f5c\u540e\uff0c\u5c06\u6240\u5c5e\u4e2d\u7ee7\u94fe\u7ba1\u7406\u7684\u6240\u6709\u5e94\u7528\u94fe\u4fe1\u606f\u5e7f\u64ad\u7ed9\u6240\u5c5e\u7684Pier\uff0cPier\u6784\u9020\u672c\u5730\u7684**\u7f51\u5173\u4e2d\u7ee7\u5173\u8054\u8868**\uff1b Pier\u52a0\u5165\u8def\u7531\u7f51\u7edc\uff0c\u8fde\u63a5\u79cd\u5b50\u8282\u70b9\uff0c\u6784\u9020**\u8de8\u94fe\u7f51\u5173\u8def\u7531\u8868**\uff1b \u8def\u7531\u7f51\u7edc\u4e2d\u5176\u5b83Pier\u6536\u5230\u4e86\u5e7f\u64ad\u7684\u4fe1\u606f\uff0c\u66f4\u65b0\u672c\u5730\u7684**\u8de8\u94fe\u7f51\u5173\u8def\u7531\u8868\uff1b** \u5982\u679c\u5e94\u7528\u94fe\u65b9\u53ea\u662f\u60f3\u52a0\u5165\u8be5\u4e2d\u7ee7\u8054\u76df\u7684\u8de8\u94fe\u7f51\u7edc\uff0c\u5e76\u4e0d\u60f3\u52a0\u5165\u6574\u4e2a\u5927\u89c4\u6a21\u7f51\u7edc\u4e2d\uff0c\u53ef\u4ee5\u5728\u5e94\u7528\u94fe\u6ce8\u518c\u65f6\u6dfb\u52a0\u5b57\u6bb5\u7528\u4e8e\u5224\u65ad\u662f\u5426\u652f\u6301\u5927\u89c4\u6a21\u8de8\u94fe\u3002 Pier\u66f4\u65b0\uff1a \u7c7b\u4f3cPier\u65b0\u589e\u3002 Pier\u5220\u9664\uff1a Pier\u5728\u52a0\u5165\u8def\u7531\u7f51\u7edc\u540e\uff0c\u957f\u65f6\u95f4Ping_Pier\u65e0\u54cd\u5e94\uff0c**\u8de8\u94fe\u7f51\u5173\u8def\u7531\u8868**\u4f1a\u81ea\u52a8\u5220\u9664\u8be5Pier\u4fe1\u606f\u3002 IBTP\u4f20\u8f93\u6d41\u7a0b\u56fe\uff1a \u8de8\u94fe\u7f51\u5173\u8def\u7531\u6a21\u5757\u63a5\u53e3\u5b9a\u4e49\uff1a type Router interface { // Start starts the router module Start () error // Stop Stop () error //Broadcast broadcasts the registered appchain ids to the union network Broadcast ( ids [] string ) error //Route sends ibtp to the union pier in target relay chain Route ( ibtp * pb . IBTP ) error //ExistAppchain returns if appchain id exit in route map ExistAppchain ( id string ) bool //AddAppchains adds appchains to route map and broadcast them to union network AddAppchains ( appchains [] * rpcx . Appchain ) error } DHT \u5206\u5e03\u5f0f\u54c8\u5e0c\u8868\u91c7\u7528S/Kademlia\uff0c\u76f8\u8f83\u4e8eKademlia\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\uff0c\u80fd\u591f\u62b5\u5fa1\u4e0d\u540c\u7a0b\u5ea6\u7684\u65e5\u8680\u653b\u51fb\u3001\u5973\u5deb\u653b\u51fb\u3002 libp2p\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684DHT\u5e93\uff1a https://github.com/libp2p/go-libp2p-kad-dht IBTP\u9a8c\u8bc1 \u76ee\u7684\u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u6765\u81ea\u8de8\u94fe\u7f51\u5173\u7684IBTP\u662f\u5426\u771f\u6b63\u5728\u6765\u6e90\u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u6210\u529f\u5e76\u4e14\u6267\u884c\u4e0a\u94fe\uff0c\u63d0\u4f9b\u4ee5\u4e0b\u4e24\u79cd\u8bc1\u660e\u65b9\u5f0f\uff1a \u591a\u91cd\u7b7e\u540d\uff1a \u6765\u6e90\u4e2d\u7ee7\u94fe\u4ea7\u751f\u7684\u8de8\u94fe\u4ea4\u6613\u9700\u8981\u6765\u6e90\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u591a\u91cd\u7b7e\u540d\uff0c\u6700\u5c11\u7b7e\u540d\u9608\u503c\u4e3aQuorum\u6570\u91cf\uff0c\u8de8\u94fe\u7f51\u5173\u8def\u7531\u4f20\u9012IBTP\u7684\u65f6\u5019\u628a\u5bf9\u5e94\u591a\u91cd\u7b7e\u540d\u4fe1\u606f\u5e26\u4e0a\u3002 SPV\u8bc1\u660e\uff1a\uff08\u9700\u8981\u540c\u6b65\u5168\u7f51\u4e2d\u7ee7\u94fe\u7684\u533a\u5757\u5934\uff09 \u76ee\u7684\u4e2d\u7ee7\u94fe\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u540c\u6b65\u6765\u6e90\u4e2d\u7ee7\u94fe\u7684\u533a\u5757\u5934\uff0c\u9a8c\u8bc1IBTP\u7684\u8de8\u94fe\u4ea4\u6613\u662f\u5426\u5b58\u5728\u4e8e\u6765\u6e90\u94fe\u7684\u533a\u5757\u5185\uff0c\u9a8c\u8bc1\u6210\u529f\u5373\u8868\u793aIBTP\u662f\u6709\u6548\u7684\u3002","title":"\u8de8\u94fe\u7f51\u5173\u8bbe\u8ba1\u65b9\u6848"},{"location":"bitxhub/design/pier/#_1","text":"","title":"\u8de8\u94fe\u7f51\u5173\u8bbe\u8ba1\u65b9\u6848"},{"location":"bitxhub/design/pier/#_2","text":"\u5728\u4e2d\u7ee7\u94fe\u7684\u8bbe\u8ba1\u4e2d\uff0c\u5bf9\u4e8e\u8de8\u94fe\u7f51\u5173\u7684\u4e3b\u8981\u529f\u80fd\u4f5c\u4e86\u7b80\u8981\u7684\u4ecb\u7ecd\u3002\u672c\u6587\u4e3b\u8981\u8be6\u7ec6\u4ecb\u7ecd\u8de8\u94fe\u7f51\u5173\u7684\u4e3b\u8981\u8bbe\u8ba1\u67b6\u6784\u601d\u60f3\u3002 \u4ece\u8de8\u94fe\u7f51\u5173\u7684**\u529f\u80fd**\u4e0a\u6765\u8bf4\uff0c\u8bbe\u8ba1\u4e0a\u9700\u8981\u89e3\u51b3\u7684\u96be\u70b9\u5305\u62ec\u4ee5\u4e0b\u51e0\u70b9\uff1a \u8de8\u94fe\u7f51\u5173\u9700\u8981\u5bf9\u63a5\u4e0d\u540c\u67b6\u6784\u7684\u533a\u5757\u94fe\uff0c\u5982\u4f55\u7b80\u5316\u8de8\u94fe\u7f51\u5173\u63a5\u5165\u4e0d\u540c\u533a\u5757\u94fe\u7684\u8de8\u94fe\u7f51\u5173\u8bbe\u8ba1\u4e0a\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u3002 \u8de8\u94fe\u7f51\u5173\u9700\u8981\u652f\u6301\u4e2d\u7ee7\u6a21\u5f0f\uff08\u76f4\u63a5\u548c\u4e2d\u7ee7\u94fe\u8fde\u63a5\uff09\u548c\u76f4\u8fde\u6a21\u5f0f\uff08\u76f4\u63a5\u548c\u5176\u4ed6\u7684\u8de8\u94fe\u7f51\u5173\u8fdb\u884c\u8fde\u63a5\uff09\uff0c\u5982\u4f55\u5728\u4e0d\u540c\u6a21\u5f0f\u95f4\u5207\u6362\u65f6\u8bbe\u8ba1\u4e0a\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u3002 \u4ece\u603b\u4f53\u67b6\u6784\u6765\u8bf4\uff0c\u8de8\u94fe\u7f51\u5173\u6839\u636e\u4e0d\u540c\u7684\u529f\u80fd\u91c7\u53d6\u4e86\u6a21\u5757\u5212\u5206\u7684\u65b9\u5f0f\uff0c\u4e3b\u8981\u7684\u529f\u80fd\u6a21\u5757\u6709Monitor\uff0cExecutor\uff0cExchanger \uff0cValidate Engine\uff0cAppchain Manager\uff0cNetwork\u7b49\u3002","title":"\u6574\u4f53\u67b6\u6784"},{"location":"bitxhub/design/pier/#_3","text":"\u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u5904\u7406\u8fc7\u7a0b\u5982\u4e0b\uff1a A\uff0eMonitor\u76d1\u542c \u8de8\u94fe\u7f51\u5173PA\u542f\u52a8\u4e4b\u540e\uff0cAppchain A\u53d1\u8d77\u4e00\u7b14\u8de8\u94fe\u4ea4\u6613\uff0cMonitor\u6a21\u5757\u76d1\u542c\u5230\u8be5\u8de8\u94fe\u4ea4\u6613\uff0c\u8de8\u94fe\u7f51\u5173\u5bf9\u4e8e\u8be5\u8de8\u94fe\u4ea4\u6613\u505a\u51fa\u68c0\u67e5\u4e4b\u540e\uff0c\u4fdd\u5b58\u76f8\u5e94\u7684\u8de8\u94fe\u4ea4\u6613\u3002 B\uff0eExchanger\u8f6c\u53d1 Exchanger\u83b7\u53d6Monitor\u6536\u5230\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u4f5c\u76f8\u5e94\u7684\u68c0\u67e5\u540e\uff0c\u8fdb\u884c\u8f6c\u53d1\u3002\u8f6c\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6839\u636e\u8de8\u94fe\u4ea4\u6613\u7684\u76ee\u7684\u94feID\u4ee5\u53ca\u8fde\u63a5\u7684\u662f\u4e2d\u7ee7\u94fe\u8fd8\u662f\u76f4\u8fde\u7684\u5176\u4ed6\u8de8\u94fe\u7f51\u5173\u7b49\u4fe1\u606f\uff0c\u8f6c\u53d1\u5230\u6b63\u786e\u7684\u8def\u7531\u8def\u5f84\u3002 \u4e2d\u7ee7\u94fe\u6a21\u5f0f \u901a\u8fc7\u4e2d\u7ee7\u94fe\u7684SDK\uff0c\u63d0\u4ea4\u8de8\u94fe\u4ea4\u6613\u5230\u4e2d\u7ee7\u94fe\u7684\u5185\u7f6e\u5408\u7ea6\u4e0a\uff0c\u4e2d\u7ee7\u94fe\u8bb0\u5f55\u5e76\u6267\u884c\u9a8c\u8bc1\uff0c\u8f6c\u53d1\u7b49\u64cd\u4f5c\u3002 \u76f4\u8fde\u6a21\u5f0f \u901a\u8fc7P2P\u7f51\u7edc\u8fde\u63a5\u5176\u4ed6\u8de8\u94fe\u7f51\u5173\uff0c\u901a\u8fc7\u8de8\u94fe\u4ea4\u6613\u7684\u76ee\u7684\u94feID\u6765\u8f6c\u53d1\u5230\u76f8\u5e94\u7684\u8de8\u94fe\u7f51\u5173\u3002 C. Exchanger\u63a5\u53d7\u5916\u90e8\u8de8\u94fe\u4ea4\u6613 \u4e2d\u7ee7\u94fe\u6a21\u5f0f Exchanger \u7684\u5b50\u6a21\u5757Lite\u548cSyncer\u8d1f\u8d23\u540c\u6b65\u4e2d\u7ee7\u94fe\u7684\u533a\u5757\u5934\u548c\u8de8\u94fe\u4ea4\u6613\u7684\u4fe1\u606f\uff0c\u5bf9\u4e8e\u9a8c\u8bc1\u901a\u8fc7\u7684\u8de8\u94fe\u4ea4\u6613\uff0cExchanger\u8fdb\u884c\u8f6c\u9001\u5230Executor\u4e2d\u3002 \u76f4\u8fde\u6a21\u5f0f Exchanger\u901a\u8fc7P2P\u7f51\u7edc\u6536\u5230\u5bf9\u65b9\u8de8\u94fe\u7f51\u5173\u53d1\u9001\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u9a8c\u8bc1\u64cd\u4f5c\u3002\u9a8c\u8bc1\u901a\u8fc7\u7684\u8de8\u94fe\u4ea4\u6613\u8f6c\u9001\u5230Executor\u4e2d\u3002 Executor\u63d0\u4ea4\u8de8\u94fe\u4ea4\u6613\u5230\u5e94\u7528\u94fe\u4e0a\uff0c\u5e76\u6839\u636e\u6267\u884c\u7684\u7ed3\u679c\uff0c\u6784\u9020\u8fd4\u56de\u7684\u56de\u6267\u7c7b\u578b\u7684IBTP\u5305\uff0c\u8f6c\u9001\u5230Exchanger\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u8f6c\u53d1\u5de5\u4f5c\u3002 C\uff0e\u8de8\u94fe\u4ea4\u6613\u5728\u76ee\u7684\u94fe\u6267\u884c\u4e4b\u540e\uff0c\u8fd4\u56de\u56de\u6267\u4fe1\u606f\u3002 \u4e2d\u7ee7\u94fe\u6a21\u5f0f Exchanger \u7684\u5b50\u6a21\u5757Lite\u548cSyncer\u8d1f\u8d23\u540c\u6b65\u4e2d\u7ee7\u94fe\u7684\u533a\u5757\u5934\u548c\u8de8\u94fe\u4ea4\u6613\u7684\u4fe1\u606f\uff0c\u5bf9\u4e8e\u9a8c\u8bc1\u901a\u8fc7\u7684\u8de8\u94fe\u4ea4\u6613\u548c\u56de\u6267\u4fe1\u606f\uff0cExchanger\u8fdb\u884c\u8f6c\u9001\u5230Executor\u4e2d\u3002 \u76f4\u8fde\u6a21\u5f0f Exchanger\u901a\u8fc7P2P\u7f51\u7edc\u6536\u5230\u5bf9\u65b9\u8de8\u94fe\u7f51\u5173\u53d1\u9001\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u9a8c\u8bc1\u64cd\u4f5c\u3002\u9a8c\u8bc1\u901a\u8fc7\u7684\u8de8\u94fe\u4ea4\u6613\u6216\u8005\u56de\u6267\u8f6c\u9001\u5230Executor\u4e2d\u3002 \u4ee5\u4e0a\uff0c\u5c31\u662f\u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u6267\u884c\u8fc7\u7a0b\u3002","title":"\u5904\u7406\u6d41\u7a0b"},{"location":"bitxhub/design/pier/#_4","text":"","title":"\u6a21\u5757\u4f9d\u8d56\u5173\u7cfb"},{"location":"bitxhub/design/pier/#_5","text":"","title":"\u5728\u4e2d\u7ee7\u94fe\u6a21\u5f0f\u4e0b"},{"location":"bitxhub/design/pier/#_6","text":"","title":"\u5728\u76f4\u8fde\u6a21\u5f0f\u4e0b"},{"location":"bitxhub/design/pier/#_7","text":"\u5728\u6211\u4eec\u7684\u8bbe\u8ba1\u4e2d\uff0c\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u8de8\u94fe\u7f51\u5173\u53ef\u4ee5\u5728\u6ca1\u6709\u4fdd\u5b58\u4efb\u4f55\u8de8\u94fe\u76f8\u5173\u7684\u6570\u636e\u5c31\u80fd\u6b63\u786e\u542f\u52a8\u3002\u5f53\u7136\u8fd9\u9700\u8981\u4e0d\u65ad\u7684\u6062\u590d\u4e4b\u524d\u7684\u6570\u636e\uff0c\u91cd\u542f\u7684\u7f51\u7edc\u901a\u4fe1\u4ee3\u4ef7\u6bd4\u8f83\u5927\u3002\u4e3a\u4e86\u51cf\u5c11\u7f51\u7edc\u4f20\u8f93\u7684\u542f\u52a8\u8d1f\u62c5\uff0c\u6211\u4eec\u5728\u5bf9\u4e8e\u4e00\u4e9b\u5173\u952e\u7684\u8de8\u94fe\u4fe1\u606f\u8fd8\u662f\u8fdb\u884c\u4e86\u6570\u636e\u5e93\u7684\u4fdd\u5b58\u64cd\u4f5c\u3002","title":"\u9519\u8bef\u573a\u666f\u5904\u7406"},{"location":"bitxhub/design/pier/#executor","text":"\u4e2d\u7ee7\u94fe\u6e05\u9664\u6570\u636e \u4e2d\u7ee7\u94fe\u6e05\u9664\u6570\u636e\u4e4b\u540e\uff1a \u5982\u679cA\u94fe\u7684\u8de8\u94fe\u7f51\u5173\u4e0d\u91cd\u542f\uff0c\u518d\u4ece\u5176\u4ed6\u94fe\uff08\u5982B\u94fe\uff09\u53d1\u6765\u4ea4\u6613B-1\u3002Exchanger \u6a21\u5757\u5fc5\u5b9a\u662f\u5ffd\u7565\u8fd9\u4e9b\u4ea4\u6613\u7684\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53ea\u9700\u591a\u53d1\u51e0\u6761\u4ea4\u6613\u8986\u76d6\u524d\u9762\u5e8f\u53f7\u7684\u8de8\u94fe\u4ea4\u6613\u5373\u53ef\u3002 \u4f46\u662f\u5982\u679c\u4ece\u8be5\u8de8\u94fe\u7f51\u5173\u53d1\u9001\u65b0\u7684\u8de8\u94fe\u4ea4\u6613\u5230\u4e2d\u7ee7\u94fe\uff0c\u4e2d\u7ee7\u94fe\u4f1a\u6709\u5e8f\u53f7\u4e0d\u5bf9\u7684\u62a5\u9519\u3002\u4f46\u662f\u8de8\u94fe\u7f51\u5173\u5bf9\u8fd9\u90e8\u5206\u8fd8\u6ca1\u6709\u76f8\u5e94\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\u3002 \u5982\u679cA\u94fe\u7684\u8de8\u94fe\u7f51\u5173\u91cd\u542f \u6267\u884c\u6a21\u5757\u5bf9\u6bd4\u4e24\u8fb9\u7684\u6700\u65b0\u5e8f\u53f7\uff0c\u65e0\u6cd5\u8fdb\u884c\u6709\u6548\u64cd\u4f5c\u3002\u56e0\u4e3a\u5df2\u7ecf\u6709\u8de8\u94fe\u4ea4\u6613\u5199\u5165\u5e94\u7528\u94fe\u7684\u8d26\u672c\u4e86\uff0c\u518d\u6b21\u6267\u884c\u7684\u8bdd\u53ef\u80fd\u4f1a\u6709\u6f5c\u5728\u7684\u98ce\u9669\uff08\u6bd4\u5982\u8f6c\u8d26\u7684\u64cd\u4f5c\uff09 \u5408\u7ea6\u6e05\u9664\u6570\u636e \u5408\u7ea6\u6e05\u9664\u6570\u636e\u4e4b\u540e \u5982\u679c\u8de8\u94fe\u7f51\u5173\u4e0d\u91cd\u542f\uff0c\u6267\u884c\u6a21\u5757\u5185\u5b58\u4e2d\u8fd8\u662f\u6b63\u786e\u7684\u5e8f\u53f7\u3002 \u63a5\u53d7\u5176\u4ed6\u94fe\u7684\u4ea4\u6613\uff0c\u6267\u884c\u6a21\u5757\u4f1a\u8ba4\u4e3a\u6b63\u5e38\u2014\u2014\u4f46\u662f\u63d0\u4ea4\u5230\u5408\u7ea6\u4e0a\u65f6\u4f1a\u6709\u5e8f\u53f7\u9519\u8bef\u7684\u51fa\u9519\u60c5\u51b5\uff0c\u4ece\u800c\u6267\u884c\u6a21\u5757\u6784\u9020\u8de8\u94fe\u4ea4\u6613\u5931\u8d25\u7684\u56de\u6267\uff08\u6765\u6e90\u94fe\u4e0a\u53ef\u80fd\u4f1a\u91c7\u53d6\u56de\u6eda\u64cd\u4f5c\uff09\u3002\u540e\u7eed\u7684\u6267\u884c\u5168\u90e8\u90fd\u4f1a\u662f\u8fd9\u79cd\u5931\u8d25\u7684\u60c5\u51b5\u3002 \u5982\u679c\u8de8\u94fe\u7f51\u5173\u91cd\u542f \u6267\u884c\u6a21\u5757\u67e5\u8be2\u7684\u6700\u65b0\u5e8f\u53f7\u4e3a 0 \uff0c\u201c\u5176\u4ed6\u65b9\u201d\u53ef\u80fd\u4e3a5\u3002\u8be5\u79cd\u60c5\u51b5\u4f1a\u91cd\u65b0\u4e0a\u94fe\u6267\u884c\uff0c\u4f46\u662f\u53d1\u56de\u7684\u56de\u6267\u4fe1\u606f\u4f1a**\u56e0\u4e3a\u5e8f\u53f7\u9519\u4e71\u88ab\u201c\u5176\u4ed6\u65b9\u201d\u62d2\u7edd**\u3002\uff08\u6f5c\u5728\u98ce\u9669\u662f\u91cd\u65b0\u6267\u884c\u7684\u7ed3\u679c\u548c\u4e4b\u524d\u7684\u4e0d\u4e00\u81f4\uff09\u4f46\u662f\u8986\u76d6\u5b8c\u4e4b\u524d\u7684\u5e8f\u53f7\u4e4b\u540e\uff0c\u80fd\u591f\u6b63\u5e38\u8de8\u94fe\u3002","title":"Executor \u5f00\u6e90\u7248\u672c\u9519\u8bef\u5206\u6790"},{"location":"bitxhub/design/pier/#monitor","text":"\u4e2d\u7ee7\u94fe\u6e05\u9664\u6570\u636e \u4e2d\u7ee7\u94fe\u6e05\u9664\u6570\u636e\u4e4b\u540e\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u5206\u6790 \u5982\u679c\u8de8\u94fe\u7f51\u5173\u4e0d\u91cd\u542f\uff0c\u63d2\u4ef6\u51fa\u73b0\u65b0\u7684\u4ea4\u6613\u7684\u8bdd\uff0cMonitor \u6b63\u5e38\u629b\u7ed9\u5176\u4ed6\u6a21\u5757\uff0c\u53d1\u9001\u5230\u4e2d\u7ee7\u94fe\uff0c\u4f1a\u56e0\u4e3a IBTP\u7684 Index \u88ab\u62d2\u7edd\u6267\u884c\u3002 \u6309\u7167\u73b0\u5728\u7684\u60c5\u51b5\uff0c\u4f1a\u4e0d\u65ad\u91cd\u8bd5 \u5982\u679c\u8de8\u94fe\u7f51\u5173\u91cd\u542f\uff0c\u4e2d\u7ee7\u94fe\u8bb0\u5f55\u7684 Index \u503c\u6e05\u96f6\u3002Monitor \u6309\u7167\u5e94\u7528\u94fe\u8bb0\u5f55\u7684\u4ea4\u6613\u5168\u90e8\u91cd\u53d1\u3002\u5982\u679c\u76ee\u7684\u94fe\u7684\u8bb0\u5f55\u6ca1\u6709\u6e05\u7a7a\u7684\u8bdd\uff0c\u4e4b\u524d\u5904\u7406\u8fc7\u7684\u4f1a\u88ab\u5e94\u7528\u94fe\u62d2\u7edd\uff0c\u540e\u7eed\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff1b\u5982\u679c\u76ee\u7684\u94fe\u8bb0\u5f55\u6e05\u7a7a\u7684\u8bdd\uff0c\u4f1a\u9020\u6210\u4ea4\u6613\u91cd\u590d\u6267\u884c\uff08\u770b\u573a\u666f\u80fd\u4e0d\u80fd\u63a5\u53d7\u91cd\u590d\u6267\u884c\uff09 \u5408\u7ea6\u6e05\u9664\u6570\u636e \u5408\u7ea6\u6e05\u7a7a Pier \u4e0d\u91cd\u542f\uff0c\u65b0\u7684\u4ea4\u6613\u8fc7\u6765\u7684\u8bdd\uff0c\u4f1a\u88abMonitor \u6a21\u5757\u62d2\u7edd\uff08\u53ef\u80fd\u9700\u8981\u591a\u53d1\u51e0\u7b14\u65e0\u7528\u4ea4\u6613\u8986\u76d6\uff09\uff0c\u4e4b\u540e\u80fd\u591f\u91cd\u65b0\u5de5\u4f5c\u3002 Pier \u91cd\u542f\u7684\u8bdd\uff0cMonitor \u67e5\u8be2\u7684\u4ea4\u6613\u4e3a\u7a7a\uff0c\u4e2d\u7ee7\u94fe\u5374\u6709\u8bb0\u5f55\uff0cMonitor \u6ca1\u6709\u6709\u6548\u7684\u5904\u7406\u624b\u6bb5\uff0c\u5fc5\u987b\u6709\u5916\u90e8\u6765\u63a8\u9001\u65b0\u4ea4\u6613\u3002","title":"Monitor \u6a21\u5757\u9519\u8bef\u573a\u666f\u5206\u6790"},{"location":"bitxhub/design/pier/#exchanger","text":"\u5728\u65b0\u7684\u8bbe\u8ba1\u4e2d\uff0c\u7edf\u4e00\u7531Exchanger\u6a21\u5757\u7ef4\u62a4 Index \u76f8\u5173\u7684\u4fe1\u606f\uff0c\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\u70b9\u3002 \u63a5\u53d7\u6765\u81ea Monitor\u6a21\u5757\u7684\u4ea4\u6613\u5e76\u6821\u9a8cindex\uff0c\u6821\u9a8c\u6210\u529f\u540e\u4ea4\u4e0e Syncer \u6a21\u5757\u63d0\u4ea4\u7ed9\u4e2d\u7ee7\u94fe\u6267\u884cIBTP\uff1b \u63a5\u53d7\u6765\u81ea Syncer \u6a21\u5757\u7684\u4ea4\u6613\u5e76\u6821\u9a8c index\uff0c\u6821\u9a8c\u6210\u529f\u4ea4\u4e0eExcuter\u6a21\u5757\u63d0\u4ea4\u7ed9\u5e94\u7528\u94fe\u6267\u884cIBTP\uff1b \u7136\u540e\u5904\u7406IBTP\u56de\u6267\u3002 \u5bf9\u4e8e\u4e22\u5931\u7684IBTP\u4ea4\u6613\uff0c\u8981\u6c42 Syncer \u548c Monitor \u63d0\u4f9b\u6309\u7167 IBTP_ID \u7684\u67e5\u8be2\u65b9\u5f0f\uff1b \u5bf9\u4e8e\u4e22\u5931\u7684IBTP\u56de\u6267\uff0c\u8981\u6c42 Executor \u63d0\u4f9b\u6309\u7167 IBTP_ID \u7684\u67e5\u8be2\u65b9\u5f0f\uff1b \u9519\u8bef\u5904\u7406 \u7531\u4e8eExchanger\u4f5c\u4e3a\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u7684\u6a21\u5757\u4e2d\u7684\u8f6c\u53d1\u6a21\u5757\uff0c\u5bf9Index\u7684\u6821\u9a8c\u7684\u8981\u6c42\u975e\u5e38\u9ad8\uff0c\u8981\u6c42\u4e00\u5b9a\u8981\u6839\u636eFrom\u6309\u5e8f\u8fdb\u884c\u3002 \u4e2d\u7ee7\u94fe -> \u8de8\u94fe\u7f51\u5173 \u5982\u679cExchanger\u6a21\u5757\u6536\u5230\u4e86Sycner\u6765\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u6bd4\u8f83\u6536\u5230\u7684IBTP\u7684\u5e8f\u53f7 Index1 \u548c\u5185\u5b58\u4e2d\u7ef4\u62a4\u7684\u5e8f\u53f7\u4fe1\u606f Index2 \uff1a Index1 = Index2 + 1\uff0c\u662f\u6b63\u5e38\u5904\u7406\u7684\u903b\u8f91 Index1 < Index2 + 1 \u8bf4\u660eAgent\u91cd\u590d\u63d0\u4ea4\u4e86\u8be5IBTP\uff0c\u76f4\u63a5\u629b\u5f03\u8be5IBTP\u5373\u53ef\u3002 Index1 > Index2 + 1 \u8bf4\u660eSycner\u6f0f\u6389\u4e86\u67d0\u4e9bIBTP\u6ca1\u6709\u53d1\u9001\uff0c\u6309\u7167\u6f0f\u6389\u7684 IBTP \u7684 IBTP_ID \uff0c\u8c03\u7528Agent\u7684\u67e5\u8be2\u63a5\u53e3\u6062\u590d\u6f0f\u6389\u7684 IBTP \u5373\u53ef\u3002 \u8de8\u94fe\u7f51\u5173 -> \u4e2d\u7ee7\u94fe \u5982\u679cExchanger\u6a21\u5757\u6536\u5230\u4e86\u4eceMonitor\u6765\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u6bd4\u8f83\u6536\u5230\u7684IBTP\u7684\u5e8f\u53f7 Index1 \u548c\u5185\u5b58\u4e2d\u7ef4\u62a4\u7684\u5e8f\u53f7\u4fe1\u606f Index2 \uff1a Index1 = Index2 + 1\uff0c\u662f\u6b63\u5e38\u5904\u7406\u7684\u903b\u8f91 Index1 < Index2 + 1 \u8bf4\u660eMonitor\u91cd\u590d\u63d0\u4ea4\u4e86\u8be5IBTP\uff0c\u76f4\u63a5\u629b\u5f03\u8be5IBTP\u5373\u53ef\u3002 Index1 > Index2 + 1 \u8bf4\u660eMonitor\u6f0f\u6389\u4e86\u67d0\u4e9bIBTP\u6ca1\u6709\u53d1\u9001\uff0c\u6309\u7167\u6f0f\u6389\u7684 IBTP \u7684 IBTP_ID \uff0c\u8c03\u7528Monitor\u7684\u67e5\u8be2\u63a5\u53e3\u6062\u590d\u6f0f\u6389\u7684 IBTP \u5373\u53ef\u3002 \u5982\u679c\u5728\u6062\u590dIBTP\u7684\u8fc7\u7a0b\u4e2d\u51fa\u9519\uff0c\u5219\u4ea4\u7531\u76f8\u5e94\u6a21\u5757\u4e00\u76f4retry\uff08\u4e0d\u8003\u8651\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u5220\u9664\u6570\u636e\u7684\u60c5\u51b5\uff09\u3002","title":"Exchanger \u6a21\u5757\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_8","text":"","title":"\u67b6\u6784\u56fe"},{"location":"bitxhub/design/pier/#_9","text":"","title":"\u6062\u590d\u673a\u5236"},{"location":"bitxhub/design/pier/#_10","text":"pier\u5728\u5b95\u673a\u91cd\u542f\u540e\uff0c\u9700\u8981\u628a\u5e94\u7528\u94fe\u4e2d\u672a\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4ea4\u6613\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\uff0c\u90a3\u4e48\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u4eceMonitor\u6a21\u5757\u83b7\u53d6\u5e94\u7528\u94fe\u5f53\u524d\u7684\u8de8\u94fe\u4ea4\u6613\u4fe1\u606f\uff0c\u5408\u7ea6\u4e2d\u4f7f\u7528outterMeta\u4fdd\u5b58 \u4eceSync\u6a21\u5757\u4e2d\u83b7\u53d6\u5df2\u7ecf\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4ea4\u6613\u4fe1\u606f\uff0c\u4e2d\u7ee7\u94fe\u4e2d\u4f7f\u7528interchainMeta\u4fdd\u5b58 \u904d\u5386outterMeta\u548cinterchainMeta\u5bf9\u6bd4\u8fd8\u6ca1\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u7136\u540e\u8c03\u7528Monitor\u6a21\u5757\u83b7\u53d6\u76f8\u5e94\u7684\u8de8\u94fe\u4ea4\u6613\u5e76\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe","title":"\u672a\u63d0\u4ea4\u7684\u8de8\u94fe\u4ea4\u6613"},{"location":"bitxhub/design/pier/#_11","text":"\u5728 pier \u5b95\u673a\u91cd\u542f\u4e4b\u540e\uff0c\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u672a\u6267\u884c\u4ea4\u6613\uff1a \u4ece\u5176\u4ed6\u94fe\u53d1\u8fc7\u6765\u7684\u8de8\u94fe\u4ea4\u6613\u672a\u6267\u884c \u7531\u4e8e\u7f51\u5173\u90fd\u662f\u6309\u7167\u4e2d\u7ee7\u94fe\u9ad8\u5ea6\u987a\u5e8f\u6267\u884c\u7684\uff0c\u8fd9\u90e8\u5206\u4e0d\u7528\u7279\u6b8a\u7684\u6062\u590d\u673a\u5236\u3002\u91cd\u542f\u4e4b\u540e Syncer \u4ece\u4e0a\u6b21\u8bb0\u5f55\u7684\u9ad8\u5ea6\u91cd\u65b0\u6267\u884c\u3002 \u5df2\u7ecf\u6267\u884c\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u4f46\u662f\u56de\u6267\u672a\u53d1\u56de\u53bb \u901a\u8fc7 Executor \u6a21\u5757\u83b7\u53d6 InnerMeta\uff0c\u518d\u4ece Syncer \u83b7\u53d6 SourceReceiptCounter \u904d\u5386 InnerMeta \u548c SourceReceiptCounter \u5bf9\u6bd4\u80fd\u591f\u77e5\u9053\u90a3\u4e9b\u4ea4\u6613\u5df2\u7ecf\u6267\u884c\u4f46\u662f\u56de\u6267\u8fd8\u6ca1\u8fd4\u56de\u7ed9\u4e2d\u7ee7\u94fe\uff0c\u5e76\u901a\u8fc7 Executor \u6a21\u5757\u53bb\u5e94\u7528\u94fe\u83b7\u53d6IBTP \u56de\u6267\u3002 \u8fd8\u672a\u6267\u884c\u7684Callback \u4ea4\u6613\uff08\u5bf9\u5e94\u81ea\u5df1\u5df2\u7ecf\u53d1\u51fa\u7684\u5e26Callback\u7684\u8de8\u94fe\u4ea4\u6613\uff09 \u7531\u4e8e\u8de8\u94fe\u4ea4\u6613\u56de\u6267\u4e5f\u662f\u4e00\u79cd**\u8de8\u94fe\u4ea4\u6613\uff0c\u4e2d\u7ee7\u94fe\u4f1a\u6253\u5305\u5728 InterchainWrapper\u4e2d\uff0c\u8de8\u94fe\u7f51\u5173\u6309\u7167\u987a\u5e8f\u6765\u81ea\u7136\u4f1a\u6267\u884c\u5230\uff0c\u4e0d\u7528\u989d\u5916\u7684\u6062\u590d\u673a\u5236\u3002**","title":"\u672a\u6267\u884c\u7684\u8de8\u94fe\u4ea4\u6613"},{"location":"bitxhub/design/pier/#monitor_1","text":"Monitor\u4e0d\u518d\u7ef4\u62a4index\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u7531Exchanger\u7edf\u4e00\u8fdb\u884c\u7ef4\u62a4\u3002\u9700\u8981\u6ee1\u8db3\u4e00\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\u70b9\uff1a \u901a\u8fc7\u63d2\u4ef6\u76d1\u542c\u533a\u5757\u94fe\u4e0a\u7684\u8de8\u94fe\u4ea4\u6613 \u63d0\u4f9b\u67e5\u8be2IBTP\u7684\u63a5\u53e3\uff08\u6839\u636eibtp id\uff09 \u63d0\u4f9b\u67e5\u8be2\u5e94\u7528\u94fe\u4e0a\u8de8\u94fe\u4ea4\u6613Meta\u4fe1\u606f\u7684\u63a5\u53e3","title":"Monitor \u6a21\u5757\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_12","text":"type Monitor interface { // Start starts the service of monitor Start () error // Stop stops the service of monitor Stop () error // listen on interchain ibtp from appchain ListenIBTP () <- chan * pb . IBTP // query historical ibtp by its id QueryIBTP ( id string ) ( * pb . IBTP , error ) // QueryOuterMeta queries latest index map of ibtps throwed on appchain QueryOuterMeta () map [ string ] uint64 }","title":"\u63a5\u53e3\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_13","text":"\u5e94\u7528\u94fe\u76d1\u542c\u51fa\u95ee\u9898 \u67e5\u8be2IBTP\u53ef\u80fd\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef\uff1a \u8f93\u5165\u7684IBTP ID\u683c\u5f0f\u6709\u8bef index\u4e0d\u5b58\u5728\uff08\u53ea\u8981\u5408\u7ea6\u4e0d\u52a8\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u60c5\u51b5\uff09 \u5408\u7ea6\u8c03\u7528\u51fa\u9519\uff0c\u6bd4\u5982\u5408\u7ea6\u5730\u5740\u4e0d\u5bf9\uff0c\u65b9\u6cd5\u540d\u51fa\u9519\u7b49\uff08\u91cd\u8bd5\uff0c\u9700\u8981\u6253log\u8fdb\u884c\u6392\u67e5\u6216\u8005\u66f4\u6362\u914d\u7f6e\uff09 \u8c03\u7528\u65f6\u7f51\u7edc\u51fa\u9519\uff08\u9700\u8981\u91cd\u8bd5\uff09 \u67e5\u8be2meta\u51fa\u9519\uff0c\u9700\u8981retry","title":"\u9519\u8bef\u5904\u7406"},{"location":"bitxhub/design/pier/#_14","text":"\u5728\u65b0\u7684\u8bbe\u8ba1\u4e2d\uff0c\u4e3b\u5907\u9ad8\u53ef\u7528\u5c06\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u6a21\u5757\uff0c\u5e76\u4e14\u5728Pier\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u79fb\u9664\u4e3b\u5907\u8282\u70b9\u7f16\u53f7\u7684\u914d\u7f6e\u9879\uff0c\u6539\u4e3a\u518d\u4e3b\u5907\u8282\u70b9\u542f\u52a8\u65f6\u968f\u673a\u751f\u6210\u5e8f\u53f7\u7684\u65b9\u6848\u3002\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\u70b9\uff1a \u80fd\u591f\u5728\u542f\u52a8\u65f6\u81ea\u4e3b\u53d1\u73b0\u81ea\u5df1\u662f\u4e3b\u8282\u70b9\u8fd8\u662f\u5907\u7528\u8282\u70b9 \u5907\u7528\u8282\u70b9\u80fd\u591f\u5728\u4e3b\u8282\u70b9\u5b95\u673a\u7684\u60c5\u51b5\u4e0b\u4e3b\u52a8\u5347\u7ea7\u6210\u4e3a\u4e3b\u8282\u70b9\uff0c\u7ee7\u7eed\u5b8c\u6210\u8de8\u94fe\u8bf7\u6c42 \u4e3b\u5907\u8282\u70b9\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\uff0c\u4e0d\u4f1a\u51fa\u73b0\u8de8\u94fe\u4ea4\u6613\u7684\u91cd\u590d\u6267\u884c","title":"\u4e3b\u5907\u6a21\u5757\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_15","text":"type HAMng interface { Start () error // \u542f\u52a8Pier\u7684\u4e3b\u4ece\u6a21\u5f0f Stop () error // \u505c\u6b62Pier\u7684\u4e3b\u4ece\u6a21\u5f0f IsMain () <- chan bool // \u5224\u65ad\u662f\u4e3b\u8282\u70b9\u8fd8\u662f\u5907\u7528\u8282\u70b9 }","title":"\u63a5\u53e3\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_16","text":"\u540c\u65f6\u6709\u4e24\u4e2a\u4e3b\u8282\u70b9\uff1a \u5982\u679c\u4e3b\u5907\u4e24\u4e2a\u8282\u70b9\u540c\u65f6\u8fde\u63a5\u4e2d\u7ee7\u94fe\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u540c\u65f6\u6709\u4e24\u4e2a\u4e3b\u8282\u70b9\u7684\u9519\u8bef\u4e0d\u4f1a\u4ea7\u751f\uff1b \u5982\u679c\u4e3b\u5907\u4e24\u4e2a\u8282\u70b9\u8fde\u63a5\u4e2d\u7ee7\u94fe\u7684\u4e24\u4e2a\u4e0d\u540c\u8282\u70b9\uff0c\u6709\u6781\u4f4e\u6982\u7387\u4ea7\u751f\u540c\u65f6\u6709\u4e24\u4e2a\u4e3b\u8282\u70b9\u7684\u9519\u8bef\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a\u9488\u5bf9\u8be5\u95ee\u9898\uff0c\u65b0\u7684\u8bbe\u8ba1\u5c06\u4f1a\u5728\u4e2d\u7ee7\u94fe\u8282\u70b9\u6536\u5230\u5e7f\u64ad\u8be2\u95ee\u540e\u67e5\u8be2\u672c\u5730\u7684\u4e3b\u8282\u70b9\u5217\u8868\u901a\u9053\uff0c\u5982\u679c\u6709\u901a\u9053\u8bf7\u6c42\u5c06\u4f1a\u8fd4\u56de\u5df2\u6709\u4e3b\u8282\u70b9\u7684\u56de\u590d\uff0c\u5e76\u4e14\u7f13\u51b2\u56de\u590d\u7ed9Pier\uff0c\u8ba9Pier\u7684\u4e3b\u5907\u8282\u70b9\u53d1\u8d77\u65b0\u4e00\u8f6e\u7684\u7ade\u4e89\u3002","title":"\u9519\u8bef\u5904\u7406"},{"location":"bitxhub/design/pier/#executor_1","text":"\u5728\u65b0\u7684\u8bbe\u8ba1\u4e2d\uff0cExecutor \u4e0d\u518d\u7ef4\u62a4 Index \u76f8\u5173\u7684\u4fe1\u606f\uff0c\u53ea\u662f\u4f5c\u4e3a\u5355\u7eaf\u7684\u6267\u884c\u5668\u3002\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\u70b9\u3002 \u63a5\u53d7\u6765\u81ea Exchanger \u6a21\u5757\u7684\u4ea4\u6613\uff0c\u5e76\u63d0\u4ea4\u5230\u63d2\u4ef6\u6267\u884c \u5bf9\u4e8e\u6267\u884c\u7684\u7ed3\u679c\uff0c\u6784\u9020\u51fa\u65b0\u7684IBTP\uff0c\u53d1\u56de\u7ed9 Exchanger \u6a21\u5757 \u5bf9\u4e8e\u4e22\u5931\u7684IBTP\u4ea4\u6613\uff0c\u63d0\u4f9b\u6309\u7167 From + Index \u7684\u67e5\u8be2\u65b9\u5f0f \u91cd\u542f\u4e4b\u540e\u67e5\u8be2\u5e94\u7528\u4e86\u4e0a\u6700\u65b0\u7684\u5df2\u6267\u884c\u7684 Meta \u4fe1\u606f","title":"Executor\u6a21\u5757\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_17","text":"type Executor interface { Start () error // \u542f\u52a8Executor\u6a21\u5757 Stop () error // \u505c\u6b62Executor\u6a21\u5757 // \u6267\u884cIBTP\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u5982\u679c\u6ca1\u6709\u6267\u884c\u7ed3\u679c\uff0c\u8fd4\u56de nil ExecuteIBTP ( ibtp * pb . IBTP ) ( * pb . IBTP , error ) // \u67e5\u8be2\u6700\u65b0\u7684\u94fe\u4e0a\u5df2\u6267\u884c\u7684 Meta \u4fe1\u606f QueryInterchainMeta () map [ string ] uint64 // \u67e5\u8be2\u6700\u65b0\u7684\u94fe\u4e0a\u5df2\u6536\u5230\u56de\u8c03\u7684 Meta \u4fe1\u606f QueryCallbackMeta () map [ string ] uint64 // \u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u4ea4\u6613\u7684\u6267\u884c\u7ed3\u679c\u7684\u56de\u6267 QueryIBTPReceipt ( from string , index uint64 , originalIBTP * pb . IBTP ) ( * pb . IBTP , error ) }","title":"\u63a5\u53e3\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_18","text":"\u6267\u884c\u6a21\u5757\u76f8\u4fe1\u6267\u884c\u4f20\u8fdb\u6765\u7684IBTP\u662f\u6709\u5e8f\u7684\uff0c\u5e8f\u53f7\u7684\u7ef4\u62a4\u7531\u5176\u4ed6\u6a21\u5757\u7ef4\u62a4\u3002\u73b0\u5728\u8be5\u6a21\u5757\u53ea\u9700\u8981\u63d0\u4ea4\u4ea4\u6613\u4e0a\u94fe\u5373\u53ef\u3002","title":"\u9519\u8bef\u5904\u7406"},{"location":"bitxhub/design/pier/#_19","text":"\u56e0\u4e3a\u8de8\u94fe\u7f51\u5173\u63d0\u4ea4\u4ea4\u6613\u5230\u5e94\u7528\u94fe\u4e5f\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u60c5\u51b5\u51fa\u73b0\uff0c\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u5904\u7406\u65b9\u5f0f\u4e0d\u4e00\u81f4\u3002 - \u56e0\u4e3a\u7f51\u7edc\u51fa\u9519\u5bfc\u81f4\u63d0\u4ea4\u4ea4\u6613\u65e0\u6cd5\u6210\u529f\uff08\u5176\u4ed6\u7c7b\u578b\u9700\u8981\u91cd\u8bd5\u7684\u60c5\u51b5\uff09 \u8fd9\u79cd\u60c5\u51b5\u6267\u884c\u91cd\u8bd5\u5373\u53ef \uff08\u4f46\u662f\u5fc5\u987b\u786e\u5b9a\u662f\u7f51\u7edc\u9519\u8bef\uff09 - \u56e0\u4e3a\u8de8\u94fe\u4ea4\u6613\u53c2\u6570\u8bbe\u7f6e\u51fa\u9519 - \u51fd\u6570\u6216\u8005\u51fd\u6570\u53c2\u6570\u51fa\u9519\uff0c\u6216\u8005ABI\u6587\u4ef6\u914d\u7f6e\u51fa\u9519 \u8fd9\u79cd\u60c5\u51b5\u4e0b\u8c03\u7528\u5408\u7ea6\u7684\u4e13\u95e8\u7684\u51fa\u9519\u51fd\u6570\uff0c\u4f7f\u5f97\u8be5 Index \u88ab\u6d88\u8017\u3002 - \u51fd\u6570\u53c2\u6570\u90fd\u6b63\u786e\uff0c\u4f46\u662f\u5408\u7ea6\u6267\u884c\u65f6\u76ee\u7684\u5408\u7ea6\u4e0d\u5b58\u5728\u7b49\u9519\u8bef \u76f4\u63a5\u5728\u5408\u7ea6\u8bb0\u5f55\u8be5\u4ea4\u6613\u4e3a\u5931\u8d25\uff0c\u5e76\u8fd4\u56de\uff0cIndex \u88ab\u6d88\u8017\u3002 - \u63d0\u4ea4\u4e0a\u94fe\u6210\u529f\uff0c\u4f46\u662f\u6784\u9020\u56de\u6267\u5931\u8d25\uff08Core\u6253\u5370\u9519\u8bef\uff09 \u7531\u4e8e\u56de\u6267IBTP\u662f\u7531\u63d2\u4ef6\u8fdb\u884c\u6784\u9020\u7684\uff0c\u6240\u4ee5\u8de8\u94fe\u7f51\u5173\u9700\u8981\u9884\u8bbe\u63d2\u4ef6\u4e00\u5b9a\u4f1a\u6784\u9020\u56de\u6267\u8fd4\u56de\u51fa\u6765\u3002\uff08\u8de8\u94fe\u7f51\u5173**\u9700\u8981\u5bf9\u63d2\u4ef6\u8fd4\u56de\u7684\u4e1c\u897f\u8fdb\u884c\u68c0\u67e5\uff0c\u9632\u6b62\u4e0d\u5fc5\u8981\u7684Panic**\uff09","title":"\u63d0\u4ea4\u4ea4\u6613\u5230\u5e94\u7528\u94fe"},{"location":"bitxhub/design/pier/#syncer","text":"Syncer \u6a21\u5757\u8d1f\u8d23\u548c\u4e2d\u7ee7\u94fe\u7684\u4ea4\u4e92\uff0cExchanger \u6709\u4efb\u4f55\u4ece\u4e2d\u7ee7\u94fe\u83b7\u53d6\u4fe1\u606f\u7684\u9700\u6c42\u90fd\u662f\u901a\u8fc7 Syncer \u6a21\u5757\u8fdb\u884c\u3002Syncer \u9700\u8981\u63d0\u4f9b\u7684\u529f\u80fd\uff1a \u76d1\u542c\u4e2d\u7ee7\u94fe\u4e0a\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u5e76\u63a8\u9001\u8de8\u94fe\u4ea4\u6613\u5230 Exchanger \u4e2d \u6839\u636e\u5e94\u7528\u94fe ID \u67e5\u8be2\u4e2d\u7ee7\u94fe\u4e0a\u7684Meta\u4fe1\u606f \u6839\u636e IBTP ID \u67e5\u8be2\u4e2d\u7ee7\u94fe\u4e0a\u8de8\u94fe\u4ea4\u6613 \u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u5230\u4e2d\u7ee7\u94fe\u4e0a \u5411\u4e2d\u7ee7\u94fe\u67e5\u8be2\u8d44\u4ea7\u4ea4\u6362\u7c7b\u578b\u8de8\u94fe\u4ea4\u6613\u7684\u591a\u7b7e\u4fe1\u606f","title":"Syncer \u6a21\u5757\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_20","text":"\u7ed3\u5408\u73b0\u5728 Exchanger \u7684\u8bbe\u8ba1\uff0cSyncer \u9700\u8981\u63d0\u4f9b\u4ee5\u4e0b\u7684\u63a5\u53e3 type Syncer interface { // \u542f\u52a8Syncer\u6a21\u5757 Start () error // \u505c\u6b62Syncer\u6a21\u5757 Stop () error // \u67e5\u8be2\u4e2d\u7ee7\u94fe\u4e0a\u5df2\u6536\u5230\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u6700\u65b0 Index \u7684Meta\u4fe1\u606f QueryInterchainMeta () map [ string ] uint64 // \u6839\u636e IBTP \u7684 ID \u67e5\u8be2\u4e2d\u7ee7\u94fe\u4e0a\u7684\u8bb0\u5f55 QueryIBTP ( ibtpID string ) ( * pb . IBTP , error ) // \u76d1\u542c\u94fe\u4e0a\u629b\u51fa\u7684\u8de8\u94fe\u4ea4\u6613 ListenIBTP () <- chan * pb . IBTP // \u53d1\u9001\u5176\u4ed6\u94fe\u7684 IBTP \u5230\u5e94\u7528\u94fe\u4e0a\u6267\u884c\u3002 SendIBTP ( ibtp * pb . IBTP ) error // \u4ece\u4e2d\u7ee7\u94fe\u83b7\u53d6\u8d44\u4ea7\u4ea4\u6362\u7684\u591a\u7b7e\u4fe1\u606f GetAssetExchangeSigns ( id string ) ([] byte , error ) // \u4ece\u4e2d\u7ee7\u94fe\u96c6\u7fa4\u83b7\u53d6IBTP\u7684\u591a\u7b7e\u4fe1\u606f GetIBTPSigns ( ibtp * pb . IBTP ) ([] byte , error ) // \u4ece\u4e2d\u7ee7\u94fe\u83b7\u53d6\u5df2\u6ce8\u518c\u7684\u5e94\u7528\u94fe\u7ec4 GetAppchains () ([] * rpcx . Appchain , error ) // \u901a\u8fc7appchain id\u83b7\u53d6 interchain meta\u4fe1\u606f GetInterchainById ( from string ) * pb . Interchain // \u6ce8\u518cUnion\u6a21\u5f0f\u4e0b\u7684recover\u5904\u7406\u5668 RegisterRecoverHandler ( RecoverUnionHandler ) error // \u6ce8\u518c\u53ef\u62c9\u53d6appchains\u4fe1\u606f\u7684\u5904\u7406\u5668 RegisterAppchainHandler ( handler AppchainHandler ) error }","title":"\u63a5\u53e3\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_21","text":"Syncer \u4ece\u4e2d\u7ee7\u94fe\u540c\u6b65\u5230\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u6682\u65f6\u5b58\u653e\u5728\u672c\u5730\u7684\u5b58\u50a8\u4e2d\u3002\u9700\u8981\u8bb0\u5f55\u7684\u4fe1\u606f\u662f\uff1a \u4e0a\u6b21\u6267\u884c\u5230\u6700\u540e\u4e00\u4e2a\u533a\u5757\u9ad8\u5ea6 \u5df2\u7ecf\u63a5\u6536\u5230\u7684IBTP\u7684\u4fe1\u606f \u91cd\u542f\u4e4b\u540e\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a \u5982\u679c\u5b58\u50a8\u6ca1\u6709\u5220\u9664\uff0c\u67e5\u8be2\u5230\u6700\u540e\u4e00\u4e2a\u5904\u7406\u8fc7\u7684\u533a\u5757\u9ad8\u5ea6\uff0c\u4ece\u8fd9\u4e2a\u9ad8\u5ea6\u5f00\u59cb\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613\u7684\u5904\u7406\uff08\u53ef\u80fd\u4f1a\u6709\u90e8\u5206\u8de8\u94fe\u4ea4\u6613\u91cd\u590d\u63d0\u4ea4\uff0c\u4f46\u662f\u6ca1\u5173\u7cfb\uff0cExchanger\u4f1a\u5ffd\u7565\u8fd9\u4e9b\u91cd\u590d\u63d0\u4ea4\u7684\u4ea4\u6613\uff09 \u5982\u679c\u5b58\u50a8\u88ab\u5220\u9664\uff0cSyncer \u91cd\u7b2c\u4e00\u4e2a\u533a\u5757\u5f00\u59cb\u540c\u6b65\uff0c\u5e76\u63d0\u4ea4\u8fd9\u4e9b\u533a\u5757\u7684\u6240\u6709\u4ea4\u6613\uff08\u8fd9\u91cc\u4e5f\u4f1a\u7531 Exchanger \u6a21\u5757\u6765\u5ffd\u7565\u5df2\u7ecf\u6267\u884c\u8fc7\u7684\u4ea4\u6613\uff09","title":"\u6062\u590d\u5904\u7406"},{"location":"bitxhub/design/pier/#_22","text":"","title":"\u63d2\u4ef6\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_23","text":"\u7531\u4e8e\u73b0\u5728\u91c7\u7528\u533a\u5757\u94fe\u670d\u52a1\u7684\u5404\u79cd\u5e94\u7528\u53ef\u80fd\u5728\u4f7f\u7528\u591a\u79cd\u4e0d\u540c\u67b6\u6784\u7684\u533a\u5757\u94fe\uff0c\u6240\u4ee5\u5982\u679c\u8de8\u94fe\u5e73\u53f0\u60f3\u8981\u83b7\u5f97\u5bf9\u63a5\u5404\u79cd\u533a\u5757\u94fe\u7684\u8de8\u94fe\u80fd\u529b\u7684\u8bdd\uff0c\u5fc5\u7136\u4f7f\u5f97\u9002\u914d\u5f02\u6784\u533a\u5757\u94fe\u7684\u90e8\u5206\u8fc7\u4e8e\u590d\u6742\u3002 \u4e3a\u4e86\u7b80\u5316\u8de8\u94fe\u7f51\u5173\u5bf9\u4e8e\u4e0d\u540c\u67b6\u6784\u7684\u533a\u5757\u94fe\u7684\u9002\u914d\u5de5\u4f5c\uff0c\u6211\u4eec\u5c06\u6240\u6709\u76f4\u63a5\u548c\u5e94\u7528\u94fe\u76f4\u63a5\u4ea4\u4e92\u7684\u90e8\u5206\u62bd\u8c61\u5230Plugin\u4e2d\uff0cPlugin\u4e3a\u8de8\u94fe\u7f51\u5173\u63d0\u4f9b\u5fc5\u8981\u7684\u67e5\u8be2\u5e94\u7528\u94fe\u72b6\u6001\u3001\u63d0\u4ea4\u8de8\u94fe\u4ea4\u6613\u5230\u5e94\u7528\u94fe\u7b49\u670d\u52a1\u7684\u63a5\u53e3\uff0c\u505a\u5230\u4e86\u5bf9\u4e8e\u5e94\u7528\u94fe\u672c\u8eab\u67b6\u6784\u590d\u6742\u6027\u5bf9\u4e8e\u8de8\u94fe\u7f51\u5173\u662f\u900f\u660e\u7684\u3002 Plugin\u6a21\u5f0f\u7684\u4e00\u5927\u7279\u70b9\u662f\u5c06Pier\u4e0e\u5e94\u7528\u94fe\u7684\u4ea4\u4e92\u6a21\u5757\u548cPier\u6838\u5fc3\u6a21\u5757\u8fdb\u884c\u89e3\u8026\uff0c\u4ece\u800c\u65b9\u4fbf\u66f4\u591a\u7684\u5e94\u7528\u94fe\u52a0\u5165\u8de8\u94fe\u7cfb\u7edf\u4e2d\u3002Plugin\u4f5c\u4e3a\u4e00\u4e2a\u548cPier\u76f8\u5bf9\u72ec\u7acb\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u662f\u901a\u8fc7Pier\u8fd0\u884c\u65f6\u5916\u90e8\u542f\u52a8\u670d\u52a1\u7684\u65b9\u5f0f\u8fdb\u884c\u4f7f\u7528\u3002\u4e3a\u4e86\u80fd\u5b9e\u73b0\u4e0e\u5e94\u7528\u94fe\u7684\u4ea4\u4e92\u80fd\u529b\uff0cPlugin\u9700\u8981\u6839\u636e\u4e0d\u540c\u533a\u5757\u94fe\u7684\u673a\u5236\u5177\u4f53\u5b9e\u73b0\u7279\u5b9a\u7684\u63a5\u53e3\u3002\u63a5\u53e3\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u529f\u80fd\uff1a \u76d1\u542c\u76f8\u5e94\u533a\u5757\u94fe\u4e0a\u7684\u8de8\u94fe\u4e8b\u4ef6\u5e76\u4f20\u9012\u7ed9Pier\u5904\u7406\uff1b \u6267\u884c\u6765\u81ea\u4e8e\u5176\u4ed6\u533a\u5757\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\uff1b \u80fd\u591f\u67e5\u8be2\u76f8\u5e94\u533a\u5757\u94fe\u4e0a\u8de8\u94fe\u4ea4\u6613\u76f8\u5173\u7684\u5143\u6570\u636e\u3002 \u80fd\u591f\u67e5\u8be2\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u548c\u8de8\u94fe\u8bf7\u6c42\u7684\u5386\u53f2\u6570\u636e \u603b\u7684\u6765\u8bf4\uff0c\u91c7\u7528Plugin\u673a\u5236\u7684\u4f18\u52bf\u6709\u5982\u4e0b\u4e24\u70b9\uff1a \u65b9\u4fbf\u66f4\u65b0\uff0c\u80fd\u591f\u5728\u4e0d\u505c\u6b62Pier\u7684\u65b9\u5f0f\u4e0b\u66f4\u65b0Plugin\uff1b \u65b9\u4fbf\u9002\u914d\u4e0d\u540c\u7684\u533a\u5757\u94fe\uff0c\u800c\u4e0d\u7528\u6539\u52a8Pier\u3002","title":"\u6982\u8ff0"},{"location":"bitxhub/design/pier/#plugin","text":"\u4e3a\u4e86\u51cf\u5c11Pier core\u548c\u5e94\u7528\u94fe\u4e4b\u95f4\u7684\u8026\u5408\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86Plugin\u7684\u7edf\u4e00\u7684\u63a5\u53e3\uff0cPlugin\u4e3b\u8981\u4e3aPier core\u63d0\u4f9b\u5411\u5e94\u7528\u94fe\u7684\u72b6\u6001\u67e5\u8be2\u548c\u8d44\u6e90\u8c03\u7528\u7684\u63a5\u53e3\u3002\u5177\u4f53\u7684\u63a5\u53e3\u548c\u8bf4\u660e\u5982\u4e0b\uff1a type Client interface { // \u4f20\u9012\u76f8\u5e94\u7684\u4fe1\u606f\u8fdb\u884c\u521d\u59cb\u5316 Initialize ( configPath string , pierID string , extra [] byte ) error // \u542f\u52a8Plugin\u670d\u52a1\u7684\u63a5\u53e3 Start () error \u200b // \u505c\u6b62Plugin\u670d\u52a1\u7684\u63a5\u53e3 Stop () error \u200b // Plugin\u8d1f\u8d23\u5c06\u533a\u5757\u94fe\u4e0a\u4ea7\u751f\u7684\u8de8\u94fe\u4e8b\u4ef6\u8f6c\u5316\u4e3a\u6807\u51c6\u7684IBTP\u683c\u5f0f\uff0cPier\u901a\u8fc7GetIBTP\u63a5\u53e3\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u518d\u8fdb\u884c\u5904\u7406 GetIBTP () chan * pb . IBTP \u200b // Plugin \u8d1f\u8d23\u6267\u884c\u5176\u4ed6\u94fe\u8fc7\u6765\u7684\u8de8\u94fe\u8bf7\u6c42\uff0cPier\u8c03\u7528SubmitIBTP\u63d0\u4ea4\u6536\u5230\u7684\u8de8\u94fe\u8bf7\u6c42\u3002[][]byte \u4e3a\u6267\u884c\u8de8\u94fe\u8bf7\u6c42\u7684\u7ed3\u679c\u3002 SubmitIBTP ( * pb . IBTP ) ( * pb . SubmitIBTPResponse , error ) // GetOutMessage \u8d1f\u8d23\u5728\u8de8\u94fe\u5408\u7ea6\u4e2d\u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u3002\u67e5\u8be2\u952e\u503c\u4e2dto\u6307\u5b9a\u76ee\u7684\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u6765\u6e90\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 GetOutMessage ( to string , idx uint64 ) ( * pb . IBTP , error ) \u200b // GetInMessage \u8d1f\u8d23\u5728\u8de8\u94fe\u5408\u7ea6\u4e2d\u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u3002\u67e5\u8be2\u952e\u503c\u4e2dfrom\u6307\u5b9a\u6765\u6e90\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 GetInMessage ( from string , idx uint64 ) ([][] byte , error ) \u200b // GetInMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u76ee\u7684\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219\u53ef\u80fd\u6709\u591a\u6761\u94fe\u548cA\u8fdb\u884c\u8de8\u94fe\uff0c\u5982B->A:3; C->A:5\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u6765\u6e90\u94feID\uff0cvalue\u5bf9\u5e94\u8be5\u6765\u6e90\u94fe\u5df2\u53d1\u9001\u7684\u6700\u65b0\u7684\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 GetInMeta () ( map [ string ] uint64 , error ) \u200b // GetOutMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5df2\u53d1\u9001\u5230\u8be5\u76ee\u7684\u94fe\u7684\u6700\u65b0\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 GetOutMeta () ( map [ string ] uint64 , error ) \u200b // GetCallbackMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\uff1b\u540c\u65f6\u7531\u4e8e\u8de8\u94fe\u8bf7\u6c42\u4e2d\u652f\u6301\u56de\u8c03\u64cd\u4f5c\uff0c\u5373A->B->A\u4e3a\u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u56de\u8c03\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\uff0c\u5982A->B->:2; A->C\u2014>A:4\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5230\u8be5\u76ee\u7684\u94fe\u6700\u65b0\u7684\u5e26\u56de\u8c03\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:2, C:4}\u3002\uff08\u6ce8\u610f CallbackMeta\u5e8f\u53f7\u53ef\u80fd\u548coutMeta\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u7531A\u53d1\u51fa\u7684\u8de8\u94fe\u8bf7\u6c42\u90e8\u5206\u662f\u6ca1\u6709\u56de\u8c03\u7684\uff09 GetCallbackMeta () ( map [ string ] uint64 , error ) \u200b // CommitCallback \u6267\u884c\u5b8cIBTP\u5305\u4e4b\u540e\u8fdb\u884c\u4e00\u4e9b\u56de\u8c03\u64cd\u4f5c\u3002 CommitCallback ( ibtp * pb . IBTP ) error \u200b // Name \u63cf\u8ff0Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u7684\u81ea\u5b9a\u4e49\u540d\u79f0\uff0c\u4e00\u822c\u548c\u4e1a\u52a1\u76f8\u5173\uff0c\u5982\u53f8\u6cd5\u94fe\u7b49\u3002 Name () string \u200b // Type \u63cf\u8ff0Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u7c7b\u578b\uff0c\u6bd4\u5982Fabric Type () string }","title":"Plugin\u63a5\u53e3\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_24","text":"\u7531\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u533a\u5757\u94fe\u5728\u67b6\u6784\u4e0a\u7684\u4e0d\u540c\uff0c\u5177\u4f53\u5b9e\u73b0\u4e0a\u8ff0\u7684\u63a5\u53e3\u5fc5\u7136\u6709\u6240\u4e0d\u540c\uff0c\u6211\u4eec\u6ca1\u53d1\u4ece\u4ee3\u7801\u5c42\u9762\u4ed4\u7ec6\u4ecb\u7ecd\uff0c\u4f46\u662f\u80fd\u591f\u5927\u6982\u4ecb\u7ecd\u4e00\u4e0bPlugin\u7684\u5b9e\u73b0\u7684\u601d\u8def\u3002 \u5728\u6211\u4eec\u7684\u8bbe\u8ba1\u4e2d\uff0c\u8de8\u94fe\u7f51\u5173\u548cPlugin\u4e4b\u95f4\u6d89\u53ca\u5230\u8de8\u94fe\u4ea4\u6613\u7684\u63a5\u53e3\u90fd\u662f\u901a\u8fc7IBTP\u6765\u4ea4\u4e92\u7684\uff0c\u8de8\u94fe\u7f51\u5173\u4e0d\u9700\u8981\u5173\u5fc3\u5728\u5e94\u7528\u94fe\u4e0a\u8de8\u94fe\u8bf7\u6c42\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\uff0c\u9700\u8981\u5904\u7406\u7684\u90fd\u662fIBTP Package\u3002\u6240\u4ee5\u5728\u5b9e\u73b0Plugin\u4e0a\u4e5f\u9700\u8981\u56f4\u7ed5IBTP Package\u4f5c\u51fa\u4e00\u5b9a\u7684\u9002\u914d\u3002\u603b\u7684\u6765\u8bf4\u5177\u4f53\u9700\u8981\u505a\u5230\u5982\u4e0b\u7684\u51e0\u70b9\uff1a \u76d1\u542c\u5e94\u7528\u533a\u5757\u94fe\u4e0a\u7684\u8de8\u94fe\u4e8b\u4ef6\uff0c\u5e76\u4f20\u9012\u7ed9Pier core\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u4e2a\u4e00\u822c\u53ef\u4ee5\u901a\u8fc7\u8ba2\u9605\u533a\u5757\u94fe\u7684\u4e8b\u4ef6\u7684\u529f\u80fd\u6765\u505a\u5230\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cPlugin\u9700\u8981\u8d1f\u8d23\u8de8\u94fe\u4e8b\u4ef6\u5230IBTP Package\u7684\u8f6c\u6362\u3002Plugin\u91cd\u8981\u7684\u7279\u70b9\u4e4b\u4e00\u5c31\u662f\u5c4f\u853d\u4e86\u5e95\u5c42\u5e94\u7528\u94fe\u4e0d\u540c\u6570\u636e\u683c\u5f0f\u4e4b\u95f4\u7684\u590d\u6742\u6027\uff0c\u5411Pier core\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684IBTP Package\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u5bf9\u4e8ePier core\u7684\u5904\u7406\u6765\u8bf4\u66f4\u52a0\u4fbf\u6377\u3002 \u63d0\u4f9b\u67e5\u8be2\u5e94\u7528\u94fe\u8de8\u94fe\u5408\u7ea6\u7ef4\u62a4\u7684\u8de8\u94feMeta\u4fe1\u606f\u63a5\u53e3\u3002Pier\u672c\u8eab\u662f\u4e0d\u4fdd\u5b58\u8de8\u94fe\u4ea4\u6613\u7684\u72b6\u6001\u4fe1\u606f\u7684\uff0c\u9700\u8981\u957f\u65f6\u95f4\u5b58\u50a8\u7684\u8de8\u94fe\u4ea4\u6613\u8bb0\u5f55\u4fe1\u606f\u90fd\u5e94\u8be5\u5728\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u4e0a\u8fdb\u884c\u8bb0\u5f55\u3002\u6240\u4ee5Pier\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u90fd\u5e94\u8be5\u53ef\u4ee5\u4ece\u5b95\u673a\u7b49\u60c5\u51b5\u4e2d\u6062\u590d\uff0c\u6062\u590d\u7684\u8fc7\u7a0b\u4e5f\u6b63\u9700\u8981\u8fd9\u4e9b\u63a5\u53e3\u8fdb\u884c\u67e5\u8be2\u3002 \u63d0\u4ea4\u5176\u4ed6\u94fe\u4e0a\u6765\u7684\u8de8\u94fe\u8bf7\u6c42\u3002\u8fd9\u4e00\u6b65\u662f\u76d1\u542c\u672c\u5e94\u7528\u94fe\u8de8\u94fe\u8bf7\u6c42\u7684\u9006\u64cd\u4f5c\uff0c\u4f46\u662fPlugin\u548cPier core\u5728\u4ea4\u4e92\u4e0a\u90fd\u5e94\u8be5\u662fIBTP\u683c\u5f0f\u7684Package\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u529f\u80fd\u4e2d\uff0cPlugin\u9700\u8981\u89e3\u5f00IBTP package\uff0c\u8f6c\u5316\u4e3a\u5e94\u7528\u94fe\u53ef\u4ee5\u8bc6\u522b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5728\u63d0\u4ea4\u5230\u8de8\u94fe\u5408\u7ea6\u4e0a\u8fdb\u884c\u6267\u884c\u3002\u540c\u65f6\u5bf9\u4e8e\u8de8\u94fe\u4ea4\u6613\u53ef\u80fd\u7684\u6267\u884c\u51fa\u9519\uff0cPlugin\u4e5f\u5e94\u8be5\u63d0\u4f9b\u4e00\u5b9a\u7684\u9519\u8bef\u5904\u7406\u80fd\u529b\u3002\u5bf9\u4e8e\u6267\u884c\u7684\u7ed3\u679c\uff0c\u4e5f\u9700\u8981\u4e3aPier core \u63d0\u4f9b\u7edf\u4e00\u7684Response\u6570\u636e\u7ed3\u6784\u3002","title":"\u8bbe\u8ba1\u8bf4\u660e"},{"location":"bitxhub/design/pier/#_25","text":"\u6309\u7167IBTP\u7ed3\u6784\u7684\u8bbe\u8ba1\u7684\u8bdd\uff0cBitxHub\u53ea\u8d1f\u8d23\u8bb0\u5f55\u5e94\u7528\u94fe\u8fd9\u4e2a\u7c92\u5ea6\u7684\u8de8\u94fe\u4ea4\u6613\u7684Index\u3002\u4f46\u662f\u5728Pier\u8c03\u7528\u5e94\u7528\u94fe\u667a\u80fd\u5408\u7ea6\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u65f6\uff0c\u6709\u591a\u4e2a\u667a\u80fd\u5408\u7ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u5f88\u96be\u7ef4\u62a4\u4e00\u4e2a\u5e94\u7528\u94fe\u5c42\u9762\u7684Index\u3002 \u6240\u4ee5\u6211\u4eec\u8003\u8651\u5728\u5404\u4e2a\u5e94\u7528\u94fe\u4e0a\u7ef4\u62a4\u4e24\u4e2a\u4e0d\u540c\u7684\u5408\u7ea6\u3002\u4e00\u4e2a\u5408\u7ea6\u8d1f\u8d23\u5bf9\u63a5\u8de8\u94fe\u7f51\u5173Pier\uff0c\u4e3a\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\uff1b\u4e00\u4e2a\u5408\u7ea6\u8d1f\u8d23\u5177\u4f53\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u4e3a\u4e1a\u52a1\u5408\u7ea6\u3002\u4e1a\u52a1\u5408\u7ea6\u9700\u8981\u8de8\u94fe\u65f6\uff0c\u8981\u7edf\u4e00\u5c06\u8de8\u94fe\u8bf7\u6c42\u63d0\u4ea4\u5230Broker\u5408\u7ea6\u4e0a\uff0cBroker\u7edf\u4e00\u548cPier\u8fdb\u884c\u4ea4\u4e92\u3002\u4e00\u4e2aBroker\u5408\u7ea6\u53ef\u4ee5\u8d1f\u8d23\u5bf9\u63a5\u591a\u4e2a\u4e1a\u52a1\u5408\u7ea6\u3002","title":"\u8de8\u94fe\u5408\u7ea6\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#broker","text":"Broker\u6709\u4e09\u90e8\u5206\u4e3b\u8981\u7684\u5185\u5bb9\u9700\u8981\u7ef4\u62a4\uff1a\u4ea4\u6613\u5e8f\u53f7\u3001\u5386\u53f2\u4ea4\u6613\u3001\u9519\u8bef\u5904\u7406","title":"Broker\u5408\u7ea6"},{"location":"bitxhub/design/pier/#_26","text":"\u8be5\u5408\u7ea6\u6709\u4e09\u4e2a\u8de8\u94fe\u4ea4\u6613\u7684\u5e8f\u53f7\u9700\u8981\u7ef4\u62a4\uff1a // key\u503c\u4e3a\u76ee\u7684\u94fe\u5730\u5740to,value\u4e3a\u53d1\u5f80\u8be5\u94fe\u7684\u6700\u540eindex mapping ( address => uint64 ) outerMeta ; // key\u503c\u4e3a\u6765\u6e90\u94fe\u5730\u5740from,value\u4e3a\u4ece\u8be5\u94fe\u53d1\u8fc7\u6765\u7684\u6700\u540eindex map ( address => uint64 ) innerMeta ; // key\u503c\u4e3a\u76ee\u7684\u94fe\u5730\u5740to,value\u4e3a\u8be5\u94fe\u5df2\u7ecf\u6267\u884c\u56de\u8c03\u7684\u6700\u540eindex map ( address => uint64 ) callbackrMeta ; \u4e0a\u8ff0\u7684\u4e09\u4e2a\u5e8f\u53f7\u4e3b\u8981\u80fd\u591f\u9632\u6b62\u91cd\u653e\u653b\u51fb\u548c\u4fdd\u8bc1\u8de8\u94fe\u7f51\u5173\u63d0\u4ea4\u4ea4\u6613\u7684\u5e42\u7b49\u6027\uff08\u67d0\u4e9b\u573a\u666f\u4e0b\u8de8\u94fe\u7f51\u5173\u80fd\u591f\u653e\u5fc3\u7684\u591a\u6b21\u63d0\u4ea4\u800c\u4e0d\u7528\u62c5\u5fc3\u91cd\u590d\u4e0a\u94fe\uff09\u3002","title":"\u4ea4\u6613\u5e8f\u53f7"},{"location":"bitxhub/design/pier/#_27","text":"\u5386\u53f2\u6570\u636e\u53c8\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u81ea\u8eab\u94fe\u4e0a\u53d1\u8d77\u7684\u8de8\u94fe\u8bf7\u6c42\uff08\u53d1\u9001\u5230\u5176\u4ed6\u94fe\u4e0a\u53bb\uff09\uff1b\u4e00\u4e2a\u662f\u4ece\u5176\u4ed6\u94fe\u6536\u5230\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u6267\u884c\u5b8c\u6210\u540e\u7684\u8bb0\u5f55\u3002 // \u76ee\u7684\u94fe\u5730\u5740 + \u4ea4\u6613\u5e8f\u53f7\u4f5c\u4e3a\u5e8f\u53f7\uff0c\u81ea\u8eab\u94fe\u4e0a\u53d1\u8d77\u7684\u8de8\u94fe\u8bf7\u6c42\u5185\u5bb9\u4f5c\u4e3a value mapping ( address + uint64 => record ) outMessages ; // \u6765\u6e90\u94fe\u5730\u5740 + \u4ea4\u6613\u5e8f\u53f7\u4f5c\u4e3a\u5e8f\u53f7\uff0c\u5176\u4ed6\u94fe\u53d1\u8d77\u7684\u8de8\u94fe\u4ea4\u6613\u6267\u884c\u7ed3\u679c\u4f5c\u4e3a value mapping ( address + uint64 => result )) inMessages ; \u901a\u8fc7\u5728 Broker \u5408\u7ea6\u4e0a\u8bb0\u5f55\u5386\u53f2\u6570\u636e\uff0c\u53ef\u4ee5\u8ba9\u8de8\u94fe\u7f51\u5173\u5728\u91cd\u542f\u3001\u4ea4\u6613\u4e22\u5931\u7b49\u60c5\u51b5\u4e0b\u6062\u590d\u3002\u4ee5\u4e0a\u53ea\u662f\u4f2a\u4ee3\u7801\u7684\u63cf\u8ff0\uff0c\u5177\u4f53\u5728\u4e0d\u540c\u533a\u5757\u94fe\u7684\u667a\u80fd\u5408\u7ea6\u4e0a\u5b9e\u73b0\u65f6\u4f1a\u6709\u4e0d\u540c\u7684\u7b56\u7565\u3002","title":"\u5386\u53f2\u4ea4\u6613"},{"location":"bitxhub/design/pier/#_28","text":"\u7531\u4e8eBroker \u4e0a\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u8981\u6c42\u4ea4\u6613\u5e8f\u53f7\u4e25\u683c\u9012\u589e\u3002\u8fd9\u5bfc\u81f4\u5728\u67d0\u4e9b\u8de8\u94fe\u4ea4\u6613\u56e0\u4e3a\u53c2\u6570\u9519\u8bef\u7b49\u539f\u56e0\u65e0\u6cd5\u8c03\u7528\u5230\u8de8\u94fe\u4ea4\u6613\u5904\u7406\u51fd\u6570\uff0c\u5e8f\u53f7\u65e0\u6cd5\u6d88\u8017\uff0c\u4ece\u800c\u540e\u9762\u6240\u6709\u7684\u4ea4\u6613\u90fd\u88ab\u8ba4\u4e3a\u662f\u65e0\u6548\u7684\u60c5\u51b5\u3002 \u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5728Broker \u5408\u7ea6\u4e13\u95e8\u63d0\u4f9b\u4e86\u9519\u8bef\u5904\u7406\u51fd\u6570\u3002\u5f53\u67d0\u4e2a\u8de8\u94fe\u4ea4\u6613\u65e0\u6cd5\u5904\u7406\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u8c03\u7528\u8be5\u51fd\u6570\u53ef\u4ee5\u6d88\u8017\u8be5\u8de8\u94fe\u4ea4\u6613\u7684\u5e8f\u53f7\uff0c\u8ba9\u540e\u9762\u7684\u8de8\u94fe\u4ea4\u6613\u80fd\u591f\u6b63\u5e38\u8fdb\u884c\u3002 // \u7528\u6765\u6d88\u8017\u6267\u884c\u5176\u4ed6\u94fe\u53d1\u8d77\u7684\u8de8\u94fe\u4ea4\u6613\u51fa\u9519\u65f6\u7684\u5e8f\u53f7 function interchainError ( address sourceChainID , uint64 index ) public returns ( bool ); // \u7528\u6765\u6d88\u8017\u6267\u884c\u5176\u4ed6\u94fe\u8fd4\u56de\u7684\u56de\u8c03\u4ea4\u6613\u51fa\u9519\u65f6\u7684\u5e8f\u53f7 function interchainConfirmError ( address sourceChainID , uint64 index ) public returns ( bool );","title":"\u9519\u8bef\u5904\u7406"},{"location":"bitxhub/design/pier/#_29","text":"","title":"\u5927\u89c4\u6a21\u8de8\u94fe"},{"location":"bitxhub/design/pier/#_30","text":"\u73b0\u6709\u7684\u8de8\u94fe\u7f51\u7edc\u5206\u4e3a**\u4e2d\u7ee7\u94fe+\u8de8\u94fe\u7f51\u5173**\u6a21\u5f0f\u548c**\u8de8\u94fe\u7f51\u5173\u76f4\u8fde**\u6a21\u5f0f\uff0c\u5982\u679c\u8981\u7ec4\u6210\u5927\u89c4\u6a21\u6df7\u5408\u8de8\u94fe\u7f51\u7edc\u7684\u4e07\u94fe\u4e92\u8fde\u7cfb\u7edf\uff0c\u5c31\u9700\u8981\u8de8\u94fe\u7f51\u5173\u6dfb\u52a0**\u5206\u5e03\u5f0f\u54c8\u5e0c\u8868DHT**\u548c**\u8de8\u94fe\u4ea4\u6613\u8def\u7531**\u7684\u529f\u80fd\u3002 \u8de8\u94fe\u4ea4\u6613\u8def\u7531\u6d41\u7a0b\uff1a \u4e2d\u7ee7\u94feA\u4e2d\u5e94\u7528\u94feA\u2018\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6\uff0c\u76ee\u7684\u94fe\u662f\u4e2d\u7ee7\u94feB\u4e2d\u7684\u5e94\u7528\u94feB\u2019\u3002 \u5e94\u7528\u94feA\u2018\u7684\u8de8\u94fe\u7f51\u5173\u6536\u5230\u8de8\u94fe\u4e8b\u4ef6\uff0c\u53d1\u9001IBTP\u7ed9\u4e2d\u7ee7\u94feA\uff0c\u4e2d\u7ee7\u94feA\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\uff0c\u9a8c\u8bc1\u6210\u529f\u540e\u5c06\u8be5\u7b14\u4ea4\u6613\u6253\u5305\u51fa\u5757\u3002 \u8de8\u94fe\u7f51\u5173A\u89e3\u6790\u4e2d\u7ee7\u94feA\u7684\u533a\u5757\uff0c\u89e3\u6790\u5230IBTP\u7684\u76ee\u7684\u94fe\u4e0d\u5c5e\u4e8e\u4e2d\u7ee7\u94feA\u7ba1\u7406\u7684\u5e94\u7528\u94fe\uff0c\u968f\u540e\u8de8\u94fe\u7f51\u5173A\u6839\u636eDHT\u8def\u7531\u5230\u76ee\u7684\u4e2d\u7ee7\u94feB\u7684\u8de8\u94fe\u7f51\u5173B\u3002 \u8de8\u94fe\u7f51\u5173B\u6536\u5230IBTP\uff0c\u5c06\u8de8\u94fe\u4ea4\u6613\u53d1\u9001\u5230\u76f8\u5e94\u7684\u4e2d\u7ee7\u94fe\u3002 \u4e2d\u7ee7\u94feB\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\uff0c\u9a8c\u8bc1\u6210\u529f\u540e\u5c06\u8be5\u7b14\u4ea4\u6613\u6253\u5305\u51fa\u5757\u3002 \u5e94\u7528\u94feB\u2018\u7684\u8de8\u94fe\u7f51\u5173\u540c\u6b65\u4e2d\u7ee7\u94feB\u7684\u533a\u5757\uff0c\u6536\u5230\u4e2d\u7ee7\u94feB\u2018\u8def\u7531\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u53d1\u9001\u7ed9\u5e94\u7528\u94feB\u2019\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u3002","title":"\u6982\u8ff0"},{"location":"bitxhub/design/pier/#_31","text":"\u5728\u5927\u89c4\u6a21\u8de8\u94fe\u7f51\u7edc\u4e2d\uff0c\u7f51\u7edc\u62d3\u6251\u56fe\u5982\u4e0b\uff1a","title":"\u8be6\u7ec6\u8bbe\u8ba1"},{"location":"bitxhub/design/pier/#_32","text":"\u6bcf\u4e2a\u8de8\u94fe\u7f51\u5173\u7ef4\u62a4\u4e24\u4e2a\u8868\uff0c\u4e00\u4e2a\u4e3a**\u8de8\u94fe\u7f51\u5173\u8def\u7531\u8868(PTable)**\uff0c\u8bb0\u5f55\u5e94\u7528\u94feID\u548c\u5e94\u7528\u94fe\u7f51\u7edc\u5730\u5740\u7684\u5173\u8054\u5173\u7cfb\uff0c\u5177\u4f53\u5b9e\u73b0\u4e3aDHT\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a AppID AppAddr 0xe6f8c9cf6e38bd506fae93b73ee5e80cc8f73667 /ip4/111.132.1.111/quic/5001/p2p/QmZZFk1Tj6p25ecz98SpyHxb6joDPxR3wVPptDwuc8fue1 0x8374bb1e41d4a4bb4ac465e74caa37d242825efc /ip4/171.132.1.131/quic/4002/p2p/QmNRgD6djYJERNpDpHqRn3mxjJ9SYiiGWzExNSy4sEmSNL \u53e6\u4e00\u4e2a\u672c\u5730\u7f13\u5b58\u7684**\u7f51\u5173\u4e2d\u7ee7\u5173\u8054\u8868(PBTable)**\uff0c\u8bb0\u5f55\u5e94\u7528\u94feID\u548c\u4e2d\u7ee7\u94fe\u7684\u5173\u7cfb\u3002\u5982\u4e0b\u8868\u6240\u793a\uff1a AppID BxhID 0xe6f8c9cf6e38bd506fae93b73ee5e80cc8f73667 bxhA 0xe1sdddcf6e38bdxxxae93b73ecscs0cc8f73112 bxhA \u79cd\u5b50\u8282\u70b9\uff1a**\u7531\u6bcf\u4e2a\u63a5\u5165\u5230\u8def\u7531\u7f51\u7edc\u7684\u8de8\u94fe\u7f51\u5173\u7ef4\u62a4\uff0c\u5982\u4e0a\u56fe\u79cd\u5b50\u8282\u70b9\u53ef\u4ee5\u662fPierA\u548cPierB \u3002** Pier\u65b0\u589e\uff1a Pier\u8fde\u63a5\u5230\u4e2d\u7ee7\u94fe\uff0c\u4e2d\u7ee7\u94fe\u8def\u7531\u6a21\u5757\u53d1\u751fAdd Pier\u52a8\u4f5c\u540e\uff0c\u5c06\u6240\u5c5e\u4e2d\u7ee7\u94fe\u7ba1\u7406\u7684\u6240\u6709\u5e94\u7528\u94fe\u4fe1\u606f\u5e7f\u64ad\u7ed9\u6240\u5c5e\u7684Pier\uff0cPier\u6784\u9020\u672c\u5730\u7684**\u7f51\u5173\u4e2d\u7ee7\u5173\u8054\u8868**\uff1b Pier\u52a0\u5165\u8def\u7531\u7f51\u7edc\uff0c\u8fde\u63a5\u79cd\u5b50\u8282\u70b9\uff0c\u6784\u9020**\u8de8\u94fe\u7f51\u5173\u8def\u7531\u8868**\uff1b \u8def\u7531\u7f51\u7edc\u4e2d\u5176\u5b83Pier\u6536\u5230\u4e86\u5e7f\u64ad\u7684\u4fe1\u606f\uff0c\u66f4\u65b0\u672c\u5730\u7684**\u8de8\u94fe\u7f51\u5173\u8def\u7531\u8868\uff1b** \u5982\u679c\u5e94\u7528\u94fe\u65b9\u53ea\u662f\u60f3\u52a0\u5165\u8be5\u4e2d\u7ee7\u8054\u76df\u7684\u8de8\u94fe\u7f51\u7edc\uff0c\u5e76\u4e0d\u60f3\u52a0\u5165\u6574\u4e2a\u5927\u89c4\u6a21\u7f51\u7edc\u4e2d\uff0c\u53ef\u4ee5\u5728\u5e94\u7528\u94fe\u6ce8\u518c\u65f6\u6dfb\u52a0\u5b57\u6bb5\u7528\u4e8e\u5224\u65ad\u662f\u5426\u652f\u6301\u5927\u89c4\u6a21\u8de8\u94fe\u3002 Pier\u66f4\u65b0\uff1a \u7c7b\u4f3cPier\u65b0\u589e\u3002 Pier\u5220\u9664\uff1a Pier\u5728\u52a0\u5165\u8def\u7531\u7f51\u7edc\u540e\uff0c\u957f\u65f6\u95f4Ping_Pier\u65e0\u54cd\u5e94\uff0c**\u8de8\u94fe\u7f51\u5173\u8def\u7531\u8868**\u4f1a\u81ea\u52a8\u5220\u9664\u8be5Pier\u4fe1\u606f\u3002 IBTP\u4f20\u8f93\u6d41\u7a0b\u56fe\uff1a \u8de8\u94fe\u7f51\u5173\u8def\u7531\u6a21\u5757\u63a5\u53e3\u5b9a\u4e49\uff1a type Router interface { // Start starts the router module Start () error // Stop Stop () error //Broadcast broadcasts the registered appchain ids to the union network Broadcast ( ids [] string ) error //Route sends ibtp to the union pier in target relay chain Route ( ibtp * pb . IBTP ) error //ExistAppchain returns if appchain id exit in route map ExistAppchain ( id string ) bool //AddAppchains adds appchains to route map and broadcast them to union network AddAppchains ( appchains [] * rpcx . Appchain ) error }","title":"\u8def\u7531\u4f20\u8f93"},{"location":"bitxhub/design/pier/#dht","text":"\u5206\u5e03\u5f0f\u54c8\u5e0c\u8868\u91c7\u7528S/Kademlia\uff0c\u76f8\u8f83\u4e8eKademlia\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\uff0c\u80fd\u591f\u62b5\u5fa1\u4e0d\u540c\u7a0b\u5ea6\u7684\u65e5\u8680\u653b\u51fb\u3001\u5973\u5deb\u653b\u51fb\u3002 libp2p\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684DHT\u5e93\uff1a https://github.com/libp2p/go-libp2p-kad-dht","title":"DHT"},{"location":"bitxhub/design/pier/#ibtp","text":"\u76ee\u7684\u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u6765\u81ea\u8de8\u94fe\u7f51\u5173\u7684IBTP\u662f\u5426\u771f\u6b63\u5728\u6765\u6e90\u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u6210\u529f\u5e76\u4e14\u6267\u884c\u4e0a\u94fe\uff0c\u63d0\u4f9b\u4ee5\u4e0b\u4e24\u79cd\u8bc1\u660e\u65b9\u5f0f\uff1a \u591a\u91cd\u7b7e\u540d\uff1a \u6765\u6e90\u4e2d\u7ee7\u94fe\u4ea7\u751f\u7684\u8de8\u94fe\u4ea4\u6613\u9700\u8981\u6765\u6e90\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u591a\u91cd\u7b7e\u540d\uff0c\u6700\u5c11\u7b7e\u540d\u9608\u503c\u4e3aQuorum\u6570\u91cf\uff0c\u8de8\u94fe\u7f51\u5173\u8def\u7531\u4f20\u9012IBTP\u7684\u65f6\u5019\u628a\u5bf9\u5e94\u591a\u91cd\u7b7e\u540d\u4fe1\u606f\u5e26\u4e0a\u3002 SPV\u8bc1\u660e\uff1a\uff08\u9700\u8981\u540c\u6b65\u5168\u7f51\u4e2d\u7ee7\u94fe\u7684\u533a\u5757\u5934\uff09 \u76ee\u7684\u4e2d\u7ee7\u94fe\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u540c\u6b65\u6765\u6e90\u4e2d\u7ee7\u94fe\u7684\u533a\u5757\u5934\uff0c\u9a8c\u8bc1IBTP\u7684\u8de8\u94fe\u4ea4\u6613\u662f\u5426\u5b58\u5728\u4e8e\u6765\u6e90\u94fe\u7684\u533a\u5757\u5185\uff0c\u9a8c\u8bc1\u6210\u529f\u5373\u8868\u793aIBTP\u662f\u6709\u6548\u7684\u3002","title":"IBTP\u9a8c\u8bc1"},{"location":"bitxhub/design/privacy_protection/","text":"\u9690\u79c1\u4fdd\u62a4 \u524d\u63d0 \u5728\u8de8\u94fe\u573a\u666f\u4e2d\uff0c\u4e2d\u7ee7\u94fe\u9700\u8981\u8bb0\u5f55\u4e0d\u540c\u7684\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\uff0c\u6240\u6709\u7684\u8de8\u94fe\u4ea4\u6613\u5bf9\u4e8e\u52a0\u5165\u4e86\u4e2d\u7ee7\u94fe\u8de8\u94fe\u7cfb\u7edf\u7684\u5e94\u7528\u94fe\u6765\u8bf4\u90fd\u662f\u53ef\u89c1\u7684\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5e94\u7528\u94fe\u7528\u6237\u53d1\u8d77\u7684\u8de8\u94fe\u4ea4\u6613\u5e26\u6709\u9690\u79c1\u6570\u636e\uff0c\u9690\u79c1\u6570\u636e\u975e\u5e38\u5bb9\u6613\u6cc4\u9732\u3002 \u6240\u4ee5\u6211\u4eec\u5728\u4e2d\u7ee7\u94fe\u7684\u8bbe\u8ba1\u4e2d\u9700\u8981\u9690\u79c1\u4fdd\u62a4\u76f8\u5173\u7684\u673a\u5236\uff0c\u5e76\u4e14\u80fd\u591f\u4fdd\u6301\u6bd4\u8f83\u9ad8\u7684\u7075\u6d3b\u5ea6\u3002\u5728\u8de8\u94fe\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e24\u79cd\u53ef\u884c\u7684\u9690\u79c1\u4fdd\u62a4\u673a\u5236\u3002 \u9690\u79c1\u4ea4\u6613 \u8de8\u94fe\u4ea4\u6613\u5728\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\u7684\u5171\u8bc6\u8282\u70b9\u4e4b\u540e\uff0c\u4f1a\u901a\u8fc7\u5171\u8bc6\u53d1\u9001\u5230\u6240\u6709\u7684\u5176\u4ed6\u8282\u70b9\u53bb\uff0c\u6240\u4ee5\u8de8\u94fe\u4ea4\u6613\u5bf9\u4e8e\u6574\u4e2a\u4e2d\u7ee7\u94fe\u6765\u8bf4\u6ca1\u6709\u9690\u79c1\u6027\u53ef\u8a00\u3002\u800c\u9690\u79c1\u4ea4\u6613\u8fd9\u79cd\u673a\u5236\u4e0b\uff0c\u6536\u5230\u8de8\u94fe\u4ea4\u6613\u7684\u8282\u70b9\u5e76\u4e0d\u4f1a\u5c06\u8de8\u94fe\u4ea4\u6613\u7684\u5185\u5bb9\u76f4\u63a5\u8fdb\u884c\u5171\u8bc6\uff0c\u800c\u662f\u8ba1\u7b97\u8de8\u94fe\u4ea4\u6613\u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u5171\u8bc6\u3002\u8de8\u94fe\u4ea4\u6613\u5728\u5171\u8bc6\u5b8c\u6210\u4e4b\u540e\uff0c\u53c2\u4e0e\u65b9\u7684\u5171\u8bc6\u8282\u70b9\u5c06\u5b8c\u6574\u7684\u8de8\u94fe\u4ea4\u6613\u76f4\u63a5\u53d1\u9001\u5230\u53c2\u4e0e\u65b9\u8d1f\u8d23\u7684\u4e2d\u7ee7\u94fe\u8282\u70b9\u3002 \u8fd9\u6837\u4e0d\u76f8\u5173\u7684\u8282\u70b9\u5c31\u65e0\u6cd5\u76f4\u63a5\u83b7\u53d6\u5230\u8de8\u94fe\u4ea4\u6613\uff0c\u80fd\u591f\u4fdd\u62a4\u7528\u6237\u7684\u4ea4\u6613\u9690\u79c1\u4fe1\u606f\u3002 \u7aef\u5230\u7aef\u52a0\u5bc6 \u53e6\u4e00\u79cd\u8fdb\u884c\u9690\u79c1\u4fdd\u62a4\u7684\u601d\u8def\u662f\u5728\u8de8\u94fe\u4ea4\u6613\u63d0\u4ea4\u4e4b\u524d\uff0c\u5c31\u5bf9\u8de8\u94fe\u4ea4\u6613\u8fdb\u884c\u52a0\u5bc6\u64cd\u4f5c\u3002\u4e3a\u4e86\u63d0\u5347\u52a0\u89e3\u5bc6\u7684\u6548\u7387\uff0c\u91c7\u7528\u5bf9\u79f0\u52a0\u5bc6\u548c\u79d8\u94a5\u534f\u5546\u7684\u673a\u5236\u6765\u5b9e\u73b0\u3002\u5177\u4f53\u7684\u4e00\u6b21\u52a0\u5bc6\u4ea4\u6613\u8fc7\u7a0b\u5982\u4e0b\u56fe\uff1a \u8981\u8fdb\u884c\u52a0\u5bc6\u4ea4\u6613\u7684\u53cc\u65b9\u9700\u8981\u5728\u4e2d\u7ee7\u94fe\u4e0a\u6ce8\u518c\u81ea\u5df1\u7684\u79c1\u94a5\u884d\u751f\u7684\u516c\u94a5\uff0c\u8fd9\u6837\u53cc\u65b9\u901a\u8fc7\u81ea\u5df1\u62e5\u6709\u7684\u79c1\u94a5\u548c\u5bf9\u65b9\u6ce8\u518c\u7684\u516c\u94a5\uff0c\u80fd\u591f\u8ba1\u7b97\u51fa\u4e00\u4e2a\u76f8\u540c\u7684\u5bf9\u79f0\u52a0\u5bc6\u7684\u79d8\u94a5\uff0c\u7528\u4e8e\u63d0\u4ea4\u8de8\u94fe\u4ea4\u6613\u4e4b\u524d\u7684\u52a0\u5bc6\u548c\u83b7\u53d6\u8de8\u94fe\u4ea4\u6613\u4e4b\u540e\u7684\u89e3\u5bc6\u3002\u8fd9\u4e2a\u79d8\u94a5\u53ea\u6709\u516c\u94a5\u7684\u8bdd\u65e0\u6cd5\u89e3\u51fa\u7528\u4e8e\u52a0\u5bc6\u7684\u5bf9\u79f0\u79d8\u94a5\uff0c\u6240\u4ee5\u80fd\u591f\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u9690\u79c1\u6027\u3002","title":"\u9690\u79c1\u4fdd\u62a4\u65b9\u6848"},{"location":"bitxhub/design/privacy_protection/#_1","text":"","title":"\u9690\u79c1\u4fdd\u62a4"},{"location":"bitxhub/design/privacy_protection/#_2","text":"\u5728\u8de8\u94fe\u573a\u666f\u4e2d\uff0c\u4e2d\u7ee7\u94fe\u9700\u8981\u8bb0\u5f55\u4e0d\u540c\u7684\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\uff0c\u6240\u6709\u7684\u8de8\u94fe\u4ea4\u6613\u5bf9\u4e8e\u52a0\u5165\u4e86\u4e2d\u7ee7\u94fe\u8de8\u94fe\u7cfb\u7edf\u7684\u5e94\u7528\u94fe\u6765\u8bf4\u90fd\u662f\u53ef\u89c1\u7684\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5e94\u7528\u94fe\u7528\u6237\u53d1\u8d77\u7684\u8de8\u94fe\u4ea4\u6613\u5e26\u6709\u9690\u79c1\u6570\u636e\uff0c\u9690\u79c1\u6570\u636e\u975e\u5e38\u5bb9\u6613\u6cc4\u9732\u3002 \u6240\u4ee5\u6211\u4eec\u5728\u4e2d\u7ee7\u94fe\u7684\u8bbe\u8ba1\u4e2d\u9700\u8981\u9690\u79c1\u4fdd\u62a4\u76f8\u5173\u7684\u673a\u5236\uff0c\u5e76\u4e14\u80fd\u591f\u4fdd\u6301\u6bd4\u8f83\u9ad8\u7684\u7075\u6d3b\u5ea6\u3002\u5728\u8de8\u94fe\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e24\u79cd\u53ef\u884c\u7684\u9690\u79c1\u4fdd\u62a4\u673a\u5236\u3002","title":"\u524d\u63d0"},{"location":"bitxhub/design/privacy_protection/#_3","text":"\u8de8\u94fe\u4ea4\u6613\u5728\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe\u7684\u5171\u8bc6\u8282\u70b9\u4e4b\u540e\uff0c\u4f1a\u901a\u8fc7\u5171\u8bc6\u53d1\u9001\u5230\u6240\u6709\u7684\u5176\u4ed6\u8282\u70b9\u53bb\uff0c\u6240\u4ee5\u8de8\u94fe\u4ea4\u6613\u5bf9\u4e8e\u6574\u4e2a\u4e2d\u7ee7\u94fe\u6765\u8bf4\u6ca1\u6709\u9690\u79c1\u6027\u53ef\u8a00\u3002\u800c\u9690\u79c1\u4ea4\u6613\u8fd9\u79cd\u673a\u5236\u4e0b\uff0c\u6536\u5230\u8de8\u94fe\u4ea4\u6613\u7684\u8282\u70b9\u5e76\u4e0d\u4f1a\u5c06\u8de8\u94fe\u4ea4\u6613\u7684\u5185\u5bb9\u76f4\u63a5\u8fdb\u884c\u5171\u8bc6\uff0c\u800c\u662f\u8ba1\u7b97\u8de8\u94fe\u4ea4\u6613\u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u5171\u8bc6\u3002\u8de8\u94fe\u4ea4\u6613\u5728\u5171\u8bc6\u5b8c\u6210\u4e4b\u540e\uff0c\u53c2\u4e0e\u65b9\u7684\u5171\u8bc6\u8282\u70b9\u5c06\u5b8c\u6574\u7684\u8de8\u94fe\u4ea4\u6613\u76f4\u63a5\u53d1\u9001\u5230\u53c2\u4e0e\u65b9\u8d1f\u8d23\u7684\u4e2d\u7ee7\u94fe\u8282\u70b9\u3002 \u8fd9\u6837\u4e0d\u76f8\u5173\u7684\u8282\u70b9\u5c31\u65e0\u6cd5\u76f4\u63a5\u83b7\u53d6\u5230\u8de8\u94fe\u4ea4\u6613\uff0c\u80fd\u591f\u4fdd\u62a4\u7528\u6237\u7684\u4ea4\u6613\u9690\u79c1\u4fe1\u606f\u3002","title":"\u9690\u79c1\u4ea4\u6613"},{"location":"bitxhub/design/privacy_protection/#_4","text":"\u53e6\u4e00\u79cd\u8fdb\u884c\u9690\u79c1\u4fdd\u62a4\u7684\u601d\u8def\u662f\u5728\u8de8\u94fe\u4ea4\u6613\u63d0\u4ea4\u4e4b\u524d\uff0c\u5c31\u5bf9\u8de8\u94fe\u4ea4\u6613\u8fdb\u884c\u52a0\u5bc6\u64cd\u4f5c\u3002\u4e3a\u4e86\u63d0\u5347\u52a0\u89e3\u5bc6\u7684\u6548\u7387\uff0c\u91c7\u7528\u5bf9\u79f0\u52a0\u5bc6\u548c\u79d8\u94a5\u534f\u5546\u7684\u673a\u5236\u6765\u5b9e\u73b0\u3002\u5177\u4f53\u7684\u4e00\u6b21\u52a0\u5bc6\u4ea4\u6613\u8fc7\u7a0b\u5982\u4e0b\u56fe\uff1a \u8981\u8fdb\u884c\u52a0\u5bc6\u4ea4\u6613\u7684\u53cc\u65b9\u9700\u8981\u5728\u4e2d\u7ee7\u94fe\u4e0a\u6ce8\u518c\u81ea\u5df1\u7684\u79c1\u94a5\u884d\u751f\u7684\u516c\u94a5\uff0c\u8fd9\u6837\u53cc\u65b9\u901a\u8fc7\u81ea\u5df1\u62e5\u6709\u7684\u79c1\u94a5\u548c\u5bf9\u65b9\u6ce8\u518c\u7684\u516c\u94a5\uff0c\u80fd\u591f\u8ba1\u7b97\u51fa\u4e00\u4e2a\u76f8\u540c\u7684\u5bf9\u79f0\u52a0\u5bc6\u7684\u79d8\u94a5\uff0c\u7528\u4e8e\u63d0\u4ea4\u8de8\u94fe\u4ea4\u6613\u4e4b\u524d\u7684\u52a0\u5bc6\u548c\u83b7\u53d6\u8de8\u94fe\u4ea4\u6613\u4e4b\u540e\u7684\u89e3\u5bc6\u3002\u8fd9\u4e2a\u79d8\u94a5\u53ea\u6709\u516c\u94a5\u7684\u8bdd\u65e0\u6cd5\u89e3\u51fa\u7528\u4e8e\u52a0\u5bc6\u7684\u5bf9\u79f0\u79d8\u94a5\uff0c\u6240\u4ee5\u80fd\u591f\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u9690\u79c1\u6027\u3002","title":"\u7aef\u5230\u7aef\u52a0\u5bc6"},{"location":"bitxhub/design/rate-limiter/","text":"API\u6d41\u63a7\u8bbe\u8ba1 \u5b9e\u4f53\u5b9a\u4e49 \u6f0f\u6876\u7b97\u6cd5 \u6f0f\u6876\u7b97\u6cd5\u7684\u539f\u7406\u53ef\u4ee5\u7c7b\u6bd4\u4e3a\u5f80\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6876\u91cc\u76db\u6c34\uff0c\u540c\u65f6\uff0c\u6c34\u4ece\u6876\u5e95\u6f0f\u6d1e\u4ee5\u56fa\u5b9a\u901f\u5ea6\u6d41\u51fa\uff0c\u5982\u679c\u52a0\u6c34\u8fc7\u5feb\uff0c\u5219\u76f4\u63a5\u6ea2\u51fa\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5b83\u53ef\u4ee5\u5e94\u7528\u4e8e\u7f51\u7edc\u4f20\u8f93\u9650\u6d41\uff0c\u8ba1\u7b97\u673a\u6bcf\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u5305\uff0c\u5982\u679c\u6876\u5185\u672a\u6ee1\uff0c\u5219\u628a\u6570\u636e\u5305\u653e\u5165\u6876\u91cc\uff0c\u5982\u679c\u6876\u5185\u5df2\u6ee1\uff0c\u5219\u4e22\u5f03\u6570\u636e\u5305\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u4ee5\u56fa\u5b9a\u901f\u5ea6\u4ece\u6876\u5185\u53d6\u51fa\u6570\u636e\u5305\uff0c\u53d1\u9001\u5230\u7f51\u7edc\uff0c\u4ece\u800c\u8fbe\u5230**\u5f3a\u884c\u9650\u5236\u6570\u636e\u5e73\u5747\u4f20\u8f93\u901f\u7387**\u7684\u76ee\u7684\u3002 \u6f0f\u6876\u7b97\u6cd5\u5e38\u7528\u4e8e\u5c06\u7a81\u53d1\u6216\u4e0d\u7a33\u5b9a\u6d41\u91cf\u6574\u5f62\u4e3a\u4ee5\u56fa\u5b9a\u901f\u5ea6\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\u7684\u6d41\u91cf\u3002 \u4ee4\u724c\u6876\u7b97\u6cd5 \u5bf9\u4e8e\u8981\u6c42\u5141\u8bb8\u67d0\u79cd\u7a0b\u5ea6\u7684\u7a81\u53d1\u4f20\u8f93\uff0c\u6f0f\u6876\u7b97\u6cd5\u663e\u7136\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\uff0c\u800c\u4ee4\u724c\u6876\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4ee4\u724c\u6876\u7b97\u6cd5\u540c\u6837\u5b9a\u4e49\u4e86\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6876\uff0c\u6876\u91cc\u6700\u591a\u53ef\u5bb9\u7eb3 b \u4e2a\u4ee4\u724c\uff0c\u6bcf\u5f53\u6709\u6570\u636e\u5305\u9700\u8981\u53d1\u9001\u65f6\uff0c\u8981\u4ece\u6876\u91cc\u53d6\u51fa\u5bf9\u5e94\u6570\u91cf\u7684\u4ee4\u724c\u624d\u80fd\u53d1\u9001\uff0c\u5982\u679c\u6876\u91cc\u6ca1\u6709\u8db3\u591f\u4ee4\u724c\uff0c\u5219\u65e0\u6cd5\u53d1\u9001\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4ee5\u56fa\u5b9a\u901f\u5ea6 r \u5f80\u6876\u91cc\u6dfb\u52a0\u65b0\u4ee4\u724c\uff0c\u5f53\u6876\u91cc\u4ee4\u724c\u6570\u5df2\u7ecf\u8fbe\u5230 b \u4e2a\u65f6\uff0c\u4e22\u5f03\u65b0\u4ee4\u724c\u3002 \u4ee4\u724c\u6876\u7b97\u6cd5\u975e\u5e38\u9002\u5408\u4e8e\u9488\u5bf9\u7cfb\u7edf\u5916\u90e8\u8bf7\u6c42\u7684\u9650\u6d41\uff0c\u5f53\u6876\u5185\u6709\u8db3\u591f\u591a\u4ee4\u724c\u65f6\uff0c\u7cfb\u7edf\u5728\u67d0\u4e00\u65f6\u523b\u53ef\u4ee5\u540c\u65f6\u63a5\u6536\u5e76\u5904\u7406\u591a\u4e2a\u8bf7\u6c42\uff0c\u5145\u5206\u5229\u7528\u5230\u7cfb\u7edf\u8d44\u6e90\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u4ee4\u724c\u6876\u9650\u6d41\u5141\u8bb8\u7a81\u53d1\u6d41\u91cf\uff0c\u5bf9\u4e8e\u8bf7\u6c42\u7684\u9650\u6d41\u3001\u7f51\u7edc\u5e26\u5bbd\u9650\u6d41\uff0c\u66f4\u80fd\u5145\u5206\u5229\u7528\u7cfb\u7edf\u8d44\u6e90\u548c\u7f51\u7edc\u8d44\u6e90\uff0c\u662f\u9002\u7528\u4e8e\u533a\u5757\u94fe\u5e95\u5c42\u5e73\u53f0\u7cfb\u7edf\u6d41\u63a7\u7684\u4e00\u79cd\u9650\u6d41\u65b9\u6cd5\u3002 2.\u8be6\u7ec6\u8bbe\u8ba1 \u533a\u5757\u94fe\u8282\u70b9\u7684\u5165\u53e3\u6d41\u91cf\u5927\u4f53\u5206\u4e3a\u4e24\u79cd\uff1a \u4e00\u79cd\u4e3a\u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42\uff0c\u8bf7\u6c42\u53ef\u80fd\u4e3a\u533a\u5757\u94fe\u6570\u636e\u67e5\u8be2\u3001\u53d1\u9001\u65b0\u4ea4\u6613\u3001\u5408\u7ea6\u64cd\u4f5c\u7b49\uff08\u4e0b\u6587\u5c06\u7b80\u79f0\u4e3a\u201c\u5ba2\u6237\u7aef\u8bf7\u6c42\u201d\uff09\u3002\u8282\u70b9\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u8bf7\u6c42\u540e\uff0c\u9996\u5148\u9700\u8981\u4ece\u7f51\u7edcIO\u6d41\u4e2d\u8bfb\u53d6\u5230\u8bf7\u6c42\u7684\u5b57\u8282\u5185\u5bb9\uff0c\u7136\u540e\u53cd\u5e8f\u5217\u5316\u5b57\u8282\u5185\u5bb9\u4e3a\u7ed3\u6784\u5316\u5185\u5bb9\uff0c\u6700\u540e\u6839\u636e\u7ed3\u6784\u5316\u8bf7\u6c42\u4f53\u8c03\u7528\u5bf9\u5e94\u7684API\u903b\u8f91\uff1b \u53e6\u4e00\u79cd\u4e3a\u5176\u4ed6\u533a\u5757\u94fe\u8282\u70b9\u53d1\u8fc7\u6765\u7684\u7f51\u7edc\u6d88\u606f\uff0c\u533a\u5757\u94fe\u7cfb\u7edf\u5e95\u5c42\u662f\u7531\u591a\u4e2a\u5171\u8bc6\u8282\u70b9\u7ec4\u6210\u7684\u5171\u8bc6\u7f51\u7edc\uff0c\u8282\u70b9\u95f4\u901a\u8fc7\u8ba1\u7b97\u673a\u7f51\u7edc\u8fdb\u884c\u4fe1\u606f\u4f20\u8f93\uff08\u4e0b\u6587\u5c06\u7b80\u79f0\u4e3a\u201c\u8282\u70b9\u95f4\u7f51\u7edc\u6d88\u606f\u201d\uff09\u3002\u8282\u70b9\u63a5\u6536\u5230\u5bf9\u7aef\u8282\u70b9\u53d1\u9001\u8fc7\u6765\u7684\u7f51\u7edc\u6d88\u606f\u540e\uff0c\u6839\u636e\u6d88\u606f\u7c7b\u578b\uff0c\u629b\u7ed9\u5bf9\u5e94\u7684\u6a21\u5757\u53bb\u5904\u7406\u3002\u56e0\u6b64\uff0c\u4e0d\u4ec5\u9700\u8981\u5bf9\u5ba2\u6237\u7aef\u8bf7\u6c42\u8fdb\u884c\u6d41\u91cf\u63a7\u5236\uff0c\u9632\u6b62\u5927\u91cf\u7a81\u53d1\u5916\u90e8\u8bf7\u6c42\u90fd\u5f80\u540c\u4e00\u4e2a\u8282\u70b9\u53d1\u9001\uff0c\u8017\u5c3d\u76ee\u6807\u8282\u70b9\u8d44\u6e90\u5bfc\u81f4\u76ee\u6807\u8282\u70b9\u670d\u52a1\u762b\u75ea\u3002\u8fd8\u8981\u5bf9\u8282\u70b9\u63a5\u6536\u5230\u7684\u7f51\u7edc\u6d88\u606f\u8fdb\u884c\u9650\u6d41\uff0c\u9632\u6b62\u8282\u70b9\u5728\u9ad8\u8d1f\u8f7d\u4e0b\uff0c\u524d\u9762\u7684\u6d88\u606f\u6d89\u53ca\u7684\u7cfb\u7edf\u903b\u8f91\u8fd8\u672a\u5904\u7406\u5b8c\uff0c\u8fd8\u6e90\u6e90\u4e0d\u65ad\u5730\u63a5\u6536\u548c\u7f13\u5b58\u540e\u9762\u5230\u6765\u7684\u6d88\u606f\uff0c\u751a\u81f3\u5bfc\u81f4\u8282\u70b9\u5185\u5b58\u6ea2\u51fa\u3002 2.1 RPC\u6d41\u63a7 \u4ea4\u6613\u62e6\u622a\u5668\u9650\u6d41 \u9650\u5236\u8bf7\u6c42\u901f\u7387\uff1a\u901a\u8fc7\u4ee4\u724c\u6876\u9650\u6d41\u7b97\u6cd5\u63a7\u5236\u8bf7\u6c42\u901f\u7387\uff0c\u5e76\u9650\u5236\u8282\u70b9\u6700\u591a\u53ef\u540c\u65f6\u63a5\u6536\u5e76\u5904\u7406\u7684\u8bf7\u6c42\u6570\u3002 \u8282\u70b9\u9ad8\u8d1f\u8f7d\u4e0b\u62d2\u7edd\u65b0\u4ea4\u6613\uff1a\u5f53\u8282\u70b9\u4ea4\u6613\u6c60\u5df2\u6ee1\u6216\u8005\u5904\u4e8e\u5f02\u5e38\u3001\u5f02\u5e38\u6062\u590d\u72b6\u6001\u65e0\u6cd5\u8fdb\u884c\u6b63\u5e38\u5171\u8bc6\u65f6\uff0c\u62d2\u7edd\u6765\u81ea\u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u7684\u65b0\u4ea4\u6613\uff0c\u907f\u514d\u4ea4\u6613\u53c2\u6570\u68c0\u67e5\u3001\u4ea4\u6613\u9a8c\u7b7e\u5e26\u6765\u7684CPU\u6d88\u8017\u3002 \u4ee4\u724c\u6876\u7b97\u6cd5\uff1a https://github.com/juju/ratelimit GRPC\u63d0\u4f9bInterceptor\u7528\u4e8e\u62e6\u622a\u8bf7\u6c42\uff1a https://github.com/grpc-ecosystem/go-grpc-middleware/blob/master/ratelimit/ratelimit.go // Limiter defines the interface to perform request rate limiting. // If Limit function return true, the request will be rejected. // Otherwise, the request will pass. type Limiter interface { Limit () bool } // UnaryServerInterceptor returns a new unary server interceptors that performs request rate limiting. func UnaryServerInterceptor ( limiter Limiter ) grpc . UnaryServerInterceptor { return func ( ctx context . Context , req interface {}, info * grpc . UnaryServerInfo , handler grpc . UnaryHandler ) ( interface {}, error ) { if limiter . Limit () { return nil , status . Errorf ( codes . ResourceExhausted , \"%s is rejected by grpc_ratelimit middleware, please retry later.\" , info . FullMethod ) } return handler ( ctx , req ) } } // StreamServerInterceptor returns a new stream server interceptor that performs rate limiting on the request. func StreamServerInterceptor ( limiter Limiter ) grpc . StreamServerInterceptor { return func ( srv interface {}, stream grpc . ServerStream , info * grpc . StreamServerInfo , handler grpc . StreamHandler ) error { if limiter . Limit () { return status . Errorf ( codes . ResourceExhausted , \"%s is rejected by grpc_ratelimit middleware, please retry later.\" , info . FullMethod ) } return handler ( srv , stream ) } } \u7ed3\u5408\u4ee4\u724c\u6876\u548cGRPC\u7684interceptor\u5b9e\u73b0\u5bf9\u4e8eAPI\u7684\u6d41\u63a7\uff1a type Limitor struct { TokenBucket } // returns a new token bucket that fills at the rate of one token every fillInterval, // up to the given maximum capacity.Both arguments must be positive. // The bucket is initially full. func NewLimitor ( fillInterval time . Duration , capacity int64 ) * Limitor // allows the specification of the quantum size - quantum tokens are added every fillInterval. func NewLimitorWithQuantum ( fillInterval time . Duration , capacity , quantum int64 ) * Limitor func ( l * Limitor ) Limit () bool { return l . TakeAvailable () == 0 } \u5728bitxhub.toml\u6dfb\u52a0\u76f8\u5bf9\u5e94\u7684\u914d\u7f6e limitor: interval: 10ms quantum: 100 capacity: 10000 2.2 P2P\u6d41\u63a7 \u5e26\u6743\u6d88\u606f\u5206\u53d1\u5668\u9650\u6d41 \u4e3b\u8981\u7528\u6765\u9650\u5236\u975e\u5173\u952e\u6a21\u5757\u7684\u6d41\u91cf\uff0c\u9632\u6b62\u5e26\u5bbd\u3001CPU\u548c\u5185\u5b58\u90fd\u88ab\u975e\u5173\u952e\u6a21\u5757\u7ed9\u5360\u7528\u3002\u5177\u4f53\u505a\u6cd5\u662f\u4e3a\u5404\u4e2a\u9700\u8981\u8fdb\u884c\u7f51\u7edc\u901a\u4fe1\u7684\u6a21\u5757\u5206\u914d\u5e26\u7f13\u5b58\u7a7a\u95f4\u7684\u8bfb\uff08R\uff09\u3001\u5199\uff08W\uff09\u7ba1\u9053\uff0c\u6839\u636e\u6a21\u5757\u5728\u7cfb\u7edf\u4e2d\u6240\u5360\u6743\u91cd\u4e3a\u5176\u7ba1\u9053\u5206\u914d\u4e0d\u540c\u7684\u7f13\u5b58\u5927\u5c0f\u3002 \u6d88\u606f\u5206\u53d1\u5668\u6536\u5230\u4e00\u6761\u6765\u81ea\u5e95\u5c42P2P\u7f51\u7edc\u7684\u7f51\u7edc\u6d88\u606f\uff0c\u6839\u636e\u6d88\u606f\u7c7b\u578b\u5c06\u6d88\u606f\u5206\u53d1\u7ed9\u5bf9\u5e94\u6a21\u5757\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u6761\u6d88\u606f\u9996\u5148\u5206\u53d1\u7ed9\u6a21\u5757\u5bf9\u5e94\u7684 R \u7ba1\u9053\uff0c\u6a21\u5757\u518d\u4ece R \u7ba1\u9053\u6309\u7167FIFO\u539f\u5219\u53d6\u51fa\u6d88\u606f\uff0c\u6267\u884c\u76f8\u5173\u903b\u8f91\uff0c\u5982\u679c R \u7ba1\u9053\u6d88\u8d39\u901f\u5ea6\u6162\u4e8e\u751f\u4ea7\u901f\u5ea6\uff0c\u5bfc\u81f4\u5206\u53d1\u6d88\u606f\u65f6 R \u7ba1\u9053\u5df2\u6ee1\uff0c\u5219\u8bf4\u660e\u6a21\u5757\u5185\u90e8\u5df2\u5904\u4e8e\u9ad8\u8d1f\u8f7d\uff0c\u4e22\u5f03\u8fd9\u6761\u6d88\u606f\u3002\u4e3a\u4e86\u4fdd\u8bc1\u8fbe\u5230\u7cfb\u7edf\u9650\u6d41\u76ee\u7684\uff0c\u6a21\u5757\u4ece R \u7ba1\u9053\u53d6\u51fa\u6d88\u606f\u5e76\u5904\u7406\u6d88\u606f\u7684\u8fc7\u7a0b\u5fc5\u987b\u662f\u4e32\u884c\u7684\uff0c\u800c\u6a21\u5757\u95f4\u7684\u6d88\u606f\u5e76\u884c\u5904\u7406\uff0c\u4e92\u4e0d\u5e72\u6270\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u975e\u5173\u952e\u6a21\u5757\u5904\u4e8e\u9ad8\u8d1f\u8f7d\u5904\u7406\u80fd\u529b\u53d8\u6162\u65f6\uff0c\u5176 R \u7ba1\u9053\u867d\u7136\u5360\u6ee1\uff0c\u4f46\u662f\u4e0d\u4f1a\u5f71\u54cd\u5171\u8bc6\u6a21\u5757\u6d88\u606f\u7684\u5904\u7406\u901f\u5ea6\uff0c\u540c\u65f6\u53c8\u7531\u4e8e\u4e0d\u540c\u6a21\u5757\u6839\u636e\u6743\u91cd R \u7ba1\u9053\u5927\u5c0f\u4e0d\u540c\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9632\u6b62\u8282\u70b9\u4e00\u76f4\u5904\u7406\u975e\u5173\u952e\u6a21\u5757\u6d88\u606f\u5360\u7528\u8fc7\u591a\u7cfb\u7edf\u8d44\u6e90\u800c\u5bfc\u81f4\u5171\u8bc6\u6a21\u5757\u6d88\u606f\u65e0\u6cd5\u5f97\u5230\u53ca\u65f6\u5904\u7406\u3002 \u5e26\u6743\u6d88\u606f\u5206\u53d1\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u5404\u6a21\u5757\u7531\u4e8e\u5904\u7406\u80fd\u529b\u5dee\u5f02\u800c\u76f8\u4e92\u5e72\u6270\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7f51\u7edc\u6d88\u606f\u5e76\u884c\u5904\u7406\u80fd\u529b\uff0c\u4fdd\u8bc1\u6838\u5fc3\u7f51\u7edc\u6d88\u606f\u4e0d\u88ab\u975e\u6838\u5fc3\u7f51\u7edc\u6d88\u606f\u5360\u53bb\u5168\u90e8\u7cfb\u7edf\u8d44\u6e90\uff0c\u540c\u65f6\uff0c\u7cfb\u7edf\u9ad8\u8d1f\u8f7d\u4e0b\u81ea\u52a8\u4e22\u5f03\u65b0\u63a5\u6536\u5230\u7684\u7f51\u7edc\u6d88\u606f\uff0c\u9632\u6b62\u7cfb\u7edf\u8d1f\u8f7d\u8fc7\u9ad8\u800c\u5d29\u6e83\u3002","title":"API\u6d41\u63a7\u8bbe\u8ba1"},{"location":"bitxhub/design/rate-limiter/#api","text":"","title":"API\u6d41\u63a7\u8bbe\u8ba1"},{"location":"bitxhub/design/rate-limiter/#_1","text":"","title":"\u5b9e\u4f53\u5b9a\u4e49"},{"location":"bitxhub/design/rate-limiter/#_2","text":"\u6f0f\u6876\u7b97\u6cd5\u7684\u539f\u7406\u53ef\u4ee5\u7c7b\u6bd4\u4e3a\u5f80\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6876\u91cc\u76db\u6c34\uff0c\u540c\u65f6\uff0c\u6c34\u4ece\u6876\u5e95\u6f0f\u6d1e\u4ee5\u56fa\u5b9a\u901f\u5ea6\u6d41\u51fa\uff0c\u5982\u679c\u52a0\u6c34\u8fc7\u5feb\uff0c\u5219\u76f4\u63a5\u6ea2\u51fa\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5b83\u53ef\u4ee5\u5e94\u7528\u4e8e\u7f51\u7edc\u4f20\u8f93\u9650\u6d41\uff0c\u8ba1\u7b97\u673a\u6bcf\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u5305\uff0c\u5982\u679c\u6876\u5185\u672a\u6ee1\uff0c\u5219\u628a\u6570\u636e\u5305\u653e\u5165\u6876\u91cc\uff0c\u5982\u679c\u6876\u5185\u5df2\u6ee1\uff0c\u5219\u4e22\u5f03\u6570\u636e\u5305\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u4ee5\u56fa\u5b9a\u901f\u5ea6\u4ece\u6876\u5185\u53d6\u51fa\u6570\u636e\u5305\uff0c\u53d1\u9001\u5230\u7f51\u7edc\uff0c\u4ece\u800c\u8fbe\u5230**\u5f3a\u884c\u9650\u5236\u6570\u636e\u5e73\u5747\u4f20\u8f93\u901f\u7387**\u7684\u76ee\u7684\u3002 \u6f0f\u6876\u7b97\u6cd5\u5e38\u7528\u4e8e\u5c06\u7a81\u53d1\u6216\u4e0d\u7a33\u5b9a\u6d41\u91cf\u6574\u5f62\u4e3a\u4ee5\u56fa\u5b9a\u901f\u5ea6\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\u7684\u6d41\u91cf\u3002","title":"\u6f0f\u6876\u7b97\u6cd5"},{"location":"bitxhub/design/rate-limiter/#_3","text":"\u5bf9\u4e8e\u8981\u6c42\u5141\u8bb8\u67d0\u79cd\u7a0b\u5ea6\u7684\u7a81\u53d1\u4f20\u8f93\uff0c\u6f0f\u6876\u7b97\u6cd5\u663e\u7136\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\uff0c\u800c\u4ee4\u724c\u6876\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4ee4\u724c\u6876\u7b97\u6cd5\u540c\u6837\u5b9a\u4e49\u4e86\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6876\uff0c\u6876\u91cc\u6700\u591a\u53ef\u5bb9\u7eb3 b \u4e2a\u4ee4\u724c\uff0c\u6bcf\u5f53\u6709\u6570\u636e\u5305\u9700\u8981\u53d1\u9001\u65f6\uff0c\u8981\u4ece\u6876\u91cc\u53d6\u51fa\u5bf9\u5e94\u6570\u91cf\u7684\u4ee4\u724c\u624d\u80fd\u53d1\u9001\uff0c\u5982\u679c\u6876\u91cc\u6ca1\u6709\u8db3\u591f\u4ee4\u724c\uff0c\u5219\u65e0\u6cd5\u53d1\u9001\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4ee5\u56fa\u5b9a\u901f\u5ea6 r \u5f80\u6876\u91cc\u6dfb\u52a0\u65b0\u4ee4\u724c\uff0c\u5f53\u6876\u91cc\u4ee4\u724c\u6570\u5df2\u7ecf\u8fbe\u5230 b \u4e2a\u65f6\uff0c\u4e22\u5f03\u65b0\u4ee4\u724c\u3002 \u4ee4\u724c\u6876\u7b97\u6cd5\u975e\u5e38\u9002\u5408\u4e8e\u9488\u5bf9\u7cfb\u7edf\u5916\u90e8\u8bf7\u6c42\u7684\u9650\u6d41\uff0c\u5f53\u6876\u5185\u6709\u8db3\u591f\u591a\u4ee4\u724c\u65f6\uff0c\u7cfb\u7edf\u5728\u67d0\u4e00\u65f6\u523b\u53ef\u4ee5\u540c\u65f6\u63a5\u6536\u5e76\u5904\u7406\u591a\u4e2a\u8bf7\u6c42\uff0c\u5145\u5206\u5229\u7528\u5230\u7cfb\u7edf\u8d44\u6e90\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u4ee4\u724c\u6876\u9650\u6d41\u5141\u8bb8\u7a81\u53d1\u6d41\u91cf\uff0c\u5bf9\u4e8e\u8bf7\u6c42\u7684\u9650\u6d41\u3001\u7f51\u7edc\u5e26\u5bbd\u9650\u6d41\uff0c\u66f4\u80fd\u5145\u5206\u5229\u7528\u7cfb\u7edf\u8d44\u6e90\u548c\u7f51\u7edc\u8d44\u6e90\uff0c\u662f\u9002\u7528\u4e8e\u533a\u5757\u94fe\u5e95\u5c42\u5e73\u53f0\u7cfb\u7edf\u6d41\u63a7\u7684\u4e00\u79cd\u9650\u6d41\u65b9\u6cd5\u3002","title":"\u4ee4\u724c\u6876\u7b97\u6cd5"},{"location":"bitxhub/design/rate-limiter/#2","text":"\u533a\u5757\u94fe\u8282\u70b9\u7684\u5165\u53e3\u6d41\u91cf\u5927\u4f53\u5206\u4e3a\u4e24\u79cd\uff1a \u4e00\u79cd\u4e3a\u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42\uff0c\u8bf7\u6c42\u53ef\u80fd\u4e3a\u533a\u5757\u94fe\u6570\u636e\u67e5\u8be2\u3001\u53d1\u9001\u65b0\u4ea4\u6613\u3001\u5408\u7ea6\u64cd\u4f5c\u7b49\uff08\u4e0b\u6587\u5c06\u7b80\u79f0\u4e3a\u201c\u5ba2\u6237\u7aef\u8bf7\u6c42\u201d\uff09\u3002\u8282\u70b9\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u8bf7\u6c42\u540e\uff0c\u9996\u5148\u9700\u8981\u4ece\u7f51\u7edcIO\u6d41\u4e2d\u8bfb\u53d6\u5230\u8bf7\u6c42\u7684\u5b57\u8282\u5185\u5bb9\uff0c\u7136\u540e\u53cd\u5e8f\u5217\u5316\u5b57\u8282\u5185\u5bb9\u4e3a\u7ed3\u6784\u5316\u5185\u5bb9\uff0c\u6700\u540e\u6839\u636e\u7ed3\u6784\u5316\u8bf7\u6c42\u4f53\u8c03\u7528\u5bf9\u5e94\u7684API\u903b\u8f91\uff1b \u53e6\u4e00\u79cd\u4e3a\u5176\u4ed6\u533a\u5757\u94fe\u8282\u70b9\u53d1\u8fc7\u6765\u7684\u7f51\u7edc\u6d88\u606f\uff0c\u533a\u5757\u94fe\u7cfb\u7edf\u5e95\u5c42\u662f\u7531\u591a\u4e2a\u5171\u8bc6\u8282\u70b9\u7ec4\u6210\u7684\u5171\u8bc6\u7f51\u7edc\uff0c\u8282\u70b9\u95f4\u901a\u8fc7\u8ba1\u7b97\u673a\u7f51\u7edc\u8fdb\u884c\u4fe1\u606f\u4f20\u8f93\uff08\u4e0b\u6587\u5c06\u7b80\u79f0\u4e3a\u201c\u8282\u70b9\u95f4\u7f51\u7edc\u6d88\u606f\u201d\uff09\u3002\u8282\u70b9\u63a5\u6536\u5230\u5bf9\u7aef\u8282\u70b9\u53d1\u9001\u8fc7\u6765\u7684\u7f51\u7edc\u6d88\u606f\u540e\uff0c\u6839\u636e\u6d88\u606f\u7c7b\u578b\uff0c\u629b\u7ed9\u5bf9\u5e94\u7684\u6a21\u5757\u53bb\u5904\u7406\u3002\u56e0\u6b64\uff0c\u4e0d\u4ec5\u9700\u8981\u5bf9\u5ba2\u6237\u7aef\u8bf7\u6c42\u8fdb\u884c\u6d41\u91cf\u63a7\u5236\uff0c\u9632\u6b62\u5927\u91cf\u7a81\u53d1\u5916\u90e8\u8bf7\u6c42\u90fd\u5f80\u540c\u4e00\u4e2a\u8282\u70b9\u53d1\u9001\uff0c\u8017\u5c3d\u76ee\u6807\u8282\u70b9\u8d44\u6e90\u5bfc\u81f4\u76ee\u6807\u8282\u70b9\u670d\u52a1\u762b\u75ea\u3002\u8fd8\u8981\u5bf9\u8282\u70b9\u63a5\u6536\u5230\u7684\u7f51\u7edc\u6d88\u606f\u8fdb\u884c\u9650\u6d41\uff0c\u9632\u6b62\u8282\u70b9\u5728\u9ad8\u8d1f\u8f7d\u4e0b\uff0c\u524d\u9762\u7684\u6d88\u606f\u6d89\u53ca\u7684\u7cfb\u7edf\u903b\u8f91\u8fd8\u672a\u5904\u7406\u5b8c\uff0c\u8fd8\u6e90\u6e90\u4e0d\u65ad\u5730\u63a5\u6536\u548c\u7f13\u5b58\u540e\u9762\u5230\u6765\u7684\u6d88\u606f\uff0c\u751a\u81f3\u5bfc\u81f4\u8282\u70b9\u5185\u5b58\u6ea2\u51fa\u3002","title":"2.\u8be6\u7ec6\u8bbe\u8ba1"},{"location":"bitxhub/design/rate-limiter/#21-rpc","text":"\u4ea4\u6613\u62e6\u622a\u5668\u9650\u6d41 \u9650\u5236\u8bf7\u6c42\u901f\u7387\uff1a\u901a\u8fc7\u4ee4\u724c\u6876\u9650\u6d41\u7b97\u6cd5\u63a7\u5236\u8bf7\u6c42\u901f\u7387\uff0c\u5e76\u9650\u5236\u8282\u70b9\u6700\u591a\u53ef\u540c\u65f6\u63a5\u6536\u5e76\u5904\u7406\u7684\u8bf7\u6c42\u6570\u3002 \u8282\u70b9\u9ad8\u8d1f\u8f7d\u4e0b\u62d2\u7edd\u65b0\u4ea4\u6613\uff1a\u5f53\u8282\u70b9\u4ea4\u6613\u6c60\u5df2\u6ee1\u6216\u8005\u5904\u4e8e\u5f02\u5e38\u3001\u5f02\u5e38\u6062\u590d\u72b6\u6001\u65e0\u6cd5\u8fdb\u884c\u6b63\u5e38\u5171\u8bc6\u65f6\uff0c\u62d2\u7edd\u6765\u81ea\u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u7684\u65b0\u4ea4\u6613\uff0c\u907f\u514d\u4ea4\u6613\u53c2\u6570\u68c0\u67e5\u3001\u4ea4\u6613\u9a8c\u7b7e\u5e26\u6765\u7684CPU\u6d88\u8017\u3002 \u4ee4\u724c\u6876\u7b97\u6cd5\uff1a https://github.com/juju/ratelimit GRPC\u63d0\u4f9bInterceptor\u7528\u4e8e\u62e6\u622a\u8bf7\u6c42\uff1a https://github.com/grpc-ecosystem/go-grpc-middleware/blob/master/ratelimit/ratelimit.go // Limiter defines the interface to perform request rate limiting. // If Limit function return true, the request will be rejected. // Otherwise, the request will pass. type Limiter interface { Limit () bool } // UnaryServerInterceptor returns a new unary server interceptors that performs request rate limiting. func UnaryServerInterceptor ( limiter Limiter ) grpc . UnaryServerInterceptor { return func ( ctx context . Context , req interface {}, info * grpc . UnaryServerInfo , handler grpc . UnaryHandler ) ( interface {}, error ) { if limiter . Limit () { return nil , status . Errorf ( codes . ResourceExhausted , \"%s is rejected by grpc_ratelimit middleware, please retry later.\" , info . FullMethod ) } return handler ( ctx , req ) } } // StreamServerInterceptor returns a new stream server interceptor that performs rate limiting on the request. func StreamServerInterceptor ( limiter Limiter ) grpc . StreamServerInterceptor { return func ( srv interface {}, stream grpc . ServerStream , info * grpc . StreamServerInfo , handler grpc . StreamHandler ) error { if limiter . Limit () { return status . Errorf ( codes . ResourceExhausted , \"%s is rejected by grpc_ratelimit middleware, please retry later.\" , info . FullMethod ) } return handler ( srv , stream ) } } \u7ed3\u5408\u4ee4\u724c\u6876\u548cGRPC\u7684interceptor\u5b9e\u73b0\u5bf9\u4e8eAPI\u7684\u6d41\u63a7\uff1a type Limitor struct { TokenBucket } // returns a new token bucket that fills at the rate of one token every fillInterval, // up to the given maximum capacity.Both arguments must be positive. // The bucket is initially full. func NewLimitor ( fillInterval time . Duration , capacity int64 ) * Limitor // allows the specification of the quantum size - quantum tokens are added every fillInterval. func NewLimitorWithQuantum ( fillInterval time . Duration , capacity , quantum int64 ) * Limitor func ( l * Limitor ) Limit () bool { return l . TakeAvailable () == 0 } \u5728bitxhub.toml\u6dfb\u52a0\u76f8\u5bf9\u5e94\u7684\u914d\u7f6e limitor: interval: 10ms quantum: 100 capacity: 10000","title":"2.1 RPC\u6d41\u63a7"},{"location":"bitxhub/design/rate-limiter/#22-p2p","text":"\u5e26\u6743\u6d88\u606f\u5206\u53d1\u5668\u9650\u6d41 \u4e3b\u8981\u7528\u6765\u9650\u5236\u975e\u5173\u952e\u6a21\u5757\u7684\u6d41\u91cf\uff0c\u9632\u6b62\u5e26\u5bbd\u3001CPU\u548c\u5185\u5b58\u90fd\u88ab\u975e\u5173\u952e\u6a21\u5757\u7ed9\u5360\u7528\u3002\u5177\u4f53\u505a\u6cd5\u662f\u4e3a\u5404\u4e2a\u9700\u8981\u8fdb\u884c\u7f51\u7edc\u901a\u4fe1\u7684\u6a21\u5757\u5206\u914d\u5e26\u7f13\u5b58\u7a7a\u95f4\u7684\u8bfb\uff08R\uff09\u3001\u5199\uff08W\uff09\u7ba1\u9053\uff0c\u6839\u636e\u6a21\u5757\u5728\u7cfb\u7edf\u4e2d\u6240\u5360\u6743\u91cd\u4e3a\u5176\u7ba1\u9053\u5206\u914d\u4e0d\u540c\u7684\u7f13\u5b58\u5927\u5c0f\u3002 \u6d88\u606f\u5206\u53d1\u5668\u6536\u5230\u4e00\u6761\u6765\u81ea\u5e95\u5c42P2P\u7f51\u7edc\u7684\u7f51\u7edc\u6d88\u606f\uff0c\u6839\u636e\u6d88\u606f\u7c7b\u578b\u5c06\u6d88\u606f\u5206\u53d1\u7ed9\u5bf9\u5e94\u6a21\u5757\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u6761\u6d88\u606f\u9996\u5148\u5206\u53d1\u7ed9\u6a21\u5757\u5bf9\u5e94\u7684 R \u7ba1\u9053\uff0c\u6a21\u5757\u518d\u4ece R \u7ba1\u9053\u6309\u7167FIFO\u539f\u5219\u53d6\u51fa\u6d88\u606f\uff0c\u6267\u884c\u76f8\u5173\u903b\u8f91\uff0c\u5982\u679c R \u7ba1\u9053\u6d88\u8d39\u901f\u5ea6\u6162\u4e8e\u751f\u4ea7\u901f\u5ea6\uff0c\u5bfc\u81f4\u5206\u53d1\u6d88\u606f\u65f6 R \u7ba1\u9053\u5df2\u6ee1\uff0c\u5219\u8bf4\u660e\u6a21\u5757\u5185\u90e8\u5df2\u5904\u4e8e\u9ad8\u8d1f\u8f7d\uff0c\u4e22\u5f03\u8fd9\u6761\u6d88\u606f\u3002\u4e3a\u4e86\u4fdd\u8bc1\u8fbe\u5230\u7cfb\u7edf\u9650\u6d41\u76ee\u7684\uff0c\u6a21\u5757\u4ece R \u7ba1\u9053\u53d6\u51fa\u6d88\u606f\u5e76\u5904\u7406\u6d88\u606f\u7684\u8fc7\u7a0b\u5fc5\u987b\u662f\u4e32\u884c\u7684\uff0c\u800c\u6a21\u5757\u95f4\u7684\u6d88\u606f\u5e76\u884c\u5904\u7406\uff0c\u4e92\u4e0d\u5e72\u6270\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u975e\u5173\u952e\u6a21\u5757\u5904\u4e8e\u9ad8\u8d1f\u8f7d\u5904\u7406\u80fd\u529b\u53d8\u6162\u65f6\uff0c\u5176 R \u7ba1\u9053\u867d\u7136\u5360\u6ee1\uff0c\u4f46\u662f\u4e0d\u4f1a\u5f71\u54cd\u5171\u8bc6\u6a21\u5757\u6d88\u606f\u7684\u5904\u7406\u901f\u5ea6\uff0c\u540c\u65f6\u53c8\u7531\u4e8e\u4e0d\u540c\u6a21\u5757\u6839\u636e\u6743\u91cd R \u7ba1\u9053\u5927\u5c0f\u4e0d\u540c\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9632\u6b62\u8282\u70b9\u4e00\u76f4\u5904\u7406\u975e\u5173\u952e\u6a21\u5757\u6d88\u606f\u5360\u7528\u8fc7\u591a\u7cfb\u7edf\u8d44\u6e90\u800c\u5bfc\u81f4\u5171\u8bc6\u6a21\u5757\u6d88\u606f\u65e0\u6cd5\u5f97\u5230\u53ca\u65f6\u5904\u7406\u3002 \u5e26\u6743\u6d88\u606f\u5206\u53d1\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u5404\u6a21\u5757\u7531\u4e8e\u5904\u7406\u80fd\u529b\u5dee\u5f02\u800c\u76f8\u4e92\u5e72\u6270\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7f51\u7edc\u6d88\u606f\u5e76\u884c\u5904\u7406\u80fd\u529b\uff0c\u4fdd\u8bc1\u6838\u5fc3\u7f51\u7edc\u6d88\u606f\u4e0d\u88ab\u975e\u6838\u5fc3\u7f51\u7edc\u6d88\u606f\u5360\u53bb\u5168\u90e8\u7cfb\u7edf\u8d44\u6e90\uff0c\u540c\u65f6\uff0c\u7cfb\u7edf\u9ad8\u8d1f\u8f7d\u4e0b\u81ea\u52a8\u4e22\u5f03\u65b0\u63a5\u6536\u5230\u7684\u7f51\u7edc\u6d88\u606f\uff0c\u9632\u6b62\u7cfb\u7edf\u8d1f\u8f7d\u8fc7\u9ad8\u800c\u5d29\u6e83\u3002","title":"2.2 P2P\u6d41\u63a7"},{"location":"bitxhub/design/rate-limiter/#_4","text":"","title":""},{"location":"bitxhub/dev/cross_contract/","text":"\u8de8\u94fe\u5408\u7ea6 \u6309\u7167\u8de8\u94fe\u5408\u7ea6\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u9700\u8981\u5728\u6709\u8de8\u94fe\u9700\u6c42\u7684\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u4e24\u79cd\u5408\u7ea6\u3002\u4e00\u4e2a\u5408\u7ea6\u8d1f\u8d23\u5bf9\u63a5\u8de8\u94fe\u7f51\u5173Pier\uff0c\u4e3a\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\uff1b\u4e00\u4e2a\u5408\u7ea6\u8d1f\u8d23\u5177\u4f53\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u4e3a\u4e1a\u52a1\u5408\u7ea6\u3002\u4e1a\u52a1\u5408\u7ea6\u9700\u8981\u8de8\u94fe\u65f6\uff0c\u8981\u7edf\u4e00\u5c06\u8de8\u94fe\u8bf7\u6c42\u63d0\u4ea4\u5230Broker\u5408\u7ea6\u4e0a\uff0cBroker\u7edf\u4e00\u548cPier\u8fdb\u884c\u4ea4\u4e92\u3002\u4e00\u4e2aBroker\u5408\u7ea6\u53ef\u4ee5\u8d1f\u8d23\u5bf9\u63a5\u591a\u4e2a\u4e1a\u52a1\u5408\u7ea6\u3002 \u8de8\u94fe\u63a5\u5165\u65b9\u65e0\u9700\u5bf9broker\u5408\u7ea6\u8fdb\u884c\u4fee\u6539\uff0c\u76f4\u63a5\u90e8\u7f72\u4f7f\u7528\u5373\u53ef\uff1b\u540c\u65f6\u4e3a\u4e86\u7b80\u5316\u4e1a\u52a1\u5408\u7ea6\u7684\u7f16\u5199\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e1a\u52a1\u5408\u7ea6\u7684\u76f8\u5e94\u63a5\u53e3\u3002 \u4ee5\u4e0b\u4ee5\u4ee5\u592a\u574a\u4e0a\u7684solidity\u5408\u7ea6\u4e3a\u4f8b\u3002 Broker \u5408\u7ea6\u63a5\u53e3 // \u63d0\u4f9b\u7ed9\u4e1a\u52a1\u5408\u7ea6\u6ce8\u518c\u3002\u6ce8\u518c\u4e14\u5ba1\u6838\u901a\u8fc7\u7684\u4e1a\u52a1\u5408\u7ea6\u624d\u80fd\u8c03\u7528Broker\u5408\u7ea6\u7684\u8de8\u94fe\u63a5\u53e3 function register ( string addr ) public // \u63d0\u4f9b\u7ed9\u7ba1\u7406\u5458\u5ba1\u6838\u5df2\u7ecf\u6ce8\u518c\u7684\u4e1a\u52a1\u5408\u7ea6 function audit ( string addr , bool status ) public returns ( bool ) // getInnerMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4e3a\u76ee\u7684\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002 // \u5982\u679cBroker\u5728A\u94fe\uff0c\u5219\u53ef\u80fd\u6709\u591a\u6761\u94fe\u548cA\u8fdb\u884c\u8de8\u94fe\uff0c\u5982B->A:3; C->A:5\u3002 // \u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u6765\u6e90\u94feID\uff0cvalue\u5bf9\u5e94\u8be5\u6765\u6e90\u94fe\u5df2\u53d1\u9001\u7684\u6700\u65b0\u7684\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 function getInnerMeta () public view returns ( address [] memory , uint64 [] memory ) // getOuterMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002 // \u5982\u679c\u4ee5Broker\u5728A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\u3002 // \u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5df2\u53d1\u9001\u5230\u8be5\u76ee\u7684\u94fe\u7684\u6700\u65b0\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 function getOuterMeta () public view returns ( address [] memory , uint64 [] memory ) // getCallbackMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002 // \u5982\u679cBroker\u5728A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\uff1b\u540c\u65f6\u7531\u4e8e\u8de8\u94fe\u8bf7\u6c42\u4e2d\u652f\u6301\u56de\u8c03\u64cd\u4f5c\uff0c\u5373A->B->A\u4e3a\u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u64cd\u4f5c\uff0c // \u6211\u4eec\u9700\u8981\u8bb0\u5f55\u56de\u8c03\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\uff0c\u5982A->B->:2; A->C\u2014>A:4\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5230\u8be5\u76ee\u7684\u94fe\u6700\u65b0\u7684\u5e26\u56de\u8c03\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c // \u5982{B:2, C:4}\u3002\uff08\u6ce8\u610f callbackMeta\u5e8f\u53f7\u53ef\u80fd\u548coutMeta\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u7531A\u53d1\u51fa\u7684\u8de8\u94fe\u8bf7\u6c42\u90e8\u5206\u662f\u6ca1\u6709\u56de\u8c03\u7684\uff09 function getCallbackMeta () public view returns ( address [] memory , uint64 [] memory ) // getInMessage \u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u6240\u5728\u7684\u533a\u5757\u9ad8\u5ea6\u3002\u67e5\u8be2\u952e\u503c\u4e2dsrcChainID\u6307\u5b9a\u6765\u6e90\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u6240\u5728\u7684\u533a\u5757\u9ad8\u5ea6\u3002 function getInMessage ( string srcChainID , uint64 idx ) public view returns ( uint ) // getOutMessage \u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u6240\u5728\u7684\u533a\u5757\u9ad8\u5ea6\u3002\u67e5\u8be2\u952e\u503c\u4e2ddstChainID\u6307\u5b9a\u76ee\u7684\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u6765\u6e90\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u6240\u5728\u7684\u533a\u5757\u9ad8\u5ea6\u3002 function getOutMessage ( string dstChainID , uint64 idx ) public view returns ( uint ) // \u63d0\u4f9b\u7ed9\u8de8\u94fe\u7f51\u5173\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u8de8\u94fe\u7f51\u5173\u6536\u5230\u8de8\u94fe\u8bf7\u6c42\u65f6\u4f1a\u8c03\u7528\u8be5\u63a5\u53e3\u3002 function invokeInterchain ( address srcChainID , uint64 index , address destAddr , bool req , bytes calldata bizCallData ) payable external // \u63d0\u4f9b\u7ed9\u8de8\u94fe\u7f51\u5173\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u5f53\u8de8\u94fe\u7f51\u5173\u6536\u5230\u65e0\u6548\u5f53\u8de8\u94fe\u8bf7\u6c42\u65f6\u4f1a\u8c03\u7528\u8be5\u63a5\u53e3\u3002 function invokeIndexUpdateWithError ( address srcChainID , uint64 index , bool req , string memory err ) public // \u63d0\u4f9b\u7ed9\u4e1a\u52a1\u5408\u7ea6\u53d1\u8d77\u901a\u7528\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u63a5\u53e3\u3002 function emitInterchainEvent ( address destChainID , string memory destAddr , string memory funcs , string memory args , string memory argscb , string memory argsrb ) public onlyWhiteList // \u63d0\u4f9b\u7ed9\u5408\u7ea6\u90e8\u7f72\u521d\u59cb\u5316\u4f7f\u7528 function initialize () public \u91cd\u8981\u63a5\u53e3\u8bf4\u660e emitInterchainEvent \u8be5\u63a5\u53e3\u662f\u4e1a\u52a1\u5408\u7ea6\u53d1\u8d77\u901a\u7528\u7684\u8de8\u94fe\u8c03\u7528\u7684\u63a5\u53e3\u3002\u63a5\u6536\u7684\u53c2\u6570\u6709\uff1a\u76ee\u7684\u94feID\uff0c\u76ee\u7684\u94fe\u4e1a\u52a1\u5408\u7ea6\u5730\u5740\u6216ID\uff0c\u8c03\u7528\u7684\u51fd\u6570\u540d\u3001\u56de\u8c03\u51fd\u6570\u540d\u3001\u56de\u6eda\u51fd\u6570\u540d\uff0c\u8c03\u7528\u51fd\u6570\u7684\u53c2\u6570\uff0c\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\uff0c\u56de\u6eda\u51fd\u6570\u7684\u53c2\u6570\u3002 Broker\u4f1a\u8bb0\u5f55\u8de8\u94fe\u4ea4\u6613\u76f8\u5e94\u7684\u5143\u4fe1\u606f\uff0c\u5bf9\u8de8\u94fe\u4ea4\u6613\u8fdb\u884c\u7f16\u53f7\uff0c\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u6709\u5e8f\u8fdb\u884c, \u5e76\u4e14\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6\uff0c\u4ee5\u901a\u77e5\u8de8\u94fe\u7f51\u5173\u8de8\u94fe\u4ea4\u6613\u7684\u4ea7\u751f\u3002 invokeInterchain \u8be5\u63a5\u53e3\u662f\u8de8\u94fe\u7f51\u5173\u5bf9\u4e1a\u52a1\u5408\u7ea6\u8fdb\u884c\u8de8\u94fe\u8c03\u7528\u6216\u56de\u8c03/\u56de\u6eda\u7684\u63a5\u53e3\u3002 \u63a5\u6536\u53c2\u6570\u6709\uff1a\u6765\u6e90\u94feID\uff0c\u4ea4\u6613\u5e8f\u53f7\uff0c\u76ee\u7684\u4e1a\u52a1\u5408\u7ea6ID\uff0c\u662f\u5426\u662f\u8de8\u94fe\u8bf7\u6c42\uff0c\u4e1a\u52a1\u5408\u7ea6\u8c03\u7528\u65b9\u6cd5\u548c\u53c2\u6570\u7684\u5c01\u88c5\u6570\u636e\u3002 \u8de8\u94fe\u7f51\u5173\u5bf9\u8981\u8c03\u7528\u7684\u76ee\u7684\u5408\u7ea6\u7684\u65b9\u6cd5\u548c\u53c2\u6570\u8fdb\u884c\u5c01\u88c5\uff0c\u901a\u8fc7\u8be5\u63a5\u53e3\u5b9e\u73b0\u5bf9\u4e0d\u540c\u76ee\u7684\u5408\u7ea6\u7684\u7075\u6d3b\u8c03\u7528\uff0c\u5e76\u8fd4\u56de\u76ee\u7684\u5408\u7ea6\u7684\u8c03\u7528\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 \u4e1a\u52a1\u5408\u7ea6\u63a5\u53e3 \u4e1a\u52a1\u5408\u7ea6\u73b0\u9636\u6bb5\u5206\u4e3a\u8d44\u4ea7\u7c7b\u548c\u6570\u636e\u4ea4\u6362\u7c7b\u7684\u4e1a\u52a1\u5408\u7ea6\uff0c\u7531\u4e8e\u8d44\u4ea7\u7c7b\u7684\u6709\u64cd\u4f5c\u539f\u5b50\u6027\u548c\u5b89\u5168\u6027\u7684\u8003\u8651\uff0c\u9700\u8981\u7684\u63a5\u53e3\u5b9e\u73b0\u4e0a\u6bd4\u6570\u636e\u4ea4\u6362\u7c7b\u7684\u4e1a\u52a1\u5408\u7ea6\u66f4\u590d\u6742\u3002 Transfer \u5408\u7ea6 // \u53d1\u8d77\u4e00\u7b14\u8de8\u94fe\u4ea4\u6613\u7684\u63a5\u53e3 function transfer ( string dstChainID , string destAddr , string sender , string receiver , string amount ) public // \u63d0\u4f9b\u7ed9Broker\u5408\u7ea6\u6536\u5230\u8de8\u94fe\u5145\u503c\u6240\u8c03\u7528\u7684\u63a5\u53e3 function interchainCharge ( string sender , string receiver , uint64 val ) public onlyBroker returns ( bool ) // \u8de8\u94fe\u4ea4\u6613\u5931\u8d25\u4e4b\u540e\uff0c\u63d0\u4f9b\u7ed9Broker\u5408\u7ea6\u8fdb\u884c\u56de\u6eda\u7684\u63a5\u53e3 function interchainRollback ( string sender , uint64 val ) public onlyBroker // \u83b7\u53d6transfer\u5408\u7ea6\u4e2d\u67d0\u4e2a\u8d26\u6237\u7684\u4f59\u989d function getBalance ( string id ) public view returns ( uint64 ) // \u5728transfer\u5408\u7ea6\u4e2d\u7ed9\u67d0\u4e2a\u8d26\u6237\u8bbe\u7f6e\u4e00\u5b9a\u7684\u4f59\u989d function setBalance ( string id , uint64 amount ) public } DataSwapper\u5408\u7ea6 // \u53d1\u8d77\u4e00\u4e2a\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u4ea4\u6613\u7684\u63a5\u53e3 function get ( string dstChainID , string dstAddr , string key ) public // \u63d0\u4f9b\u7ed9Broker\u5408\u7ea6\u8c03\u7528\uff0c\u5f53Broker\u6536\u5230\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u8bf7\u6c42\u65f6\u53d6\u6570\u636e\u7684\u63a5\u53e3 function interchainGet ( string key ) public onlyBroker returns ( bool , string memory ) // \u8de8\u94fe\u83b7\u53d6\u5230\u7684\u6570\u636e\u56de\u5199\u7684\u63a5\u53e3 function interchainSet ( string key , string value ) public onlyBroker \u5177\u4f53\u5b9e\u73b0 \u5bf9\u4e8e\u60f3\u8981\u63a5\u5165\u5230\u6211\u4eec\u7684\u8de8\u94fe\u5e73\u53f0\u4e2d\u7684Fabric\u533a\u5757\u94fe\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u63d0\u4f9b\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\u548c\u76f8\u5e94\u7684Plugin\uff0c\u4f60\u53ea\u9700\u8981\u5bf9\u4f60\u7684\u4e1a\u52a1\u5408\u7ea6\u8fdb\u884c\u4e00\u5b9a\u7684\u6539\u9020\u4fbf\u53ef\u62e5\u6709\u8de8\u94fe\u529f\u80fd\u3002 \u5982\u679c\u662f\u5176\u4ed6\u5e94\u7528\u94fe\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u7684\u8bbe\u8ba1\u601d\u8def\u81ea\u884c\u5f00\u53d1\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u4ee5\u53ca\u76f8\u5e94\u7684Plugin\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709Solidity\u7248\u672c\u548cchaincode\u7248\u672c\u7f16\u5199\u7684\u8de8\u94fe\u5408\u7ea6\u6837\u4f8b\u5b9e\u73b0\uff0c\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a Solidity \u8de8\u94fe\u5408\u7ea6\u5b9e\u73b0 Chaincode \u8de8\u94fe\u5408\u7ea6\u5b9e\u73b0 \u5982\u679c\u4f60\u9700\u8981\u65b0\u7684\u8bed\u8a00\u7f16\u5199\u5408\u7ea6\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u6211\u4eec\u7684\u8bbe\u8ba1\u601d\u8def\u548c\u53c2\u8003\u5b9e\u73b0\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u5f00\u53d1\u3002 \u73b0\u5728\u6211\u4eec\u652f\u6301Hyperchain EVM\u5408\u7ea6\u3001\u4ee5\u592a\u574a\u79c1\u94feSolidity\u5408\u7ea6\u3001BCOS EVM\u5408\u7ea6\u4ee5\u53caFabric Chaincode\u5408\u7ea6\u3002 Hyperchain\u3001\u4ee5\u592a\u574a\u3001BCOS\u4e0a\u7684EVM\u5408\u7ea6 \u672c\u8282\u4e3b\u8981\u8bf4\u660e\u5728\u652f\u6301EVM\u5408\u7ea6\u7684\u5e94\u7528\u94fe\u4e0a\uff0c\u5982\u4f55\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\uff0c\u5728\u4f60\u5df2\u6709\u7684Solidity\u4e1a\u52a1\u5408\u7ea6\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u63a5\u53e3\uff0c\u4ee5\u83b7\u5f97\u8de8\u94fe\u80fd\u529b\u3002 \u5f53\u7136\u4e0d\u540c\u7684\u533a\u5757\u94fe\u53ef\u80fd\u5728\u4ee5\u592a\u574a\u7684EVM\u4e0a\u505a\u4e86\u4e00\u4e9b\u4e8c\u6b21\u5f00\u53d1\u548c\u65b0\u589e\u529f\u80fd\uff0c\u8bf7\u6839\u636e\u5177\u4f53\u533a\u5757\u94fe\u7684\u6587\u6863\u76f8\u5e94\u4fee\u6539\u4ee3\u7801\u3002 \u4e1a\u52a1\u5408\u7ea6Demo \u5047\u8bbe\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u7b80\u5355\u7684KV\u5b58\u50a8\u7684\u4e1a\u52a1\u5408\u7ea6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a pragma solidity >= 0.5.7 ; contract DataSwapper { mapping ( string => string ) dataM ; // map for accounts // \u6570\u636e\u4ea4\u6362\u7c7b\u7684\u4e1a\u52a1\u5408\u7ea6 function getData ( string memory key ) public returns ( string memory ) { return dataM [ key ]; } function setData ( string memory key , string memory value ) public { dataM [ key ] = value ; } } \u73b0\u5728\u4f60\u60f3\u5728\u8fd9\u4e2a\u5408\u7ea6\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u529f\u80fd\uff0c\u5982\u679c\u4f7f\u7528\u6211\u4eec\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5f88\u7b80\u5355\u7684\u589e\u52a0\u51e0\u4e2a\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\u3002 \u53d1\u8d77\u8de8\u94fe\u6570\u636e\u4ea4\u6362\u7684\u63a5\u53e3 contract DataSwapper { // broker\u5408\u7ea6\u5730\u5740 address BrokerAddr = 0x2346f3BA3F0B6676aa711595daB8A27d0317DB57 ; Broker broker = Broker ( BrokerAddr ); ... function get ( address destChainID , string memory destAddr , string memory key ) public { broker . emitInterchainEvent ( destChainID , destAddr , \"interchainGet,interchainSet,\" , key , key , \"\" ); } } contract Broker { function emitInterchainEvent ( address destChainID , string memory destAddr , string memory funcs , string memory args , string memory argscb , string memory argsrb ) public ; } \u5176\u4e2dBroker\u7684\u5730\u5740\u548c\u8be5\u4e1a\u52a1\u5408\u7ea6\u9700\u8981\u4f7f\u7528\u5230\u7684\u63a5\u53e3\u9700\u8981\u5728\u4e1a\u52a1\u5408\u7ea6\u4e2d\u58f0\u660e\uff0c\u7136\u540e\u76f4\u63a5\u8c03\u7528\u8be5\u63a5\u53e3\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\u3002 \u8de8\u94fe\u83b7\u53d6\u7684\u63a5\u53e3 contract DataSwapper { ... modifier onlyBroker { require ( msg.sender == BrokerAddr , \"Invoker are not the Broker\" ); _ ; } function interchainGet ( string memory key ) public onlyBroker returns ( bool , string memory ) { return ( true , dataM [ key ]); } } \u6211\u4eec\u89c4\u5b9a\u8de8\u94fe\u8c03\u7528\u7684\u63a5\u53e3\u7684\u7b2c\u4e00\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\u5fc5\u987b\u662fbool\u7c7b\u578b\uff0c\u5b83\u7528\u6765\u8868\u793a\u8de8\u94fe\u8c03\u7528\u662f\u5426\u6210\u529f\u3002 \u5176\u4e2donlyBroker\u662f\u8fdb\u884c\u8de8\u94fe\u6743\u9650\u63a7\u5236\u7684\u4fee\u9970\u5668\u3002\u8be5\u63a5\u53e3\u548c\u4e0b\u9762\u7684\u8de8\u94fe\u56de\u5199\u63a5\u53e3\u5747\u662f\u63d0\u4f9b\u7ed9Broker\u5408\u7ea6\u8fdb\u884c\u8c03\u7528\uff0c\u4e5f\u662f\u5176\u4ed6\u5e94\u7528\u94fe\u53d1\u6765\u7684\u8de8\u94fe\u4ea4\u6613\u6267\u884c\u65f6\u9700\u8981\u8c03\u7528\u7684\u63a5\u53e3\u3002 \u8de8\u94fe\u56de\u5199\u7684\u63a5\u53e3 contract DataSwapper { ... function interchainSet ( string memory key , string memory value ) public onlyBroker { setData ( key , value ); } ... } Fabric \u672c\u8282\u4e3b\u8981\u8bf4\u660e\u5728Fabric\u5e94\u7528\u94fe\u4e0a\uff0c\u5982\u4f55\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\uff0c\u5728\u4f60\u5df2\u6709\u4e1a\u52a1\u5408\u7ea6\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u63a5\u53e3\uff0c\u4ee5\u83b7\u5f97\u8de8\u94fe\u80fd\u529b\u3002 \u4e1a\u52a1\u5408\u7ea6Demo \u5047\u8bbe\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u7b80\u5355\u7684KV\u5b58\u50a8\u7684\u4e1a\u52a1\u5408\u7ea6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a type KVStore struct {} func ( s * KVStore ) Init ( stub shim . ChaincodeStubInterface ) peer . Response { return shim . Success ( nil ) } func ( s * KVStore ) Invoke ( stub shim . ChaincodeStubInterface ) peer . Response { function , args := stub . GetFunctionAndParameters () fmt . Printf ( \"invoke: %s\\n\" , function ) switch function { case \"get\" : return s . get ( stub , args ) case \"set\" : return s . set ( stub , args ) default : return shim . Error ( \"invalid function: \" + function + \", args: \" + strings . Join ( args , \",\" )) } } func ( s * KVStore ) get ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { // args[0]: key value , err := stub . GetState ( args [ 0 ]) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( value ) } // get is business function which will invoke the to,tid,id func ( s * KVStore ) set ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { if len ( args ) != 2 { return shim . Error ( \"incorrect number of arguments\" ) } err := stub . PutState ( args [ 0 ], [] byte ( args [ 1 ])) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( nil ) } func main () { err := shim . Start ( new ( KVStore )) if err != nil { fmt . Printf ( \"Error starting chaincode: %s\" , err ) } } \u73b0\u5728\u4f60\u60f3\u5728\u8fd9\u4e2a\u5408\u7ea6\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u529f\u80fd\uff0c\u5982\u679c\u4f7f\u7528\u6211\u4eec\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5f88\u7b80\u5355\u7684\u589e\u52a0\u51e0\u4e2a\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\u3002 \u53d1\u8d77\u8de8\u94fe\u6570\u636e\u4ea4\u6362\u7684\u63a5\u53e3 \u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u4f7f\u7528\uff0c\u6211\u4eec\u5728\u539f\u6765\u83b7\u53d6\u6570\u636e\u7684\u63a5\u53e3\u57fa\u7840\u4e0a\u589e\u52a0\u8fd9\u4e2a\u529f\u80fd\uff1a const ( channelID = \"mychannel\" brokerContractName = \"broker\" emitInterchainEventFunc = \"EmitInterchainEvent\" ) func ( s * KVStore ) get ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { switch len ( args ) { case 1 : // args[0]: key value , err := stub . GetState ( args [ 0 ]) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( value ) case 3 : // args[0]: destination appchain id // args[1]: destination contract address // args[2]: key b := util . ToChaincodeArgs ( emitInterchainEventFunc , args [ 0 ], args [ 1 ], \"interchainGet\" , args [ 2 ], \"interchainSet\" , args [ 2 ], \"\" , \"\" ) response := stub . InvokeChaincode ( brokerContractName , b , channelID ) if response . Status != shim . OK { return shim . Error ( fmt . Errorf ( \"invoke broker chaincode %s error: %s\" , brokerContractName , response . Message ). Error ()) } return shim . Success ( nil ) default : return shim . Error ( \"incorrect number of arguments\" ) } } \u7531\u4e8e\u6211\u4eec\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u4e00\u65e6\u90e8\u7f72\u4e4b\u540e\uff0cchaincode name\u548c\u6240\u5728\u7684channel\u548c\u8de8\u94fe\u63a5\u53e3\u90fd\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u5728\u4e1a\u52a1\u53d8\u91cf\u4e2d\u76f4\u63a5\u4f7f\u7528\u5e38\u91cf\u6307\u5b9aBroker\u5408\u7ea6\u7684\u76f8\u5173\u4fe1\u606f\u3002 b := util . ToChaincodeArgs ( emitInterchainEventFunc , args [ 0 ], args [ 1 ], \"interchainGet\" , args [ 2 ], \"interchainSet\" , args [ 2 ], \"\" , \"\" ) response := stub . InvokeChaincode ( brokerContractName , b , channelID ) \u8fd9\u4e24\u884c\u4ee3\u7801\u8c03\u7528\u4e86\u6211\u4eec\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\uff0c\u53ea\u9700\u8981\u63d0\u4f9b\u53c2\u6570\uff1a\u76ee\u7684\u94feID\uff0c\u76ee\u7684\u94fe\u4e0a\u4e1a\u52a1\u5408\u7ea6\u7684\u5730\u5740\uff0c\u8de8\u94fe\u8c03\u7528\u51fd\u6570\uff0c\u8de8\u94fe\u8c03\u7528\u51fd\u6570\u53c2\u6570\uff0c\u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u53c2\u6570\uff0c\u6700\u540e\u4e24\u4e2a\u53c2\u6570\u4e3a\u56de\u6eda\u51fd\u6570\u548c\u56de\u6eda\u51fd\u6570\u53c2\u6570\uff0c\u56e0\u4e3a\u8be5\u573a\u666f\u4e0b\u5373\u4f7f\u76ee\u7684\u94fe\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u5931\u8d25\uff0c\u6765\u6e90\u94fe\u4e5f\u65e0\u9700\u56de\u6eda\uff0c\u56e0\u6b64\u65e0\u9700\u63d0\u4f9b\u56de\u6eda\u4fe1\u606f\u3002 \u8de8\u94fe\u83b7\u53d6\u7684\u63a5\u53e3 func ( s * KVStore ) interchainGet ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { if len ( args ) != 1 { return shim . Error ( \"incorrect number of arguments\" ) } value , err := stub . GetState ( args [ 0 ]) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( value ) } interchainGet \u63a5\u6536\u53c2\u6570 key \uff0c\u5728\u672c\u5408\u7ea6\u4e2d\u67e5\u8be2\u8be5 Key \u503c\u5bf9\u5e94\u7684 value \uff0c\u5e76\u8fd4\u56de\u3002\u8be5\u63a5\u53e3\u63d0\u4f9b\u7ed9 Broker \u5408\u7ea6\u8fdb\u884c\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u8c03\u7528\u3002 \u8de8\u94fe\u56de\u5199\u7684\u63a5\u53e3 func ( s * KVStore ) interchainSet ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { if len ( args ) != 2 { return shim . Error ( \"incorrect number of arguments\" ) } err := stub . PutState ( args [ 0 ], [] byte ( args [ 1 ])) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( nil ) } interchainSet \u63a5\u6536\u53c2\u6570 key \uff0c\u5728\u672c\u5408\u7ea6\u4e2d\u8bbe\u7f6e Key \u503c\u5bf9\u5e94\u7684 value \u3002\u8be5\u63a5\u53e3\u63d0\u4f9b\u7ed9 Broker \u5408\u7ea6\u56de\u5199\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u65f6\u5019\u8fdb\u884c\u8c03\u7528\u3002 \u603b\u7ed3 \u7ecf\u8fc7\u4e0a\u9762\u7684\u6539\u9020\uff0c\u4f60\u7684\u4e1a\u52a1\u5408\u7ea6\u5df2\u7ecf\u5177\u5907\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u529f\u80fd\u4e86\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc","title":"\u8de8\u94fe\u5408\u7ea6\u5f00\u53d1"},{"location":"bitxhub/dev/cross_contract/#_1","text":"\u6309\u7167\u8de8\u94fe\u5408\u7ea6\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u9700\u8981\u5728\u6709\u8de8\u94fe\u9700\u6c42\u7684\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u4e24\u79cd\u5408\u7ea6\u3002\u4e00\u4e2a\u5408\u7ea6\u8d1f\u8d23\u5bf9\u63a5\u8de8\u94fe\u7f51\u5173Pier\uff0c\u4e3a\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\uff1b\u4e00\u4e2a\u5408\u7ea6\u8d1f\u8d23\u5177\u4f53\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u4e3a\u4e1a\u52a1\u5408\u7ea6\u3002\u4e1a\u52a1\u5408\u7ea6\u9700\u8981\u8de8\u94fe\u65f6\uff0c\u8981\u7edf\u4e00\u5c06\u8de8\u94fe\u8bf7\u6c42\u63d0\u4ea4\u5230Broker\u5408\u7ea6\u4e0a\uff0cBroker\u7edf\u4e00\u548cPier\u8fdb\u884c\u4ea4\u4e92\u3002\u4e00\u4e2aBroker\u5408\u7ea6\u53ef\u4ee5\u8d1f\u8d23\u5bf9\u63a5\u591a\u4e2a\u4e1a\u52a1\u5408\u7ea6\u3002 \u8de8\u94fe\u63a5\u5165\u65b9\u65e0\u9700\u5bf9broker\u5408\u7ea6\u8fdb\u884c\u4fee\u6539\uff0c\u76f4\u63a5\u90e8\u7f72\u4f7f\u7528\u5373\u53ef\uff1b\u540c\u65f6\u4e3a\u4e86\u7b80\u5316\u4e1a\u52a1\u5408\u7ea6\u7684\u7f16\u5199\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e1a\u52a1\u5408\u7ea6\u7684\u76f8\u5e94\u63a5\u53e3\u3002 \u4ee5\u4e0b\u4ee5\u4ee5\u592a\u574a\u4e0a\u7684solidity\u5408\u7ea6\u4e3a\u4f8b\u3002","title":"\u8de8\u94fe\u5408\u7ea6"},{"location":"bitxhub/dev/cross_contract/#broker","text":"// \u63d0\u4f9b\u7ed9\u4e1a\u52a1\u5408\u7ea6\u6ce8\u518c\u3002\u6ce8\u518c\u4e14\u5ba1\u6838\u901a\u8fc7\u7684\u4e1a\u52a1\u5408\u7ea6\u624d\u80fd\u8c03\u7528Broker\u5408\u7ea6\u7684\u8de8\u94fe\u63a5\u53e3 function register ( string addr ) public // \u63d0\u4f9b\u7ed9\u7ba1\u7406\u5458\u5ba1\u6838\u5df2\u7ecf\u6ce8\u518c\u7684\u4e1a\u52a1\u5408\u7ea6 function audit ( string addr , bool status ) public returns ( bool ) // getInnerMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4e3a\u76ee\u7684\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002 // \u5982\u679cBroker\u5728A\u94fe\uff0c\u5219\u53ef\u80fd\u6709\u591a\u6761\u94fe\u548cA\u8fdb\u884c\u8de8\u94fe\uff0c\u5982B->A:3; C->A:5\u3002 // \u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u6765\u6e90\u94feID\uff0cvalue\u5bf9\u5e94\u8be5\u6765\u6e90\u94fe\u5df2\u53d1\u9001\u7684\u6700\u65b0\u7684\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 function getInnerMeta () public view returns ( address [] memory , uint64 [] memory ) // getOuterMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002 // \u5982\u679c\u4ee5Broker\u5728A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\u3002 // \u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5df2\u53d1\u9001\u5230\u8be5\u76ee\u7684\u94fe\u7684\u6700\u65b0\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 function getOuterMeta () public view returns ( address [] memory , uint64 [] memory ) // getCallbackMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002 // \u5982\u679cBroker\u5728A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\uff1b\u540c\u65f6\u7531\u4e8e\u8de8\u94fe\u8bf7\u6c42\u4e2d\u652f\u6301\u56de\u8c03\u64cd\u4f5c\uff0c\u5373A->B->A\u4e3a\u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u64cd\u4f5c\uff0c // \u6211\u4eec\u9700\u8981\u8bb0\u5f55\u56de\u8c03\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\uff0c\u5982A->B->:2; A->C\u2014>A:4\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5230\u8be5\u76ee\u7684\u94fe\u6700\u65b0\u7684\u5e26\u56de\u8c03\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c // \u5982{B:2, C:4}\u3002\uff08\u6ce8\u610f callbackMeta\u5e8f\u53f7\u53ef\u80fd\u548coutMeta\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u7531A\u53d1\u51fa\u7684\u8de8\u94fe\u8bf7\u6c42\u90e8\u5206\u662f\u6ca1\u6709\u56de\u8c03\u7684\uff09 function getCallbackMeta () public view returns ( address [] memory , uint64 [] memory ) // getInMessage \u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u6240\u5728\u7684\u533a\u5757\u9ad8\u5ea6\u3002\u67e5\u8be2\u952e\u503c\u4e2dsrcChainID\u6307\u5b9a\u6765\u6e90\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u6240\u5728\u7684\u533a\u5757\u9ad8\u5ea6\u3002 function getInMessage ( string srcChainID , uint64 idx ) public view returns ( uint ) // getOutMessage \u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u6240\u5728\u7684\u533a\u5757\u9ad8\u5ea6\u3002\u67e5\u8be2\u952e\u503c\u4e2ddstChainID\u6307\u5b9a\u76ee\u7684\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Broker\u6240\u5728\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u6765\u6e90\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u6240\u5728\u7684\u533a\u5757\u9ad8\u5ea6\u3002 function getOutMessage ( string dstChainID , uint64 idx ) public view returns ( uint ) // \u63d0\u4f9b\u7ed9\u8de8\u94fe\u7f51\u5173\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u8de8\u94fe\u7f51\u5173\u6536\u5230\u8de8\u94fe\u8bf7\u6c42\u65f6\u4f1a\u8c03\u7528\u8be5\u63a5\u53e3\u3002 function invokeInterchain ( address srcChainID , uint64 index , address destAddr , bool req , bytes calldata bizCallData ) payable external // \u63d0\u4f9b\u7ed9\u8de8\u94fe\u7f51\u5173\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u5f53\u8de8\u94fe\u7f51\u5173\u6536\u5230\u65e0\u6548\u5f53\u8de8\u94fe\u8bf7\u6c42\u65f6\u4f1a\u8c03\u7528\u8be5\u63a5\u53e3\u3002 function invokeIndexUpdateWithError ( address srcChainID , uint64 index , bool req , string memory err ) public // \u63d0\u4f9b\u7ed9\u4e1a\u52a1\u5408\u7ea6\u53d1\u8d77\u901a\u7528\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u63a5\u53e3\u3002 function emitInterchainEvent ( address destChainID , string memory destAddr , string memory funcs , string memory args , string memory argscb , string memory argsrb ) public onlyWhiteList // \u63d0\u4f9b\u7ed9\u5408\u7ea6\u90e8\u7f72\u521d\u59cb\u5316\u4f7f\u7528 function initialize () public","title":"Broker \u5408\u7ea6\u63a5\u53e3"},{"location":"bitxhub/dev/cross_contract/#_2","text":"emitInterchainEvent \u8be5\u63a5\u53e3\u662f\u4e1a\u52a1\u5408\u7ea6\u53d1\u8d77\u901a\u7528\u7684\u8de8\u94fe\u8c03\u7528\u7684\u63a5\u53e3\u3002\u63a5\u6536\u7684\u53c2\u6570\u6709\uff1a\u76ee\u7684\u94feID\uff0c\u76ee\u7684\u94fe\u4e1a\u52a1\u5408\u7ea6\u5730\u5740\u6216ID\uff0c\u8c03\u7528\u7684\u51fd\u6570\u540d\u3001\u56de\u8c03\u51fd\u6570\u540d\u3001\u56de\u6eda\u51fd\u6570\u540d\uff0c\u8c03\u7528\u51fd\u6570\u7684\u53c2\u6570\uff0c\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\uff0c\u56de\u6eda\u51fd\u6570\u7684\u53c2\u6570\u3002 Broker\u4f1a\u8bb0\u5f55\u8de8\u94fe\u4ea4\u6613\u76f8\u5e94\u7684\u5143\u4fe1\u606f\uff0c\u5bf9\u8de8\u94fe\u4ea4\u6613\u8fdb\u884c\u7f16\u53f7\uff0c\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u6709\u5e8f\u8fdb\u884c, \u5e76\u4e14\u629b\u51fa\u8de8\u94fe\u4e8b\u4ef6\uff0c\u4ee5\u901a\u77e5\u8de8\u94fe\u7f51\u5173\u8de8\u94fe\u4ea4\u6613\u7684\u4ea7\u751f\u3002 invokeInterchain \u8be5\u63a5\u53e3\u662f\u8de8\u94fe\u7f51\u5173\u5bf9\u4e1a\u52a1\u5408\u7ea6\u8fdb\u884c\u8de8\u94fe\u8c03\u7528\u6216\u56de\u8c03/\u56de\u6eda\u7684\u63a5\u53e3\u3002 \u63a5\u6536\u53c2\u6570\u6709\uff1a\u6765\u6e90\u94feID\uff0c\u4ea4\u6613\u5e8f\u53f7\uff0c\u76ee\u7684\u4e1a\u52a1\u5408\u7ea6ID\uff0c\u662f\u5426\u662f\u8de8\u94fe\u8bf7\u6c42\uff0c\u4e1a\u52a1\u5408\u7ea6\u8c03\u7528\u65b9\u6cd5\u548c\u53c2\u6570\u7684\u5c01\u88c5\u6570\u636e\u3002 \u8de8\u94fe\u7f51\u5173\u5bf9\u8981\u8c03\u7528\u7684\u76ee\u7684\u5408\u7ea6\u7684\u65b9\u6cd5\u548c\u53c2\u6570\u8fdb\u884c\u5c01\u88c5\uff0c\u901a\u8fc7\u8be5\u63a5\u53e3\u5b9e\u73b0\u5bf9\u4e0d\u540c\u76ee\u7684\u5408\u7ea6\u7684\u7075\u6d3b\u8c03\u7528\uff0c\u5e76\u8fd4\u56de\u76ee\u7684\u5408\u7ea6\u7684\u8c03\u7528\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002","title":"\u91cd\u8981\u63a5\u53e3\u8bf4\u660e"},{"location":"bitxhub/dev/cross_contract/#_3","text":"\u4e1a\u52a1\u5408\u7ea6\u73b0\u9636\u6bb5\u5206\u4e3a\u8d44\u4ea7\u7c7b\u548c\u6570\u636e\u4ea4\u6362\u7c7b\u7684\u4e1a\u52a1\u5408\u7ea6\uff0c\u7531\u4e8e\u8d44\u4ea7\u7c7b\u7684\u6709\u64cd\u4f5c\u539f\u5b50\u6027\u548c\u5b89\u5168\u6027\u7684\u8003\u8651\uff0c\u9700\u8981\u7684\u63a5\u53e3\u5b9e\u73b0\u4e0a\u6bd4\u6570\u636e\u4ea4\u6362\u7c7b\u7684\u4e1a\u52a1\u5408\u7ea6\u66f4\u590d\u6742\u3002","title":"\u4e1a\u52a1\u5408\u7ea6\u63a5\u53e3"},{"location":"bitxhub/dev/cross_contract/#transfer","text":"// \u53d1\u8d77\u4e00\u7b14\u8de8\u94fe\u4ea4\u6613\u7684\u63a5\u53e3 function transfer ( string dstChainID , string destAddr , string sender , string receiver , string amount ) public // \u63d0\u4f9b\u7ed9Broker\u5408\u7ea6\u6536\u5230\u8de8\u94fe\u5145\u503c\u6240\u8c03\u7528\u7684\u63a5\u53e3 function interchainCharge ( string sender , string receiver , uint64 val ) public onlyBroker returns ( bool ) // \u8de8\u94fe\u4ea4\u6613\u5931\u8d25\u4e4b\u540e\uff0c\u63d0\u4f9b\u7ed9Broker\u5408\u7ea6\u8fdb\u884c\u56de\u6eda\u7684\u63a5\u53e3 function interchainRollback ( string sender , uint64 val ) public onlyBroker // \u83b7\u53d6transfer\u5408\u7ea6\u4e2d\u67d0\u4e2a\u8d26\u6237\u7684\u4f59\u989d function getBalance ( string id ) public view returns ( uint64 ) // \u5728transfer\u5408\u7ea6\u4e2d\u7ed9\u67d0\u4e2a\u8d26\u6237\u8bbe\u7f6e\u4e00\u5b9a\u7684\u4f59\u989d function setBalance ( string id , uint64 amount ) public }","title":"Transfer \u5408\u7ea6"},{"location":"bitxhub/dev/cross_contract/#dataswapper","text":"// \u53d1\u8d77\u4e00\u4e2a\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u4ea4\u6613\u7684\u63a5\u53e3 function get ( string dstChainID , string dstAddr , string key ) public // \u63d0\u4f9b\u7ed9Broker\u5408\u7ea6\u8c03\u7528\uff0c\u5f53Broker\u6536\u5230\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u8bf7\u6c42\u65f6\u53d6\u6570\u636e\u7684\u63a5\u53e3 function interchainGet ( string key ) public onlyBroker returns ( bool , string memory ) // \u8de8\u94fe\u83b7\u53d6\u5230\u7684\u6570\u636e\u56de\u5199\u7684\u63a5\u53e3 function interchainSet ( string key , string value ) public onlyBroker","title":"DataSwapper\u5408\u7ea6"},{"location":"bitxhub/dev/cross_contract/#_4","text":"\u5bf9\u4e8e\u60f3\u8981\u63a5\u5165\u5230\u6211\u4eec\u7684\u8de8\u94fe\u5e73\u53f0\u4e2d\u7684Fabric\u533a\u5757\u94fe\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u63d0\u4f9b\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\u548c\u76f8\u5e94\u7684Plugin\uff0c\u4f60\u53ea\u9700\u8981\u5bf9\u4f60\u7684\u4e1a\u52a1\u5408\u7ea6\u8fdb\u884c\u4e00\u5b9a\u7684\u6539\u9020\u4fbf\u53ef\u62e5\u6709\u8de8\u94fe\u529f\u80fd\u3002 \u5982\u679c\u662f\u5176\u4ed6\u5e94\u7528\u94fe\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u7684\u8bbe\u8ba1\u601d\u8def\u81ea\u884c\u5f00\u53d1\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u4ee5\u53ca\u76f8\u5e94\u7684Plugin\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709Solidity\u7248\u672c\u548cchaincode\u7248\u672c\u7f16\u5199\u7684\u8de8\u94fe\u5408\u7ea6\u6837\u4f8b\u5b9e\u73b0\uff0c\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a Solidity \u8de8\u94fe\u5408\u7ea6\u5b9e\u73b0 Chaincode \u8de8\u94fe\u5408\u7ea6\u5b9e\u73b0 \u5982\u679c\u4f60\u9700\u8981\u65b0\u7684\u8bed\u8a00\u7f16\u5199\u5408\u7ea6\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u6211\u4eec\u7684\u8bbe\u8ba1\u601d\u8def\u548c\u53c2\u8003\u5b9e\u73b0\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u5f00\u53d1\u3002 \u73b0\u5728\u6211\u4eec\u652f\u6301Hyperchain EVM\u5408\u7ea6\u3001\u4ee5\u592a\u574a\u79c1\u94feSolidity\u5408\u7ea6\u3001BCOS EVM\u5408\u7ea6\u4ee5\u53caFabric Chaincode\u5408\u7ea6\u3002","title":"\u5177\u4f53\u5b9e\u73b0"},{"location":"bitxhub/dev/cross_contract/#hyperchainbcosevm","text":"\u672c\u8282\u4e3b\u8981\u8bf4\u660e\u5728\u652f\u6301EVM\u5408\u7ea6\u7684\u5e94\u7528\u94fe\u4e0a\uff0c\u5982\u4f55\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\uff0c\u5728\u4f60\u5df2\u6709\u7684Solidity\u4e1a\u52a1\u5408\u7ea6\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u63a5\u53e3\uff0c\u4ee5\u83b7\u5f97\u8de8\u94fe\u80fd\u529b\u3002 \u5f53\u7136\u4e0d\u540c\u7684\u533a\u5757\u94fe\u53ef\u80fd\u5728\u4ee5\u592a\u574a\u7684EVM\u4e0a\u505a\u4e86\u4e00\u4e9b\u4e8c\u6b21\u5f00\u53d1\u548c\u65b0\u589e\u529f\u80fd\uff0c\u8bf7\u6839\u636e\u5177\u4f53\u533a\u5757\u94fe\u7684\u6587\u6863\u76f8\u5e94\u4fee\u6539\u4ee3\u7801\u3002","title":"Hyperchain\u3001\u4ee5\u592a\u574a\u3001BCOS\u4e0a\u7684EVM\u5408\u7ea6"},{"location":"bitxhub/dev/cross_contract/#demo","text":"\u5047\u8bbe\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u7b80\u5355\u7684KV\u5b58\u50a8\u7684\u4e1a\u52a1\u5408\u7ea6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a pragma solidity >= 0.5.7 ; contract DataSwapper { mapping ( string => string ) dataM ; // map for accounts // \u6570\u636e\u4ea4\u6362\u7c7b\u7684\u4e1a\u52a1\u5408\u7ea6 function getData ( string memory key ) public returns ( string memory ) { return dataM [ key ]; } function setData ( string memory key , string memory value ) public { dataM [ key ] = value ; } } \u73b0\u5728\u4f60\u60f3\u5728\u8fd9\u4e2a\u5408\u7ea6\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u529f\u80fd\uff0c\u5982\u679c\u4f7f\u7528\u6211\u4eec\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5f88\u7b80\u5355\u7684\u589e\u52a0\u51e0\u4e2a\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u4e1a\u52a1\u5408\u7ea6Demo"},{"location":"bitxhub/dev/cross_contract/#_5","text":"contract DataSwapper { // broker\u5408\u7ea6\u5730\u5740 address BrokerAddr = 0x2346f3BA3F0B6676aa711595daB8A27d0317DB57 ; Broker broker = Broker ( BrokerAddr ); ... function get ( address destChainID , string memory destAddr , string memory key ) public { broker . emitInterchainEvent ( destChainID , destAddr , \"interchainGet,interchainSet,\" , key , key , \"\" ); } } contract Broker { function emitInterchainEvent ( address destChainID , string memory destAddr , string memory funcs , string memory args , string memory argscb , string memory argsrb ) public ; } \u5176\u4e2dBroker\u7684\u5730\u5740\u548c\u8be5\u4e1a\u52a1\u5408\u7ea6\u9700\u8981\u4f7f\u7528\u5230\u7684\u63a5\u53e3\u9700\u8981\u5728\u4e1a\u52a1\u5408\u7ea6\u4e2d\u58f0\u660e\uff0c\u7136\u540e\u76f4\u63a5\u8c03\u7528\u8be5\u63a5\u53e3\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\u3002","title":"\u53d1\u8d77\u8de8\u94fe\u6570\u636e\u4ea4\u6362\u7684\u63a5\u53e3"},{"location":"bitxhub/dev/cross_contract/#_6","text":"contract DataSwapper { ... modifier onlyBroker { require ( msg.sender == BrokerAddr , \"Invoker are not the Broker\" ); _ ; } function interchainGet ( string memory key ) public onlyBroker returns ( bool , string memory ) { return ( true , dataM [ key ]); } } \u6211\u4eec\u89c4\u5b9a\u8de8\u94fe\u8c03\u7528\u7684\u63a5\u53e3\u7684\u7b2c\u4e00\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\u5fc5\u987b\u662fbool\u7c7b\u578b\uff0c\u5b83\u7528\u6765\u8868\u793a\u8de8\u94fe\u8c03\u7528\u662f\u5426\u6210\u529f\u3002 \u5176\u4e2donlyBroker\u662f\u8fdb\u884c\u8de8\u94fe\u6743\u9650\u63a7\u5236\u7684\u4fee\u9970\u5668\u3002\u8be5\u63a5\u53e3\u548c\u4e0b\u9762\u7684\u8de8\u94fe\u56de\u5199\u63a5\u53e3\u5747\u662f\u63d0\u4f9b\u7ed9Broker\u5408\u7ea6\u8fdb\u884c\u8c03\u7528\uff0c\u4e5f\u662f\u5176\u4ed6\u5e94\u7528\u94fe\u53d1\u6765\u7684\u8de8\u94fe\u4ea4\u6613\u6267\u884c\u65f6\u9700\u8981\u8c03\u7528\u7684\u63a5\u53e3\u3002","title":"\u8de8\u94fe\u83b7\u53d6\u7684\u63a5\u53e3"},{"location":"bitxhub/dev/cross_contract/#_7","text":"contract DataSwapper { ... function interchainSet ( string memory key , string memory value ) public onlyBroker { setData ( key , value ); } ... }","title":"\u8de8\u94fe\u56de\u5199\u7684\u63a5\u53e3"},{"location":"bitxhub/dev/cross_contract/#fabric","text":"\u672c\u8282\u4e3b\u8981\u8bf4\u660e\u5728Fabric\u5e94\u7528\u94fe\u4e0a\uff0c\u5982\u4f55\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6Broker\uff0c\u5728\u4f60\u5df2\u6709\u4e1a\u52a1\u5408\u7ea6\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u63a5\u53e3\uff0c\u4ee5\u83b7\u5f97\u8de8\u94fe\u80fd\u529b\u3002","title":"Fabric"},{"location":"bitxhub/dev/cross_contract/#demo_1","text":"\u5047\u8bbe\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u7b80\u5355\u7684KV\u5b58\u50a8\u7684\u4e1a\u52a1\u5408\u7ea6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a type KVStore struct {} func ( s * KVStore ) Init ( stub shim . ChaincodeStubInterface ) peer . Response { return shim . Success ( nil ) } func ( s * KVStore ) Invoke ( stub shim . ChaincodeStubInterface ) peer . Response { function , args := stub . GetFunctionAndParameters () fmt . Printf ( \"invoke: %s\\n\" , function ) switch function { case \"get\" : return s . get ( stub , args ) case \"set\" : return s . set ( stub , args ) default : return shim . Error ( \"invalid function: \" + function + \", args: \" + strings . Join ( args , \",\" )) } } func ( s * KVStore ) get ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { // args[0]: key value , err := stub . GetState ( args [ 0 ]) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( value ) } // get is business function which will invoke the to,tid,id func ( s * KVStore ) set ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { if len ( args ) != 2 { return shim . Error ( \"incorrect number of arguments\" ) } err := stub . PutState ( args [ 0 ], [] byte ( args [ 1 ])) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( nil ) } func main () { err := shim . Start ( new ( KVStore )) if err != nil { fmt . Printf ( \"Error starting chaincode: %s\" , err ) } } \u73b0\u5728\u4f60\u60f3\u5728\u8fd9\u4e2a\u5408\u7ea6\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u529f\u80fd\uff0c\u5982\u679c\u4f7f\u7528\u6211\u4eec\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5f88\u7b80\u5355\u7684\u589e\u52a0\u51e0\u4e2a\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u4e1a\u52a1\u5408\u7ea6Demo"},{"location":"bitxhub/dev/cross_contract/#_8","text":"\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u4f7f\u7528\uff0c\u6211\u4eec\u5728\u539f\u6765\u83b7\u53d6\u6570\u636e\u7684\u63a5\u53e3\u57fa\u7840\u4e0a\u589e\u52a0\u8fd9\u4e2a\u529f\u80fd\uff1a const ( channelID = \"mychannel\" brokerContractName = \"broker\" emitInterchainEventFunc = \"EmitInterchainEvent\" ) func ( s * KVStore ) get ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { switch len ( args ) { case 1 : // args[0]: key value , err := stub . GetState ( args [ 0 ]) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( value ) case 3 : // args[0]: destination appchain id // args[1]: destination contract address // args[2]: key b := util . ToChaincodeArgs ( emitInterchainEventFunc , args [ 0 ], args [ 1 ], \"interchainGet\" , args [ 2 ], \"interchainSet\" , args [ 2 ], \"\" , \"\" ) response := stub . InvokeChaincode ( brokerContractName , b , channelID ) if response . Status != shim . OK { return shim . Error ( fmt . Errorf ( \"invoke broker chaincode %s error: %s\" , brokerContractName , response . Message ). Error ()) } return shim . Success ( nil ) default : return shim . Error ( \"incorrect number of arguments\" ) } } \u7531\u4e8e\u6211\u4eec\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u4e00\u65e6\u90e8\u7f72\u4e4b\u540e\uff0cchaincode name\u548c\u6240\u5728\u7684channel\u548c\u8de8\u94fe\u63a5\u53e3\u90fd\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u5728\u4e1a\u52a1\u53d8\u91cf\u4e2d\u76f4\u63a5\u4f7f\u7528\u5e38\u91cf\u6307\u5b9aBroker\u5408\u7ea6\u7684\u76f8\u5173\u4fe1\u606f\u3002 b := util . ToChaincodeArgs ( emitInterchainEventFunc , args [ 0 ], args [ 1 ], \"interchainGet\" , args [ 2 ], \"interchainSet\" , args [ 2 ], \"\" , \"\" ) response := stub . InvokeChaincode ( brokerContractName , b , channelID ) \u8fd9\u4e24\u884c\u4ee3\u7801\u8c03\u7528\u4e86\u6211\u4eec\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\uff0c\u53ea\u9700\u8981\u63d0\u4f9b\u53c2\u6570\uff1a\u76ee\u7684\u94feID\uff0c\u76ee\u7684\u94fe\u4e0a\u4e1a\u52a1\u5408\u7ea6\u7684\u5730\u5740\uff0c\u8de8\u94fe\u8c03\u7528\u51fd\u6570\uff0c\u8de8\u94fe\u8c03\u7528\u51fd\u6570\u53c2\u6570\uff0c\u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u53c2\u6570\uff0c\u6700\u540e\u4e24\u4e2a\u53c2\u6570\u4e3a\u56de\u6eda\u51fd\u6570\u548c\u56de\u6eda\u51fd\u6570\u53c2\u6570\uff0c\u56e0\u4e3a\u8be5\u573a\u666f\u4e0b\u5373\u4f7f\u76ee\u7684\u94fe\u6267\u884c\u8de8\u94fe\u4ea4\u6613\u5931\u8d25\uff0c\u6765\u6e90\u94fe\u4e5f\u65e0\u9700\u56de\u6eda\uff0c\u56e0\u6b64\u65e0\u9700\u63d0\u4f9b\u56de\u6eda\u4fe1\u606f\u3002","title":"\u53d1\u8d77\u8de8\u94fe\u6570\u636e\u4ea4\u6362\u7684\u63a5\u53e3"},{"location":"bitxhub/dev/cross_contract/#_9","text":"func ( s * KVStore ) interchainGet ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { if len ( args ) != 1 { return shim . Error ( \"incorrect number of arguments\" ) } value , err := stub . GetState ( args [ 0 ]) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( value ) } interchainGet \u63a5\u6536\u53c2\u6570 key \uff0c\u5728\u672c\u5408\u7ea6\u4e2d\u67e5\u8be2\u8be5 Key \u503c\u5bf9\u5e94\u7684 value \uff0c\u5e76\u8fd4\u56de\u3002\u8be5\u63a5\u53e3\u63d0\u4f9b\u7ed9 Broker \u5408\u7ea6\u8fdb\u884c\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u8c03\u7528\u3002","title":"\u8de8\u94fe\u83b7\u53d6\u7684\u63a5\u53e3"},{"location":"bitxhub/dev/cross_contract/#_10","text":"func ( s * KVStore ) interchainSet ( stub shim . ChaincodeStubInterface , args [] string ) peer . Response { if len ( args ) != 2 { return shim . Error ( \"incorrect number of arguments\" ) } err := stub . PutState ( args [ 0 ], [] byte ( args [ 1 ])) if err != nil { return shim . Error ( err . Error ()) } return shim . Success ( nil ) } interchainSet \u63a5\u6536\u53c2\u6570 key \uff0c\u5728\u672c\u5408\u7ea6\u4e2d\u8bbe\u7f6e Key \u503c\u5bf9\u5e94\u7684 value \u3002\u8be5\u63a5\u53e3\u63d0\u4f9b\u7ed9 Broker \u5408\u7ea6\u56de\u5199\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u65f6\u5019\u8fdb\u884c\u8c03\u7528\u3002","title":"\u8de8\u94fe\u56de\u5199\u7684\u63a5\u53e3"},{"location":"bitxhub/dev/cross_contract/#_11","text":"\u7ecf\u8fc7\u4e0a\u9762\u7684\u6539\u9020\uff0c\u4f60\u7684\u4e1a\u52a1\u5408\u7ea6\u5df2\u7ecf\u5177\u5907\u8de8\u94fe\u83b7\u53d6\u6570\u636e\u7684\u529f\u80fd\u4e86\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc","title":"\u603b\u7ed3"},{"location":"bitxhub/dev/plugin/","text":"\u5e94\u7528\u94fe\u63d2\u4ef6\u7f16\u5199 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u529f\u80fd\u7684 Plugin\u3002\u8fc7\u7a0b\u4e2d\u80fd\u5b66\u4e60\u57fa\u672c\u7684\u6982\u5ff5\u548c\u5177\u4f53\u4f7f\u7528\u7ec6\u8282\u3002\u8be5\u793a\u4f8b\u5c06\u5c55\u793a\u5982\u4f55\u5feb\u901f\u3001\u8f7b\u677e\u5730\u63a5\u5165\u81ea\u5df1\u7684\u533a\u5757\u94fe\u5230\u8de8\u94fe\u5e73\u53f0\u4e2d\u6765\u3002 \u5982\u679c\u4f60\u9700\u8981\u63a5\u5165\u81ea\u5df1\u5f00\u53d1\u7684\u533a\u5757\u94fe\u5230BitXHub\u8de8\u94fe\u5e73\u53f0\u6765\u7684\u8bdd\uff0c\u53ef\u4ee5\u6839\u636e\u4f60\u4eec\u81ea\u5df1\u7684\u533a\u5757\u94fe\u6765\u5b9a\u5236\u5f00\u53d1Plugin\uff0c\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u6765\u52a0\u5165\u5230\u8de8\u94fe\u5e73\u53f0\u3002 \u5f00\u53d1\u8981\u6c42 \u5b89\u88c5 go1.13+ \u8bbe\u7f6e\u597d$GOPATH\u7b49\u73af\u5883 \u6559\u7a0b\u7ae0\u8282 \u91cd\u8981\u6982\u5ff5 Plugin\u63a5\u53e3 \u7a0b\u5e8f\u76ee\u6807 \u5f00\u59cb\u7f16\u5199\u7a0b\u5e8f \u7f16\u8bd1\u4f60\u7684Plugin \u91cd\u8981\u6982\u5ff5 \u5728\u89e3\u91ca\u5177\u4f53\u7684\u63a5\u53e3\u4e4b\u524d\uff0c\u5148\u660e\u786e\u51e0\u4e2a\u6982\u5ff5\uff1a \u8de8\u94fe\u8bf7\u6c42 \uff1a\u5982\u679c\u6709\u4e24\u6761\u533a\u5757\u94feA\u548cB\uff0cA\u94fe\u9700\u8981\u5411B\u94fe\u53d1\u8d77\u4efb\u4f55\u64cd\u4f5c\uff0c\u9700\u8981\u6309\u7167IBTP\u89c4\u5219\u5411\u4e2d\u7ee7\u94fe\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u5305\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u8de8\u94fe\u8bf7\u6c42A->B\u3002 IBTP\u5305 \uff1a\u6ee1\u8db3IBTP\u7684\u4e00\u4e2apackage\uff0c\u8de8\u94fe\u8bf7\u6c42\u90fd\u9700\u8981\u901a\u8fc7IBTP\u5305\u8fdb\u884c\u3002 \u6765\u6e90\u94fe \uff1a\u5728\u8de8\u94fe\u8bf7\u6c42A->B\u4e2d\uff0cA\u5373\u4e3a\u6765\u6e90\u94fe\u3002 \u76ee\u7684\u94fe \uff1a\u5728\u8de8\u94fe\u8bf7\u6c42A->B\u4e2d\uff0cB\u5373\u4e3a\u76ee\u7684\u94fe\u3002 Plugin\u63a5\u53e3 \u4e3a\u4e86\u66f4\u52a0\u4fbf\u6377\u7684\u5f00\u53d1Plugin\u63a5\u5165\u5230Pier\u4e2d\u6765\uff0c\u6211\u4eec\u89c4\u5b9a\u4e86\u4e0b\u9762\u4e00\u4e9b\u5fc5\u8981\u7684\u63a5\u53e3\u3002 type Client interface { // \u521d\u59cb\u5316Plugin\u670d\u52a1 Initialize ( configPath string , pierID string , extra [] byte ) error // \u542f\u52a8Plugin\u670d\u52a1\u7684\u63a5\u53e3 Start () error // \u505c\u6b62Plugin\u670d\u52a1\u7684\u63a5\u53e3 Stop () error // Plugin\u8d1f\u8d23\u5c06\u533a\u5757\u94fe\u4e0a\u4ea7\u751f\u7684\u8de8\u94fe\u4e8b\u4ef6\u8f6c\u5316\u4e3a\u6807\u51c6\u7684IBTP\u683c\u5f0f\uff0cPier\u901a\u8fc7GetIBTP\u63a5\u53e3\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u518d\u8fdb\u884c\u5904\u7406 GetIBTP () chan * pb . IBTP // Plugin \u8d1f\u8d23\u6267\u884c\u6765\u6e90\u94fe\u8fc7\u6765\u7684\u8de8\u94fe\u8bf7\u6c42\uff0cPier\u8c03\u7528SubmitIBTP\u63d0\u4ea4\u6536\u5230\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 SubmitIBTP ( * pb . IBTP ) ( * pb . SubmitIBTPResponse , error ) // GetOutMessage \u8d1f\u8d23\u5728\u8de8\u94fe\u5408\u7ea6\u4e2d\u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u3002\u67e5\u8be2\u952e\u503c\u4e2dto\u6307\u5b9a\u76ee\u7684\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u6765\u6e90\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 GetOutMessage ( to string , idx uint64 ) ( * pb . IBTP , error ) // GetInMessage \u8d1f\u8d23\u5728\u8de8\u94fe\u5408\u7ea6\u4e2d\u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u3002\u67e5\u8be2\u952e\u503c\u4e2dfrom\u6307\u5b9a\u6765\u6e90\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 GetInMessage ( from string , idx uint64 ) ([][] byte , error ) // GetInMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u76ee\u7684\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219\u53ef\u80fd\u6709\u591a\u6761\u94fe\u548cA\u8fdb\u884c\u8de8\u94fe\uff0c\u5982B->A:3; C->A:5\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u6765\u6e90\u94feID\uff0cvalue\u5bf9\u5e94\u8be5\u6765\u6e90\u94fe\u5df2\u53d1\u9001\u7684\u6700\u65b0\u7684\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 GetInMeta () ( map [ string ] uint64 , error ) // GetOutMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5df2\u53d1\u9001\u5230\u8be5\u76ee\u7684\u94fe\u7684\u6700\u65b0\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 GetOutMeta () ( map [ string ] uint64 , error ) // GetCallbackMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\uff1b\u540c\u65f6\u7531\u4e8e\u8de8\u94fe\u8bf7\u6c42\u4e2d\u652f\u6301\u56de\u8c03\u64cd\u4f5c\uff0c\u5373A->B->A\u4e3a\u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u56de\u8c03\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\uff0c\u5982A->B->:2; A->C\u2014>A:4\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5230\u8be5\u76ee\u7684\u94fe\u6700\u65b0\u7684\u5e26\u56de\u8c03\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:2, C:4}\u3002\uff08\u6ce8\u610f CallbackMeta\u5e8f\u53f7\u53ef\u80fd\u548coutMeta\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u7531A\u53d1\u51fa\u7684\u8de8\u94fe\u8bf7\u6c42\u90e8\u5206\u662f\u6ca1\u6709\u56de\u8c03\u7684\uff09 GetCallbackMeta () ( map [ string ] uint64 , error ) // CommitCallback \u6267\u884c\u5b8cIBTP\u5305\u4e4b\u540e\u8fdb\u884c\u4e00\u4e9b\u56de\u8c03\u64cd\u4f5c\u3002 CommitCallback ( ibtp * pb . IBTP ) error // GetReceipt \u83b7\u53d6\u4e00\u4e2a\u5df2\u88ab\u6267\u884cIBTP\u7684\u56de\u6267 GetReceipt ( ibtp * pb . IBTP ) ( * pb . IBTP , error ) // Name \u63cf\u8ff0Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u7684\u81ea\u5b9a\u4e49\u540d\u79f0\uff0c\u4e00\u822c\u548c\u4e1a\u52a1\u76f8\u5173\uff0c\u5982\u53f8\u6cd5\u94fe\u7b49\u3002 Name () string // Type \u63cf\u8ff0Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u7c7b\u578b\uff0c\u6bd4\u5982Fabric Type () string } \u7a0b\u5e8f\u76ee\u7684 \u672c\u6559\u7a0b\u4ee5\u5f00\u53d1\u4e00\u4e2a\u7b80\u5355\u7684\u8fde\u63a5Fabric\u533a\u5757\u94fe\u7f51\u7edc\u7684Plugin\u4e3a\u4f8b\uff0c\u6700\u7ec8\u7684\u7a0b\u5e8f\u80fd\u591f\u5b9e\u73b0\u4ece\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u83b7\u53d6 Hello World \u4fe1\u606f\u5e76\u8fd4\u56de\u5230\u8de8\u94fe\u5e73\u53f0\u4e2d\u3002 \u5f00\u59cb\u7f16\u5199\u4f60\u7684\u7a0b\u5e8f \u9996\u5148\u9009\u62e9\u4f60\u7684\u5de5\u7a0b\u76ee\u5f55\uff0c\u6309\u7167\u6b63\u5e38\u7684GO\u7a0b\u5e8f\u7684\u6d41\u7a0b\u5efa\u7acb\u9879\u76ee $ go version // \u786e\u8ba4\u4f60\u5b89\u88c5\u7684GO\u7248\u672c $ mkdir ${ YOUR_PROJECT } $ cd ${ YOUR_PROJECT } $ go mod init exmple/fabric-plugin Client\u5bf9\u8c61 \u9996\u5148\u521b\u5efa\u4e00\u4e2a client.go \u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662fPlugin\u7684\u6838\u5fc3\u548c\u5165\u53e3\u3002 \u5728\u8be5\u6587\u4ef6\u4e2d\uff0c\u5e94\u8be5\u5b9a\u4e49\u4f60\u7684Plugin\u5982\u4f55\u83b7\u53d6client \u5b9e\u4f8b\uff0c\u4ee5\u53ca\u5982\u4f55\u542f\u52a8\u548c\u505c\u6b62Plugin\u670d\u52a1\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684Client \u7ed3\u6784\uff0c\u8de8\u94fe\u7f51\u5173\u6700\u7ec8\u62ff\u5230\u7684\u5e94\u8be5\u662f\u8fd9\u4e2a\u7ed3\u6784\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5148\u6765\u770b\u770b\u8fd9\u4e2a\u7ed3\u6784\u4e2d\u90fd\u9700\u8981\u4ec0\u4e48\u3002 \u9996\u5148\u6765\u770b\u770b Client\u81ea\u5b9a\u4e49 \u5177\u4f53\u7ed3\u6784 type Client struct { meta * ContractMeta consumer * Consumer eventC chan * pb . IBTP pierId string name string } type ContractMeta struct { EventFilter string `json:\"event_filter\"` Username string `json:\"username\"` CCID string `json:\"ccid\"` ChannelID string `json:\"channel_id\"` ORG string `json:\"org\"` } meta\uff1aPlugin\u76f4\u63a5\u548c\u8de8\u94fe\u5408\u7ea6\u4ea4\u4e92\uff0c\u9700\u8981\u4fdd\u5b58\u4f60\u7684\u5408\u7ea6\u7684\u4e00\u4e9b\u57fa\u7840\u4fe1\u606f\u3002\u7531\u4e8e\u6211\u4eec\u9700\u8981\u8fde\u63a5\u4e00\u4e2aFabric\u7f51\u7edc\uff0c\u8fd9\u4e9bMeta\u4fe1\u606f\u5305\u62ec Fabric\u4e2d\u8de8\u94fe\u4e8b\u4ef6\u7684\u540d\u79f0\u3001Fabric\u4e2d\u7684\u7528\u6237\u540d\u79f0\u3001Chaincode\u5408\u7ea6\u7684\u540d\u79f0\u3001\u4f60\u7684\u7ec4\u7ec7\u540d\u79f0Org\u4ee5\u53ca\u7ec4\u7ec7\u6240\u5728\u7684channel\u3002 consumer\uff1a\u53ef\u4ee5\u7406\u89e3\u4e3aFabric\u4e0a\u8de8\u94fe\u4e8b\u4ef6\u7684\u201c\u76d1\u542c\u5668\u201d\uff0c\u8fd9\u4e2a\u76d1\u542c\u5668\u4e5f\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7ed3\u6784\uff0c\u5177\u4f53\u7684\u7ed3\u6784\u5728\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002 eventC\uff1a\u4e3a\u8de8\u94fe\u7f51\u5173\u63d0\u4f9b\u8bfb\u53d6\u76d1\u542c\u5230\u7684\u8de8\u94fe\u4e8b\u4ef6\u7684\u901a\u9053\u3002 name\uff1a\u81ea\u5b9a\u7684\u533a\u5757\u94fe\u7684\u540d\u79f0\u3002 pierId\uff1a\u8de8\u94fe\u7f51\u5173\u6ce8\u518c\u5728\u8de8\u94fe\u5e73\u53f0\u4e2d\u540e\u4ea7\u751f\u7684\u552f\u4e00ID\uff0c\u4f5c\u4e3a\u5e94\u7528\u94fe\u7684\u6807\u8bc6\u3002 \u7136\u540e\u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2aClient\u7684\u5b9e\u4f8b\u5316\u7684\u63a5\u53e3\uff08\u7c7b\u4f3c\u4e8e\u6784\u9020\u51fd\u6570\uff09\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a func ( c * Client ) Initialize ( configPath , pierId string , extra [] byte ) error { eventC := make ( chan * pb . IBTP ) // read config from files fabricConfig , err := UnmarshalConfig ( configPath ) if err != nil { return nil , fmt . Errorf ( \"unmarshal config for plugin :%w\" , err ) } // some basic configs about your chaincode contractmeta := & ContractMeta { EventFilter : fabricConfig . EventFilter , Username : fabricConfig . Username , CCID : fabricConfig . CCID , ChannelID : fabricConfig . ChannelId , ORG : fabricConfig . Org , } // handler for listening on inter-chain events posted on your Fabric mgh , err := newFabricHandler ( contractmeta . EventFilter , eventC , pierId ) if err != nil { return err } done := make ( chan bool ) csm , err := NewConsumer ( configPath , contractmeta , mgh , done ) if err != nil { return err } c . consumer = csm c . eventC = eventC c . meta = contractmeta c . pierId = pierId c . name = fabricConfig . Name c . outMeta = m c . ticker = time . NewTicker ( 2 * time . Second ) c . done = done return nil } consumer consumer \u8d1f\u8d23\u76d1\u542c\u533a\u5757\u94fe\u4e0a\u7684\u7531\u8de8\u94fe\u5408\u7ea6\u629b\u51fa\u7684\u8de8\u94fe\u4e8b\u4ef6\u4ee5\u53ca\u548c\u8c03\u7528chaincode\u3002 \u6211\u4eec\u65b0\u5efa ./consumer.go \u6587\u4ef6 type Consumer struct { eventClient * event . Client meta * ContractMeta msgH MessageHandler channelProvider context . ChannelProvider ChannelClient * channel . Client registration fab . Registration ctx chan bool } eventClient\uff1afabric gosdk\u63d0\u4f9b\u7684\u4e8b\u4ef6Client meta Fabric\uff1a\u76f8\u5173\u7684\u53c2\u6570\u4fe1\u606f msgH\uff1a\u4e8b\u4ef6handler\uff0c\u5728\u76d1\u542c\u5230\u6307\u5b9a\u4e8b\u4ef6\u4e4b\u540e\u8d1f\u8d23\u5904\u7406\u7684\u51fd\u6570 channelProvider\uff1afabric gosdk\u63d0\u4f9b\u7684\u548cchaincode\u4ea4\u4e92 ChannelClient\uff1afabric gosdk \u63d0\u4f9b\u7684\u548c\u8c03\u7528chaincode\u7684\u5bf9\u8c61 registeration\uff1afabric gosdk \u63d0\u4f9b\u7684\u8ba2\u9605\u7279\u5b9a\u4e8b\u4ef6\u7684\u5bf9\u8c61 ctx\uff1a\u7528\u6765\u7ed3\u675fconsumer\u7684goroutine Event \u7531\u4e8e\u5728Fabric\u4e0a\u629b\u51fa\u7684\u4e8b\u4ef6\u5185\u5bb9\u662f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff0c\u800c\u8de8\u94fe\u8bf7\u6c42\u8981\u5728\u8de8\u94fe\u5e73\u53f0\u4e0a\u4f20\u9012\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528IBTP\u5305\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u5b9a\u7684\u4ee3\u7801\u6765\u6267\u884c\u8fd9\u79cd\u8f6c\u6362\u3002 \u6211\u4eec\u65b0\u5efa ./event.go \u6587\u4ef6 type Event struct { Index uint64 `json:\"index\"` DstChainID string `json:\"dst_chain_id\"` SrcContractID string `json:\"src_contract_id\"` DstContractID string `json:\"dst_contract_id\"` Func string `json:\"func\"` Args string `json:\"args\"` Argscb string `json:\"argscb\"` Rollback string `json:\"rollback\"` Argsrb string `json:\"argsrb\"` Callback string `json:\"callback\"` Proof [] byte `json:\"proof\"` Extra [] byte `json:\"extra\"` } Event\u7ed3\u6784\u4e5f\u662f\u81ea\u5b9a\u4e49\u7684\uff0c\u9700\u8981\u548c\u5728\u4f60\u7684\u8de8\u94fe\u5408\u7ea6\u4e2d\u629b\u51fa\u7684\u4e8b\u4ef6\u7ed3\u6784\u4e00\u81f4\u3002\u4e00\u4e2a\u8de8\u94fe\u4ea4\u6613\u4e8b\u4ef6\uff0c\u4e00\u822c\u6765\u8bf4\u9700\u8981\u6307\u5b9a\u76ee\u6807\u5e94\u7528\u94fe\u7684ID DstChainID \uff0c\u76ee\u6807\u5e94\u7528\u94fe\u4e0a\u667a\u80fd\u5408\u7ea6\u7684\u5730\u5740\u6216\u8005ID\uff08Fabric\u4e0a\u7684chaincode\u6ca1\u6709\u5408\u7ea6\u5730\u5740\uff09 DstContractID \uff0c\u8fd9\u6b21\u8de8\u94fe\u4ea4\u6613\u7684\u53d1\u8d77\u8005\u7684\u5408\u7ea6\u5730\u5740 SrcContractID \uff0c\u8de8\u94fe\u8c03\u7528\u7684\u51fd\u6570\u540d Func \uff0c\u8be5\u51fd\u6570\u7684\u53c2\u6570 Args \uff0c\u662f\u5426\u6709\u8de8\u94fe\u8c03\u7528\u4e4b\u540e\u8981\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570 Callback \uff0c\u4e3a\u4e86\u8be5\u5e94\u7528\u94fe\u4e0a\u5bf9\u4e8e\u8be5\u4e8b\u4ef6\u7684\u8bc1\u660e Proof \uff0c\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u90e8\u5206 Extra \u3002 \u8bfb\u53d6\u914d\u7f6e Plugin\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u662f\u901a\u8fc7Initialize\u7684\u65b9\u6cd5\u52a8\u6001\u4f20\u5165\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u65b9\u4fbf\u7684\u4fee\u6539\u5173\u4e8e\u4f60\u7684\u533a\u5757\u94fe\u7684\u53c2\u6570\u4fe1\u606f\u3002\u6211\u4eec\u65b0\u5efa\u6587\u4ef6 ./config.go \u6587\u4ef6\uff0c\u8d1f\u8d23\u914d\u7f6e\u8bfb\u53d6\u7684\u6240\u6709\u64cd\u4f5c\u3002 \u8fd9\u91cc\u4f7f\u7528\u7684\u662f github.com/spf13/viper \u5e93\u548cTOML\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u4f60\u719f\u6089\u7684\u5de5\u5177\u6765\u8bfb\u53d6\u914d\u7f6e\u3002 package main import ( \"path/filepath\" \"strings\" \"github.com/spf13/viper\" ) const ( ConfigName = \"fabric.toml\" ) type Fabric struct { Addr string `toml:\"addr\" json:\"addr\"` Name string `toml:\"name\" json:\"name\"` EventFilter string `mapstructure:\"event_filter\" toml:\"event_filter\" json:\"event_filter\"` Username string `toml:\"username\" json:\"username\"` CCID string `toml:\"ccid\" json:\"ccid\"` ChannelId string `mapstructure:\"channel_id\" toml:\"channel_id\" json:\"channel_id\"` Org string `toml:\"org\" json:\"org\"` } func DefaultConfig () * Fabric { return & Fabric { Addr : \"localhost:10053\" , Name : \"fabric\" , EventFilter : \"CrosschainEventName\" , Username : \"Admin\" , CCID : \"Broker-001\" , ChannelId : \"mychannel\" , Org : \"org2\" , } } func UnmarshalConfig ( configPath string ) ( * Fabric , error ) { viper . SetConfigFile ( filepath . Join ( configPath , ConfigName )) viper . SetConfigType ( \"toml\" ) viper . AutomaticEnv () viper . SetEnvPrefix ( \"FABRIC\" ) replacer := strings . NewReplacer ( \".\" , \"_\" ) viper . SetEnvKeyReplacer ( replacer ) if err := viper . ReadInConfig (); err != nil { return nil , err } config := DefaultConfig () if err := viper . Unmarshal ( config ); err != nil { return nil , err } return config , nil } SubmitIBTP \u8be5\u63a5\u53e3\u4e3b\u8981\u8d1f\u8d23\u5c06\u5176\u4ed6\u94fe\u53d1\u9001\u8fc7\u6765\u7684IBTP\u5305\u89e3\u6790\u5e76\u6784\u9020\u6210\u5f53\u524d\u76ee\u7684\u94fe\u7684\u4ea4\u6613\uff0c\u53d1\u9001\u5230\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u5408\u7ea6\u4e2d\u3002 \u5982\u679c\u6765\u6e90\u94fe\u8981\u6c42\u5c06\u672c\u94fe\u8c03\u7528\u5408\u7ea6\u7684\u7ed3\u679c\u8fd4\u56de\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u6784\u9020\u76f8\u5e94\u7684IBTP\u56de\u6267\u53d1\u56de\u6765\u6e90\u94fe\u3002 func ( c * Client ) SubmitIBTP ( ibtp * pb . IBTP ) ( * pb . SubmitIBTPResponse , error ) { pd := & pb . Payload {} ret := & pb . SubmitIBTPResponse {} if err := pd . Unmarshal ( ibtp . Payload ); err != nil { return ret , fmt . Errorf ( \"ibtp payload unmarshal: %w\" , err ) } content := & pb . Content {} if err := content . Unmarshal ( pd . Content ); err != nil { return ret , fmt . Errorf ( \"ibtp content unmarshal: %w\" , err ) } if ibtp . Category () == pb . IBTP_UNKNOWN { return nil , fmt . Errorf ( \"invalid ibtp category\" ) } logger . Info ( \"submit ibtp\" , \"id\" , ibtp . ID (), \"contract\" , content . DstContractId , \"func\" , content . Func ) for i , arg := range content . Args { logger . Info ( \"arg\" , strconv . Itoa ( i ), string ( arg )) } if ibtp . Category () == pb . IBTP_RESPONSE && content . Func == \"\" { logger . Info ( \"InvokeIndexUpdate\" , \"ibtp\" , ibtp . ID ()) _ , resp , err := c . InvokeIndexUpdate ( ibtp . From , ibtp . Index , ibtp . Category ()) if err != nil { return nil , err } ret . Status = resp . OK ret . Message = resp . Message return ret , nil } var result [][] byte var chResp * channel . Response callFunc := CallFunc { Func : content . Func , Args : content . Args , } bizData , err := json . Marshal ( callFunc ) if err != nil { ret . Status = false ret . Message = fmt . Sprintf ( \"marshal ibtp %s func %s and args: %s\" , ibtp . ID (), callFunc . Func , err . Error ()) res , _ , err := c . InvokeIndexUpdate ( ibtp . From , ibtp . Index , ibtp . Category ()) if err != nil { return nil , err } chResp = res } else { res , resp , err := c . InvokeInterchain ( ibtp . From , ibtp . Index , content . DstContractId , ibtp . Category (), bizData ) if err != nil { return nil , fmt . Errorf ( \"invoke interchain for ibtp %s to call %s: %w\" , ibtp . ID (), content . Func , err ) } ret . Status = resp . OK ret . Message = resp . Message // if there is callback function, parse returned value result = util . ToChaincodeArgs ( strings . Split ( string ( resp . Data ), \",\" ) ... ) chResp = res } // If is response IBTP, then simply return if ibtp . Category () == pb . IBTP_RESPONSE { return ret , nil } proof , err := c . getProof ( * chResp ) if err != nil { return ret , err } ret . Result , err = c . generateCallback ( ibtp , result , proof , ret . Status ) if err != nil { return nil , err } return ret , nil } \u7f16\u8bd1\u4f60\u7684Plugin \u6211\u4eec\u91c7\u7528GO\u8bed\u8a00\u63d0\u4f9b\u7684\u63d2\u4ef6\u6a21\u5f0f\uff0c\u5b9e\u73b0Pier\u5bf9\u4e8e\u4f60\u7f16\u5199\u7684Plugin\u7684\u52a8\u6001\u52a0\u8f7d\u3002 MacOS\u548cLinux\u5e73\u53f0\uff1a \u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u80fd\u591f\u5f97\u5230 your_plugin.so \u6587\u4ef6\u3002 $ cd ${ YOUR_PROJECT_PATH } $ go build --buildmode = plugin -o your_plugin.so ./*.go \u5c06\u4f60\u7f16\u5199\u7684\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\uff0c\u653e\u5230Pier\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\uff0c\u914d\u5408\u6211\u4eec\u63d0\u4f9b\u7684Pier\uff0c\u5c31\u80fd\u63a5\u5165\u5230\u8de8\u94fe\u5e73\u53f0\u6765\u3002","title":"\u5e94\u7528\u94fe\u63d2\u4ef6\u7f16\u5199"},{"location":"bitxhub/dev/plugin/#_1","text":"\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u529f\u80fd\u7684 Plugin\u3002\u8fc7\u7a0b\u4e2d\u80fd\u5b66\u4e60\u57fa\u672c\u7684\u6982\u5ff5\u548c\u5177\u4f53\u4f7f\u7528\u7ec6\u8282\u3002\u8be5\u793a\u4f8b\u5c06\u5c55\u793a\u5982\u4f55\u5feb\u901f\u3001\u8f7b\u677e\u5730\u63a5\u5165\u81ea\u5df1\u7684\u533a\u5757\u94fe\u5230\u8de8\u94fe\u5e73\u53f0\u4e2d\u6765\u3002 \u5982\u679c\u4f60\u9700\u8981\u63a5\u5165\u81ea\u5df1\u5f00\u53d1\u7684\u533a\u5757\u94fe\u5230BitXHub\u8de8\u94fe\u5e73\u53f0\u6765\u7684\u8bdd\uff0c\u53ef\u4ee5\u6839\u636e\u4f60\u4eec\u81ea\u5df1\u7684\u533a\u5757\u94fe\u6765\u5b9a\u5236\u5f00\u53d1Plugin\uff0c\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u6765\u52a0\u5165\u5230\u8de8\u94fe\u5e73\u53f0\u3002","title":"\u5e94\u7528\u94fe\u63d2\u4ef6\u7f16\u5199"},{"location":"bitxhub/dev/plugin/#_2","text":"\u5b89\u88c5 go1.13+ \u8bbe\u7f6e\u597d$GOPATH\u7b49\u73af\u5883","title":"\u5f00\u53d1\u8981\u6c42"},{"location":"bitxhub/dev/plugin/#_3","text":"\u91cd\u8981\u6982\u5ff5 Plugin\u63a5\u53e3 \u7a0b\u5e8f\u76ee\u6807 \u5f00\u59cb\u7f16\u5199\u7a0b\u5e8f \u7f16\u8bd1\u4f60\u7684Plugin","title":"\u6559\u7a0b\u7ae0\u8282"},{"location":"bitxhub/dev/plugin/#_4","text":"\u5728\u89e3\u91ca\u5177\u4f53\u7684\u63a5\u53e3\u4e4b\u524d\uff0c\u5148\u660e\u786e\u51e0\u4e2a\u6982\u5ff5\uff1a \u8de8\u94fe\u8bf7\u6c42 \uff1a\u5982\u679c\u6709\u4e24\u6761\u533a\u5757\u94feA\u548cB\uff0cA\u94fe\u9700\u8981\u5411B\u94fe\u53d1\u8d77\u4efb\u4f55\u64cd\u4f5c\uff0c\u9700\u8981\u6309\u7167IBTP\u89c4\u5219\u5411\u4e2d\u7ee7\u94fe\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u5305\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u8de8\u94fe\u8bf7\u6c42A->B\u3002 IBTP\u5305 \uff1a\u6ee1\u8db3IBTP\u7684\u4e00\u4e2apackage\uff0c\u8de8\u94fe\u8bf7\u6c42\u90fd\u9700\u8981\u901a\u8fc7IBTP\u5305\u8fdb\u884c\u3002 \u6765\u6e90\u94fe \uff1a\u5728\u8de8\u94fe\u8bf7\u6c42A->B\u4e2d\uff0cA\u5373\u4e3a\u6765\u6e90\u94fe\u3002 \u76ee\u7684\u94fe \uff1a\u5728\u8de8\u94fe\u8bf7\u6c42A->B\u4e2d\uff0cB\u5373\u4e3a\u76ee\u7684\u94fe\u3002","title":"\u91cd\u8981\u6982\u5ff5"},{"location":"bitxhub/dev/plugin/#plugin","text":"\u4e3a\u4e86\u66f4\u52a0\u4fbf\u6377\u7684\u5f00\u53d1Plugin\u63a5\u5165\u5230Pier\u4e2d\u6765\uff0c\u6211\u4eec\u89c4\u5b9a\u4e86\u4e0b\u9762\u4e00\u4e9b\u5fc5\u8981\u7684\u63a5\u53e3\u3002 type Client interface { // \u521d\u59cb\u5316Plugin\u670d\u52a1 Initialize ( configPath string , pierID string , extra [] byte ) error // \u542f\u52a8Plugin\u670d\u52a1\u7684\u63a5\u53e3 Start () error // \u505c\u6b62Plugin\u670d\u52a1\u7684\u63a5\u53e3 Stop () error // Plugin\u8d1f\u8d23\u5c06\u533a\u5757\u94fe\u4e0a\u4ea7\u751f\u7684\u8de8\u94fe\u4e8b\u4ef6\u8f6c\u5316\u4e3a\u6807\u51c6\u7684IBTP\u683c\u5f0f\uff0cPier\u901a\u8fc7GetIBTP\u63a5\u53e3\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u518d\u8fdb\u884c\u5904\u7406 GetIBTP () chan * pb . IBTP // Plugin \u8d1f\u8d23\u6267\u884c\u6765\u6e90\u94fe\u8fc7\u6765\u7684\u8de8\u94fe\u8bf7\u6c42\uff0cPier\u8c03\u7528SubmitIBTP\u63d0\u4ea4\u6536\u5230\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 SubmitIBTP ( * pb . IBTP ) ( * pb . SubmitIBTPResponse , error ) // GetOutMessage \u8d1f\u8d23\u5728\u8de8\u94fe\u5408\u7ea6\u4e2d\u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u3002\u67e5\u8be2\u952e\u503c\u4e2dto\u6307\u5b9a\u76ee\u7684\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u6765\u6e90\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 GetOutMessage ( to string , idx uint64 ) ( * pb . IBTP , error ) // GetInMessage \u8d1f\u8d23\u5728\u8de8\u94fe\u5408\u7ea6\u4e2d\u67e5\u8be2\u5386\u53f2\u8de8\u94fe\u8bf7\u6c42\u3002\u67e5\u8be2\u952e\u503c\u4e2dfrom\u6307\u5b9a\u6765\u6e90\u94fe\uff0cidx\u6307\u5b9a\u5e8f\u53f7\uff0c\u67e5\u8be2\u7ed3\u679c\u4e3a\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4f5c\u4e3a\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u8bf7\u6c42\u3002 GetInMessage ( from string , idx uint64 ) ([][] byte , error ) // GetInMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u76ee\u7684\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219\u53ef\u80fd\u6709\u591a\u6761\u94fe\u548cA\u8fdb\u884c\u8de8\u94fe\uff0c\u5982B->A:3; C->A:5\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u6765\u6e90\u94feID\uff0cvalue\u5bf9\u5e94\u8be5\u6765\u6e90\u94fe\u5df2\u53d1\u9001\u7684\u6700\u65b0\u7684\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 GetInMeta () ( map [ string ] uint64 , error ) // GetOutMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5df2\u53d1\u9001\u5230\u8be5\u76ee\u7684\u94fe\u7684\u6700\u65b0\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:3, C:5}\u3002 GetOutMeta () ( map [ string ] uint64 , error ) // GetCallbackMeta \u662f\u83b7\u53d6\u8de8\u94fe\u8bf7\u6c42\u76f8\u5173\u7684Meta\u4fe1\u606f\u7684\u63a5\u53e3\u3002\u4ee5Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u4e3a\u6765\u6e90\u94fe\u7684\u4e00\u7cfb\u5217\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\u3002\u5982\u679cPlugin\u8d1f\u8d23A\u94fe\uff0c\u5219A\u53ef\u80fd\u548c\u591a\u6761\u94fe\u8fdb\u884c\u8de8\u94fe\uff0c\u5982A->B:3; A->C:5\uff1b\u540c\u65f6\u7531\u4e8e\u8de8\u94fe\u8bf7\u6c42\u4e2d\u652f\u6301\u56de\u8c03\u64cd\u4f5c\uff0c\u5373A->B->A\u4e3a\u4e00\u6b21\u5b8c\u6574\u7684\u8de8\u94fe\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u56de\u8c03\u8bf7\u6c42\u7684\u5e8f\u53f7\u4fe1\u606f\uff0c\u5982A->B->:2; A->C\u2014>A:4\u3002\u8fd4\u56de\u7684map\u4e2d\uff0ckey\u503c\u4e3a\u76ee\u7684\u94feID\uff0cvalue\u5bf9\u5e94\u5230\u8be5\u76ee\u7684\u94fe\u6700\u65b0\u7684\u5e26\u56de\u8c03\u8de8\u94fe\u8bf7\u6c42\u7684\u5e8f\u53f7\uff0c\u5982{B:2, C:4}\u3002\uff08\u6ce8\u610f CallbackMeta\u5e8f\u53f7\u53ef\u80fd\u548coutMeta\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u7531A\u53d1\u51fa\u7684\u8de8\u94fe\u8bf7\u6c42\u90e8\u5206\u662f\u6ca1\u6709\u56de\u8c03\u7684\uff09 GetCallbackMeta () ( map [ string ] uint64 , error ) // CommitCallback \u6267\u884c\u5b8cIBTP\u5305\u4e4b\u540e\u8fdb\u884c\u4e00\u4e9b\u56de\u8c03\u64cd\u4f5c\u3002 CommitCallback ( ibtp * pb . IBTP ) error // GetReceipt \u83b7\u53d6\u4e00\u4e2a\u5df2\u88ab\u6267\u884cIBTP\u7684\u56de\u6267 GetReceipt ( ibtp * pb . IBTP ) ( * pb . IBTP , error ) // Name \u63cf\u8ff0Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u7684\u81ea\u5b9a\u4e49\u540d\u79f0\uff0c\u4e00\u822c\u548c\u4e1a\u52a1\u76f8\u5173\uff0c\u5982\u53f8\u6cd5\u94fe\u7b49\u3002 Name () string // Type \u63cf\u8ff0Plugin\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u7c7b\u578b\uff0c\u6bd4\u5982Fabric Type () string }","title":"Plugin\u63a5\u53e3"},{"location":"bitxhub/dev/plugin/#_5","text":"\u672c\u6559\u7a0b\u4ee5\u5f00\u53d1\u4e00\u4e2a\u7b80\u5355\u7684\u8fde\u63a5Fabric\u533a\u5757\u94fe\u7f51\u7edc\u7684Plugin\u4e3a\u4f8b\uff0c\u6700\u7ec8\u7684\u7a0b\u5e8f\u80fd\u591f\u5b9e\u73b0\u4ece\u8d1f\u8d23\u7684\u533a\u5757\u94fe\u83b7\u53d6 Hello World \u4fe1\u606f\u5e76\u8fd4\u56de\u5230\u8de8\u94fe\u5e73\u53f0\u4e2d\u3002","title":"\u7a0b\u5e8f\u76ee\u7684"},{"location":"bitxhub/dev/plugin/#_6","text":"\u9996\u5148\u9009\u62e9\u4f60\u7684\u5de5\u7a0b\u76ee\u5f55\uff0c\u6309\u7167\u6b63\u5e38\u7684GO\u7a0b\u5e8f\u7684\u6d41\u7a0b\u5efa\u7acb\u9879\u76ee $ go version // \u786e\u8ba4\u4f60\u5b89\u88c5\u7684GO\u7248\u672c $ mkdir ${ YOUR_PROJECT } $ cd ${ YOUR_PROJECT } $ go mod init exmple/fabric-plugin","title":"\u5f00\u59cb\u7f16\u5199\u4f60\u7684\u7a0b\u5e8f"},{"location":"bitxhub/dev/plugin/#client","text":"\u9996\u5148\u521b\u5efa\u4e00\u4e2a client.go \u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662fPlugin\u7684\u6838\u5fc3\u548c\u5165\u53e3\u3002 \u5728\u8be5\u6587\u4ef6\u4e2d\uff0c\u5e94\u8be5\u5b9a\u4e49\u4f60\u7684Plugin\u5982\u4f55\u83b7\u53d6client \u5b9e\u4f8b\uff0c\u4ee5\u53ca\u5982\u4f55\u542f\u52a8\u548c\u505c\u6b62Plugin\u670d\u52a1\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684Client \u7ed3\u6784\uff0c\u8de8\u94fe\u7f51\u5173\u6700\u7ec8\u62ff\u5230\u7684\u5e94\u8be5\u662f\u8fd9\u4e2a\u7ed3\u6784\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5148\u6765\u770b\u770b\u8fd9\u4e2a\u7ed3\u6784\u4e2d\u90fd\u9700\u8981\u4ec0\u4e48\u3002 \u9996\u5148\u6765\u770b\u770b Client\u81ea\u5b9a\u4e49 \u5177\u4f53\u7ed3\u6784 type Client struct { meta * ContractMeta consumer * Consumer eventC chan * pb . IBTP pierId string name string } type ContractMeta struct { EventFilter string `json:\"event_filter\"` Username string `json:\"username\"` CCID string `json:\"ccid\"` ChannelID string `json:\"channel_id\"` ORG string `json:\"org\"` } meta\uff1aPlugin\u76f4\u63a5\u548c\u8de8\u94fe\u5408\u7ea6\u4ea4\u4e92\uff0c\u9700\u8981\u4fdd\u5b58\u4f60\u7684\u5408\u7ea6\u7684\u4e00\u4e9b\u57fa\u7840\u4fe1\u606f\u3002\u7531\u4e8e\u6211\u4eec\u9700\u8981\u8fde\u63a5\u4e00\u4e2aFabric\u7f51\u7edc\uff0c\u8fd9\u4e9bMeta\u4fe1\u606f\u5305\u62ec Fabric\u4e2d\u8de8\u94fe\u4e8b\u4ef6\u7684\u540d\u79f0\u3001Fabric\u4e2d\u7684\u7528\u6237\u540d\u79f0\u3001Chaincode\u5408\u7ea6\u7684\u540d\u79f0\u3001\u4f60\u7684\u7ec4\u7ec7\u540d\u79f0Org\u4ee5\u53ca\u7ec4\u7ec7\u6240\u5728\u7684channel\u3002 consumer\uff1a\u53ef\u4ee5\u7406\u89e3\u4e3aFabric\u4e0a\u8de8\u94fe\u4e8b\u4ef6\u7684\u201c\u76d1\u542c\u5668\u201d\uff0c\u8fd9\u4e2a\u76d1\u542c\u5668\u4e5f\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7ed3\u6784\uff0c\u5177\u4f53\u7684\u7ed3\u6784\u5728\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002 eventC\uff1a\u4e3a\u8de8\u94fe\u7f51\u5173\u63d0\u4f9b\u8bfb\u53d6\u76d1\u542c\u5230\u7684\u8de8\u94fe\u4e8b\u4ef6\u7684\u901a\u9053\u3002 name\uff1a\u81ea\u5b9a\u7684\u533a\u5757\u94fe\u7684\u540d\u79f0\u3002 pierId\uff1a\u8de8\u94fe\u7f51\u5173\u6ce8\u518c\u5728\u8de8\u94fe\u5e73\u53f0\u4e2d\u540e\u4ea7\u751f\u7684\u552f\u4e00ID\uff0c\u4f5c\u4e3a\u5e94\u7528\u94fe\u7684\u6807\u8bc6\u3002 \u7136\u540e\u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2aClient\u7684\u5b9e\u4f8b\u5316\u7684\u63a5\u53e3\uff08\u7c7b\u4f3c\u4e8e\u6784\u9020\u51fd\u6570\uff09\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a func ( c * Client ) Initialize ( configPath , pierId string , extra [] byte ) error { eventC := make ( chan * pb . IBTP ) // read config from files fabricConfig , err := UnmarshalConfig ( configPath ) if err != nil { return nil , fmt . Errorf ( \"unmarshal config for plugin :%w\" , err ) } // some basic configs about your chaincode contractmeta := & ContractMeta { EventFilter : fabricConfig . EventFilter , Username : fabricConfig . Username , CCID : fabricConfig . CCID , ChannelID : fabricConfig . ChannelId , ORG : fabricConfig . Org , } // handler for listening on inter-chain events posted on your Fabric mgh , err := newFabricHandler ( contractmeta . EventFilter , eventC , pierId ) if err != nil { return err } done := make ( chan bool ) csm , err := NewConsumer ( configPath , contractmeta , mgh , done ) if err != nil { return err } c . consumer = csm c . eventC = eventC c . meta = contractmeta c . pierId = pierId c . name = fabricConfig . Name c . outMeta = m c . ticker = time . NewTicker ( 2 * time . Second ) c . done = done return nil }","title":"Client\u5bf9\u8c61"},{"location":"bitxhub/dev/plugin/#consumer","text":"consumer \u8d1f\u8d23\u76d1\u542c\u533a\u5757\u94fe\u4e0a\u7684\u7531\u8de8\u94fe\u5408\u7ea6\u629b\u51fa\u7684\u8de8\u94fe\u4e8b\u4ef6\u4ee5\u53ca\u548c\u8c03\u7528chaincode\u3002 \u6211\u4eec\u65b0\u5efa ./consumer.go \u6587\u4ef6 type Consumer struct { eventClient * event . Client meta * ContractMeta msgH MessageHandler channelProvider context . ChannelProvider ChannelClient * channel . Client registration fab . Registration ctx chan bool } eventClient\uff1afabric gosdk\u63d0\u4f9b\u7684\u4e8b\u4ef6Client meta Fabric\uff1a\u76f8\u5173\u7684\u53c2\u6570\u4fe1\u606f msgH\uff1a\u4e8b\u4ef6handler\uff0c\u5728\u76d1\u542c\u5230\u6307\u5b9a\u4e8b\u4ef6\u4e4b\u540e\u8d1f\u8d23\u5904\u7406\u7684\u51fd\u6570 channelProvider\uff1afabric gosdk\u63d0\u4f9b\u7684\u548cchaincode\u4ea4\u4e92 ChannelClient\uff1afabric gosdk \u63d0\u4f9b\u7684\u548c\u8c03\u7528chaincode\u7684\u5bf9\u8c61 registeration\uff1afabric gosdk \u63d0\u4f9b\u7684\u8ba2\u9605\u7279\u5b9a\u4e8b\u4ef6\u7684\u5bf9\u8c61 ctx\uff1a\u7528\u6765\u7ed3\u675fconsumer\u7684goroutine","title":"consumer"},{"location":"bitxhub/dev/plugin/#event","text":"\u7531\u4e8e\u5728Fabric\u4e0a\u629b\u51fa\u7684\u4e8b\u4ef6\u5185\u5bb9\u662f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff0c\u800c\u8de8\u94fe\u8bf7\u6c42\u8981\u5728\u8de8\u94fe\u5e73\u53f0\u4e0a\u4f20\u9012\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528IBTP\u5305\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u5b9a\u7684\u4ee3\u7801\u6765\u6267\u884c\u8fd9\u79cd\u8f6c\u6362\u3002 \u6211\u4eec\u65b0\u5efa ./event.go \u6587\u4ef6 type Event struct { Index uint64 `json:\"index\"` DstChainID string `json:\"dst_chain_id\"` SrcContractID string `json:\"src_contract_id\"` DstContractID string `json:\"dst_contract_id\"` Func string `json:\"func\"` Args string `json:\"args\"` Argscb string `json:\"argscb\"` Rollback string `json:\"rollback\"` Argsrb string `json:\"argsrb\"` Callback string `json:\"callback\"` Proof [] byte `json:\"proof\"` Extra [] byte `json:\"extra\"` } Event\u7ed3\u6784\u4e5f\u662f\u81ea\u5b9a\u4e49\u7684\uff0c\u9700\u8981\u548c\u5728\u4f60\u7684\u8de8\u94fe\u5408\u7ea6\u4e2d\u629b\u51fa\u7684\u4e8b\u4ef6\u7ed3\u6784\u4e00\u81f4\u3002\u4e00\u4e2a\u8de8\u94fe\u4ea4\u6613\u4e8b\u4ef6\uff0c\u4e00\u822c\u6765\u8bf4\u9700\u8981\u6307\u5b9a\u76ee\u6807\u5e94\u7528\u94fe\u7684ID DstChainID \uff0c\u76ee\u6807\u5e94\u7528\u94fe\u4e0a\u667a\u80fd\u5408\u7ea6\u7684\u5730\u5740\u6216\u8005ID\uff08Fabric\u4e0a\u7684chaincode\u6ca1\u6709\u5408\u7ea6\u5730\u5740\uff09 DstContractID \uff0c\u8fd9\u6b21\u8de8\u94fe\u4ea4\u6613\u7684\u53d1\u8d77\u8005\u7684\u5408\u7ea6\u5730\u5740 SrcContractID \uff0c\u8de8\u94fe\u8c03\u7528\u7684\u51fd\u6570\u540d Func \uff0c\u8be5\u51fd\u6570\u7684\u53c2\u6570 Args \uff0c\u662f\u5426\u6709\u8de8\u94fe\u8c03\u7528\u4e4b\u540e\u8981\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570 Callback \uff0c\u4e3a\u4e86\u8be5\u5e94\u7528\u94fe\u4e0a\u5bf9\u4e8e\u8be5\u4e8b\u4ef6\u7684\u8bc1\u660e Proof \uff0c\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u90e8\u5206 Extra \u3002","title":"Event"},{"location":"bitxhub/dev/plugin/#_7","text":"Plugin\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u662f\u901a\u8fc7Initialize\u7684\u65b9\u6cd5\u52a8\u6001\u4f20\u5165\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u65b9\u4fbf\u7684\u4fee\u6539\u5173\u4e8e\u4f60\u7684\u533a\u5757\u94fe\u7684\u53c2\u6570\u4fe1\u606f\u3002\u6211\u4eec\u65b0\u5efa\u6587\u4ef6 ./config.go \u6587\u4ef6\uff0c\u8d1f\u8d23\u914d\u7f6e\u8bfb\u53d6\u7684\u6240\u6709\u64cd\u4f5c\u3002 \u8fd9\u91cc\u4f7f\u7528\u7684\u662f github.com/spf13/viper \u5e93\u548cTOML\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u4f60\u719f\u6089\u7684\u5de5\u5177\u6765\u8bfb\u53d6\u914d\u7f6e\u3002 package main import ( \"path/filepath\" \"strings\" \"github.com/spf13/viper\" ) const ( ConfigName = \"fabric.toml\" ) type Fabric struct { Addr string `toml:\"addr\" json:\"addr\"` Name string `toml:\"name\" json:\"name\"` EventFilter string `mapstructure:\"event_filter\" toml:\"event_filter\" json:\"event_filter\"` Username string `toml:\"username\" json:\"username\"` CCID string `toml:\"ccid\" json:\"ccid\"` ChannelId string `mapstructure:\"channel_id\" toml:\"channel_id\" json:\"channel_id\"` Org string `toml:\"org\" json:\"org\"` } func DefaultConfig () * Fabric { return & Fabric { Addr : \"localhost:10053\" , Name : \"fabric\" , EventFilter : \"CrosschainEventName\" , Username : \"Admin\" , CCID : \"Broker-001\" , ChannelId : \"mychannel\" , Org : \"org2\" , } } func UnmarshalConfig ( configPath string ) ( * Fabric , error ) { viper . SetConfigFile ( filepath . Join ( configPath , ConfigName )) viper . SetConfigType ( \"toml\" ) viper . AutomaticEnv () viper . SetEnvPrefix ( \"FABRIC\" ) replacer := strings . NewReplacer ( \".\" , \"_\" ) viper . SetEnvKeyReplacer ( replacer ) if err := viper . ReadInConfig (); err != nil { return nil , err } config := DefaultConfig () if err := viper . Unmarshal ( config ); err != nil { return nil , err } return config , nil }","title":"\u8bfb\u53d6\u914d\u7f6e"},{"location":"bitxhub/dev/plugin/#submitibtp","text":"\u8be5\u63a5\u53e3\u4e3b\u8981\u8d1f\u8d23\u5c06\u5176\u4ed6\u94fe\u53d1\u9001\u8fc7\u6765\u7684IBTP\u5305\u89e3\u6790\u5e76\u6784\u9020\u6210\u5f53\u524d\u76ee\u7684\u94fe\u7684\u4ea4\u6613\uff0c\u53d1\u9001\u5230\u76ee\u7684\u94fe\u7684\u8de8\u94fe\u5408\u7ea6\u4e2d\u3002 \u5982\u679c\u6765\u6e90\u94fe\u8981\u6c42\u5c06\u672c\u94fe\u8c03\u7528\u5408\u7ea6\u7684\u7ed3\u679c\u8fd4\u56de\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u6784\u9020\u76f8\u5e94\u7684IBTP\u56de\u6267\u53d1\u56de\u6765\u6e90\u94fe\u3002 func ( c * Client ) SubmitIBTP ( ibtp * pb . IBTP ) ( * pb . SubmitIBTPResponse , error ) { pd := & pb . Payload {} ret := & pb . SubmitIBTPResponse {} if err := pd . Unmarshal ( ibtp . Payload ); err != nil { return ret , fmt . Errorf ( \"ibtp payload unmarshal: %w\" , err ) } content := & pb . Content {} if err := content . Unmarshal ( pd . Content ); err != nil { return ret , fmt . Errorf ( \"ibtp content unmarshal: %w\" , err ) } if ibtp . Category () == pb . IBTP_UNKNOWN { return nil , fmt . Errorf ( \"invalid ibtp category\" ) } logger . Info ( \"submit ibtp\" , \"id\" , ibtp . ID (), \"contract\" , content . DstContractId , \"func\" , content . Func ) for i , arg := range content . Args { logger . Info ( \"arg\" , strconv . Itoa ( i ), string ( arg )) } if ibtp . Category () == pb . IBTP_RESPONSE && content . Func == \"\" { logger . Info ( \"InvokeIndexUpdate\" , \"ibtp\" , ibtp . ID ()) _ , resp , err := c . InvokeIndexUpdate ( ibtp . From , ibtp . Index , ibtp . Category ()) if err != nil { return nil , err } ret . Status = resp . OK ret . Message = resp . Message return ret , nil } var result [][] byte var chResp * channel . Response callFunc := CallFunc { Func : content . Func , Args : content . Args , } bizData , err := json . Marshal ( callFunc ) if err != nil { ret . Status = false ret . Message = fmt . Sprintf ( \"marshal ibtp %s func %s and args: %s\" , ibtp . ID (), callFunc . Func , err . Error ()) res , _ , err := c . InvokeIndexUpdate ( ibtp . From , ibtp . Index , ibtp . Category ()) if err != nil { return nil , err } chResp = res } else { res , resp , err := c . InvokeInterchain ( ibtp . From , ibtp . Index , content . DstContractId , ibtp . Category (), bizData ) if err != nil { return nil , fmt . Errorf ( \"invoke interchain for ibtp %s to call %s: %w\" , ibtp . ID (), content . Func , err ) } ret . Status = resp . OK ret . Message = resp . Message // if there is callback function, parse returned value result = util . ToChaincodeArgs ( strings . Split ( string ( resp . Data ), \",\" ) ... ) chResp = res } // If is response IBTP, then simply return if ibtp . Category () == pb . IBTP_RESPONSE { return ret , nil } proof , err := c . getProof ( * chResp ) if err != nil { return ret , err } ret . Result , err = c . generateCallback ( ibtp , result , proof , ret . Status ) if err != nil { return nil , err } return ret , nil }","title":"SubmitIBTP"},{"location":"bitxhub/dev/plugin/#plugin_1","text":"\u6211\u4eec\u91c7\u7528GO\u8bed\u8a00\u63d0\u4f9b\u7684\u63d2\u4ef6\u6a21\u5f0f\uff0c\u5b9e\u73b0Pier\u5bf9\u4e8e\u4f60\u7f16\u5199\u7684Plugin\u7684\u52a8\u6001\u52a0\u8f7d\u3002 MacOS\u548cLinux\u5e73\u53f0\uff1a \u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u80fd\u591f\u5f97\u5230 your_plugin.so \u6587\u4ef6\u3002 $ cd ${ YOUR_PROJECT_PATH } $ go build --buildmode = plugin -o your_plugin.so ./*.go \u5c06\u4f60\u7f16\u5199\u7684\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\uff0c\u653e\u5230Pier\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\uff0c\u914d\u5408\u6211\u4eec\u63d0\u4f9b\u7684Pier\uff0c\u5c31\u80fd\u63a5\u5165\u5230\u8de8\u94fe\u5e73\u53f0\u6765\u3002","title":"\u7f16\u8bd1\u4f60\u7684Plugin"},{"location":"bitxhub/dev/rule/","text":"\u9a8c\u8bc1\u89c4\u5219 BitXHub\u7684\u9a8c\u8bc1\u5f15\u64ce\u7684\u89c4\u5219\u9664\u4e86\u5185\u7f6e\u7684\u89c4\u5219\u4ee5\u5916\u4e3b\u8981\u662f\u901a\u8fc7WASM\u5b57\u8282\u7801\u6765\u8fd0\u884c\u903b\u8f91\u7684\u3002\u8be5\u6587\u6863\u5c06\u4f1a\u4ee5rust\u4e3a\u4f8b\u8bf4\u660e\u9a8c\u8bc1\u89c4\u5219\u7684\u7f16\u5199\u65b9\u6cd5\u3002 1. \u4e0b\u8f7d\u89c4\u5219\u6a21\u677f \u5728GitHub\u7684BitXHub\u9879\u76ee\u5df2\u7ecf\u63d0\u4f9b\u4e86\u89c4\u5219\u7f16\u5199 \u6a21\u677f \uff0c\u7528\u6237\u53ef\u4ee5\u4e0b\u8f7d\u8fd9\u4e2a\u6a21\u677f\u7136\u540e\u5bf9\u6a21\u677f\u8fdb\u884c\u6539\u9020\u6765\u5f62\u6210\u81ea\u5df1\u6240\u5e0c\u671b\u8fd0\u884c\u7684\u89c4\u5219\u903b\u8f91\u3002 2. \u89c4\u5219\u6a21\u677f\u7684\u76ee\u5f55\u7ed3\u6784 . \u251c\u2500\u2500 Cargo.toml \u2514\u2500\u2500 src \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 contract.rs \u2502 \u2514\u2500\u2500 mod.rs \u251c\u2500\u2500 crypto \u2502 \u251c\u2500\u2500 ecdsa.rs \u2502 \u251c\u2500\u2500 fabric.rs \u2502 \u2514\u2500\u2500 mod.rs \u251c\u2500\u2500 lib.rs \u251c\u2500\u2500 memory.rs \u2514\u2500\u2500 model \u251c\u2500\u2500 mod.rs \u2514\u2500\u2500 transaction.rs \u4ece\u4e0a\u9762\u7684\u76ee\u5f55\u7ed3\u6784\u56fe\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9664\u53bbrust\u9879\u76ee\u81ea\u5df1\u672c\u8eab\u81ea\u5e26\u7684Cargo.toml\u6587\u4ef6\u4ee5\u5916\u4e86\uff0c\u76ee\u5f55\u7684\u6e90\u7801\u76ee\u5f55src\u4e0b\u9762\u6709\u4e09\u4e2a\u6587\u4ef6\u5939\u548c\u4e24\u4e2ars\u6587\u4ef6\uff0c\u5176\u4e2dlib.rs\u6587\u4ef6\u5b58\u653e\u7740\u80fd\u591f\u88abwasm\u865a\u62df\u673aexport\u8bc6\u522b\u7684\u51fd\u6570\uff0c\u5728\u89c4\u5219\u7f16\u5199\u4e2d\u7528\u6237\u4e0d\u9700\u8981\u7406\u4f1a\u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u662f\u7531\u6a21\u677f\u81ea\u5df1\u9884\u5148\u7f16\u5199\u597d\u7684\u80fd\u591f\u8bfb\u53d6\u5916\u90e8\u8f93\u5165\u53c2\u6570\u7684\u51fd\u6570\u3002\u8fd8\u6709\u5c31\u662fmemory.rs\u8fd9\u4e2a\u6587\u4ef6\u662f\u6a21\u677f\u7528\u6765\u5904\u7406wasm\u865a\u62df\u673a\u7684\u5b57\u7b26\u4e32\u548c\u5b57\u8282\u6570\u7ec4\u8f93\u5165\u8f93\u51fa\u4f7f\u7528\u7684\uff0c\u4e5f\u662f\u7528\u6237\u4e0d\u9700\u8981\u7406\u4f1a\u7684\u6587\u4ef6\u3002 \u9664\u4e86\u4e0a\u8ff0\u7684\u4e24\u4e2ars\u6587\u4ef6\uff0c\u8fd8\u6709\u4e09\u4e2a\u6587\u4ef6\u5939\uff0c\u5206\u522b\u662fapp, crypto\u4ee5\u53camodel\u3002model\u6587\u4ef6\u5939\u53ef\u4ee5\u8ba9\u7528\u6237\u5b58\u653e\u4e00\u4e9b\u4ed6\u4eec\u89c4\u5219\u903b\u8f91\u4e2d\u9700\u8981\u4f7f\u7528\u7684\u6570\u636e\u539f\u578b\uff0c\u5728\u6a21\u677f\u5f53\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86fabric\u7684ChaincodeAction\u7684proto\u4f5c\u4e3a\u6570\u636e\u539f\u578b\u4f5c\u4e3a\u4f8b\u5b50\u6765\u5c55\u73b0\u5982\u4f55\u5f15\u7528\u6216\u8005\u5b9a\u4e49\u81ea\u5df1\u7684\u6570\u636e\u6a21\u578b\u3002\u518d\u5176\u6b21\u662fcrypto\u5e93\uff0c\u5728BitXHub\u7684\u89c4\u5212\u4e2d\u4f1a\u9010\u6e10\u4e30\u5bcc\u80fd\u591f\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u65b9\u4fbf\u4f7f\u7528\u7684\u5bc6\u7801\u5e93\uff0c\u8fd9\u6837\u80fd\u591f\u8ba9\u7528\u6237\u66f4\u65b9\u4fbf\u7684\u8c03\u7528\u52a0\u5bc6\u51fd\u6570\u6765\u7f16\u5199\u81ea\u5df1\u7684\u9a8c\u8bc1\u903b\u8f91\u3002 \u9664\u4e86\u4e0a\u8ff0\u7684\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u6574\u4e2a\u5408\u7ea6\u6a21\u677f\u6700\u91cd\u8981\u7684\u5c31\u662fapp\u8fd9\u4e2a\u76ee\u5f55\uff0c\u7528\u6237\u4e3b\u8981\u9700\u8981\u7f16\u5199\u7684\u6587\u4ef6\u4e5f\u662f\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e2d\uff0c\u5176\u4e2dapp\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684contract.rs\u7684\u6587\u4ef6\u5c31\u662f\u7528\u6237\u7f16\u5199\u9a8c\u8bc1\u89c4\u5219\u903b\u8f91\u7684\u6587\u4ef6\u3002 pub fn verify ( proof : & [ u8 ], validator : & [ u8 ], payload : & [ u8 ]) -> bool { return true } \u5728\u6a21\u677f\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u5c31\u662f\u7528\u6237\u9700\u8981\u8fdb\u884c\u903b\u8f91\u7f16\u5199\u7684\u5730\u65b9\uff0c\u5176\u4e2d\u8be5\u51fd\u6570\u7684\u8f93\u5165\u7531\u4e09\u4e2a\u53c2\u6570\u7ec4\u6210\uff1aproof, validator\u548cpayload\uff0c\u90fd\u662f\u5b57\u8282\u6570\u7ec4\uff0c\u7528\u6237\u76f4\u63a5\u53ef\u4ee5\u7528\u8fd9\u4e09\u4e2a\u53c2\u6570\u5b8c\u6210\u81ea\u5df1\u7684\u9a8c\u8bc1\u903b\u8f91\u3002\u5982\u4f55\u7528proof, validator\u548cpayload\u8fdb\u884c\u9a8c\u8bc1\u5c31\u770b\u5e94\u7528\u94fe\u81ea\u5df1\u662f\u5982\u4f55\u6765\u89c4\u5b9a\u81ea\u5df1\u7684\u9a8c\u8bc1\u903b\u8f91\u7684\u3002 \u4ee5\u6700\u7b80\u5355\u7684\u692d\u5706\u66f2\u7ebf\u9a8c\u8bc1\u4e3a\u4f8b\uff0c\u5728\u6a21\u677f\u5e93\u91cc\u9762\u63d0\u4f9b\u4e86\u4e00\u4e2aecdsa\u7684\u51fd\u6570\uff1a fn ecdsa_verify ( sig_ptr : i64 , digest_ptr : i64 , pubkey_ptr : i64 , opt : i32 ) -> i32 ; \u5982\u679c\u6211\u4eec\u7684\u9a8c\u8bc1\u903b\u8f91\u662fproof\u5c31\u662fecdsa\u4e2d\u7684\u7b7e\u540d\uff0cpayload\u5c31\u662fecdsa\u4e2d\u7684digest\uff0c\u7136\u540evalidator\u5c31\u662f\u516c\u94a5\uff0c\u90a3\u4e48\u9a8c\u8bc1\u903b\u8f91\u5c31\u53ef\u4ee5\u7b80\u5355\u5199\u6210\uff1a pub fn verify ( proof : & [ u8 ], validator : & [ u8 ], payload : & [ u8 ]) -> bool { return ecdsa :: verify ( & proof , & payload , & validator , ecdsa :: EcdsaAlgorithmn :: P256 , ); } \u66f4\u52a0\u590d\u6742\u7684\u903b\u8f91\u5c31\u7559\u7ed9\u7528\u6237\u81ea\u5df1\u6765\u5b9e\u73b0\u3002 3. \u7f16\u8bd1\u4ee3\u7801\u6210\u4e3aWASM\u5b57\u8282\u7801 \u4e0b\u9762\u6765\u4ecb\u7ecd\u5982\u4f55\u7528rust\u5c06\u4ee3\u7801\u7f16\u8bd1\u6210\u7b80\u6d01\u7684wasm\u5b57\u8282\u7801\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u6dfb\u52a0rust\u7684nightly\u7248\u672c\uff1a rustup toolchain install nightly \u66f4\u65b0rust\uff1a rustup update \u6dfb\u52a0\u9700\u8981\u7684\u76ee\u6807\u5de5\u5177\u94fe\uff1a rustup target add wasm32-unknown-unknown --toolchain nightly \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u7f16\u8bd1\u6211\u4eec\u7684\u9879\u76ee\u4e86\uff1a cargo +nightly build --target wasm32-unknown-unknown --release \u6211\u4eec\u7f16\u8bd1\u51fa\u6765\u7684wasm\u5b57\u8282\u7801\u5c06\u4f1a\u5728target/wasm32-unknown-unknown/release\u4e0b\u9762\uff0c\u6ce8\u610f\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u7f16\u8bd1\u51fa\u6765\u7684wasm\u5b57\u8282\u7801\u7684\u5927\u5c0f\u662f\u975e\u5e38\u5927\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u7cbe\u7b80\u4e00\u4e0b\uff0c\u9996\u5148\u4e0b\u8f7d\u5de5\u5177wasm-gc cargo install --git https://github.com/alexcrichton/wasm-gc \u7136\u540e\u4f7f\u7528wasm-gc\u8fdb\u884c\u7cbe\u7b80\uff1a wasm-gc xxx.wasm small-xxx.wasm \u83b7\u53d6\u7684small-xxx.wasm\u5c31\u662f\u53ef\u4ee5\u90e8\u7f72\u5230\u4e2d\u7ee7\u94fe\u7684\u9a8c\u8bc1\u89c4\u5219\u3002","title":"\u9a8c\u8bc1\u89c4\u5219\u7f16\u5199"},{"location":"bitxhub/dev/rule/#_1","text":"BitXHub\u7684\u9a8c\u8bc1\u5f15\u64ce\u7684\u89c4\u5219\u9664\u4e86\u5185\u7f6e\u7684\u89c4\u5219\u4ee5\u5916\u4e3b\u8981\u662f\u901a\u8fc7WASM\u5b57\u8282\u7801\u6765\u8fd0\u884c\u903b\u8f91\u7684\u3002\u8be5\u6587\u6863\u5c06\u4f1a\u4ee5rust\u4e3a\u4f8b\u8bf4\u660e\u9a8c\u8bc1\u89c4\u5219\u7684\u7f16\u5199\u65b9\u6cd5\u3002","title":"\u9a8c\u8bc1\u89c4\u5219"},{"location":"bitxhub/dev/rule/#1","text":"\u5728GitHub\u7684BitXHub\u9879\u76ee\u5df2\u7ecf\u63d0\u4f9b\u4e86\u89c4\u5219\u7f16\u5199 \u6a21\u677f \uff0c\u7528\u6237\u53ef\u4ee5\u4e0b\u8f7d\u8fd9\u4e2a\u6a21\u677f\u7136\u540e\u5bf9\u6a21\u677f\u8fdb\u884c\u6539\u9020\u6765\u5f62\u6210\u81ea\u5df1\u6240\u5e0c\u671b\u8fd0\u884c\u7684\u89c4\u5219\u903b\u8f91\u3002","title":"1. \u4e0b\u8f7d\u89c4\u5219\u6a21\u677f"},{"location":"bitxhub/dev/rule/#2","text":". \u251c\u2500\u2500 Cargo.toml \u2514\u2500\u2500 src \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 contract.rs \u2502 \u2514\u2500\u2500 mod.rs \u251c\u2500\u2500 crypto \u2502 \u251c\u2500\u2500 ecdsa.rs \u2502 \u251c\u2500\u2500 fabric.rs \u2502 \u2514\u2500\u2500 mod.rs \u251c\u2500\u2500 lib.rs \u251c\u2500\u2500 memory.rs \u2514\u2500\u2500 model \u251c\u2500\u2500 mod.rs \u2514\u2500\u2500 transaction.rs \u4ece\u4e0a\u9762\u7684\u76ee\u5f55\u7ed3\u6784\u56fe\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9664\u53bbrust\u9879\u76ee\u81ea\u5df1\u672c\u8eab\u81ea\u5e26\u7684Cargo.toml\u6587\u4ef6\u4ee5\u5916\u4e86\uff0c\u76ee\u5f55\u7684\u6e90\u7801\u76ee\u5f55src\u4e0b\u9762\u6709\u4e09\u4e2a\u6587\u4ef6\u5939\u548c\u4e24\u4e2ars\u6587\u4ef6\uff0c\u5176\u4e2dlib.rs\u6587\u4ef6\u5b58\u653e\u7740\u80fd\u591f\u88abwasm\u865a\u62df\u673aexport\u8bc6\u522b\u7684\u51fd\u6570\uff0c\u5728\u89c4\u5219\u7f16\u5199\u4e2d\u7528\u6237\u4e0d\u9700\u8981\u7406\u4f1a\u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u662f\u7531\u6a21\u677f\u81ea\u5df1\u9884\u5148\u7f16\u5199\u597d\u7684\u80fd\u591f\u8bfb\u53d6\u5916\u90e8\u8f93\u5165\u53c2\u6570\u7684\u51fd\u6570\u3002\u8fd8\u6709\u5c31\u662fmemory.rs\u8fd9\u4e2a\u6587\u4ef6\u662f\u6a21\u677f\u7528\u6765\u5904\u7406wasm\u865a\u62df\u673a\u7684\u5b57\u7b26\u4e32\u548c\u5b57\u8282\u6570\u7ec4\u8f93\u5165\u8f93\u51fa\u4f7f\u7528\u7684\uff0c\u4e5f\u662f\u7528\u6237\u4e0d\u9700\u8981\u7406\u4f1a\u7684\u6587\u4ef6\u3002 \u9664\u4e86\u4e0a\u8ff0\u7684\u4e24\u4e2ars\u6587\u4ef6\uff0c\u8fd8\u6709\u4e09\u4e2a\u6587\u4ef6\u5939\uff0c\u5206\u522b\u662fapp, crypto\u4ee5\u53camodel\u3002model\u6587\u4ef6\u5939\u53ef\u4ee5\u8ba9\u7528\u6237\u5b58\u653e\u4e00\u4e9b\u4ed6\u4eec\u89c4\u5219\u903b\u8f91\u4e2d\u9700\u8981\u4f7f\u7528\u7684\u6570\u636e\u539f\u578b\uff0c\u5728\u6a21\u677f\u5f53\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86fabric\u7684ChaincodeAction\u7684proto\u4f5c\u4e3a\u6570\u636e\u539f\u578b\u4f5c\u4e3a\u4f8b\u5b50\u6765\u5c55\u73b0\u5982\u4f55\u5f15\u7528\u6216\u8005\u5b9a\u4e49\u81ea\u5df1\u7684\u6570\u636e\u6a21\u578b\u3002\u518d\u5176\u6b21\u662fcrypto\u5e93\uff0c\u5728BitXHub\u7684\u89c4\u5212\u4e2d\u4f1a\u9010\u6e10\u4e30\u5bcc\u80fd\u591f\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u65b9\u4fbf\u4f7f\u7528\u7684\u5bc6\u7801\u5e93\uff0c\u8fd9\u6837\u80fd\u591f\u8ba9\u7528\u6237\u66f4\u65b9\u4fbf\u7684\u8c03\u7528\u52a0\u5bc6\u51fd\u6570\u6765\u7f16\u5199\u81ea\u5df1\u7684\u9a8c\u8bc1\u903b\u8f91\u3002 \u9664\u4e86\u4e0a\u8ff0\u7684\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u6574\u4e2a\u5408\u7ea6\u6a21\u677f\u6700\u91cd\u8981\u7684\u5c31\u662fapp\u8fd9\u4e2a\u76ee\u5f55\uff0c\u7528\u6237\u4e3b\u8981\u9700\u8981\u7f16\u5199\u7684\u6587\u4ef6\u4e5f\u662f\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e2d\uff0c\u5176\u4e2dapp\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684contract.rs\u7684\u6587\u4ef6\u5c31\u662f\u7528\u6237\u7f16\u5199\u9a8c\u8bc1\u89c4\u5219\u903b\u8f91\u7684\u6587\u4ef6\u3002 pub fn verify ( proof : & [ u8 ], validator : & [ u8 ], payload : & [ u8 ]) -> bool { return true } \u5728\u6a21\u677f\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u5c31\u662f\u7528\u6237\u9700\u8981\u8fdb\u884c\u903b\u8f91\u7f16\u5199\u7684\u5730\u65b9\uff0c\u5176\u4e2d\u8be5\u51fd\u6570\u7684\u8f93\u5165\u7531\u4e09\u4e2a\u53c2\u6570\u7ec4\u6210\uff1aproof, validator\u548cpayload\uff0c\u90fd\u662f\u5b57\u8282\u6570\u7ec4\uff0c\u7528\u6237\u76f4\u63a5\u53ef\u4ee5\u7528\u8fd9\u4e09\u4e2a\u53c2\u6570\u5b8c\u6210\u81ea\u5df1\u7684\u9a8c\u8bc1\u903b\u8f91\u3002\u5982\u4f55\u7528proof, validator\u548cpayload\u8fdb\u884c\u9a8c\u8bc1\u5c31\u770b\u5e94\u7528\u94fe\u81ea\u5df1\u662f\u5982\u4f55\u6765\u89c4\u5b9a\u81ea\u5df1\u7684\u9a8c\u8bc1\u903b\u8f91\u7684\u3002 \u4ee5\u6700\u7b80\u5355\u7684\u692d\u5706\u66f2\u7ebf\u9a8c\u8bc1\u4e3a\u4f8b\uff0c\u5728\u6a21\u677f\u5e93\u91cc\u9762\u63d0\u4f9b\u4e86\u4e00\u4e2aecdsa\u7684\u51fd\u6570\uff1a fn ecdsa_verify ( sig_ptr : i64 , digest_ptr : i64 , pubkey_ptr : i64 , opt : i32 ) -> i32 ; \u5982\u679c\u6211\u4eec\u7684\u9a8c\u8bc1\u903b\u8f91\u662fproof\u5c31\u662fecdsa\u4e2d\u7684\u7b7e\u540d\uff0cpayload\u5c31\u662fecdsa\u4e2d\u7684digest\uff0c\u7136\u540evalidator\u5c31\u662f\u516c\u94a5\uff0c\u90a3\u4e48\u9a8c\u8bc1\u903b\u8f91\u5c31\u53ef\u4ee5\u7b80\u5355\u5199\u6210\uff1a pub fn verify ( proof : & [ u8 ], validator : & [ u8 ], payload : & [ u8 ]) -> bool { return ecdsa :: verify ( & proof , & payload , & validator , ecdsa :: EcdsaAlgorithmn :: P256 , ); } \u66f4\u52a0\u590d\u6742\u7684\u903b\u8f91\u5c31\u7559\u7ed9\u7528\u6237\u81ea\u5df1\u6765\u5b9e\u73b0\u3002","title":"2. \u89c4\u5219\u6a21\u677f\u7684\u76ee\u5f55\u7ed3\u6784"},{"location":"bitxhub/dev/rule/#3-wasm","text":"\u4e0b\u9762\u6765\u4ecb\u7ecd\u5982\u4f55\u7528rust\u5c06\u4ee3\u7801\u7f16\u8bd1\u6210\u7b80\u6d01\u7684wasm\u5b57\u8282\u7801\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u6dfb\u52a0rust\u7684nightly\u7248\u672c\uff1a rustup toolchain install nightly \u66f4\u65b0rust\uff1a rustup update \u6dfb\u52a0\u9700\u8981\u7684\u76ee\u6807\u5de5\u5177\u94fe\uff1a rustup target add wasm32-unknown-unknown --toolchain nightly \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u7f16\u8bd1\u6211\u4eec\u7684\u9879\u76ee\u4e86\uff1a cargo +nightly build --target wasm32-unknown-unknown --release \u6211\u4eec\u7f16\u8bd1\u51fa\u6765\u7684wasm\u5b57\u8282\u7801\u5c06\u4f1a\u5728target/wasm32-unknown-unknown/release\u4e0b\u9762\uff0c\u6ce8\u610f\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u7f16\u8bd1\u51fa\u6765\u7684wasm\u5b57\u8282\u7801\u7684\u5927\u5c0f\u662f\u975e\u5e38\u5927\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u7cbe\u7b80\u4e00\u4e0b\uff0c\u9996\u5148\u4e0b\u8f7d\u5de5\u5177wasm-gc cargo install --git https://github.com/alexcrichton/wasm-gc \u7136\u540e\u4f7f\u7528wasm-gc\u8fdb\u884c\u7cbe\u7b80\uff1a wasm-gc xxx.wasm small-xxx.wasm \u83b7\u53d6\u7684small-xxx.wasm\u5c31\u662f\u53ef\u4ee5\u90e8\u7f72\u5230\u4e2d\u7ee7\u94fe\u7684\u9a8c\u8bc1\u89c4\u5219\u3002","title":"3. \u7f16\u8bd1\u4ee3\u7801\u6210\u4e3aWASM\u5b57\u8282\u7801"},{"location":"bitxhub/dev/validator/","text":"\u9a8c\u8bc1\u8005\u4fe1\u606f\u751f\u6210 1. \u4ec0\u4e48\u662f\u9a8c\u8bc1\u8005\u4fe1\u606f \u9a8c\u8bc1\u8005\u4fe1\u606f\u662f\u5e94\u7528\u94fe\u63a5\u5165\u4e2d\u7ee7\u94fe\u540e\u7528\u6765\u9a8c\u8bc1\u4ea4\u6613\u5b58\u5728\u6027\u548c\u6709\u6548\u6027\u7684\u91cd\u8981\u51ed\u8bc1\uff0c\u5e38\u89c1\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u53ef\u4ee5\u5305\u542b\u5e94\u7528\u94fe\u80cc\u4e66\u8282\u70b9\u7684\u8bc1\u4e66\u6216\u8005\u516c\u79c1\u94a5\u3002 \u5e94\u7528\u94fe\u7684\u7ba1\u7406\u5458\u9700\u8981\u6839\u636e\u63a5\u5165\u5e94\u7528\u94fe\u7684\u7c7b\u578b\u548c\u7279\u6027\uff0c\u751f\u6210\u80fd\u591f\u9a8c\u8bc1\u81ea\u5df1\u5e94\u7528\u94fe\u8de8\u94fe\u4ea4\u6613\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\uff0c\u4e0b\u9762\u6211\u4eec\u4f1a\u4ee5Fabric\u548cHyperchain\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u751f\u6210\u9a8c\u8bc1\u8005\u4fe1\u606f\u3002 2. Fabric\u9a8c\u8bc1\u8005\u4fe1\u606f\u7684\u751f\u6210 2.1 Fabric\u7684\u9a8c\u8bc1\u903b\u8f91 Fabric\u5bf9\u4e8e\u667a\u80fd\u5408\u7ea6\u7684\u6267\u884c\u662f\u5728\u80cc\u4e66\u8282\u70b9\u4e0a\u8fdb\u884c\u7684\uff0c\u6bcf\u4e00\u4e2a\u80cc\u4e66\u8282\u70b9\u90fd\u4f1a\u6a21\u62df\u6267\u884cchaincode\uff0c\u5728\u6a21\u62df\u6267\u884c\u5b8cchaincode\u4e4b\u540e\uff0c\u80cc\u4e66\u8282\u70b9\u4f1a\u5bf9\u6a21\u62df\u7684\u7ed3\u679c\u548c\u629b\u51fa\u7684\u4e8b\u4ef6\u8fdb\u884c\u5c01\u88c5\uff0c\u4e4b\u540e\u518d\u8fdb\u884c\u7b7e\u540d\u80cc\u4e66\u3002\u6700\u540e\u5c06\u80cc\u4e66\u7ed3\u679c\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\u5ba2\u6237\u7aef\u5728\u5bf9\u6bd4\u6a21\u62df\u6267\u884c\u7684\u7ed3\u679c\u4e4b\u540e\u5c06\u80cc\u4e66\u7ed3\u679c\u53d1\u7ed9orderer\u8282\u70b9\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u5728\u63d0\u4ea4\u9636\u6bb5\u4f1a\u629b\u51fachaincode\u7684\u4e8b\u4ef6\u3002 2.1.1 Fabric\u7684\u5b58\u50a8\u7ed3\u6784 ProcessedTransaction\uff08\u4f4d\u4e8efaric-protos-go->peer->transaction.pb.go\uff09\u5373Fabric\u5b58\u50a8\u7684\u5df2\u7ecf\u5904\u7406\u7684\u4ea4\u6613\u7ed3\u6784\u3002\u5176\u4e2d\u5305\u542bTransactionEnvelope\u548cValidationCode\u4e24\u4e2a\u4e3b\u8981\u7684\u5143\u7d20\u3002 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 TransactionEnvelope *common.Envelope \u4ea4\u6613\u4fe1\u5c01\uff0c\u5b58\u50a8\u5904\u7406\u8fc7\u7684\u4ea4\u6613\u4fe1\u606f ValidationCode int32 \u662f\u5426\u9a8c\u8bc1 Envelop(\u4f4d\u4e8efaric-protos-go->common->common.pb.go)\u5373\u5b58\u50a8\u5728\u533a\u5757\u4e2d\u4e00\u6761\u4ea4\u6613\u7684\u6570\u636e\u7ed3\u6784\u3002\u5176\u4e2dPayload\uff08\u4f4d\u4e8efaric-protos-go->common->common.pb.go\uff09\u901a\u8fc7\u89e3\u6790\u53ef\u4ee5\u5206\u89e3\u6210Header\u548cData\u3002 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 Payload []byte \u4ea4\u6613\u4fe1\u606f\u7684byte\u6570\u7ec4\uff0c\u53ef\u4ee5\u89e3\u6790\u4e3a\u4e0b\u9762\u7684Payload Signature []byte \u5bf9Payload\u7684\u7b7e\u540d \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 Header *Header \u8eab\u4efd\u4fe1\u606f\uff0c\u9632\u6b62\u91cd\u590d Data []byte \u53ef\u4ee5\u89e3\u6790\u4e3a\u4e0b\u9762\u7684Transaction \u5176\u4e2dData\u5219\u662f\u5b58\u50a8\u7684Transaction\uff08\u4f4d\u4e8efaric-protos-go->peer->transaction.pb.go\uff09\u7684\u4fe1\u606f\u3002\u4e00\u4e2aTransaction\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2aActions\u3002 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 Actions []*TransactionAction TransactionAction\u7684\u6570\u7ec4\uff0cTransactionAction\u7ed3\u6784\u5982\u4e0b \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 Header []byte proposal\u7684header Payload []byte \u53ef\u4ee5\u89e3\u6790\u6210\u4e0b\u9762\u7684ChaincodeActionPayload\u7ed3\u6784 TransactionAction\u4e2d\u7684Payload\u53ef\u4ee5\u89e3\u6790\u6210ChaincodeActionPayload\uff08\u4f4d\u4e8efaric-protos-go->peer->transaction.pb.go\uff09\u3002 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 ChaincodeProposalPayload []byte \u5b58\u50a8chanicode\u7684proposal\u7684\u4fe1\u606f Action *ChaincodeEndorsedAction Chaincode\u6267\u884c\u7ed3\u679c \u5176\u4e2dChaincodeProposalPayload\u53ef\u4ee5\u89e3\u6790\u6210ChaincodeProposalPayload\uff08\u4f4d\u4e8earic-protos-go->peer->proposal.pb.go\uff09\u3002 \u5176\u4e2dAction\u5219\u662fChaincodeEndorsedAction\uff08\u4f4d\u4e8efaric-protos-go->peer->transaction.pb.go\uff09 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 ProposalResponsePayload []byte \u5b58\u50a8chaincode\u6267\u884c\u7ed3\u679c Endorsements []*Endorsement \u80cc\u4e66\u4fe1\u606f \u5bf9\u4e8eProposalResponsePayload\uff0c\u5219\u53ef\u4ee5\u89e3\u6790\u6210\u4e3aProposalResponsePayload(\u4f4d\u4e8efaric-protos-go->peer->proposal_response.pb.go) \u5bf9\u4e8eEndorsements\uff0c\u5219\u662fEndorsement\u7684\u6570\u7ec4\uff0c\u6bcf\u4e00\u4e2aproposal\u90fd\u4f1a\u6709chaincode\u89c4\u5b9a\u7684\u80cc\u4e66\u8282\u70b9\u4eec\u8fdb\u884c\u7b7e\u540d\uff0cEndorsement\u7684\u7ed3\u6784\u5982\u4e0b\uff1a 2.1.2 Pier\u83b7\u53d6\u9a8c\u8bc1\u4fe1\u606f \u6839\u636e\u4e0a\u8ff0\u7684\u4ea4\u6613\u7ed3\u6784\u4f53\uff0cPier\u53ef\u4ee5\u6839\u636e\u4ea4\u6613\u7684\u54c8\u5e0c\u67e5\u8be2\u5230\u76f8\u5e94\u7684\u4ea4\u6613\uff0c\u5e76\u4ece\u7ed3\u6784\u4f53\u4e2d\u62ff\u5230\u4e2d\u7ee7\u94fe\u9700\u8981\u9a8c\u8bc1\u7684Proof\u5b57\u6bb5\u3002 l , err := ledger . New ( c . consumer . channelProvider ) if err != nil { return nil , err } t , err := l . QueryTransaction ( response . TransactionID ) if err != nil { return nil , err } pd := & common . Payload {} if err := proto . Unmarshal ( t . TransactionEnvelope . Payload , pd ); err != nil { return nil , err } pt := & peer . Transaction {} if err := proto . Unmarshal ( pd . Data , pt ); err != nil { return nil , err } return pt . Actions [ 0 ]. Payload , nil // => this is proof 2.1.3 BitXHub\u9a8c\u8bc1 BitXHub\u5728\u63a5\u53d7\u5230Pier\u53d1\u6765\u7684\u8de8\u94fe\u7684\u8bf7\u6c42\u65f6\uff0c\u4f1a\u89e3\u6790\u8bf7\u6c42\u7684\u7ed3\u6784\uff0c\u6821\u9a8cProposalResponse\u7684\u7b7e\u540d\uff0c\u5e76\u4e14\u6bd4\u5bf9Body\u7684\u5185\u5bb9\u662f\u5426\u548cProposalResponse\u89e3\u6790\u51fa\u6765\u7684\u4e00\u81f4\uff0c\u5982\u679c\u4e0a\u9762\u7684\u9636\u6bb5\u7ed3\u679c\u90fd\u4e00\u81f4\uff0c\u5219\u4ee3\u8868\u6821\u9a8c\u6210\u529f\u3002 2.2 Fabric\u7684\u590d\u6742\u80cc\u4e66 2.2.1 Fabric\u7684\u80cc\u4e66\u6d41\u7a0b Fabric\u7684\u80cc\u4e66\u4e3b\u8981\u662f \u9a8c\u8bc1 Endorser \u8282\u70b9\u5bf9\u4ea4\u6613\u7684\u7b7e\u540d \u9a8c\u8bc1\u662f\u5426\u6709\u8db3\u591f\u6570\u91cf\u7684\u8282\u70b9\u5bf9\u4ea4\u6613\u80cc\u4e66 \u80cc\u4e66\u4fe1\u606f\u6765\u81ea\u6307\u5b9a\u6e90 2.2.2 \u5b9e\u4f53\u7684\u5b9a\u4e49 \u4e00\u4e2a\u5b9e\u4f53\u7531 MSP \u4e0e ROLE \u5b9a\u4e49\uff0c\u5373\u67d0\u4e2a\u7ec4\u7ec7\u5185\u7684\u67d0\u4e2a\u89d2\u8272\u3002\u5176\u4e2dROLE\u652f\u6301\u56db\u79cd client, peer, admin, member\u3002\u4f8b\u5982 Org0.admin \u8868\u793a Org0 \u8fd9\u4e2a MSP \u4e0b\u7684\u4efb\u610f\u7ba1\u7406\u5458; Org1.member \u8868\u793a Org1 \u8fd9\u4e2a MSP \u4e0b\u7684\u4efb\u610f\u6210\u5458\u3002 2.2.3 \u8868\u8fbe\u5f0f Endorsement Policy \u7684\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b\u6240\u793a\u3002 EXPR \u53ef\u4ee5\u662f\u662f AND \u6216\u8005 OR \u903b\u8f91\u7b26\u3002E \u662f\u5b9e\u4f53\u6216\u8005\u5d4c\u5957\u7684\u8868\u8fbe\u5f0f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fFabric\u6682\u65f6\u53ea\u652f\u63011-of-N\u548cMAX-of-N\u3002 // \u57fa\u7840\u8868\u8fbe\u5f0f\u5f62\u5f0f EXPR ( E [, E ... ]) // \u9700\u8981\u4e09\u4e2a\u5b9e\u4f53\u90fd\u63d0\u4f9b\u7b7e\u540d AND ( ' Org1 . member ' , ' Org2 . member ' , ' Org3 . member ' ) // \u9700\u8981\u4e24\u4e2a\u5b9e\u4f53\u4efb\u4e00\u63d0\u4f9b\u7b7e\u540d OR ( ' Org1 . member ' , ' Org2 . member ' ) // \u9700\u8981Org1\u7684admin\u63d0\u4f9b\u7b7e\u540d\uff0c\u6216\u8005Org2\uff0cOrg3\u7684member\u540c\u65f6\u63d0\u4f9b\u7b7e\u540d OR ( ' Org1 . admin ' , AND ( ' Org2 . member ' , ' Org3 . member ' )) 2.2.4 \u9a8c\u8bc1\u5f15\u64ce\u7684\u9a8c\u8bc1 \u9a8c\u8bc1\u5f15\u64ce\u6839\u636e\u5e94\u7528\u94fe\u6ce8\u518c\u65f6\u63d0\u4f9b\u7684\u9a8c\u8bc1\u540d\u5355\u8fdb\u884c\u80cc\u4e66\u9a8c\u8bc1\u3002Fabric\u6240\u9700\u8981\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u65f6\u4e00\u4e2amap\uff0ckey\u4e3a\u80cc\u4e66\u8282\u70b9\u7684mspid\uff0cvalue\u4e3a\u80cc\u4e66\u8282\u70b9\u7684\u8ddf\u8bc1\u4e66\u3002 \u53ef\u4ee5\u770b\u5230\u590d\u6742\u9a8c\u8bc1\u89c4\u5219\u4e2d\u6709AND\u548cOR\u7684\u89c4\u5219\uff0c\u6839\u636eFabric\u7684\u7279\u6027\uff0c\u80cc\u4e66\u7b56\u7565\u5728chaincode\u90e8\u7f72\u4ee5\u540e\u53ef\u4ee5\u5347\u7ea7\uff0c\u6240\u4ee5\u8003\u8651\u5230\u9a8c\u8bc1\u89c4\u5219\u7684\u5347\u7ea7\uff0c\u5bf9\u590d\u6742\u89c4\u5219\u7684\u5224\u65ad\u4e5f\u9700\u8981\u5199\u5728\u5408\u7ea6\u4e2d\u3002\u5408\u7ea6\u4e2d\u9700\u8981\u5bf9\u4ee5\u4e0b\u51e0\u6b65\u8fdb\u884c\u9a8c\u8bc1\u3002 \u9996\u5148\u662f\u5bf9\u7b7e\u540d\u6570\u91cf\u9a8c\u8bc1\uff0c\u6bd4\u5982\u5bf9\u4e8e AND('Org1.member', 'Org2.member', 'Org3.member') \uff0c\u5982\u679c\u80cc\u4e66\u6570\u7ec4\u7684\u957f\u5ea6\u5c0f\u4e8e3\uff0c\u5373\u53ef\u76f4\u63a5\u9a73\u56de\u3002 \u5982\u679c\u6570\u91cf\u5bf9\u7b49\uff0c\u5219\u8fdb\u884c\u9010\u4e00\u6821\u9a8c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u62ff\u5230endorser\u7684id\u4ee5\u540e\uff0c\u9700\u8981\u901a\u8fc7key\u503c\u627e\u5230\u4e8b\u5148\u5b58\u50a8\u5728BitXHub\u4e2d\u7684\u8ddf\u8bc1\u4e66\u4fe1\u606f\uff0c\u518d\u5bf9pier\u53d1\u8fc7\u6765\u7684endorser\u7684\u8bc1\u4e66\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6bd4\u5bf9\u4e00\u81f4\u4ee5\u540e\u518d\u8fdb\u884c\u9a8c\u7b7e\u3002 2.2.5 \u667a\u80fd\u5408\u7ea6\u5e93 BitXHub\u63d0\u4f9b\u4e86\u80cc\u4e66\u7b56\u7565\u7684\u667a\u80fd\u5408\u7ea6\u5e93\uff0c\u5f53\u90e8\u7f72\u9a8c\u8bc1\u5408\u7ea6\u65f6\uff0c\u53ea\u8981\u5c06\u80cc\u4e66\u7b56\u7565\u7684\u8868\u8fbe\u5f0f\u5373\u53ef\u5b8c\u6210\u5bf9\u80cc\u4e66\u7b56\u7565\u7684\u58f0\u660e\uff0c\u5f53\u4e00\u7b14\u8de8\u94fe\u4ea4\u6613\u7ecf\u8fc7\u9a8c\u8bc1\u5f15\u64ce\u65f6\uff0c\u9a8c\u8bc1\u5f15\u64ce\u4f1a\u6839\u636e\u90e8\u7f72\u7684\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u7684\u8c03\u7528\u5185\u7f6e\u7684\u80cc\u4e66\u7b56\u7565\u5e93\uff0c\u5bf9\u9a8c\u8bc1\u8005\u4fe1\u606f\u8fdb\u884c\u5408\u6f14\u7b5b\u9009\u3002 2.3. \u9a8c\u8bc1\u5f15\u64ce\u5bf9Fabric\u7684\u9a8c\u8bc1\u6d41\u7a0b 2.3.1 \u5e94\u7528\u94fe\u6ce8\u518c \u5e94\u7528\u94fe\u5728\u6ce8\u518c\u5230BitXHub\u65f6\u9700\u8981\u63d0\u4ea4\u9a8c\u8bc1\u8005\u7684\u4fe1\u606f\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5c06Fabric\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u4ee5json\u7684\u683c\u5f0f\u63d0\u4ea4\u5230BitXHub\u8fdb\u884c\u6ce8\u518c\u3002\u4e3b\u8981\u5206\u4e3a\u4e0b\u9762\u4e09\u4e2a\u5b57\u6bb5\uff1a \u8bc1\u4e66\u4fe1\u606f\uff1a\u8bc1\u4e66\u4fe1\u606f\u4e3aFabric\u7684msp\u4fe1\u606f\uff0c\u5305\u542b\u4e86\u673a\u6784\u3001\u6210\u5458\u3001\u89d2\u8272\u4ee5\u53ca\u8bc1\u4e66\u7684\u4fe1\u606f\u3002\u662fmsp.MSP\u7684\u6570\u7ec4\u3002 \u80cc\u4e66\u7b56\u7565\u7684byte\u7684\u6570\u7ec4\u3002\u901a\u8fc7Fabric\u7684cauthdsl.FromString()\u51fd\u6570\u751f\u6210\u7684\u7b56\u7565\u5b57\u8282\u6570\u7ec4 chaincode\u7684id\uff0c\u7528\u6765\u9a8c\u8bc1\u4ea4\u6613\u662f\u7531\u89c4\u5b9a\u7684chaincode\u53d1\u51fa\u7684\u3002 2.3.2 \u5e94\u7528\u94fe\u53d1\u9001\u8de8\u94fe\u4ea4\u6613 \u5e94\u7528\u94fe\u4f1a\u901a\u8fc7IBTP\u534f\u8bae\u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u5230BitXHub\uff0cBitXHub\u9700\u8981\u5bf9IBTP\u4e2d\u7684Proof\u5b57\u6bb5\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4ece\u800c\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\u3002\u5bf9\u4e8eFabric\u6765\u8bf4Proof\u5b57\u6bb5\u7684\u5185\u5bb9\u4e3a\u4ea4\u6613\u7ed3\u6784\u4e2dTransaction.Actions[0].Payload\u3002Pier\u8282\u70b9\u5c06\u8fd9\u4e2a\u4f5c\u4e3aProof\u5b57\u6bb5\u5c01\u88c5\u5230IBTP\u7136\u540e\u53d1\u9001\u7ed9BitXHub\u3002 2.3.3 \u9a8c\u8bc1Proof \u9a8c\u8bc1\u5f15\u64ce\u63d0\u4f9b\u4e86\u4e13\u95e8\u7ed9Fabric\u7684wasm\u9a8c\u8bc1\u5e93\u4ece\u800c\u7b80\u4fbfwasm\u5408\u7ea6\u7684\u7f16\u5199\u3002 1\uff09 \u9996\u5148\u9700\u8981\u4eceproof\u5b57\u6bb5\u4e2d\u62bd\u53d6\u51fa\u4ea4\u6613\u7ed3\u6784\uff0c\u7136\u540e\u5bf9\u4ea4\u6613\u7ed3\u6784\u4e2d\u7684chaincode\u7684id\u8fdb\u884c\u6821\u9a8c\uff0c\u53ea\u6709\u548c\u6ce8\u518c\u65f6\u8868\u660e\u7684chaincode\u7684id\u76f8\u7b26\u5408\u624d\u80fd\u7ee7\u7eed\u8fdb\u884c\u9a8c\u8bc1\u3002 2\uff09 \u4ece\u4ea4\u6613\u7ed3\u6784\u4e2d\u62bd\u53d6\u51fa\u7b7e\u540d\u96c6\uff0c\u7b7e\u540d\u96c6\u662f\u6307\u591a\u4e2a\u80cc\u4e66\u8282\u70b9\u5bf9proposal\u80cc\u4e66\u5f62\u6210\u7684\u7b7e\u540d\u7684\u96c6\u5408\u3002 3\uff09 \u5c06\u5e94\u7528\u94fe\u6ce8\u518c\u65f6\u4f20\u5165\u7684Fabric\u7684msp\u7684\u914d\u7f6e\u4f20\u5165\u7b56\u7565\u751f\u6210\u5668\uff0c\u83b7\u53d6\u53ef\u4ee5\u9a8c\u8bc1\u5f53\u524d\u5e94\u7528\u94fe\u7684msp\u7684\u7b56\u7565\u9a8c\u8bc1\u5de5\u5177\u3002 3\uff09 \u5c06\u7b7e\u540d\u96c6\u548c\u9a8c\u8bc1\u7b56\u7565\u4f20\u5165\u5230\u7b56\u7565\u9a8c\u8bc1\u5de5\u5177\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6ca1\u6709\u9519\u8bef\u5373\u4e3a\u9a8c\u8bc1\u6210\u529f\u3002 2.4. Fabric\u9a8c\u8bc1\u8005\u4fe1\u606f\u751f\u6210 Fabric\u9a8c\u8bc1\u8005\u4fe1\u606f\u7684\u751f\u6210\u4e3b\u8981\u662f\u901a\u8fc7Fabric\u7684\u9a8c\u8bc1\u4ee3\u7801\u6765\u5b9e\u73b0\uff0c\u6211\u4eec\u83b7\u53d6\u4e86Fabric\u9a8c\u8bc1\u4ea4\u6613\u6240\u9700\u8981\u7684\u4e00\u4e0b\u4fe1\u606f\u6765\u4e3a\u6211\u4eec\u9a8c\u8bc1Fabric\u8de8\u94fe\u4ea4\u6613\u63d0\u4f9b\u53c2\u6570\u4fe1\u606f\u3002 channelProvider : = sdk . ChannelContext ( meta . ChannelID , fabsdk . WithUser ( meta . Username ), fabsdk . WithOrg ( meta . ORG )) channelClient , err : = channel . New ( channelProvider ) if err != nil { return nil , fmt . Errorf ( \"create channel fabcli fail: %s \\n \" , err . Error ()) } l , err : = ledger . New ( channelProvider ) if err != nil { return nil , err } // Get Fabric Channel Config conf , err : = l . QueryConfig () if err != nil { return nil , err } // Generate Policy Bytes policy , err : = cauthdsl . FromString ( \"AND('Org2MSP.peer', 'Org1MSP.peer')\" ) if err != nil { return nil , err } pBytes , err : = proto . Marshal ( policy ) if err != nil { return nil , err } if err : = ioutil . WriteFile ( \"policy\" , [] byte ( string ( pBytes )), 777 ); err != nil { return nil , err } validator : = & Validator { Cid : meta . CCID , ChainId : \"\" , Policy : string ( pBytes ), } // Generate MSP config bytes var confStrs [] string for i , value : = range conf . MSPs () { confStrs = append ( confStrs , value . String ()) err : = ioutil . WriteFile ( \"conf\" + strconv . Itoa ( i ), [] byte ( value . String ()), 777 ) if err != nil { return nil , err } } validator . ConfByte = confStrs validatorBytes , err : = json . Marshal ( validator ) if err != nil { return nil , err } if err : = ioutil . WriteFile ( \"validator\" , validatorBytes , 777 ); err != nil { return nil , err } \u901a\u8fc7\u4e0a\u9762\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8f93\u51fa\u7684\u201dvalidator\"\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u6240\u9700\u8981\u7684Fabric\u9a8c\u8bc1\u8005\u4fe1\u606f 3. Hyperchain\u9a8c\u8bc1\u8005\u4fe1\u606f\u7684\u751f\u6210 \u5bf9\u4e8eHyperchain\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u9a8c\u8bc1\u76f8\u5bf9\u4e8eFabric\u6765\u8bf4\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0cHyperchain\u7684\u4ea4\u6613\u662f\u7531\u591a\u4e2a\u8282\u70b9\u7684\u591a\u7b7e\u6765\u786e\u8ba4\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6784\u5efaHyperchain\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u65f6\u53ef\u4ee5\u5c06\u53c2\u4e0e\u591a\u7b7e\u7684\u51e0\u4e2a\u8282\u70b9\u7684\u516c\u94a5\u4f5c\u4e3a\u6570\u7ec4\u5199\u5165\u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u3002\u9a8c\u8bc1\u89c4\u5219\u5c31\u662f\u5c06\u4ea4\u6613\u4e2d\u7684\u591a\u4e2a\u7b7e\u540d\u7528\u8fd9\u4e2a\u516c\u94a5\u6570\u7ec4\u7ec4\u6210\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u6765\u8fdb\u884c\u9a8c\u8bc1\u3002 4. \u5176\u4ed6\u5e94\u7528\u94fe\u9a8c\u8bc1\u8005\u4fe1\u606f\u7684\u751f\u6210 \u6839\u636e\u4e0a\u9762\u7684\u4e24\u4e2a\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u9a8c\u8bc1\u8005\u4fe1\u606f\u751f\u6210\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5982\u4f55\u6784\u5efa\u80fd\u591f\u9a8c\u8bc1\u5e94\u7528\u94fe\u4e0a\u94fe\u4ea4\u6613\u7684\u51ed\u8bc1\uff0c\u5bf9\u4e8e\u5176\u4ed6\u5e94\u7528\u94fe\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u53ea\u8981\u6784\u5efa\u51fa\u8fd9\u6837\u7684\u51ed\u8bc1\u4ee5\u53ca\u5bf9\u5e94\u7684\u901a\u8fc7\u8be5\u51ed\u8bc1\u6765\u9a8c\u8bc1\u4ea4\u6613\u7684\u903b\u8f91\uff08\u5373\u9a8c\u8bc1\u89c4\u5219\uff09\u5c31\u53ef\u4ee5\u5c06\u81ea\u5df1\u7684\u5e94\u7528\u94fe\u63a5\u5165\u5230\u4e2d\u7ee7\u94fe\u4e2d\u8fdb\u884c\u5b89\u5168\u6709\u4fdd\u8bc1\u7684\u8de8\u94fe\u4ea4\u6613\u4e86\u3002","title":"\u9a8c\u8bc1\u8005\u4fe1\u606f\u751f\u6210"},{"location":"bitxhub/dev/validator/#_1","text":"","title":"\u9a8c\u8bc1\u8005\u4fe1\u606f\u751f\u6210"},{"location":"bitxhub/dev/validator/#1","text":"\u9a8c\u8bc1\u8005\u4fe1\u606f\u662f\u5e94\u7528\u94fe\u63a5\u5165\u4e2d\u7ee7\u94fe\u540e\u7528\u6765\u9a8c\u8bc1\u4ea4\u6613\u5b58\u5728\u6027\u548c\u6709\u6548\u6027\u7684\u91cd\u8981\u51ed\u8bc1\uff0c\u5e38\u89c1\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u53ef\u4ee5\u5305\u542b\u5e94\u7528\u94fe\u80cc\u4e66\u8282\u70b9\u7684\u8bc1\u4e66\u6216\u8005\u516c\u79c1\u94a5\u3002 \u5e94\u7528\u94fe\u7684\u7ba1\u7406\u5458\u9700\u8981\u6839\u636e\u63a5\u5165\u5e94\u7528\u94fe\u7684\u7c7b\u578b\u548c\u7279\u6027\uff0c\u751f\u6210\u80fd\u591f\u9a8c\u8bc1\u81ea\u5df1\u5e94\u7528\u94fe\u8de8\u94fe\u4ea4\u6613\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\uff0c\u4e0b\u9762\u6211\u4eec\u4f1a\u4ee5Fabric\u548cHyperchain\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u751f\u6210\u9a8c\u8bc1\u8005\u4fe1\u606f\u3002","title":"1. \u4ec0\u4e48\u662f\u9a8c\u8bc1\u8005\u4fe1\u606f"},{"location":"bitxhub/dev/validator/#2-fabric","text":"","title":"2. Fabric\u9a8c\u8bc1\u8005\u4fe1\u606f\u7684\u751f\u6210"},{"location":"bitxhub/dev/validator/#21-fabric","text":"Fabric\u5bf9\u4e8e\u667a\u80fd\u5408\u7ea6\u7684\u6267\u884c\u662f\u5728\u80cc\u4e66\u8282\u70b9\u4e0a\u8fdb\u884c\u7684\uff0c\u6bcf\u4e00\u4e2a\u80cc\u4e66\u8282\u70b9\u90fd\u4f1a\u6a21\u62df\u6267\u884cchaincode\uff0c\u5728\u6a21\u62df\u6267\u884c\u5b8cchaincode\u4e4b\u540e\uff0c\u80cc\u4e66\u8282\u70b9\u4f1a\u5bf9\u6a21\u62df\u7684\u7ed3\u679c\u548c\u629b\u51fa\u7684\u4e8b\u4ef6\u8fdb\u884c\u5c01\u88c5\uff0c\u4e4b\u540e\u518d\u8fdb\u884c\u7b7e\u540d\u80cc\u4e66\u3002\u6700\u540e\u5c06\u80cc\u4e66\u7ed3\u679c\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\u5ba2\u6237\u7aef\u5728\u5bf9\u6bd4\u6a21\u62df\u6267\u884c\u7684\u7ed3\u679c\u4e4b\u540e\u5c06\u80cc\u4e66\u7ed3\u679c\u53d1\u7ed9orderer\u8282\u70b9\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u5728\u63d0\u4ea4\u9636\u6bb5\u4f1a\u629b\u51fachaincode\u7684\u4e8b\u4ef6\u3002","title":"2.1 Fabric\u7684\u9a8c\u8bc1\u903b\u8f91"},{"location":"bitxhub/dev/validator/#211-fabric","text":"ProcessedTransaction\uff08\u4f4d\u4e8efaric-protos-go->peer->transaction.pb.go\uff09\u5373Fabric\u5b58\u50a8\u7684\u5df2\u7ecf\u5904\u7406\u7684\u4ea4\u6613\u7ed3\u6784\u3002\u5176\u4e2d\u5305\u542bTransactionEnvelope\u548cValidationCode\u4e24\u4e2a\u4e3b\u8981\u7684\u5143\u7d20\u3002 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 TransactionEnvelope *common.Envelope \u4ea4\u6613\u4fe1\u5c01\uff0c\u5b58\u50a8\u5904\u7406\u8fc7\u7684\u4ea4\u6613\u4fe1\u606f ValidationCode int32 \u662f\u5426\u9a8c\u8bc1 Envelop(\u4f4d\u4e8efaric-protos-go->common->common.pb.go)\u5373\u5b58\u50a8\u5728\u533a\u5757\u4e2d\u4e00\u6761\u4ea4\u6613\u7684\u6570\u636e\u7ed3\u6784\u3002\u5176\u4e2dPayload\uff08\u4f4d\u4e8efaric-protos-go->common->common.pb.go\uff09\u901a\u8fc7\u89e3\u6790\u53ef\u4ee5\u5206\u89e3\u6210Header\u548cData\u3002 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 Payload []byte \u4ea4\u6613\u4fe1\u606f\u7684byte\u6570\u7ec4\uff0c\u53ef\u4ee5\u89e3\u6790\u4e3a\u4e0b\u9762\u7684Payload Signature []byte \u5bf9Payload\u7684\u7b7e\u540d \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 Header *Header \u8eab\u4efd\u4fe1\u606f\uff0c\u9632\u6b62\u91cd\u590d Data []byte \u53ef\u4ee5\u89e3\u6790\u4e3a\u4e0b\u9762\u7684Transaction \u5176\u4e2dData\u5219\u662f\u5b58\u50a8\u7684Transaction\uff08\u4f4d\u4e8efaric-protos-go->peer->transaction.pb.go\uff09\u7684\u4fe1\u606f\u3002\u4e00\u4e2aTransaction\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2aActions\u3002 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 Actions []*TransactionAction TransactionAction\u7684\u6570\u7ec4\uff0cTransactionAction\u7ed3\u6784\u5982\u4e0b \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 Header []byte proposal\u7684header Payload []byte \u53ef\u4ee5\u89e3\u6790\u6210\u4e0b\u9762\u7684ChaincodeActionPayload\u7ed3\u6784 TransactionAction\u4e2d\u7684Payload\u53ef\u4ee5\u89e3\u6790\u6210ChaincodeActionPayload\uff08\u4f4d\u4e8efaric-protos-go->peer->transaction.pb.go\uff09\u3002 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 ChaincodeProposalPayload []byte \u5b58\u50a8chanicode\u7684proposal\u7684\u4fe1\u606f Action *ChaincodeEndorsedAction Chaincode\u6267\u884c\u7ed3\u679c \u5176\u4e2dChaincodeProposalPayload\u53ef\u4ee5\u89e3\u6790\u6210ChaincodeProposalPayload\uff08\u4f4d\u4e8earic-protos-go->peer->proposal.pb.go\uff09\u3002 \u5176\u4e2dAction\u5219\u662fChaincodeEndorsedAction\uff08\u4f4d\u4e8efaric-protos-go->peer->transaction.pb.go\uff09 \u5b57\u6bb5 \u7c7b\u578b \u63cf\u8ff0 ProposalResponsePayload []byte \u5b58\u50a8chaincode\u6267\u884c\u7ed3\u679c Endorsements []*Endorsement \u80cc\u4e66\u4fe1\u606f \u5bf9\u4e8eProposalResponsePayload\uff0c\u5219\u53ef\u4ee5\u89e3\u6790\u6210\u4e3aProposalResponsePayload(\u4f4d\u4e8efaric-protos-go->peer->proposal_response.pb.go) \u5bf9\u4e8eEndorsements\uff0c\u5219\u662fEndorsement\u7684\u6570\u7ec4\uff0c\u6bcf\u4e00\u4e2aproposal\u90fd\u4f1a\u6709chaincode\u89c4\u5b9a\u7684\u80cc\u4e66\u8282\u70b9\u4eec\u8fdb\u884c\u7b7e\u540d\uff0cEndorsement\u7684\u7ed3\u6784\u5982\u4e0b\uff1a","title":"2.1.1 Fabric\u7684\u5b58\u50a8\u7ed3\u6784"},{"location":"bitxhub/dev/validator/#212-pier","text":"\u6839\u636e\u4e0a\u8ff0\u7684\u4ea4\u6613\u7ed3\u6784\u4f53\uff0cPier\u53ef\u4ee5\u6839\u636e\u4ea4\u6613\u7684\u54c8\u5e0c\u67e5\u8be2\u5230\u76f8\u5e94\u7684\u4ea4\u6613\uff0c\u5e76\u4ece\u7ed3\u6784\u4f53\u4e2d\u62ff\u5230\u4e2d\u7ee7\u94fe\u9700\u8981\u9a8c\u8bc1\u7684Proof\u5b57\u6bb5\u3002 l , err := ledger . New ( c . consumer . channelProvider ) if err != nil { return nil , err } t , err := l . QueryTransaction ( response . TransactionID ) if err != nil { return nil , err } pd := & common . Payload {} if err := proto . Unmarshal ( t . TransactionEnvelope . Payload , pd ); err != nil { return nil , err } pt := & peer . Transaction {} if err := proto . Unmarshal ( pd . Data , pt ); err != nil { return nil , err } return pt . Actions [ 0 ]. Payload , nil // => this is proof","title":"2.1.2 Pier\u83b7\u53d6\u9a8c\u8bc1\u4fe1\u606f"},{"location":"bitxhub/dev/validator/#213-bitxhub","text":"BitXHub\u5728\u63a5\u53d7\u5230Pier\u53d1\u6765\u7684\u8de8\u94fe\u7684\u8bf7\u6c42\u65f6\uff0c\u4f1a\u89e3\u6790\u8bf7\u6c42\u7684\u7ed3\u6784\uff0c\u6821\u9a8cProposalResponse\u7684\u7b7e\u540d\uff0c\u5e76\u4e14\u6bd4\u5bf9Body\u7684\u5185\u5bb9\u662f\u5426\u548cProposalResponse\u89e3\u6790\u51fa\u6765\u7684\u4e00\u81f4\uff0c\u5982\u679c\u4e0a\u9762\u7684\u9636\u6bb5\u7ed3\u679c\u90fd\u4e00\u81f4\uff0c\u5219\u4ee3\u8868\u6821\u9a8c\u6210\u529f\u3002","title":"2.1.3 BitXHub\u9a8c\u8bc1"},{"location":"bitxhub/dev/validator/#22-fabric","text":"","title":"2.2 Fabric\u7684\u590d\u6742\u80cc\u4e66"},{"location":"bitxhub/dev/validator/#221-fabric","text":"Fabric\u7684\u80cc\u4e66\u4e3b\u8981\u662f \u9a8c\u8bc1 Endorser \u8282\u70b9\u5bf9\u4ea4\u6613\u7684\u7b7e\u540d \u9a8c\u8bc1\u662f\u5426\u6709\u8db3\u591f\u6570\u91cf\u7684\u8282\u70b9\u5bf9\u4ea4\u6613\u80cc\u4e66 \u80cc\u4e66\u4fe1\u606f\u6765\u81ea\u6307\u5b9a\u6e90","title":"2.2.1 Fabric\u7684\u80cc\u4e66\u6d41\u7a0b"},{"location":"bitxhub/dev/validator/#222","text":"\u4e00\u4e2a\u5b9e\u4f53\u7531 MSP \u4e0e ROLE \u5b9a\u4e49\uff0c\u5373\u67d0\u4e2a\u7ec4\u7ec7\u5185\u7684\u67d0\u4e2a\u89d2\u8272\u3002\u5176\u4e2dROLE\u652f\u6301\u56db\u79cd client, peer, admin, member\u3002\u4f8b\u5982 Org0.admin \u8868\u793a Org0 \u8fd9\u4e2a MSP \u4e0b\u7684\u4efb\u610f\u7ba1\u7406\u5458; Org1.member \u8868\u793a Org1 \u8fd9\u4e2a MSP \u4e0b\u7684\u4efb\u610f\u6210\u5458\u3002","title":"2.2.2 \u5b9e\u4f53\u7684\u5b9a\u4e49"},{"location":"bitxhub/dev/validator/#223","text":"Endorsement Policy \u7684\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b\u6240\u793a\u3002 EXPR \u53ef\u4ee5\u662f\u662f AND \u6216\u8005 OR \u903b\u8f91\u7b26\u3002E \u662f\u5b9e\u4f53\u6216\u8005\u5d4c\u5957\u7684\u8868\u8fbe\u5f0f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fFabric\u6682\u65f6\u53ea\u652f\u63011-of-N\u548cMAX-of-N\u3002 // \u57fa\u7840\u8868\u8fbe\u5f0f\u5f62\u5f0f EXPR ( E [, E ... ]) // \u9700\u8981\u4e09\u4e2a\u5b9e\u4f53\u90fd\u63d0\u4f9b\u7b7e\u540d AND ( ' Org1 . member ' , ' Org2 . member ' , ' Org3 . member ' ) // \u9700\u8981\u4e24\u4e2a\u5b9e\u4f53\u4efb\u4e00\u63d0\u4f9b\u7b7e\u540d OR ( ' Org1 . member ' , ' Org2 . member ' ) // \u9700\u8981Org1\u7684admin\u63d0\u4f9b\u7b7e\u540d\uff0c\u6216\u8005Org2\uff0cOrg3\u7684member\u540c\u65f6\u63d0\u4f9b\u7b7e\u540d OR ( ' Org1 . admin ' , AND ( ' Org2 . member ' , ' Org3 . member ' ))","title":"2.2.3 \u8868\u8fbe\u5f0f"},{"location":"bitxhub/dev/validator/#224","text":"\u9a8c\u8bc1\u5f15\u64ce\u6839\u636e\u5e94\u7528\u94fe\u6ce8\u518c\u65f6\u63d0\u4f9b\u7684\u9a8c\u8bc1\u540d\u5355\u8fdb\u884c\u80cc\u4e66\u9a8c\u8bc1\u3002Fabric\u6240\u9700\u8981\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u65f6\u4e00\u4e2amap\uff0ckey\u4e3a\u80cc\u4e66\u8282\u70b9\u7684mspid\uff0cvalue\u4e3a\u80cc\u4e66\u8282\u70b9\u7684\u8ddf\u8bc1\u4e66\u3002 \u53ef\u4ee5\u770b\u5230\u590d\u6742\u9a8c\u8bc1\u89c4\u5219\u4e2d\u6709AND\u548cOR\u7684\u89c4\u5219\uff0c\u6839\u636eFabric\u7684\u7279\u6027\uff0c\u80cc\u4e66\u7b56\u7565\u5728chaincode\u90e8\u7f72\u4ee5\u540e\u53ef\u4ee5\u5347\u7ea7\uff0c\u6240\u4ee5\u8003\u8651\u5230\u9a8c\u8bc1\u89c4\u5219\u7684\u5347\u7ea7\uff0c\u5bf9\u590d\u6742\u89c4\u5219\u7684\u5224\u65ad\u4e5f\u9700\u8981\u5199\u5728\u5408\u7ea6\u4e2d\u3002\u5408\u7ea6\u4e2d\u9700\u8981\u5bf9\u4ee5\u4e0b\u51e0\u6b65\u8fdb\u884c\u9a8c\u8bc1\u3002 \u9996\u5148\u662f\u5bf9\u7b7e\u540d\u6570\u91cf\u9a8c\u8bc1\uff0c\u6bd4\u5982\u5bf9\u4e8e AND('Org1.member', 'Org2.member', 'Org3.member') \uff0c\u5982\u679c\u80cc\u4e66\u6570\u7ec4\u7684\u957f\u5ea6\u5c0f\u4e8e3\uff0c\u5373\u53ef\u76f4\u63a5\u9a73\u56de\u3002 \u5982\u679c\u6570\u91cf\u5bf9\u7b49\uff0c\u5219\u8fdb\u884c\u9010\u4e00\u6821\u9a8c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u62ff\u5230endorser\u7684id\u4ee5\u540e\uff0c\u9700\u8981\u901a\u8fc7key\u503c\u627e\u5230\u4e8b\u5148\u5b58\u50a8\u5728BitXHub\u4e2d\u7684\u8ddf\u8bc1\u4e66\u4fe1\u606f\uff0c\u518d\u5bf9pier\u53d1\u8fc7\u6765\u7684endorser\u7684\u8bc1\u4e66\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6bd4\u5bf9\u4e00\u81f4\u4ee5\u540e\u518d\u8fdb\u884c\u9a8c\u7b7e\u3002","title":"2.2.4 \u9a8c\u8bc1\u5f15\u64ce\u7684\u9a8c\u8bc1"},{"location":"bitxhub/dev/validator/#225","text":"BitXHub\u63d0\u4f9b\u4e86\u80cc\u4e66\u7b56\u7565\u7684\u667a\u80fd\u5408\u7ea6\u5e93\uff0c\u5f53\u90e8\u7f72\u9a8c\u8bc1\u5408\u7ea6\u65f6\uff0c\u53ea\u8981\u5c06\u80cc\u4e66\u7b56\u7565\u7684\u8868\u8fbe\u5f0f\u5373\u53ef\u5b8c\u6210\u5bf9\u80cc\u4e66\u7b56\u7565\u7684\u58f0\u660e\uff0c\u5f53\u4e00\u7b14\u8de8\u94fe\u4ea4\u6613\u7ecf\u8fc7\u9a8c\u8bc1\u5f15\u64ce\u65f6\uff0c\u9a8c\u8bc1\u5f15\u64ce\u4f1a\u6839\u636e\u90e8\u7f72\u7684\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u7684\u8c03\u7528\u5185\u7f6e\u7684\u80cc\u4e66\u7b56\u7565\u5e93\uff0c\u5bf9\u9a8c\u8bc1\u8005\u4fe1\u606f\u8fdb\u884c\u5408\u6f14\u7b5b\u9009\u3002","title":"2.2.5 \u667a\u80fd\u5408\u7ea6\u5e93"},{"location":"bitxhub/dev/validator/#23-fabric","text":"","title":"2.3. \u9a8c\u8bc1\u5f15\u64ce\u5bf9Fabric\u7684\u9a8c\u8bc1\u6d41\u7a0b"},{"location":"bitxhub/dev/validator/#231","text":"\u5e94\u7528\u94fe\u5728\u6ce8\u518c\u5230BitXHub\u65f6\u9700\u8981\u63d0\u4ea4\u9a8c\u8bc1\u8005\u7684\u4fe1\u606f\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5c06Fabric\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u4ee5json\u7684\u683c\u5f0f\u63d0\u4ea4\u5230BitXHub\u8fdb\u884c\u6ce8\u518c\u3002\u4e3b\u8981\u5206\u4e3a\u4e0b\u9762\u4e09\u4e2a\u5b57\u6bb5\uff1a \u8bc1\u4e66\u4fe1\u606f\uff1a\u8bc1\u4e66\u4fe1\u606f\u4e3aFabric\u7684msp\u4fe1\u606f\uff0c\u5305\u542b\u4e86\u673a\u6784\u3001\u6210\u5458\u3001\u89d2\u8272\u4ee5\u53ca\u8bc1\u4e66\u7684\u4fe1\u606f\u3002\u662fmsp.MSP\u7684\u6570\u7ec4\u3002 \u80cc\u4e66\u7b56\u7565\u7684byte\u7684\u6570\u7ec4\u3002\u901a\u8fc7Fabric\u7684cauthdsl.FromString()\u51fd\u6570\u751f\u6210\u7684\u7b56\u7565\u5b57\u8282\u6570\u7ec4 chaincode\u7684id\uff0c\u7528\u6765\u9a8c\u8bc1\u4ea4\u6613\u662f\u7531\u89c4\u5b9a\u7684chaincode\u53d1\u51fa\u7684\u3002","title":"2.3.1 \u5e94\u7528\u94fe\u6ce8\u518c"},{"location":"bitxhub/dev/validator/#232","text":"\u5e94\u7528\u94fe\u4f1a\u901a\u8fc7IBTP\u534f\u8bae\u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u5230BitXHub\uff0cBitXHub\u9700\u8981\u5bf9IBTP\u4e2d\u7684Proof\u5b57\u6bb5\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4ece\u800c\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u7684\u6709\u6548\u6027\u3002\u5bf9\u4e8eFabric\u6765\u8bf4Proof\u5b57\u6bb5\u7684\u5185\u5bb9\u4e3a\u4ea4\u6613\u7ed3\u6784\u4e2dTransaction.Actions[0].Payload\u3002Pier\u8282\u70b9\u5c06\u8fd9\u4e2a\u4f5c\u4e3aProof\u5b57\u6bb5\u5c01\u88c5\u5230IBTP\u7136\u540e\u53d1\u9001\u7ed9BitXHub\u3002","title":"2.3.2 \u5e94\u7528\u94fe\u53d1\u9001\u8de8\u94fe\u4ea4\u6613"},{"location":"bitxhub/dev/validator/#233-proof","text":"\u9a8c\u8bc1\u5f15\u64ce\u63d0\u4f9b\u4e86\u4e13\u95e8\u7ed9Fabric\u7684wasm\u9a8c\u8bc1\u5e93\u4ece\u800c\u7b80\u4fbfwasm\u5408\u7ea6\u7684\u7f16\u5199\u3002 1\uff09 \u9996\u5148\u9700\u8981\u4eceproof\u5b57\u6bb5\u4e2d\u62bd\u53d6\u51fa\u4ea4\u6613\u7ed3\u6784\uff0c\u7136\u540e\u5bf9\u4ea4\u6613\u7ed3\u6784\u4e2d\u7684chaincode\u7684id\u8fdb\u884c\u6821\u9a8c\uff0c\u53ea\u6709\u548c\u6ce8\u518c\u65f6\u8868\u660e\u7684chaincode\u7684id\u76f8\u7b26\u5408\u624d\u80fd\u7ee7\u7eed\u8fdb\u884c\u9a8c\u8bc1\u3002 2\uff09 \u4ece\u4ea4\u6613\u7ed3\u6784\u4e2d\u62bd\u53d6\u51fa\u7b7e\u540d\u96c6\uff0c\u7b7e\u540d\u96c6\u662f\u6307\u591a\u4e2a\u80cc\u4e66\u8282\u70b9\u5bf9proposal\u80cc\u4e66\u5f62\u6210\u7684\u7b7e\u540d\u7684\u96c6\u5408\u3002 3\uff09 \u5c06\u5e94\u7528\u94fe\u6ce8\u518c\u65f6\u4f20\u5165\u7684Fabric\u7684msp\u7684\u914d\u7f6e\u4f20\u5165\u7b56\u7565\u751f\u6210\u5668\uff0c\u83b7\u53d6\u53ef\u4ee5\u9a8c\u8bc1\u5f53\u524d\u5e94\u7528\u94fe\u7684msp\u7684\u7b56\u7565\u9a8c\u8bc1\u5de5\u5177\u3002 3\uff09 \u5c06\u7b7e\u540d\u96c6\u548c\u9a8c\u8bc1\u7b56\u7565\u4f20\u5165\u5230\u7b56\u7565\u9a8c\u8bc1\u5de5\u5177\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6ca1\u6709\u9519\u8bef\u5373\u4e3a\u9a8c\u8bc1\u6210\u529f\u3002","title":"2.3.3 \u9a8c\u8bc1Proof"},{"location":"bitxhub/dev/validator/#24-fabric","text":"Fabric\u9a8c\u8bc1\u8005\u4fe1\u606f\u7684\u751f\u6210\u4e3b\u8981\u662f\u901a\u8fc7Fabric\u7684\u9a8c\u8bc1\u4ee3\u7801\u6765\u5b9e\u73b0\uff0c\u6211\u4eec\u83b7\u53d6\u4e86Fabric\u9a8c\u8bc1\u4ea4\u6613\u6240\u9700\u8981\u7684\u4e00\u4e0b\u4fe1\u606f\u6765\u4e3a\u6211\u4eec\u9a8c\u8bc1Fabric\u8de8\u94fe\u4ea4\u6613\u63d0\u4f9b\u53c2\u6570\u4fe1\u606f\u3002 channelProvider : = sdk . ChannelContext ( meta . ChannelID , fabsdk . WithUser ( meta . Username ), fabsdk . WithOrg ( meta . ORG )) channelClient , err : = channel . New ( channelProvider ) if err != nil { return nil , fmt . Errorf ( \"create channel fabcli fail: %s \\n \" , err . Error ()) } l , err : = ledger . New ( channelProvider ) if err != nil { return nil , err } // Get Fabric Channel Config conf , err : = l . QueryConfig () if err != nil { return nil , err } // Generate Policy Bytes policy , err : = cauthdsl . FromString ( \"AND('Org2MSP.peer', 'Org1MSP.peer')\" ) if err != nil { return nil , err } pBytes , err : = proto . Marshal ( policy ) if err != nil { return nil , err } if err : = ioutil . WriteFile ( \"policy\" , [] byte ( string ( pBytes )), 777 ); err != nil { return nil , err } validator : = & Validator { Cid : meta . CCID , ChainId : \"\" , Policy : string ( pBytes ), } // Generate MSP config bytes var confStrs [] string for i , value : = range conf . MSPs () { confStrs = append ( confStrs , value . String ()) err : = ioutil . WriteFile ( \"conf\" + strconv . Itoa ( i ), [] byte ( value . String ()), 777 ) if err != nil { return nil , err } } validator . ConfByte = confStrs validatorBytes , err : = json . Marshal ( validator ) if err != nil { return nil , err } if err : = ioutil . WriteFile ( \"validator\" , validatorBytes , 777 ); err != nil { return nil , err } \u901a\u8fc7\u4e0a\u9762\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8f93\u51fa\u7684\u201dvalidator\"\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u6240\u9700\u8981\u7684Fabric\u9a8c\u8bc1\u8005\u4fe1\u606f","title":"2.4. Fabric\u9a8c\u8bc1\u8005\u4fe1\u606f\u751f\u6210"},{"location":"bitxhub/dev/validator/#3-hyperchain","text":"\u5bf9\u4e8eHyperchain\u7684\u8de8\u94fe\u4ea4\u6613\u7684\u9a8c\u8bc1\u76f8\u5bf9\u4e8eFabric\u6765\u8bf4\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0cHyperchain\u7684\u4ea4\u6613\u662f\u7531\u591a\u4e2a\u8282\u70b9\u7684\u591a\u7b7e\u6765\u786e\u8ba4\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6784\u5efaHyperchain\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u65f6\u53ef\u4ee5\u5c06\u53c2\u4e0e\u591a\u7b7e\u7684\u51e0\u4e2a\u8282\u70b9\u7684\u516c\u94a5\u4f5c\u4e3a\u6570\u7ec4\u5199\u5165\u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u3002\u9a8c\u8bc1\u89c4\u5219\u5c31\u662f\u5c06\u4ea4\u6613\u4e2d\u7684\u591a\u4e2a\u7b7e\u540d\u7528\u8fd9\u4e2a\u516c\u94a5\u6570\u7ec4\u7ec4\u6210\u7684\u9a8c\u8bc1\u8005\u4fe1\u606f\u6765\u8fdb\u884c\u9a8c\u8bc1\u3002","title":"3. Hyperchain\u9a8c\u8bc1\u8005\u4fe1\u606f\u7684\u751f\u6210"},{"location":"bitxhub/dev/validator/#4","text":"\u6839\u636e\u4e0a\u9762\u7684\u4e24\u4e2a\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u9a8c\u8bc1\u8005\u4fe1\u606f\u751f\u6210\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5982\u4f55\u6784\u5efa\u80fd\u591f\u9a8c\u8bc1\u5e94\u7528\u94fe\u4e0a\u94fe\u4ea4\u6613\u7684\u51ed\u8bc1\uff0c\u5bf9\u4e8e\u5176\u4ed6\u5e94\u7528\u94fe\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u53ea\u8981\u6784\u5efa\u51fa\u8fd9\u6837\u7684\u51ed\u8bc1\u4ee5\u53ca\u5bf9\u5e94\u7684\u901a\u8fc7\u8be5\u51ed\u8bc1\u6765\u9a8c\u8bc1\u4ea4\u6613\u7684\u903b\u8f91\uff08\u5373\u9a8c\u8bc1\u89c4\u5219\uff09\u5c31\u53ef\u4ee5\u5c06\u81ea\u5df1\u7684\u5e94\u7528\u94fe\u63a5\u5165\u5230\u4e2d\u7ee7\u94fe\u4e2d\u8fdb\u884c\u5b89\u5168\u6709\u4fdd\u8bc1\u7684\u8de8\u94fe\u4ea4\u6613\u4e86\u3002","title":"4. \u5176\u4ed6\u5e94\u7528\u94fe\u9a8c\u8bc1\u8005\u4fe1\u606f\u7684\u751f\u6210"},{"location":"bitxhub/function/appchain/","text":"\u5e94\u7528\u94fe\u7ba1\u7406 \u4e2d\u7ee7\u94fe\u652f\u6301\u5bf9\u5e94\u7528\u94fe\u7684\u7ba1\u7406\uff0c\u5305\u62ec\u6ce8\u518c\u3001\u66f4\u65b0\u3001\u51bb\u7ed3\u3001\u6ce8\u9500\u5e94\u7528\u94fe\u7b49\u529f\u80fd\u3002 1. \u5e94\u7528\u94fe\u6ce8\u518c 1.1 \u547d\u4ee4 \u5bf9\u4e8e\u9700\u8981\u52a0\u5165\u8de8\u94fe\u7f51\u7edc\u4f7f\u7528\u4e2d\u7ee7\u94fe\u8fdb\u884c\u8de8\u94fe\u7684\u5e94\u7528\u94fe\uff0c\u9700\u8981\u9996\u5148\u7531\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u5411\u4e2d\u7ee7\u94fe\u6ce8\u518c\u5e94\u7528\u94fe\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a pier [ --repo <repository> ] appchain register --name <appchain name> --type <appchain type> --desc <description> --version <appchain version> --validators <path of appchain validators file> --consensusType <appchain consensus type> [ --addr <bitxhub node address> ] \u53c2\u6570\u89e3\u91ca\uff1a --repo\uff1a\u53ef\u9009\u53c2\u6570\uff0c\u6307\u5b9apier\u914d\u7f6e\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f7f\u7528$HOME/.pier\u76ee\u5f55\u3002 --name\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u5e94\u7528\u94fe\u540d\u79f0\u3002 --type\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u5e94\u7528\u94fe\u7c7b\u578b\uff0c\u5982hyperchain\u3001fabric\u7b49\u3002 --desc\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u5bf9\u5e94\u7528\u94fe\u7684\u63cf\u8ff0\u4fe1\u606f\u3002 --version\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u5e94\u7528\u94fe\u7248\u672c\u4fe1\u606f\u3002 --validators\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u5e94\u7528\u94fe\u7684\u9a8c\u8bc1\u4eba\u4fe1\u606f\u6240\u5728\u7684\u6587\u4ef6\u8def\u5f84\u3002 --consensusType\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9ap\u5e94\u7528\u94fe\u7684\u5171\u8bc6\u7c7b\u578b\uff0c\u5982rbft\u3001raft\u7b49\u3002 --addr\uff1a\u53ef\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u8981\u8fde\u63a5\u7684\u4e2d\u7ee7\u94fe\u8282\u70b9\u5730\u5740\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f7f\u7528$repo\u76ee\u5f55\u4e0bpier.toml\u4e2d\u6307\u5b9a\u7684BitXHub\u8282\u70b9\u5730\u5740\u3002 \u8be5\u547d\u4ee4\u5411\u4e2d\u7ee7\u94fe\u53d1\u9001\u4e00\u7b14\u5e94\u7528\u94fe\u6ce8\u518c\u7684\u4ea4\u6613\uff0c\u4e2d\u7ee7\u94fe\u4ee5\u4ea4\u6613\u7684from\uff08\u5373\u5f53\u524dpier\u516c\u94a5\u7684\u5730\u5740\uff09\u4f5c\u4e3a\u5e94\u7528\u94fe\u7684ID\uff0c\u751f\u6210\u4e00\u4e2a\u5e94\u7528\u94fe\u6ce8\u518c\u7684\u63d0\u6848\u3002 \u4e2d\u7ee7\u94fe\u7ba1\u7406\u5458\u9700\u8981\u5bf9\u63d0\u6848\u8fdb\u884c\u6295\u7968\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a bitxhub [ --repo <repository> ] client governance vote --id <proposal id> --info <voting information> --reason <reason to vote> \u53c2\u6570\u89e3\u91ca\uff1a --repo\uff1a\u53ef\u9009\u53c2\u6570\uff0c\u6307\u5b9abitxhub\u8282\u70b9\u914d\u7f6e\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f7f\u7528$HOME/.bitxhub\u76ee\u5f55\u3002 --id\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u63d0\u6848id\u3002 --info\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u6295\u7968\u4fe1\u606f\uff0capprove\u6216\u8005reject\u3002 --reason\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u6295\u7968\u7684\u539f\u56e0\u3002 1.2 \u4e3e\u4f8b \u6bd4\u5982\u8fdb\u884cfabric\u5e94\u7528\u94fe\u7684\u6ce8\u518c\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain register --name chainA --type fabric --desc chainA-desc --version 1 .4.3 --validators config/fabric.validators --consensusType raft INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the register request was submitted successfully, chain id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 \u5982\u4e0a\u4f8b\u6240\u793a\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u63d0\u4ea4\u5e94\u7528\u94fe\u6ce8\u518c\u8bf7\u6c42\uff0c\u5e94\u7528\u94feID\u4e3a0x8D093dd84717042b23546cdA396cEBB2F48D8442\uff0c\u63d0\u6848\u53f7\u4e3a0x8D093dd84717042b23546cdA396cEBB2F48D8442-0\u3002\u4e2d\u7ee7\u94fe\u7ba1\u7406\u5458\u9700\u8981\u5bf9\u8be5\u63d0\u6848\u8fdb\u884c\u5ba1\u6838\u5e76\u8fdb\u884c\u6295\u7968\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a \u5982\u7ba1\u7406\u5458\u5bf9\u8be5\u63d0\u6848\u5ba1\u6838\u540e\uff0c\u8ba4\u4e3a\u8be5\u5e94\u7528\u94fe\u63d0\u4ea4\u5bf9\u4fe1\u606f\u65e0\u8bef\uff0c\u6295\u7968\u901a\u8fc7\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ bitxhub --repo ./scripts/build/node1 client governance vote --id 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 --info approve --reason \"fabric appchain register\" vote successfully! $ bitxhub --repo ./scripts/build/node2 client governance vote --id 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 --info approve --reason \"fabric appchain register\" vote successfully! $ bitxhub --repo ./scripts/build/node3 client governance vote --id 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 --info approve --reason \"fabric appchain register\" vote successfully! $ bitxhub --repo ./scripts/build/node1 client governance proposals --id 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 Id Type Status ApproveNum RejectNum ElectorateNum ThresholdNum Des -- ---- ------ ---------- --------- ------------- ------------ --- 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 AppchainMgr approve 3 0 4 3 register \u53ef\u4ee5\u770b\u5230\u8be5\u63d0\u6848\u5df2\u7ecf\u6295\u7968\u901a\u8fc7\uff0c\u5e94\u7528\u94fe\u6ce8\u518c\u6210\u529f\u3002 2. \u66f4\u65b0\u5e94\u7528\u94fe 2.1 \u547d\u4ee4 \u5982\u679c\u5e94\u7528\u94fe\u53d1\u751f\u4e86\u66f4\u6539\uff0c\u6bd4\u5982\u9a8c\u8bc1\u4eba\u4fe1\u606f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u9700\u8981\u66f4\u65b0\u5176\u5728\u4e2d\u7ee7\u94fe\u4e0a\u7684\u5e94\u7528\u94fe\u4fe1\u606f\u3002\u547d\u4ee4\u5982\u4e0b\uff1a pier --repo <repository> appchain update --name <appchain name> --type <appchain type> --desc <description> --version <appchain version> --validators <path of appchain validators file> --consensusType <appchain consensus type> --addr <bitxhub node address> \u8be5\u547d\u4ee4\u53c2\u6570\u542b\u4e49\u4e0e\u5e94\u7528\u94fe\u6ce8\u518c\u547d\u4ee4\u7684\u53c2\u6570\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002 2.2 \u4e3e\u4f8b \u6bd4\u5982\u8fdb\u884cfabric\u5e94\u7528\u94fe\u7684\u9a8c\u8bc1\u4eba\u4fe1\u606f\u53d1\u751f\u53d8\u5316\uff0c\u9700\u8981\u66f4\u65b0\u5e94\u7528\u94fe\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain update --name chainA --type fabric --desc chainA-desc --version 1 .4.3 --validators config/fabric-new.validators --consensusType raft INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the update request was submitted successfully, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-1 \u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838\u5e76\u6295\u7968\uff0c\u4e0e\u6ce8\u518c\u5e94\u7528\u94fe\u90e8\u5206\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002 3. \u51bb\u7ed3\u5e94\u7528\u94fe 3.1 \u547d\u4ee4 \u5982\u679c\u5e94\u7528\u94fe\u51fa\u73b0\u95ee\u9898\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u53ef\u4ee5\u7533\u8bf7\u51bb\u7ed3\u5e94\u7528\u94fe\u3002\u547d\u4ee4\u5982\u4e0b\uff1a pier --repo <repository> appchain freeze 3.2 \u4e3e\u4f8b \u6bd4\u5982\u5bf9\u4e4b\u524d\u5df2\u7ecf\u6ce8\u518c\u8fc7\u7684\u5e94\u7528\u94fe\u8fdb\u884c\u51bb\u7ed3\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain freeze INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the freeze request was submitted successfully, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-2 \u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838\u5e76\u6295\u7968\uff0c\u4e0e\u6ce8\u518c\u5e94\u7528\u94fe\u90e8\u5206\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002 4. \u6fc0\u6d3b\u5e94\u7528\u94fe 4.1 \u547d\u4ee4 \u5982\u679c\u51bb\u7ed3\u7684\u5e94\u7528\u94fe\u6062\u590d\u6b63\u5e38\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u53ef\u4ee5\u7533\u8bf7\u6fc0\u6d3b\u5e94\u7528\u94fe\u3002\u547d\u4ee4\u5982\u4e0b\uff1a pier --repo <repository> appchain activate 4.2 \u4e3e\u4f8b \u6bd4\u5982\u5bf9\u4e4b\u524d\u5df2\u7ecf\u51bb\u7ed3\u7684\u5e94\u7528\u94fe\u8fdb\u884c\u6fc0\u6d3b\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain freeze INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the activate request was submitted successfully, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-3 \u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838\u5e76\u6295\u7968\uff0c\u4e0e\u6ce8\u518c\u5e94\u7528\u94fe\u90e8\u5206\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002 5. \u6ce8\u9500\u5e94\u7528\u94fe 5.1 \u547d\u4ee4 \u5982\u679c\u5e94\u7528\u94fe\u9000\u51fa\u8de8\u94fe\u7cfb\u7edf\uff0c\u4e0d\u518d\u8fdb\u884c\u8de8\u94fe\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u53ef\u4ee5\u5411\u4e2d\u7ee7\u94fe\u63d0\u4ea4\u6ce8\u9500\u5e94\u7528\u94fe\u7684\u63d0\u6848\u3002\u547d\u4ee4\u5982\u4e0b\uff1a pier --repo <repository> appchain logout 5.2 \u4e3e\u4f8b \u6bd4\u5982\u5bf9\u4e4b\u524d\u6fc0\u6d3b\u7684\u5e94\u7528\u94fe\u8fdb\u884c\u6ce8\u9500\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain logout INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the logout request was submitted successfully, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-4 \u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838\u5e76\u6295\u7968\uff0c\u4e0e\u6ce8\u518c\u5e94\u7528\u94fe\u90e8\u5206\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002","title":"\u5e94\u7528\u94fe\u7ba1\u7406"},{"location":"bitxhub/function/appchain/#_1","text":"\u4e2d\u7ee7\u94fe\u652f\u6301\u5bf9\u5e94\u7528\u94fe\u7684\u7ba1\u7406\uff0c\u5305\u62ec\u6ce8\u518c\u3001\u66f4\u65b0\u3001\u51bb\u7ed3\u3001\u6ce8\u9500\u5e94\u7528\u94fe\u7b49\u529f\u80fd\u3002","title":"\u5e94\u7528\u94fe\u7ba1\u7406"},{"location":"bitxhub/function/appchain/#1","text":"","title":"1. \u5e94\u7528\u94fe\u6ce8\u518c"},{"location":"bitxhub/function/appchain/#11","text":"\u5bf9\u4e8e\u9700\u8981\u52a0\u5165\u8de8\u94fe\u7f51\u7edc\u4f7f\u7528\u4e2d\u7ee7\u94fe\u8fdb\u884c\u8de8\u94fe\u7684\u5e94\u7528\u94fe\uff0c\u9700\u8981\u9996\u5148\u7531\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u5411\u4e2d\u7ee7\u94fe\u6ce8\u518c\u5e94\u7528\u94fe\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a pier [ --repo <repository> ] appchain register --name <appchain name> --type <appchain type> --desc <description> --version <appchain version> --validators <path of appchain validators file> --consensusType <appchain consensus type> [ --addr <bitxhub node address> ] \u53c2\u6570\u89e3\u91ca\uff1a --repo\uff1a\u53ef\u9009\u53c2\u6570\uff0c\u6307\u5b9apier\u914d\u7f6e\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f7f\u7528$HOME/.pier\u76ee\u5f55\u3002 --name\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u5e94\u7528\u94fe\u540d\u79f0\u3002 --type\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u5e94\u7528\u94fe\u7c7b\u578b\uff0c\u5982hyperchain\u3001fabric\u7b49\u3002 --desc\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u5bf9\u5e94\u7528\u94fe\u7684\u63cf\u8ff0\u4fe1\u606f\u3002 --version\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u5e94\u7528\u94fe\u7248\u672c\u4fe1\u606f\u3002 --validators\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u5e94\u7528\u94fe\u7684\u9a8c\u8bc1\u4eba\u4fe1\u606f\u6240\u5728\u7684\u6587\u4ef6\u8def\u5f84\u3002 --consensusType\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9ap\u5e94\u7528\u94fe\u7684\u5171\u8bc6\u7c7b\u578b\uff0c\u5982rbft\u3001raft\u7b49\u3002 --addr\uff1a\u53ef\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u8981\u8fde\u63a5\u7684\u4e2d\u7ee7\u94fe\u8282\u70b9\u5730\u5740\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f7f\u7528$repo\u76ee\u5f55\u4e0bpier.toml\u4e2d\u6307\u5b9a\u7684BitXHub\u8282\u70b9\u5730\u5740\u3002 \u8be5\u547d\u4ee4\u5411\u4e2d\u7ee7\u94fe\u53d1\u9001\u4e00\u7b14\u5e94\u7528\u94fe\u6ce8\u518c\u7684\u4ea4\u6613\uff0c\u4e2d\u7ee7\u94fe\u4ee5\u4ea4\u6613\u7684from\uff08\u5373\u5f53\u524dpier\u516c\u94a5\u7684\u5730\u5740\uff09\u4f5c\u4e3a\u5e94\u7528\u94fe\u7684ID\uff0c\u751f\u6210\u4e00\u4e2a\u5e94\u7528\u94fe\u6ce8\u518c\u7684\u63d0\u6848\u3002 \u4e2d\u7ee7\u94fe\u7ba1\u7406\u5458\u9700\u8981\u5bf9\u63d0\u6848\u8fdb\u884c\u6295\u7968\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a bitxhub [ --repo <repository> ] client governance vote --id <proposal id> --info <voting information> --reason <reason to vote> \u53c2\u6570\u89e3\u91ca\uff1a --repo\uff1a\u53ef\u9009\u53c2\u6570\uff0c\u6307\u5b9abitxhub\u8282\u70b9\u914d\u7f6e\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f7f\u7528$HOME/.bitxhub\u76ee\u5f55\u3002 --id\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u63d0\u6848id\u3002 --info\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u6295\u7968\u4fe1\u606f\uff0capprove\u6216\u8005reject\u3002 --reason\uff1a\u5fc5\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u6295\u7968\u7684\u539f\u56e0\u3002","title":"1.1 \u547d\u4ee4"},{"location":"bitxhub/function/appchain/#12","text":"\u6bd4\u5982\u8fdb\u884cfabric\u5e94\u7528\u94fe\u7684\u6ce8\u518c\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain register --name chainA --type fabric --desc chainA-desc --version 1 .4.3 --validators config/fabric.validators --consensusType raft INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the register request was submitted successfully, chain id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 \u5982\u4e0a\u4f8b\u6240\u793a\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u63d0\u4ea4\u5e94\u7528\u94fe\u6ce8\u518c\u8bf7\u6c42\uff0c\u5e94\u7528\u94feID\u4e3a0x8D093dd84717042b23546cdA396cEBB2F48D8442\uff0c\u63d0\u6848\u53f7\u4e3a0x8D093dd84717042b23546cdA396cEBB2F48D8442-0\u3002\u4e2d\u7ee7\u94fe\u7ba1\u7406\u5458\u9700\u8981\u5bf9\u8be5\u63d0\u6848\u8fdb\u884c\u5ba1\u6838\u5e76\u8fdb\u884c\u6295\u7968\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a \u5982\u7ba1\u7406\u5458\u5bf9\u8be5\u63d0\u6848\u5ba1\u6838\u540e\uff0c\u8ba4\u4e3a\u8be5\u5e94\u7528\u94fe\u63d0\u4ea4\u5bf9\u4fe1\u606f\u65e0\u8bef\uff0c\u6295\u7968\u901a\u8fc7\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ bitxhub --repo ./scripts/build/node1 client governance vote --id 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 --info approve --reason \"fabric appchain register\" vote successfully! $ bitxhub --repo ./scripts/build/node2 client governance vote --id 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 --info approve --reason \"fabric appchain register\" vote successfully! $ bitxhub --repo ./scripts/build/node3 client governance vote --id 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 --info approve --reason \"fabric appchain register\" vote successfully! $ bitxhub --repo ./scripts/build/node1 client governance proposals --id 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 Id Type Status ApproveNum RejectNum ElectorateNum ThresholdNum Des -- ---- ------ ---------- --------- ------------- ------------ --- 0x8D093dd84717042b23546cdA396cEBB2F48D8442-0 AppchainMgr approve 3 0 4 3 register \u53ef\u4ee5\u770b\u5230\u8be5\u63d0\u6848\u5df2\u7ecf\u6295\u7968\u901a\u8fc7\uff0c\u5e94\u7528\u94fe\u6ce8\u518c\u6210\u529f\u3002","title":"1.2 \u4e3e\u4f8b"},{"location":"bitxhub/function/appchain/#2","text":"","title":"2. \u66f4\u65b0\u5e94\u7528\u94fe"},{"location":"bitxhub/function/appchain/#21","text":"\u5982\u679c\u5e94\u7528\u94fe\u53d1\u751f\u4e86\u66f4\u6539\uff0c\u6bd4\u5982\u9a8c\u8bc1\u4eba\u4fe1\u606f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u9700\u8981\u66f4\u65b0\u5176\u5728\u4e2d\u7ee7\u94fe\u4e0a\u7684\u5e94\u7528\u94fe\u4fe1\u606f\u3002\u547d\u4ee4\u5982\u4e0b\uff1a pier --repo <repository> appchain update --name <appchain name> --type <appchain type> --desc <description> --version <appchain version> --validators <path of appchain validators file> --consensusType <appchain consensus type> --addr <bitxhub node address> \u8be5\u547d\u4ee4\u53c2\u6570\u542b\u4e49\u4e0e\u5e94\u7528\u94fe\u6ce8\u518c\u547d\u4ee4\u7684\u53c2\u6570\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002","title":"2.1 \u547d\u4ee4"},{"location":"bitxhub/function/appchain/#22","text":"\u6bd4\u5982\u8fdb\u884cfabric\u5e94\u7528\u94fe\u7684\u9a8c\u8bc1\u4eba\u4fe1\u606f\u53d1\u751f\u53d8\u5316\uff0c\u9700\u8981\u66f4\u65b0\u5e94\u7528\u94fe\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain update --name chainA --type fabric --desc chainA-desc --version 1 .4.3 --validators config/fabric-new.validators --consensusType raft INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the update request was submitted successfully, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-1 \u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838\u5e76\u6295\u7968\uff0c\u4e0e\u6ce8\u518c\u5e94\u7528\u94fe\u90e8\u5206\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002","title":"2.2 \u4e3e\u4f8b"},{"location":"bitxhub/function/appchain/#3","text":"","title":"3. \u51bb\u7ed3\u5e94\u7528\u94fe"},{"location":"bitxhub/function/appchain/#31","text":"\u5982\u679c\u5e94\u7528\u94fe\u51fa\u73b0\u95ee\u9898\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u53ef\u4ee5\u7533\u8bf7\u51bb\u7ed3\u5e94\u7528\u94fe\u3002\u547d\u4ee4\u5982\u4e0b\uff1a pier --repo <repository> appchain freeze","title":"3.1 \u547d\u4ee4"},{"location":"bitxhub/function/appchain/#32","text":"\u6bd4\u5982\u5bf9\u4e4b\u524d\u5df2\u7ecf\u6ce8\u518c\u8fc7\u7684\u5e94\u7528\u94fe\u8fdb\u884c\u51bb\u7ed3\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain freeze INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the freeze request was submitted successfully, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-2 \u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838\u5e76\u6295\u7968\uff0c\u4e0e\u6ce8\u518c\u5e94\u7528\u94fe\u90e8\u5206\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002","title":"3.2 \u4e3e\u4f8b"},{"location":"bitxhub/function/appchain/#4","text":"","title":"4. \u6fc0\u6d3b\u5e94\u7528\u94fe"},{"location":"bitxhub/function/appchain/#41","text":"\u5982\u679c\u51bb\u7ed3\u7684\u5e94\u7528\u94fe\u6062\u590d\u6b63\u5e38\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u53ef\u4ee5\u7533\u8bf7\u6fc0\u6d3b\u5e94\u7528\u94fe\u3002\u547d\u4ee4\u5982\u4e0b\uff1a pier --repo <repository> appchain activate","title":"4.1 \u547d\u4ee4"},{"location":"bitxhub/function/appchain/#42","text":"\u6bd4\u5982\u5bf9\u4e4b\u524d\u5df2\u7ecf\u51bb\u7ed3\u7684\u5e94\u7528\u94fe\u8fdb\u884c\u6fc0\u6d3b\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain freeze INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the activate request was submitted successfully, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-3 \u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838\u5e76\u6295\u7968\uff0c\u4e0e\u6ce8\u518c\u5e94\u7528\u94fe\u90e8\u5206\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002","title":"4.2 \u4e3e\u4f8b"},{"location":"bitxhub/function/appchain/#5","text":"","title":"5. \u6ce8\u9500\u5e94\u7528\u94fe"},{"location":"bitxhub/function/appchain/#51","text":"\u5982\u679c\u5e94\u7528\u94fe\u9000\u51fa\u8de8\u94fe\u7cfb\u7edf\uff0c\u4e0d\u518d\u8fdb\u884c\u8de8\u94fe\uff0c\u5e94\u7528\u94fe\u7ba1\u7406\u5458\u53ef\u4ee5\u5411\u4e2d\u7ee7\u94fe\u63d0\u4ea4\u6ce8\u9500\u5e94\u7528\u94fe\u7684\u63d0\u6848\u3002\u547d\u4ee4\u5982\u4e0b\uff1a pier --repo <repository> appchain logout","title":"5.1 \u547d\u4ee4"},{"location":"bitxhub/function/appchain/#52","text":"\u6bd4\u5982\u5bf9\u4e4b\u524d\u6fc0\u6d3b\u7684\u5e94\u7528\u94fe\u8fdb\u884c\u6ce8\u9500\uff0c\u547d\u4ee4\u6267\u884c\u5982\u4e0b\uff1a $ pier appchain logout INFO [ 11 :01:25.884 ] Establish connection with bitxhub localhost:60011 successfully module = rpcx the logout request was submitted successfully, proposal id is 0x8D093dd84717042b23546cdA396cEBB2F48D8442-4 \u7ba1\u7406\u5458\u8fdb\u884c\u5ba1\u6838\u5e76\u6295\u7968\uff0c\u4e0e\u6ce8\u518c\u5e94\u7528\u94fe\u90e8\u5206\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002","title":"5.2 \u4e3e\u4f8b"},{"location":"bitxhub/function/cert_manage/","text":"\u8bc1\u4e66\u7ba1\u7406 \u4e2d\u7ee7\u94fe\u8282\u70b9\u5177\u6709\u5b8c\u5907\u7684\u8bc1\u4e66\u7ba1\u7406\u4f53\u7cfb\u7528\u4e8e\u4fdd\u8bc1\u4fe1\u606f\u548c\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u5b89\u5168\u6027\u3002 \u8bc1\u4e66\u914d\u7f6e \u8bc1\u4e66\u7ed3\u6784 \u4e2d\u7ee7\u94fe\u8282\u70b9\u4e3b\u8981\u5206\u4e09\u4e2a\u5c42\u7ea7\u7684\u8bc1\u4e66\u7ed3\u6784\uff0c\u5206\u522b\u662fca\u3001agency\u548cnode\uff0c\u5177\u4f53\u7ed3\u6784\u5982\u4e0b . \u251c\u2500\u2500 agency.cert \u251c\u2500\u2500 ca.cert \u251c\u2500\u2500 node.cert \u251c\u2500\u2500 node.priv 0 directories, 7 files \u8bc1\u4e66\u751f\u6210\u65b9\u5f0f ca\u8bc1\u4e66\u751f\u6210 # \u751f\u6210ca\u76f8\u5173\u7684\u8bc1\u4e66\u548c\u79c1\u94a5 bitxhub cert ca agency\u8bc1\u4e66\u751f\u6210 # \u6839\u636eca\u9881\u5e03agency\u7684\u8bc1\u4e66 bitxhub cert priv gen --name = agency --target = ./ bitxhub cert csr --key = agency.priv --org = agency --target = ./ bitxhub cert issue --csr = agency.csr --is_ca = true --key = ca.priv --cert = ca.cert --target = ./ node\u8bc1\u4e66\u751f\u6210 bitxhub cert priv gen --name = node --target = ./ bitxhub cert csr --key = node.priv --org = node --target = ./ bitxhub cert issue --csr = node.csr --is_ca = false --key = agency.priv --cert = agency.cert --target = ./ \u8282\u70b9\u79c1\u94a5\u914d\u7f6e \u8282\u70b9\u79c1\u94a5\u751f\u6210 bitxhub key gen --name = key --target = ./ \u8282\u70b9\u79c1\u94a5\u683c\u5f0f\u8f6c\u6362 bitxhub key gen --passwd = bitxhub --target = ./ \u8bf4\u660e\uff1a\u8282\u70b9\u79c1\u94a5\u4f1a\u8fdb\u884c\u52a0\u5bc6\uff0c\u5982\u679c\u5bc6\u7801\u4e0d\u6b63\u786e\uff0c\u4e2d\u7ee7\u94fe\u65e0\u6cd5\u542f\u52a8\uff0c\u76ee\u524d\u9ed8\u8ba4\u7684\u5bc6\u7801\u662fbitxhub\uff0c\u5982\u679c\u91c7\u7528\u5176\u4ed6\u5bc6\u7801\uff0c\u5728\u542f\u52a8\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u6307\u5b9a\u5bc6\u7801\u3002\u4ee5\u5bc6\u7801\u4e3ahub\u4e3a\u4f8b\uff0cbitxhub\u542f\u52a8\u547d\u4ee4\u4e3a\uff1abitxhub --repo ~/node1 start --passwd hub","title":"\u8bc1\u4e66\u7ba1\u7406"},{"location":"bitxhub/function/cert_manage/#_1","text":"\u4e2d\u7ee7\u94fe\u8282\u70b9\u5177\u6709\u5b8c\u5907\u7684\u8bc1\u4e66\u7ba1\u7406\u4f53\u7cfb\u7528\u4e8e\u4fdd\u8bc1\u4fe1\u606f\u548c\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u5b89\u5168\u6027\u3002","title":"\u8bc1\u4e66\u7ba1\u7406"},{"location":"bitxhub/function/cert_manage/#_2","text":"","title":"\u8bc1\u4e66\u914d\u7f6e"},{"location":"bitxhub/function/cert_manage/#_3","text":"\u4e2d\u7ee7\u94fe\u8282\u70b9\u4e3b\u8981\u5206\u4e09\u4e2a\u5c42\u7ea7\u7684\u8bc1\u4e66\u7ed3\u6784\uff0c\u5206\u522b\u662fca\u3001agency\u548cnode\uff0c\u5177\u4f53\u7ed3\u6784\u5982\u4e0b . \u251c\u2500\u2500 agency.cert \u251c\u2500\u2500 ca.cert \u251c\u2500\u2500 node.cert \u251c\u2500\u2500 node.priv 0 directories, 7 files","title":"\u8bc1\u4e66\u7ed3\u6784"},{"location":"bitxhub/function/cert_manage/#_4","text":"ca\u8bc1\u4e66\u751f\u6210 # \u751f\u6210ca\u76f8\u5173\u7684\u8bc1\u4e66\u548c\u79c1\u94a5 bitxhub cert ca agency\u8bc1\u4e66\u751f\u6210 # \u6839\u636eca\u9881\u5e03agency\u7684\u8bc1\u4e66 bitxhub cert priv gen --name = agency --target = ./ bitxhub cert csr --key = agency.priv --org = agency --target = ./ bitxhub cert issue --csr = agency.csr --is_ca = true --key = ca.priv --cert = ca.cert --target = ./ node\u8bc1\u4e66\u751f\u6210 bitxhub cert priv gen --name = node --target = ./ bitxhub cert csr --key = node.priv --org = node --target = ./ bitxhub cert issue --csr = node.csr --is_ca = false --key = agency.priv --cert = agency.cert --target = ./","title":"\u8bc1\u4e66\u751f\u6210\u65b9\u5f0f"},{"location":"bitxhub/function/cert_manage/#_5","text":"","title":"\u8282\u70b9\u79c1\u94a5\u914d\u7f6e"},{"location":"bitxhub/function/cert_manage/#_6","text":"bitxhub key gen --name = key --target = ./","title":"\u8282\u70b9\u79c1\u94a5\u751f\u6210"},{"location":"bitxhub/function/cert_manage/#_7","text":"bitxhub key gen --passwd = bitxhub --target = ./ \u8bf4\u660e\uff1a\u8282\u70b9\u79c1\u94a5\u4f1a\u8fdb\u884c\u52a0\u5bc6\uff0c\u5982\u679c\u5bc6\u7801\u4e0d\u6b63\u786e\uff0c\u4e2d\u7ee7\u94fe\u65e0\u6cd5\u542f\u52a8\uff0c\u76ee\u524d\u9ed8\u8ba4\u7684\u5bc6\u7801\u662fbitxhub\uff0c\u5982\u679c\u91c7\u7528\u5176\u4ed6\u5bc6\u7801\uff0c\u5728\u542f\u52a8\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u6307\u5b9a\u5bc6\u7801\u3002\u4ee5\u5bc6\u7801\u4e3ahub\u4e3a\u4f8b\uff0cbitxhub\u542f\u52a8\u547d\u4ee4\u4e3a\uff1abitxhub --repo ~/node1 start --passwd hub","title":"\u8282\u70b9\u79c1\u94a5\u683c\u5f0f\u8f6c\u6362"},{"location":"bitxhub/function/cross_invoke/","text":"\u8de8\u94fe\u5408\u7ea6\u8c03\u7528 BitXHub\u8de8\u94fe\u7cfb\u7edf\u4e2d\uff0c\u8de8\u94fe\u5408\u7ea6\u6709\u4e24\u4e2a\u6982\u5ff5\uff1a \u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6broker \u4e2d\u7ee7\u94fe\u4e0a\u7528\u4e8e\u5904\u7406\u8de8\u94fe\u4ea4\u6613\u7684\u5185\u7f6e\u5408\u7ea6 \u5e94\u7528\u94fe\u4e0a\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u7684\u8c03\u7528\u53ef\u4ee5\u53c2\u89c1 \u8de8\u94fe\u5408\u7ea6 \u3002\u672c\u6587\u4e3b\u8981\u8bb2\u89e3\u5982\u4f55\u8c03\u7528BitXHub\u5185\u7f6e\u7684\u8de8\u94fe\u5408\u7ea6\u3002 \u5408\u7ea6\u63a5\u53e3 \u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u5408\u7ea6\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u63a5\u53e3\u53ef\u4ee5\u5ba2\u6237\u7aef\u8c03\u7528\uff1a // HandleIBTP check the received IBTP and post event for router to handle func HandleIBTP ( ibtp * pb . IBTP ) * boltvm . Response // Interchain returns information of the interchain count, Receipt count and SourceReceipt count func Interchain () * boltvm . Response // GetInterchain returns information of the interchain count, Receipt count and SourceReceipt count by id func GetInterchain ( id string ) * boltvm . Response // GetIBTPByID get the transaction hash which contains the IBTP by IBTP id func GetIBTPByID ( id string ) * boltvm . Response \u63a5\u53e3\u8bf4\u660e HandleIBTP \u5f53\u8de8\u94fe\u7f51\u5173\u6355\u83b7\u5e94\u7528\u94fe\u629b\u51fa\u5f53\u8de8\u94fe\u4e8b\u4ef6\uff0c\u5e76\u5c06\u5176\u5c01\u88c5\u6210IBTP\u4ee5\u540e\uff0c\u5c31\u9700\u8981\u5411\u4e2d\u7ee7\u94fe\u53d1\u9001\u4ea4\u6613\u8c03\u7528\u8be5\u63a5\u53e3\u3002 \u8be5\u63a5\u53e3\u4e3b\u8981\u4f5c\u7528\u662f\u9a8c\u8bc1IBTP\u7684\u6765\u6e90\u94fe\u3001\u76ee\u7684\u94fe\u72b6\u6001\u548cIBTP index\uff0c\u66f4\u65b0\u6765\u6e90\u94fe\u548c\u76ee\u7684\u94fe\u5728\u4e2d\u7ee7\u94fe\u4e0a\u7684interchain\u6570\u636e\uff0c\u8bb0\u5f55\u5f53\u524dIBTP ID\u548c\u5f53\u524d\u4ea4\u6613HASH\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u5e76\u629b\u51fa\u4e8b\u4ef6\u3002 \u8be5\u63a5\u53e3\u63a5\u6536\u7684\u53c2\u6570\u4e3aIBTP\u3002 Interchain \u8be5\u63a5\u53e3\u7528\u4e8e\u83b7\u53d6\u53d1\u8d77\u4ea4\u6613\u7684\u5e94\u7528\u94fe\u7684interchain\u6570\u636e\uff0c\u5176\u4e2d\u5305\u542b\u8be5\u5e94\u7528\u94fe\u5411\u5176\u4ed6\u5404\u6761\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u7684\u6570\u91cf\u548c\u6536\u5230\u7684\u56de\u6267\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u5176\u4ed6\u5e94\u7528\u94fe\u5411\u8be5\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u7684\u6570\u91cf\u3002 \u8be5\u63a5\u53e3\u4e0d\u9700\u8981\u53c2\u6570\u3002 GetInterchain \u8be5\u63a5\u53e3\u7528\u4e8e\u83b7\u53d6\u6307\u5b9a\u5e94\u7528\u94fe\u7684interchain\u6570\u636e\uff0c\u5176\u4e2d\u5305\u542b\u8be5\u5e94\u7528\u94fe\u5411\u5176\u4ed6\u5404\u6761\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u7684\u6570\u91cf\u548c\u6536\u5230\u7684\u56de\u6267\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u5176\u4ed6\u5e94\u7528\u94fe\u5411\u8be5\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u7684\u6570\u91cf\u3002 \u8be5\u63a5\u53e3\u63a5\u6536\u7684\u53c2\u6570\u4e3a\u5e94\u7528\u94feID\u3002 GetIBTPByID \u8be5\u63a5\u53e3\u7528\u4e8e\u83b7\u53d6\u5305\u542b\u6307\u5b9aIBTP\u7684\u4ea4\u6613\u7684HASH\u3002\uff08\u8be5IBTP ID\u548c\u4ea4\u6613HASH\u7684\u5bf9\u5e94\u5173\u7cfb\u5728HandleIBTP\u65f6\u8bb0\u5f55\uff09 \u8be5\u63a5\u53e3\u63a5\u6536\u7684\u53c2\u6570\u4e3aIBTP ID\u3002","title":"\u8de8\u94fe\u5408\u7ea6\u8c03\u7528"},{"location":"bitxhub/function/cross_invoke/#_1","text":"BitXHub\u8de8\u94fe\u7cfb\u7edf\u4e2d\uff0c\u8de8\u94fe\u5408\u7ea6\u6709\u4e24\u4e2a\u6982\u5ff5\uff1a \u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6broker \u4e2d\u7ee7\u94fe\u4e0a\u7528\u4e8e\u5904\u7406\u8de8\u94fe\u4ea4\u6613\u7684\u5185\u7f6e\u5408\u7ea6 \u5e94\u7528\u94fe\u4e0a\u7684\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\u7684\u8c03\u7528\u53ef\u4ee5\u53c2\u89c1 \u8de8\u94fe\u5408\u7ea6 \u3002\u672c\u6587\u4e3b\u8981\u8bb2\u89e3\u5982\u4f55\u8c03\u7528BitXHub\u5185\u7f6e\u7684\u8de8\u94fe\u5408\u7ea6\u3002","title":"\u8de8\u94fe\u5408\u7ea6\u8c03\u7528"},{"location":"bitxhub/function/cross_invoke/#_2","text":"\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u5408\u7ea6\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u63a5\u53e3\u53ef\u4ee5\u5ba2\u6237\u7aef\u8c03\u7528\uff1a // HandleIBTP check the received IBTP and post event for router to handle func HandleIBTP ( ibtp * pb . IBTP ) * boltvm . Response // Interchain returns information of the interchain count, Receipt count and SourceReceipt count func Interchain () * boltvm . Response // GetInterchain returns information of the interchain count, Receipt count and SourceReceipt count by id func GetInterchain ( id string ) * boltvm . Response // GetIBTPByID get the transaction hash which contains the IBTP by IBTP id func GetIBTPByID ( id string ) * boltvm . Response","title":"\u5408\u7ea6\u63a5\u53e3"},{"location":"bitxhub/function/cross_invoke/#_3","text":"HandleIBTP \u5f53\u8de8\u94fe\u7f51\u5173\u6355\u83b7\u5e94\u7528\u94fe\u629b\u51fa\u5f53\u8de8\u94fe\u4e8b\u4ef6\uff0c\u5e76\u5c06\u5176\u5c01\u88c5\u6210IBTP\u4ee5\u540e\uff0c\u5c31\u9700\u8981\u5411\u4e2d\u7ee7\u94fe\u53d1\u9001\u4ea4\u6613\u8c03\u7528\u8be5\u63a5\u53e3\u3002 \u8be5\u63a5\u53e3\u4e3b\u8981\u4f5c\u7528\u662f\u9a8c\u8bc1IBTP\u7684\u6765\u6e90\u94fe\u3001\u76ee\u7684\u94fe\u72b6\u6001\u548cIBTP index\uff0c\u66f4\u65b0\u6765\u6e90\u94fe\u548c\u76ee\u7684\u94fe\u5728\u4e2d\u7ee7\u94fe\u4e0a\u7684interchain\u6570\u636e\uff0c\u8bb0\u5f55\u5f53\u524dIBTP ID\u548c\u5f53\u524d\u4ea4\u6613HASH\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u5e76\u629b\u51fa\u4e8b\u4ef6\u3002 \u8be5\u63a5\u53e3\u63a5\u6536\u7684\u53c2\u6570\u4e3aIBTP\u3002 Interchain \u8be5\u63a5\u53e3\u7528\u4e8e\u83b7\u53d6\u53d1\u8d77\u4ea4\u6613\u7684\u5e94\u7528\u94fe\u7684interchain\u6570\u636e\uff0c\u5176\u4e2d\u5305\u542b\u8be5\u5e94\u7528\u94fe\u5411\u5176\u4ed6\u5404\u6761\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u7684\u6570\u91cf\u548c\u6536\u5230\u7684\u56de\u6267\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u5176\u4ed6\u5e94\u7528\u94fe\u5411\u8be5\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u7684\u6570\u91cf\u3002 \u8be5\u63a5\u53e3\u4e0d\u9700\u8981\u53c2\u6570\u3002 GetInterchain \u8be5\u63a5\u53e3\u7528\u4e8e\u83b7\u53d6\u6307\u5b9a\u5e94\u7528\u94fe\u7684interchain\u6570\u636e\uff0c\u5176\u4e2d\u5305\u542b\u8be5\u5e94\u7528\u94fe\u5411\u5176\u4ed6\u5404\u6761\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u7684\u6570\u91cf\u548c\u6536\u5230\u7684\u56de\u6267\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u5176\u4ed6\u5e94\u7528\u94fe\u5411\u8be5\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u7684\u6570\u91cf\u3002 \u8be5\u63a5\u53e3\u63a5\u6536\u7684\u53c2\u6570\u4e3a\u5e94\u7528\u94feID\u3002 GetIBTPByID \u8be5\u63a5\u53e3\u7528\u4e8e\u83b7\u53d6\u5305\u542b\u6307\u5b9aIBTP\u7684\u4ea4\u6613\u7684HASH\u3002\uff08\u8be5IBTP ID\u548c\u4ea4\u6613HASH\u7684\u5bf9\u5e94\u5173\u7cfb\u5728HandleIBTP\u65f6\u8bb0\u5f55\uff09 \u8be5\u63a5\u53e3\u63a5\u6536\u7684\u53c2\u6570\u4e3aIBTP ID\u3002","title":"\u63a5\u53e3\u8bf4\u660e"},{"location":"bitxhub/introduction/advantage/","text":"\u4ea7\u54c1\u4f18\u52bf \u53ef\u6269\u5c55 \u5e94\u7528\u94fe\u53ef\u6269\u5c55\uff1a\u5e94\u7528\u94fe\u53ef\u52a8\u6001\u6ce8\u518c\u5230\u4e2d\u7ee7\u94fe\uff0c\u968f\u65f6\u52a0\u5165\u8de8\u94fe\u4e2d\u7ee7\u8054\u76df \u8de8\u94fe\u5c42\u7ea7\u53ef\u6269\u5c55\uff1a\u591a\u4e2a\u4e2d\u7ee7\u8054\u76df\u53ef\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u7ec4\u6210\u591a\u5c42\u7ea7\u7684\u8de8\u94fe\u8def\u7531\u7f51\u7edc\uff0c\u5b9e\u73b0\u8de8\u5c42\u7ea7\u9ad8\u6548\u8def\u7531 \u9ad8\u53ef\u7528 \u8de8\u94fe\u4ea4\u6613\u4e25\u683c\u6309\u7167\u9012\u589e\u5e8f\u53f7\u8fdb\u884c\u9a8c\u8bc1\u548c\u6267\u884c \u4efb\u610f\u7ec4\u4ef6\u5b95\u673a\u65f6\u5747\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6613\u65e5\u5fd7\u8fdb\u884c\u5931\u6548\u6062\u590d \u4e2d\u7ee7\u94fe\u4f7f\u7528\u9ad8\u53ef\u7528\u7684RBFT\u5171\u8bc6\u673a\u5236 \u6613\u63a5\u5165 \u8de8\u94fe\u7f51\u5173\u4ee5\u63d2\u4ef6\u5f62\u5f0f\u9002\u914d\u5404\u7c7b\u5e94\u7528\u94fe\uff0c\u907f\u514d\u4fb5\u5165\u6027\u5f71\u54cd \u5728\u8de8\u94fe\u7f51\u5173\u4e0d\u505c\u673a\u7684\u60c5\u51b5\u4e0b\u52a8\u6001\u8fdb\u884c\u5e94\u7528\u94fe\u4e0e\u63d2\u4ef6\u66f4\u65b0 \u591a\u4e2d\u5fc3 \u4ee5\u5206\u5e03\u5f0f\u7684\u533a\u5757\u94fe\u96c6\u7fa4\u4f5c\u4e3a\u8de8\u94fe\u53ef\u4fe1\u4e2d\u7ee7 \u591a\u65b9\u5171\u540c\u76d1\u7ba1\u7ef4\u62a4\u8de8\u94fe\u5e73\u53f0\uff0c\u8de8\u94fe\u4ea4\u6613\u5bf9\u53c2\u4e0e\u65b9\u516c\u5f00\u900f\u660e \u8de8\u94fe\u4ea4\u6613\u4ee5\u94fe\u5f0f\u7ed3\u6784\u5b58\u50a8\uff0c\u96be\u4ee5\u7be1\u6539\u4e14\u4fbf\u4e8e\u5ba1\u8ba1","title":"\u4ea7\u54c1\u4f18\u52bf"},{"location":"bitxhub/introduction/advantage/#_1","text":"","title":"\u4ea7\u54c1\u4f18\u52bf"},{"location":"bitxhub/introduction/advantage/#_2","text":"\u5e94\u7528\u94fe\u53ef\u6269\u5c55\uff1a\u5e94\u7528\u94fe\u53ef\u52a8\u6001\u6ce8\u518c\u5230\u4e2d\u7ee7\u94fe\uff0c\u968f\u65f6\u52a0\u5165\u8de8\u94fe\u4e2d\u7ee7\u8054\u76df \u8de8\u94fe\u5c42\u7ea7\u53ef\u6269\u5c55\uff1a\u591a\u4e2a\u4e2d\u7ee7\u8054\u76df\u53ef\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u7ec4\u6210\u591a\u5c42\u7ea7\u7684\u8de8\u94fe\u8def\u7531\u7f51\u7edc\uff0c\u5b9e\u73b0\u8de8\u5c42\u7ea7\u9ad8\u6548\u8def\u7531","title":"\u53ef\u6269\u5c55"},{"location":"bitxhub/introduction/advantage/#_3","text":"\u8de8\u94fe\u4ea4\u6613\u4e25\u683c\u6309\u7167\u9012\u589e\u5e8f\u53f7\u8fdb\u884c\u9a8c\u8bc1\u548c\u6267\u884c \u4efb\u610f\u7ec4\u4ef6\u5b95\u673a\u65f6\u5747\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6613\u65e5\u5fd7\u8fdb\u884c\u5931\u6548\u6062\u590d \u4e2d\u7ee7\u94fe\u4f7f\u7528\u9ad8\u53ef\u7528\u7684RBFT\u5171\u8bc6\u673a\u5236","title":"\u9ad8\u53ef\u7528"},{"location":"bitxhub/introduction/advantage/#_4","text":"\u8de8\u94fe\u7f51\u5173\u4ee5\u63d2\u4ef6\u5f62\u5f0f\u9002\u914d\u5404\u7c7b\u5e94\u7528\u94fe\uff0c\u907f\u514d\u4fb5\u5165\u6027\u5f71\u54cd \u5728\u8de8\u94fe\u7f51\u5173\u4e0d\u505c\u673a\u7684\u60c5\u51b5\u4e0b\u52a8\u6001\u8fdb\u884c\u5e94\u7528\u94fe\u4e0e\u63d2\u4ef6\u66f4\u65b0","title":"\u6613\u63a5\u5165"},{"location":"bitxhub/introduction/advantage/#_5","text":"\u4ee5\u5206\u5e03\u5f0f\u7684\u533a\u5757\u94fe\u96c6\u7fa4\u4f5c\u4e3a\u8de8\u94fe\u53ef\u4fe1\u4e2d\u7ee7 \u591a\u65b9\u5171\u540c\u76d1\u7ba1\u7ef4\u62a4\u8de8\u94fe\u5e73\u53f0\uff0c\u8de8\u94fe\u4ea4\u6613\u5bf9\u53c2\u4e0e\u65b9\u516c\u5f00\u900f\u660e \u8de8\u94fe\u4ea4\u6613\u4ee5\u94fe\u5f0f\u7ed3\u6784\u5b58\u50a8\uff0c\u96be\u4ee5\u7be1\u6539\u4e14\u4fbf\u4e8e\u5ba1\u8ba1","title":"\u591a\u4e2d\u5fc3"},{"location":"bitxhub/introduction/arch/","text":"\u6280\u672f\u67b6\u6784 BitXHub\u4e2d\u7ee7\u94fe\u7684\u6280\u672f\u67b6\u6784\u81ea\u4e0b\u800c\u4e0a\u5206\u4e3a\u7269\u7406\u5c42\u3001\u57fa\u7840\u5c42\u3001\u8de8\u94fe\u670d\u52a1\u5c42\u3001\u63a5\u53e3\u5c42\u56db\u4e2a\u90e8\u5206\u3002 \u7b2c\u4e00\u5c42\u662f\u7269\u7406\u5c42\uff0c\u4e2d\u7ee7\u94fe\u7684\u8bbe\u8ba1\u4e3a\u4e86\u6ee1\u8db3\u4e0d\u540c\u573a\u666f\u4e0b\u7528\u6237\u7269\u7406\u73af\u5883\u9700\u6c42\uff0c\u652f\u6301\u5728\u666e\u901a\u7269\u7406\u673a\u3001\u4e91\u4e3b\u673a\u6216\u8005\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e0a\u7a33\u5b9a\u8fd0\u884c\uff0c\u517c\u987e\u591a\u573a\u666f\u9002\u7528\u6027\u3002 \u7b2c\u4e8c\u5c42\u662f\u57fa\u7840\u5c42\uff0c\u8fd9\u4e00\u5c42\u5305\u542b\u4e86\u8054\u76df\u94fe\u672c\u8eab\u9700\u8981\u5177\u5907\u7684\u6a21\u5757\uff0c\u6bd4\u5982\u7f51\u7edc\u6a21\u5757\u3001\u5b58\u50a8\u6a21\u5757\u3001\u5171\u8bc6\u6a21\u5757\u3001\u865a\u62df\u673a\u3001\u9690\u79c1\u5b89\u5168\u6a21\u5757\u3002 P2P\u7f51\u7edc\u662f\u8282\u70b9\u4e4b\u95f4\u5171\u8bc6\u548c\u4fe1\u606f\u4f20\u9012\u7684\u901a\u9053\uff0c\u662f\u5e73\u53f0\u7684\u7f51\u7edc\u901a\u4fe1\u57fa\u7840\u3002\u76ee\u524d\u5e73\u53f0\u91c7\u7528Libp2p\u7f51\u7edc\u5e93\uff0c\u652f\u6301TCP\u548cQUIC\u7b49\u4e0d\u540c\u7684\u4f20\u8f93\u534f\u8bae\uff0c\u6ee1\u8db3\u4e0d\u540c\u7f51\u7edc\u6761\u4ef6\u4e0b\u7684\u7a33\u5b9a\u901a\u4fe1\u3002 \u6839\u636e\u6570\u636e\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u5e73\u53f0\u8bbe\u8ba1\u4e86\u7b26\u5408\u76f8\u5e94\u7c7b\u578b\u7684\u5b58\u50a8\u6a21\u5f0f\u3002\u7528\u4e8e\u4fdd\u8bc1\u6570\u636e\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u548c\u6301\u4e45\u6027\uff0c\u5e73\u53f0\u9009\u7528WAL(Write Ahead Log) \u9884\u5199\u65e5\u5fd7\uff1b\u9488\u5bf9\u968f\u673a\u6027\u8f83\u5f3a\u7684Key/Value\u7c7b\u578b\u7684\u533a\u5757\u94fe\u72b6\u6001\u6570\u636e\uff0c\u5e73\u53f0\u9009\u7528\u9ad8\u6027\u80fd\u5b58\u50a8\u5f15\u64ceLevelDB\u3002 \u865a\u62df\u673a\u6a21\u5757\u6574\u5408\u4e86\u80fd\u591f\u5b8c\u6210\u590d\u6742\u903b\u8f91\u9a8c\u8bc1\u7684Webassembly\u865a\u62df\u673a\uff0c\u5bf9\u8de8\u94fe\u4ea4\u6613\u8fdb\u884c\u9a8c\u8bc1\u3002 \u91c7\u7528\u53ef\u63d2\u62d4\u7684\u52a0\u5bc6\u673a\u5236\uff0c\u5bf9\u4e8e\u4e1a\u52a1\u5b8c\u6574\u751f\u547d\u5468\u671f\u6240\u6d89\u53ca\u7684\u6570\u636e\u3001\u901a\u4fe1\u4f20\u8f93\u3001\u7269\u7406\u8fde\u63a5\u7b49\u65b9\u9762\u90fd\u8fdb\u884c\u4e86\u4e0d\u540c\u7b56\u7565\u7684\u52a0\u5bc6\uff0c\u901a\u8fc7\u591a\u7ea7\u52a0\u5bc6\u4fdd\u8bc1\u5e73\u53f0\u6570\u636e\u7684\u5b89\u5168\uff0c\u800c\u4e14\u5b8c\u5168\u652f\u6301\u56fd\u5bc6\u7b97\u6cd5\u3002 \u7b2c\u4e09\u5c42\u662f\u8de8\u94fe\u76f8\u5173\u7684\u670d\u52a1\u5c42\uff0c\u5305\u62ec\u5e94\u7528\u94fe\u7ba1\u7406\u6a21\u5757\u3001\u6267\u884c\u6a21\u5757\u3001\u4e8b\u52a1\u7ba1\u7406\u6a21\u5757\u3001\u9a8c\u8bc1\u5f15\u64ce\u6a21\u5757\u548c\u9690\u79c1\u4fdd\u62a4\u6a21\u5757\uff0c\u5404\u6a21\u5757\u4e92\u76f8\u534f\u4f5c\u5b8c\u6210\u4e2d\u7ee7\u8de8\u94fe\u6d41\u7a0b\u3002 \u94fe\u7ba1\u7406\u6a21\u5757\u4e3b\u8981\u8d1f\u8d23\u5e94\u7528\u94fe\u6ce8\u518c\u3001\u5ba1\u6838\u548c\u51bb\u7ed3\u7b49\u64cd\u4f5c\uff1b \u6267\u884c\u6a21\u5757\u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u7684\u68c0\u67e5\u3001\u5904\u7406\u548c\u9a8c\u8bc1\u5de5\u4f5c\uff1b \u4e8b\u52a1\u7ba1\u7406\u6a21\u5757\u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u5728\u6574\u4e2a\u7cfb\u7edf\u5904\u7406\u7684\u4e00\u81f4\u6027\uff1b \u9a8c\u8bc1\u5f15\u64ce\u6a21\u5757\u5728Webassembly\u865a\u62df\u673a\u4e4b\u4e0a\u5b9e\u73b0\u4e86\u8de8\u94fe\u4ea4\u6613\u5b58\u5728\u6027\u548c\u6709\u6548\u6027\u7684\u9a8c\u8bc1\u903b\u8f91\uff1b \u9690\u79c1\u4fdd\u62a4\u6a21\u5757\u63d0\u4f9b\u5bf9\u4e8e\u8de8\u94fe\u6570\u636e\u672c\u8eab\u7684\u9690\u79c1\u4fdd\u62a4\u529f\u80fd\u3002 \u7b2c\u56db\u5c42\u662f\u63a5\u53e3\u5c42\uff0c\u4e2d\u7ee7\u94fe\u5bf9\u5916\u63d0\u4f9bgRPC\u548cRestful\u4e24\u79cd\u63a5\u53e3\u670d\u52a1\uff0c\u652f\u6301\u4e0d\u540c\u573a\u666f\u4e0b\u7528\u6237\u7684\u4f7f\u7528\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u80fd\u591f\u652f\u6301\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u8de8\u94fe\u4ea4\u6613\u8def\u7531\u548c\u53ef\u4fe1\u9a8c\u8bc1\uff0cBitXHub\u8bbe\u8ba1\u4e86\u901a\u7528\u7684\u8de8\u94fe\u4f20\u8f93\u534f\u8baeIBTP\uff08InterBlockchain Transfer Protocol\uff09\uff0c\u5141\u8bb8\u5f02\u6784\u8d44\u4ea7\u3001\u6570\u636e\u53ca\u670d\u52a1\u8fdb\u884c\u8de8\u94fe\u8c03\u7528\u3002","title":"\u6280\u672f\u67b6\u6784"},{"location":"bitxhub/introduction/arch/#_1","text":"BitXHub\u4e2d\u7ee7\u94fe\u7684\u6280\u672f\u67b6\u6784\u81ea\u4e0b\u800c\u4e0a\u5206\u4e3a\u7269\u7406\u5c42\u3001\u57fa\u7840\u5c42\u3001\u8de8\u94fe\u670d\u52a1\u5c42\u3001\u63a5\u53e3\u5c42\u56db\u4e2a\u90e8\u5206\u3002 \u7b2c\u4e00\u5c42\u662f\u7269\u7406\u5c42\uff0c\u4e2d\u7ee7\u94fe\u7684\u8bbe\u8ba1\u4e3a\u4e86\u6ee1\u8db3\u4e0d\u540c\u573a\u666f\u4e0b\u7528\u6237\u7269\u7406\u73af\u5883\u9700\u6c42\uff0c\u652f\u6301\u5728\u666e\u901a\u7269\u7406\u673a\u3001\u4e91\u4e3b\u673a\u6216\u8005\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e0a\u7a33\u5b9a\u8fd0\u884c\uff0c\u517c\u987e\u591a\u573a\u666f\u9002\u7528\u6027\u3002 \u7b2c\u4e8c\u5c42\u662f\u57fa\u7840\u5c42\uff0c\u8fd9\u4e00\u5c42\u5305\u542b\u4e86\u8054\u76df\u94fe\u672c\u8eab\u9700\u8981\u5177\u5907\u7684\u6a21\u5757\uff0c\u6bd4\u5982\u7f51\u7edc\u6a21\u5757\u3001\u5b58\u50a8\u6a21\u5757\u3001\u5171\u8bc6\u6a21\u5757\u3001\u865a\u62df\u673a\u3001\u9690\u79c1\u5b89\u5168\u6a21\u5757\u3002 P2P\u7f51\u7edc\u662f\u8282\u70b9\u4e4b\u95f4\u5171\u8bc6\u548c\u4fe1\u606f\u4f20\u9012\u7684\u901a\u9053\uff0c\u662f\u5e73\u53f0\u7684\u7f51\u7edc\u901a\u4fe1\u57fa\u7840\u3002\u76ee\u524d\u5e73\u53f0\u91c7\u7528Libp2p\u7f51\u7edc\u5e93\uff0c\u652f\u6301TCP\u548cQUIC\u7b49\u4e0d\u540c\u7684\u4f20\u8f93\u534f\u8bae\uff0c\u6ee1\u8db3\u4e0d\u540c\u7f51\u7edc\u6761\u4ef6\u4e0b\u7684\u7a33\u5b9a\u901a\u4fe1\u3002 \u6839\u636e\u6570\u636e\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u5e73\u53f0\u8bbe\u8ba1\u4e86\u7b26\u5408\u76f8\u5e94\u7c7b\u578b\u7684\u5b58\u50a8\u6a21\u5f0f\u3002\u7528\u4e8e\u4fdd\u8bc1\u6570\u636e\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u548c\u6301\u4e45\u6027\uff0c\u5e73\u53f0\u9009\u7528WAL(Write Ahead Log) \u9884\u5199\u65e5\u5fd7\uff1b\u9488\u5bf9\u968f\u673a\u6027\u8f83\u5f3a\u7684Key/Value\u7c7b\u578b\u7684\u533a\u5757\u94fe\u72b6\u6001\u6570\u636e\uff0c\u5e73\u53f0\u9009\u7528\u9ad8\u6027\u80fd\u5b58\u50a8\u5f15\u64ceLevelDB\u3002 \u865a\u62df\u673a\u6a21\u5757\u6574\u5408\u4e86\u80fd\u591f\u5b8c\u6210\u590d\u6742\u903b\u8f91\u9a8c\u8bc1\u7684Webassembly\u865a\u62df\u673a\uff0c\u5bf9\u8de8\u94fe\u4ea4\u6613\u8fdb\u884c\u9a8c\u8bc1\u3002 \u91c7\u7528\u53ef\u63d2\u62d4\u7684\u52a0\u5bc6\u673a\u5236\uff0c\u5bf9\u4e8e\u4e1a\u52a1\u5b8c\u6574\u751f\u547d\u5468\u671f\u6240\u6d89\u53ca\u7684\u6570\u636e\u3001\u901a\u4fe1\u4f20\u8f93\u3001\u7269\u7406\u8fde\u63a5\u7b49\u65b9\u9762\u90fd\u8fdb\u884c\u4e86\u4e0d\u540c\u7b56\u7565\u7684\u52a0\u5bc6\uff0c\u901a\u8fc7\u591a\u7ea7\u52a0\u5bc6\u4fdd\u8bc1\u5e73\u53f0\u6570\u636e\u7684\u5b89\u5168\uff0c\u800c\u4e14\u5b8c\u5168\u652f\u6301\u56fd\u5bc6\u7b97\u6cd5\u3002 \u7b2c\u4e09\u5c42\u662f\u8de8\u94fe\u76f8\u5173\u7684\u670d\u52a1\u5c42\uff0c\u5305\u62ec\u5e94\u7528\u94fe\u7ba1\u7406\u6a21\u5757\u3001\u6267\u884c\u6a21\u5757\u3001\u4e8b\u52a1\u7ba1\u7406\u6a21\u5757\u3001\u9a8c\u8bc1\u5f15\u64ce\u6a21\u5757\u548c\u9690\u79c1\u4fdd\u62a4\u6a21\u5757\uff0c\u5404\u6a21\u5757\u4e92\u76f8\u534f\u4f5c\u5b8c\u6210\u4e2d\u7ee7\u8de8\u94fe\u6d41\u7a0b\u3002 \u94fe\u7ba1\u7406\u6a21\u5757\u4e3b\u8981\u8d1f\u8d23\u5e94\u7528\u94fe\u6ce8\u518c\u3001\u5ba1\u6838\u548c\u51bb\u7ed3\u7b49\u64cd\u4f5c\uff1b \u6267\u884c\u6a21\u5757\u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u7684\u68c0\u67e5\u3001\u5904\u7406\u548c\u9a8c\u8bc1\u5de5\u4f5c\uff1b \u4e8b\u52a1\u7ba1\u7406\u6a21\u5757\u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u5728\u6574\u4e2a\u7cfb\u7edf\u5904\u7406\u7684\u4e00\u81f4\u6027\uff1b \u9a8c\u8bc1\u5f15\u64ce\u6a21\u5757\u5728Webassembly\u865a\u62df\u673a\u4e4b\u4e0a\u5b9e\u73b0\u4e86\u8de8\u94fe\u4ea4\u6613\u5b58\u5728\u6027\u548c\u6709\u6548\u6027\u7684\u9a8c\u8bc1\u903b\u8f91\uff1b \u9690\u79c1\u4fdd\u62a4\u6a21\u5757\u63d0\u4f9b\u5bf9\u4e8e\u8de8\u94fe\u6570\u636e\u672c\u8eab\u7684\u9690\u79c1\u4fdd\u62a4\u529f\u80fd\u3002 \u7b2c\u56db\u5c42\u662f\u63a5\u53e3\u5c42\uff0c\u4e2d\u7ee7\u94fe\u5bf9\u5916\u63d0\u4f9bgRPC\u548cRestful\u4e24\u79cd\u63a5\u53e3\u670d\u52a1\uff0c\u652f\u6301\u4e0d\u540c\u573a\u666f\u4e0b\u7528\u6237\u7684\u4f7f\u7528\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u80fd\u591f\u652f\u6301\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u8de8\u94fe\u4ea4\u6613\u8def\u7531\u548c\u53ef\u4fe1\u9a8c\u8bc1\uff0cBitXHub\u8bbe\u8ba1\u4e86\u901a\u7528\u7684\u8de8\u94fe\u4f20\u8f93\u534f\u8baeIBTP\uff08InterBlockchain Transfer Protocol\uff09\uff0c\u5141\u8bb8\u5f02\u6784\u8d44\u4ea7\u3001\u6570\u636e\u53ca\u670d\u52a1\u8fdb\u884c\u8de8\u94fe\u8c03\u7528\u3002","title":"\u6280\u672f\u67b6\u6784"},{"location":"bitxhub/introduction/conception/","text":"\u57fa\u672c\u6982\u5ff5 \u4e2d\u7ee7\u94fe \u4e2d\u7ee7\u94fe\u662f\u5177\u6709\u9a8c\u8bc1\u8de8\u94fe\u6d88\u606f\u548c\u8f6c\u53d1\u8de8\u94fe\u6d88\u606f\u7684\u80fd\u529b\u7684\u53bb\u4e2d\u5fc3\u5316\u53ef\u4fe1\u4e2d\u4ecb\u3002 \u8de8\u94fe\u7f51\u5173 \u5728\u540c\u6784\u6216\u5f02\u6784\u533a\u5757\u94fe\u95f4\u8fdb\u884c\u4ea4\u6613\u6536\u96c6\u3001\u8f6c\u6362\u3001\u4f20\u8f93\u7684\u670d\u52a1\u7a0b\u5e8f\u3002 \u5e94\u7528\u94fe \u8d1f\u8d23\u627f\u8f7d\u4e0d\u540c\u5e94\u7528\u573a\u666f\u4e0b\u7684\u5177\u4f53\u5e94\u7528\u7684\u4e1a\u52a1\u5408\u7ea6\u903b\u8f91\u3002 \u8de8\u94fe\u4f20\u8f93\u534f\u8bae \u901a\u7528\u7684\u8de8\u94fe\u4f20\u8f93\u534f\u8baeIBTP\uff08InterBlockchain Transfer Protocol\uff09,\u5141\u8bb8\u5f02\u6784\u8d44\u4ea7\u3001\u6570\u636e\u53ca\u670d\u52a1\u8fdb\u884c\u8de8\u94fe\u8c03\u7528 \u9a8c\u8bc1\u5f15\u64ce \u5bf9\u4e8e\u4e0d\u540c\u7684\u8de8\u94fe\u4ea4\u6613\u6240\u91c7\u7528\u4e0d\u540c\u7684\u9a8c\u8bc1\u89c4\u5219\u7b56\u7565\uff0c\u9a8c\u8bc1\u5f15\u64ce\u4f1a\u6839\u636e\u89c4\u5219\u5730\u5740\u6765\u5224\u65ad\u91c7\u7528\u4e0d\u540c\u7684\u9a8c\u8bc1\u5668\u8fdb\u884c\u9a8c\u8bc1 \u54c8\u5e0c\u65f6\u95f4\u9501\u5b9a \u4e00\u79cd\u57fa\u4e8e\u65f6\u95f4\u5dee\u548c\u9690\u85cf\u54c8\u5e0c\u503c\u5b8c\u6210\u8de8\u94fe\u8d44\u4ea7\u539f\u5b50\u6027\u4ea4\u6362\u7684\u6280\u672f\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"bitxhub/introduction/conception/#_1","text":"","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"bitxhub/introduction/conception/#_2","text":"\u4e2d\u7ee7\u94fe\u662f\u5177\u6709\u9a8c\u8bc1\u8de8\u94fe\u6d88\u606f\u548c\u8f6c\u53d1\u8de8\u94fe\u6d88\u606f\u7684\u80fd\u529b\u7684\u53bb\u4e2d\u5fc3\u5316\u53ef\u4fe1\u4e2d\u4ecb\u3002","title":"\u4e2d\u7ee7\u94fe"},{"location":"bitxhub/introduction/conception/#_3","text":"\u5728\u540c\u6784\u6216\u5f02\u6784\u533a\u5757\u94fe\u95f4\u8fdb\u884c\u4ea4\u6613\u6536\u96c6\u3001\u8f6c\u6362\u3001\u4f20\u8f93\u7684\u670d\u52a1\u7a0b\u5e8f\u3002","title":"\u8de8\u94fe\u7f51\u5173"},{"location":"bitxhub/introduction/conception/#_4","text":"\u8d1f\u8d23\u627f\u8f7d\u4e0d\u540c\u5e94\u7528\u573a\u666f\u4e0b\u7684\u5177\u4f53\u5e94\u7528\u7684\u4e1a\u52a1\u5408\u7ea6\u903b\u8f91\u3002","title":"\u5e94\u7528\u94fe"},{"location":"bitxhub/introduction/conception/#_5","text":"\u901a\u7528\u7684\u8de8\u94fe\u4f20\u8f93\u534f\u8baeIBTP\uff08InterBlockchain Transfer Protocol\uff09,\u5141\u8bb8\u5f02\u6784\u8d44\u4ea7\u3001\u6570\u636e\u53ca\u670d\u52a1\u8fdb\u884c\u8de8\u94fe\u8c03\u7528","title":"\u8de8\u94fe\u4f20\u8f93\u534f\u8bae"},{"location":"bitxhub/introduction/conception/#_6","text":"\u5bf9\u4e8e\u4e0d\u540c\u7684\u8de8\u94fe\u4ea4\u6613\u6240\u91c7\u7528\u4e0d\u540c\u7684\u9a8c\u8bc1\u89c4\u5219\u7b56\u7565\uff0c\u9a8c\u8bc1\u5f15\u64ce\u4f1a\u6839\u636e\u89c4\u5219\u5730\u5740\u6765\u5224\u65ad\u91c7\u7528\u4e0d\u540c\u7684\u9a8c\u8bc1\u5668\u8fdb\u884c\u9a8c\u8bc1","title":"\u9a8c\u8bc1\u5f15\u64ce"},{"location":"bitxhub/introduction/conception/#_7","text":"\u4e00\u79cd\u57fa\u4e8e\u65f6\u95f4\u5dee\u548c\u9690\u85cf\u54c8\u5e0c\u503c\u5b8c\u6210\u8de8\u94fe\u8d44\u4ea7\u539f\u5b50\u6027\u4ea4\u6362\u7684\u6280\u672f\u3002","title":"\u54c8\u5e0c\u65f6\u95f4\u9501\u5b9a"},{"location":"bitxhub/introduction/scenaries/","text":"\u5e94\u7528\u573a\u666f \u5728\u533a\u5757\u94fe\u5b9e\u9645\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0cBitXHub\u652f\u6301\u4ee5\u4e0b\u573a\u666f\u7684\u8de8\u94fe\u5e94\u7528\u3002 1 \u8d44\u4ea7\u4e92\u6362 \u76ee\u524d\u7531\u4e8e\u533a\u5757\u94fe\u4e00\u5b9a\u7a0b\u5ea6\u7684\u9694\u79bb\u6027\uff0c\u94fe\u4e0a\u7684\u6570\u5b57\u8d44\u4ea7\u96be\u4ee5\u8fdb\u884c\u7b49\u4ef7\u4ea4\u6362\u6216\u8f6c\u79fb\u3002\u76f8\u6bd4\u4e2d\u5fc3\u5316\u7684\u4ea4\u6362\u65b9\u5f0f\uff0cBitXHub\u652f\u6301\u533a\u5757\u94fe\u8d26\u6237\u8d44\u4ea7\u7684\u53ef\u4fe1\u4e92\u6362\uff0c\u80fd\u591f\u5236\u5b9a\u5b89\u5168\u900f\u660e\u7684\u5151\u6362\u89c4\u5219\uff0c\u540c\u65f6\u4fdd\u8bc1\u8d44\u4ea7\u8f6c\u79fb\u7684\u539f\u5b50\u6027\u548c\u4e00\u81f4\u6027\u3002 \u5982\u5c06\u94f6\u884c\u79ef\u5206\u8f6c\u6362\u4e3a\u822a\u7a7a\u516c\u53f8\u91cc\u7a0b\uff0c\u67d0\u94f6\u884c\u6253\u9020\u4e86\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u4f1a\u5458\u79ef\u5206\u7cfb\u7edf\uff0c\u4f1a\u5458\u53ef\u901a\u8fc7\u79ef\u5206\u5151\u6362\u591a\u9879\u975e\u91d1\u878d\u589e\u503c\u670d\u52a1\uff0c\u5982\u822a\u7a7a\u91cc\u7a0b\u7b49\u3002\u800c\u63a5\u6d3d\u7684\u822a\u7a7a\u516c\u53f8\u5df2\u6709\u6b63\u5728\u8fd0\u884c\u7684\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u91cc\u7a0b\u5151\u6362\u7cfb\u7edf\uff0c\u7531\u4e8e\u5e95\u5c42\u533a\u5757\u94fe\u6280\u672f\u7684\u4e0d\u540c\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u901a\u8fc7\u8de8\u94fe\u6280\u672f\u5bf9\u4e24\u6761\u94fe\u4e0a\u4e0d\u540c\u4ef7\u503c\u7684\u8d44\u4ea7\u8fdb\u884c\u8f6c\u79fb\u3002 2 \u6570\u636e\u4e92\u901a \u6570\u636e\u4e92\u901a\u5373\u591a\u6761\u72ec\u7acb\u7684\u94fe\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u66f4\u65b0\u548c\u540c\u6b65\uff0c\u8fd9\u4e3a\u8de8\u884c\u4e1a\u76d1\u7ba1\u63d0\u4f9b\u4e86\u6280\u672f\u652f\u6491\u3002\u4f20\u7edf\u7684\u76d1\u7ba1\u624b\u6bb5\u65e0\u6cd5\u4fdd\u969c\u4e0a\u62a5\u6570\u636e\u7684\u771f\u5b9e\u6027\uff0c\u4e14\u7cfb\u7edf\u95f4\u7684\u5bf9\u63a5\u6210\u672c\u9ad8\u3001\u53ef\u6269\u5c55\u6027\u5dee\uff0c\u901a\u8fc7BitXHub\u6253\u7834\u5f02\u6784\u533a\u5757\u94fe\u95f4\u7684\u4fe1\u606f\u58c1\u5792\uff0c\u6709\u6548\u5730\u8fdb\u884c\u94fe\u4e0a\u6570\u636e\u7684\u5b89\u5168\u5171\u4eab\u3002 \u5982\u67d0\u75ab\u82d7\u4e91\u5e73\u53f0\u9700\u8981\u5bf9\u5404\u7701\u4efd\u7684\u533a\u5757\u94fe\u8fdb\u884c\u7edf\u4e00\u76d1\u7ba1\uff0c\u83b7\u53d6\u5404\u5730\u75ab\u82d7\u63a5\u79cd\u60c5\u51b5\u7684\u5173\u952e\u4fe1\u606f\u3002\u7531\u4e8e\u5404\u7701\u4f7f\u7528\u7684\u5e95\u5c42\u533a\u5757\u94fe\u6280\u672f\u4e0d\u540c\uff0c\u56e0\u6b64\u9700\u8981\u4ece\u5e95\u5c42\u6253\u901a\u5404\u5730\u6570\u636e\u4e2d\u5fc3\uff0c\u65b9\u4fbf\u76d1\u7ba1\u673a\u6784\u540c\u6b65\u53c2\u4e0e\u65b9\u95f4\u4ea4\u6613\u3001\u8fbe\u6210\u5171\u8bc6\u7684\u5168\u8fc7\u7a0b\u3002 3 \u4e1a\u52a1\u4e92\u8865 \u968f\u7740\u533a\u5757\u94fe\u5e94\u7528\u7684\u52a0\u901f\u843d\u5730\uff0c\u4e1a\u52a1\u8054\u76df\u95f4\u5e38\u5e38\u5177\u6709\u4e92\u4e0d\u76f8\u540c\u7684\u6d41\u7a0b\u4f17\u591a\u3001\u4e1a\u52a1\u590d\u6742\u7684\u533a\u5757\u94fe\u670d\u52a1\uff0c\u4e3a\u4e86\u4e0d\u63a8\u5012\u5df2\u6709\u7684\u533a\u5757\u94fe\u57fa\u7840\u8bbe\u65bd\uff0c\u9700\u8981\u91c7\u7528\u8de8\u94fe\u6280\u672f\u5b9e\u73b0\u8fd9\u4e9b\u5f02\u6784\u533a\u5757\u94fe\u95f4\u7684\u6a2a\u5411\u6253\u901a\uff0c\u6269\u5927\u4e1a\u52a1\u89c4\u6a21\uff0c\u5b9e\u73b0\u4e92\u5229\u5171\u8d62\u3002 \u4e1a\u52a1\u4e92\u8865\u7531\u4e8e\u6d89\u53ca\u94fe\u4e0e\u94fe\u4e4b\u95f4\u76f8\u5e94\u7684\u5408\u7ea6\u8de8\u94fe\u8c03\u7528\uff0c\u5b9e\u73b0\u66f4\u4e3a\u590d\u6742\u3002\u6bd4\u5982\u5728\u8de8\u56fd\u8d38\u6613\u4e2d\uff0c\u6d89\u53ca\u7684\u5feb\u9012\u7269\u6d41\u3001\u4f01\u4e1a\u8d44\u91d1\u6d41\u3001\u6d77\u5173\u4fe1\u606f\u6d41\u7b49\u5747\u6709\u5f88\u5f3a\u7684\u4e92\u8865\u6027\uff0c\u4e3a\u4e86\u964d\u4f4e\u6295\u5165\u901a\u8fc7\u8de8\u94fe\u624b\u6bb5\u4ece\u5e95\u5c42\u6a2a\u5411\u6253\u901a\uff0c\u878d\u5408\u8d38\u6613\u76f8\u5173\u7684\u4e1a\u52a1\uff0c\u5b9e\u73b0\u66f4\u5927\u89c4\u6a21\u7684\u4e1a\u52a1\u534f\u4f5c\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"bitxhub/introduction/scenaries/#_1","text":"\u5728\u533a\u5757\u94fe\u5b9e\u9645\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0cBitXHub\u652f\u6301\u4ee5\u4e0b\u573a\u666f\u7684\u8de8\u94fe\u5e94\u7528\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"bitxhub/introduction/scenaries/#1","text":"\u76ee\u524d\u7531\u4e8e\u533a\u5757\u94fe\u4e00\u5b9a\u7a0b\u5ea6\u7684\u9694\u79bb\u6027\uff0c\u94fe\u4e0a\u7684\u6570\u5b57\u8d44\u4ea7\u96be\u4ee5\u8fdb\u884c\u7b49\u4ef7\u4ea4\u6362\u6216\u8f6c\u79fb\u3002\u76f8\u6bd4\u4e2d\u5fc3\u5316\u7684\u4ea4\u6362\u65b9\u5f0f\uff0cBitXHub\u652f\u6301\u533a\u5757\u94fe\u8d26\u6237\u8d44\u4ea7\u7684\u53ef\u4fe1\u4e92\u6362\uff0c\u80fd\u591f\u5236\u5b9a\u5b89\u5168\u900f\u660e\u7684\u5151\u6362\u89c4\u5219\uff0c\u540c\u65f6\u4fdd\u8bc1\u8d44\u4ea7\u8f6c\u79fb\u7684\u539f\u5b50\u6027\u548c\u4e00\u81f4\u6027\u3002 \u5982\u5c06\u94f6\u884c\u79ef\u5206\u8f6c\u6362\u4e3a\u822a\u7a7a\u516c\u53f8\u91cc\u7a0b\uff0c\u67d0\u94f6\u884c\u6253\u9020\u4e86\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u4f1a\u5458\u79ef\u5206\u7cfb\u7edf\uff0c\u4f1a\u5458\u53ef\u901a\u8fc7\u79ef\u5206\u5151\u6362\u591a\u9879\u975e\u91d1\u878d\u589e\u503c\u670d\u52a1\uff0c\u5982\u822a\u7a7a\u91cc\u7a0b\u7b49\u3002\u800c\u63a5\u6d3d\u7684\u822a\u7a7a\u516c\u53f8\u5df2\u6709\u6b63\u5728\u8fd0\u884c\u7684\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u91cc\u7a0b\u5151\u6362\u7cfb\u7edf\uff0c\u7531\u4e8e\u5e95\u5c42\u533a\u5757\u94fe\u6280\u672f\u7684\u4e0d\u540c\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u901a\u8fc7\u8de8\u94fe\u6280\u672f\u5bf9\u4e24\u6761\u94fe\u4e0a\u4e0d\u540c\u4ef7\u503c\u7684\u8d44\u4ea7\u8fdb\u884c\u8f6c\u79fb\u3002","title":"1 \u8d44\u4ea7\u4e92\u6362"},{"location":"bitxhub/introduction/scenaries/#2","text":"\u6570\u636e\u4e92\u901a\u5373\u591a\u6761\u72ec\u7acb\u7684\u94fe\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u66f4\u65b0\u548c\u540c\u6b65\uff0c\u8fd9\u4e3a\u8de8\u884c\u4e1a\u76d1\u7ba1\u63d0\u4f9b\u4e86\u6280\u672f\u652f\u6491\u3002\u4f20\u7edf\u7684\u76d1\u7ba1\u624b\u6bb5\u65e0\u6cd5\u4fdd\u969c\u4e0a\u62a5\u6570\u636e\u7684\u771f\u5b9e\u6027\uff0c\u4e14\u7cfb\u7edf\u95f4\u7684\u5bf9\u63a5\u6210\u672c\u9ad8\u3001\u53ef\u6269\u5c55\u6027\u5dee\uff0c\u901a\u8fc7BitXHub\u6253\u7834\u5f02\u6784\u533a\u5757\u94fe\u95f4\u7684\u4fe1\u606f\u58c1\u5792\uff0c\u6709\u6548\u5730\u8fdb\u884c\u94fe\u4e0a\u6570\u636e\u7684\u5b89\u5168\u5171\u4eab\u3002 \u5982\u67d0\u75ab\u82d7\u4e91\u5e73\u53f0\u9700\u8981\u5bf9\u5404\u7701\u4efd\u7684\u533a\u5757\u94fe\u8fdb\u884c\u7edf\u4e00\u76d1\u7ba1\uff0c\u83b7\u53d6\u5404\u5730\u75ab\u82d7\u63a5\u79cd\u60c5\u51b5\u7684\u5173\u952e\u4fe1\u606f\u3002\u7531\u4e8e\u5404\u7701\u4f7f\u7528\u7684\u5e95\u5c42\u533a\u5757\u94fe\u6280\u672f\u4e0d\u540c\uff0c\u56e0\u6b64\u9700\u8981\u4ece\u5e95\u5c42\u6253\u901a\u5404\u5730\u6570\u636e\u4e2d\u5fc3\uff0c\u65b9\u4fbf\u76d1\u7ba1\u673a\u6784\u540c\u6b65\u53c2\u4e0e\u65b9\u95f4\u4ea4\u6613\u3001\u8fbe\u6210\u5171\u8bc6\u7684\u5168\u8fc7\u7a0b\u3002","title":"2 \u6570\u636e\u4e92\u901a"},{"location":"bitxhub/introduction/scenaries/#3","text":"\u968f\u7740\u533a\u5757\u94fe\u5e94\u7528\u7684\u52a0\u901f\u843d\u5730\uff0c\u4e1a\u52a1\u8054\u76df\u95f4\u5e38\u5e38\u5177\u6709\u4e92\u4e0d\u76f8\u540c\u7684\u6d41\u7a0b\u4f17\u591a\u3001\u4e1a\u52a1\u590d\u6742\u7684\u533a\u5757\u94fe\u670d\u52a1\uff0c\u4e3a\u4e86\u4e0d\u63a8\u5012\u5df2\u6709\u7684\u533a\u5757\u94fe\u57fa\u7840\u8bbe\u65bd\uff0c\u9700\u8981\u91c7\u7528\u8de8\u94fe\u6280\u672f\u5b9e\u73b0\u8fd9\u4e9b\u5f02\u6784\u533a\u5757\u94fe\u95f4\u7684\u6a2a\u5411\u6253\u901a\uff0c\u6269\u5927\u4e1a\u52a1\u89c4\u6a21\uff0c\u5b9e\u73b0\u4e92\u5229\u5171\u8d62\u3002 \u4e1a\u52a1\u4e92\u8865\u7531\u4e8e\u6d89\u53ca\u94fe\u4e0e\u94fe\u4e4b\u95f4\u76f8\u5e94\u7684\u5408\u7ea6\u8de8\u94fe\u8c03\u7528\uff0c\u5b9e\u73b0\u66f4\u4e3a\u590d\u6742\u3002\u6bd4\u5982\u5728\u8de8\u56fd\u8d38\u6613\u4e2d\uff0c\u6d89\u53ca\u7684\u5feb\u9012\u7269\u6d41\u3001\u4f01\u4e1a\u8d44\u91d1\u6d41\u3001\u6d77\u5173\u4fe1\u606f\u6d41\u7b49\u5747\u6709\u5f88\u5f3a\u7684\u4e92\u8865\u6027\uff0c\u4e3a\u4e86\u964d\u4f4e\u6295\u5165\u901a\u8fc7\u8de8\u94fe\u624b\u6bb5\u4ece\u5e95\u5c42\u6a2a\u5411\u6253\u901a\uff0c\u878d\u5408\u8d38\u6613\u76f8\u5173\u7684\u4e1a\u52a1\uff0c\u5b9e\u73b0\u66f4\u5927\u89c4\u6a21\u7684\u4e1a\u52a1\u534f\u4f5c\u3002","title":"3 \u4e1a\u52a1\u4e92\u8865"},{"location":"bitxhub/introduction/summary/","text":"\u8de8\u94fe\u670d\u52a1\u5e73\u53f0\u4ecb\u7ecd \u4ea7\u54c1\u7b80\u4ecb BitXHub \u662f\u8da3\u94fe\u79d1\u6280\u81ea\u4e3b\u7814\u53d1\u7684\u8de8\u94fe\u6280\u672f\u5e73\u53f0\uff0c\u63d0\u4f9b\u57fa\u4e8e\u5f02\u6784\u8054\u76df\u94fe\u95f4\u7684\u8d26\u672c\u4e92\u64cd\u4f5c\u89e3\u51b3\u65b9\u6848\u3002BitXHub \u653b\u514b\u4e86\u5f02\u6784\u8de8\u94fe\u8fc7\u7a0b\u4e2d\u7684\u4ea4\u6613\u6355\u83b7\u3001\u4fe1\u606f\u4f20\u8f93\u4ee5\u53ca\u8eab\u4efd\u9a8c\u8bc1\u7b49\u6838\u5fc3\u96be\u9898\uff0c\u540c\u65f6\u517c\u5bb9\u540c\u6784\u53ca\u5f02\u6784\u533a\u5757\u94fe\u94fe\u95f4\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u5141\u8bb8\u5f02\u6784\u533a\u5757\u94fe\u95f4\u7684\u8d44\u4ea7\u4e92\u6362\u3001\u6570\u636e\u4e92\u901a\u53ca\u4e1a\u52a1\u4e92\u8865\uff0c\u81f4\u529b\u4e8e\u6253\u9020\u9ad8\u53ef\u6269\u5c55\u3001\u5f3a\u9c81\u68d2\u6027\u3001\u6613\u8fd0\u7ef4\u5347\u7ea7\u7684\u8054\u76df\u94fe\u8de8\u94fe\u901a\u7528\u534f\u8bae\u53ca\u793a\u8303\u5e73\u53f0\uff0c\u4e3a\u533a\u5757\u94fe\u751f\u6001\u4e2d\u7684\u7f51\u7edc\u4e92\u8054\u4e0e\u94fe\u4e0a\u6570\u636e\u4e92\u901a\u63d0\u4f9b\u53ef\u9760\u3001\u9ad8\u6548\u3001\u5b89\u5168\u7684\u5e95\u5c42\u6280\u672f\u652f\u6491\u3002 BitXHub \u4e8e 2020 \u5e74 3 \u6708\u6b63\u5f0f\u5f00\u6e90\uff0c\u5e0c\u671b\u5728\u5f00\u6e90\u793e\u533a\u5171\u5efa\u4e0b\uff0c\u9488\u5bf9\u66f4\u52a0\u4e30\u5bcc\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u5f62\u6210\u66f4\u52a0\u5e7f\u6cdb\u7684\u5171\u8bc6\uff0c\u8ba9\u8de8\u94fe\u534f\u8bae\u66f4\u52a0\u901a\u7528\u5316\u3001\u6807\u51c6\u5316\u3001\u89c4\u8303\u5316\u3002\u671f\u5f85\u66f4\u591a\u7684\u533a\u5757\u94fe\u5f00\u53d1\u8005\u4e0e\u76f8\u5173\u884c\u4e1a\u4ece\u4e1a\u8005\u53c2\u4e0e\u5230\u8da3\u94fe\u8de8\u94fe\u6280\u672f\u6807\u51c6\u5316\u548c\u9769\u65b0\u6f14\u8fdb\u7684\u8fdb\u7a0b\u4e2d\uff0c\u4e00\u8d77\u7ee7\u7eed\u4e30\u5bcc\u5b8c\u5584\u8de8\u94fe\u6807\u51c6\uff0c\u6865\u63a5\u66f4\u591a\u7c7b\u578b\u7684\u533a\u5757\u94fe\u5e73\u53f0\u3002 \u4ea7\u54c1\u67b6\u6784 \u8da3\u94fe\u79d1\u6280\u8de8\u94fe\u6280\u672f\u5e73\u53f0 BitXHub \u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u4e2d\u7ee7\u94fe\u3001\u8de8\u94fe\u7f51\u5173\u3001\u5e94\u7528\u94fe\u3002 \u4e2d\u7ee7\u94fe\uff08Relay-chain \uff1a\u7528\u4e8e\u5e94\u7528\u94fe\u7ba1\u7406\u4ee5\u53ca\u8de8\u94fe\u4ea4\u6613\u7684\u53ef\u4fe1\u9a8c\u8bc1\u4e0e\u53ef\u9760\u8def\u7531\uff0c\u662f\u4e00\u79cd\u5b9e\u73b0 IBTP \u534f\u8bae\u7684\u5f00\u653e\u8bb8\u53ef\u94fe\uff0c\u786e\u4fdd\u8de8\u94fe\u4ea4\u6613\u7684\u4e8b\u52a1\u4e00\u81f4\u6027\uff1b \u8de8\u94fe\u7f51\u5173\uff08Pier\uff09 \uff1a\u7531\u76f8\u5e94\u7684\u5e94\u7528\u94fe\u7ef4\u62a4\u7684\u670d\u52a1\u7a0b\u5e8f\uff0c\u62c5\u4efb\u7740\u533a\u5757\u94fe\u95f4\u6536\u96c6\u548c\u4f20\u64ad\u4ea4\u6613\u7684\u89d2\u8272\uff0c\u65e2\u53ef\u4ee5\u652f\u6301\u5e94\u7528\u94fe\u548c\u4e2d\u7ee7\u94fe\u4e4b\u95f4\uff0c\u4e5f\u53ef\u4ee5\u652f\u6301\u4e2d\u7ee7\u94fe\u4e0e\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u7684\u4ea4\u4e92\uff1b \u5e94\u7528\u94fe\uff08App-chain\uff09 \uff1a\u8d1f\u8d23\u627f\u8f7d\u4e0d\u540c\u5e94\u7528\u573a\u666f\u4e0b\u7684\u5177\u4f53\u5e94\u7528\u7684\u4e1a\u52a1\u5408\u7ea6\u903b\u8f91\uff1b \u4e3a\u4e86\u9002\u5e94\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\uff0cBitXHub \u7684\u8bbe\u8ba1\u91c7\u7528\u7075\u6d3b\u53ef\u7ec4\u5408\u67b6\u6784\uff0c\u4e3b\u8981\u6709\u4e09\u79cd\u67b6\u6784\uff1a\u9002\u914d\u5e94\u7528\u89c4\u6a21\u8f83\u5927\u7684\u4e2d\u7ee7\u94fe\u67b6\u6784\uff0c\u5904\u7406\u6548\u7387\u66f4\u9ad8\u6548\u4fbf\u6377\u7684\u94fe\u5bf9\u94fe\u67b6\u6784\u4ee5\u53ca\u533a\u5206\u5c42\u7ea7\u5173\u7cfb\u7684\u4e3b\u4fa7\u94fe\u67b6\u6784\u3002 \u4e2d\u7ee7\u94fe\u67b6\u6784 \u4e2d\u7ee7\u94fe\u67b6\u6784\u7531\u4e2d\u7ee7\u94fe\u548c\u8de8\u94fe\u7f51\u5173\u7ec4\u6210\u3002\u5bf9\u4e8e\u7b80\u5355\u8de8\u94fe\u573a\u666f\uff0c\u5982\u4e0b\u56fe 1-1 \u4e2d\uff0c\u5e94\u7528\u94fe A \u548c\u5e94\u7528\u94fe C \u4e4b\u95f4\u7684\u8de8\u94fe\u64cd\u4f5c\uff0c\u4e2d\u7ee7\u94fe A \u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u7684\u9a8c\u8bc1\u548c\u5b58\u8bc1\uff0c\u8de8\u94fe\u7f51\u5173\u5728\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u95f4\u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u7684\u76d1\u542c\u3001\u540c\u6b65\u548c\u6267\u884c\u3002 \u4f46\u7531\u4e8e\u4e2d\u7ee7\u94fe\u63a5\u5165\u5e94\u7528\u94fe\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e3a\u4e86\u66f4\u597d\u5730\u6ee1\u8db3\u5927\u89c4\u6a21\u8de8\u94fe\u573a\u666f\uff0c\u9700\u8981\u63a5\u5165\u591a\u4e2a\u4e2d\u7ee7\u94fe\u8fdb\u884c\u8de8\u94fe\u3002\u4e2d\u7ee7\u94fe\u95f4\u8de8\u94fe\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u7ec4\u6210\u7684\u8de8\u94fe\u4ea4\u6613\u8def\u7531\u7f51\u7edc\u8fdb\u884c\u8def\u7531\u3002\u5982\u56fe 1-1 \u6240\u793a\uff0c\u5e94\u7528\u94fe A \u60f3\u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u5230\u5e94\u7528\u94fe B \u65f6\uff0c\u9996\u5148\u9700\u8981\u628a\u8de8\u94fe\u4ea4\u6613\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe A \u4e2d\uff0c\u8de8\u94fe\u7f51\u5173 A \u540c\u6b65\u5230\u8be5\u8de8\u94fe\u4ea4\u6613\u540e\uff0c\u53d1\u73b0\u76ee\u7684\u94fe\u4e0d\u5728\u4e2d\u7ee7\u94fe A \u8d1f\u8d23\u7684\u5e94\u7528\u94fe\u8054\u76df\u91cc\u9762\uff0c\u5c31\u628a\u8de8\u94fe\u4ea4\u6613\u540c\u6b65\u5230\u8de8\u94fe\u4ea4\u6613\u8def\u7531\u7f51\u7edc\u4e2d\u3002\u8de8\u94fe\u7f51\u5173 B \u4ece\u8def\u7531\u7f51\u7edc\u4e2d\u540c\u6b65\u5230\u8be5\u8de8\u94fe\u4ea4\u6613\u540e\uff0c\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe B\uff0c\u6700\u540e\uff0c\u7531\u8de8\u94fe\u7f51\u5173\u63d0\u4ea4\u5230\u5e94\u7528\u94fe B \u5b8c\u6210\u6574\u4e2a\u8de8\u94fe\u64cd\u4f5c\u3002 \u4e2d\u7ee7\u94fe\u67b6\u6784\u9002\u7528\u4e8e\u5b89\u5168\u6027\u3001\u53ef\u8ffd\u6eaf\u6027\u6bd4\u8f83\u9ad8\u7684\u573a\u666f\uff0c\u53ef\u6784\u5efa\u5927\u89c4\u6a21\u5f02\u6784\u533a\u5757\u94fe\u8de8\u94fe\u7f51\u7edc\u3002 \u94fe\u5bf9\u94fe\u67b6\u6784 \u5bf9\u4e8e\u5b89\u5168\u6027\u8981\u6c42\u4e0d\u9ad8\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u4e0d\u501f\u52a9\u4e2d\u7ee7\u94fe\u8fdb\u884c\u8de8\u94fe\u64cd\u4f5c\uff0c\u5982\u56fe 1-2 \u662f\u7531\u8de8\u94fe\u7f51\u5173\u7ec4\u6210\u7684\u94fe\u5bf9\u94fe\u67b6\u6784\u3002\u5982\u5e94\u7528\u94fe A \u548c\u5e94\u7528\u94fe B \u7684\u8de8\u94fe\u4e92\u64cd\u4f5c\u76f4\u63a5\u901a\u8fc7\u4e2d\u95f4\u7684\u8de8\u94fe\u8def\u7531\u7f51\u7edc\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613\u7684\u540c\u6b65\u548c\u4f20\u8f93\uff0c\u8de8\u94fe\u4ea4\u6613\u7684\u771f\u5b9e\u6027\u9a8c\u8bc1\u4e5f\u7531\u8de8\u94fe\u7f51\u5173\u5b8c\u6210\u3002 \u4e3b\u4fa7\u94fe\u67b6\u6784 \u5982\u679c\u53c2\u4e0e\u65b9\u5b58\u5728\u4e0a\u4e0b\u7ea7\u7684\u6cbb\u7406\u5173\u7cfb\uff0c\u53ef\u4ee5\u9009\u7528\u4e3b\u4fa7\u94fe\u67b6\u6784\u3002\u5982\u56fe 1-3 \u4e2d\uff0c\u4e2d\u7ee7\u94fe\u5145\u5f53\u4e3b\u94fe\uff0c\u8d1f\u8d23\u4fa7\u94fe\u6210\u5458\u7ba1\u7406\u3001\u6570\u636e\u4e00\u81f4\u6027\u4fdd\u969c\u3001\u6838\u5fc3\u6570\u636e\u5b58\u8bc1\u7b49\uff0c\u4e14\u4e2d\u7ee7\u94fe\u7684\u4e0d\u53ef\u7be1\u6539\u7279\u6027\u53ef\u4ee5\u65b9\u4fbf\u5b9e\u73b0\u8de8\u94fe\u4ea4\u6613\u7684\u539f\u5b50\u6027\u4fdd\u969c\uff0c\u4e2d\u7ee7\u94fe\u901a\u8fc7\u9ad8\u6027\u80fd\u667a\u80fd\u5408\u7ea6\u7684\u65b9\u5f0f\u5c06\u8de8\u94fe\u5b89\u5168\u6027\u9a8c\u8bc1\u89c4\u5219\u5316\uff0c\u65b9\u4fbf\u5b9e\u73b0\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u8de8\u94fe\u4ea4\u6613\u9a8c\u8bc1\u7684\u65b9\u6cd5\u6ce8\u5165\u3001\u5347\u7ea7\uff1b\u4fa7\u94fe\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u63a5\u5165\u4e3b\u94fe\uff0c\u8d1f\u8d23\u627f\u8f7d\u5177\u4f53\u7684\u4e1a\u52a1\u670d\u52a1\uff0c\u5f62\u6210\u53ef\u6a2a\u5411\u6269\u5c55\u7684\u4fa7\u94fe\u96c6\u7fa4\u3002\u91c7\u7528\u8de8\u94fe\u7f51\u5173\u7684\u65b9\u5f0f\u5bf9\u63a5\u5177\u4f53\u7684\u5e94\u7528\u4fa7\u94fe\u53ef\u4ee5\u51cf\u5c11\u5bf9\u5177\u4f53\u6570\u636e\u6cbb\u7406\u94fe\u7684\u4fb5\u5165\u6027\uff0c\u7279\u522b\u662f\u9488\u5bf9\u5f02\u6784\u6570\u636e\u6cbb\u7406\u94fe\uff0c\u7f51\u5173\u53ef\u4ee5\u5c06\u8de8\u94fe\u4ea4\u6613\u8f6c\u6362\u6210\u4e2d\u7ee7\u53ef\u89e3\u6790\u9a8c\u8bc1\u7684\u683c\u5f0f\uff0c\u5bf9\u8de8\u94fe\u4e92\u8054\u670d\u52a1\u5c4f\u853d\u5177\u4f53\u533a\u5757\u94fe\u7684\u6570\u636e\u5dee\u5f02\u6027\uff1b\u7f51\u5173\u548c\u4e2d\u7ee7\u94fe\u5206\u79bb\u7684\u65b9\u6848\u53ef\u4ee5\u4fdd\u8bc1\u4e2d\u7ee7\u94fe\u7684\u7a33\u5b9a\u6027\u3002 \u8de8\u94fe\u534f\u8bae \u4e0d\u540c\u533a\u5757\u94fe\u7531\u4e8e\u5176\u5e95\u5c42\u5e73\u53f0\u7684\u52a0\u5bc6\u7b97\u6cd5\u3001\u533a\u5757\u7ed3\u6784\u7b49\u4e0d\u540c\uff0c\u4e0d\u540c\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u6d88\u606f\u4e0d\u80fd\u76f4\u63a5\u901a\u4fe1\u3002\u4e3a\u4e86\u80fd\u591f\u652f\u6301\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u8de8\u94fe\u4ea4\u6613\u8def\u7531\u548c\u53ef\u4fe1\u9a8c\u8bc1\uff0cBitXHub \u8bbe\u8ba1\u4e86\u901a\u7528\u7684\u8de8\u94fe\u4f20\u8f93\u534f\u8bae IBTP\uff08InterBlockchain Transfer Protocol\uff09,\u5141\u8bb8\u5f02\u6784\u8d44\u4ea7\u3001\u6570\u636e\u53ca\u670d\u52a1\u8fdb\u884c\u8de8\u94fe\u8c03\u7528\u3002 \u8be5\u534f\u8bae\u5185\u5bb9\u6307\u5b9a\u4e86\u76f8\u5173\u8de8\u94fe\u4e8b\u4ef6\u7684\u6765\u6e90\u94fe\u3001\u76ee\u7684\u94fe\u3001\u8de8\u94fe\u4ea4\u6613\u65b9\u6cd5\u4ee5\u53ca\u9a8c\u8bc1\u7b56\u7565\u3001\u7b7e\u540d\u7b49\u8bf8\u591a\u4fe1\u606f\uff0c\u652f\u6301\u5e94\u7528\u94fe\u4e0e\u4e2d\u7ee7\u94fe\u3001\u5e94\u7528\u94fe\u4e0e\u5e94\u7528\u94fe\u95f4\u7684\u4ea4\u4e92\u64cd\u4f5c\uff0c\u5176\u7ed3\u6784\u5982\u56fe 1-4 \u6240\u793a\u3002\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u6d88\u606f\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u8f6c\u6362\u6210 IBTP \u7ed3\u6784\u63d0\u4ea4\u81f3\u4e2d\u7ee7\u94fe\uff0c\u4e2d\u7ee7\u94fe\u901a\u8fc7 IBTP \u5185\u5bb9\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613\u7684\u5408\u6cd5\u6027\u9a8c\u8bc1\u53ca\u53ef\u9760\u8def\u7531\u3002\u57fa\u4e8e IBTP \u534f\u8bae\u8de8\u94fe\u7f51\u5173\u53ef\u5c06\u4e0d\u540c\u5e94\u7528\u94fe\u629b\u51fa\u7684\u4e8b\u4ef6\u6570\u636e\u683c\u5f0f\u8f6c\u6362\u4e3a\u7edf\u4e00\u7ed3\u6784\u3002 \u53c2\u6570 \u8bf4\u660e From \u6765\u6e90\u94feID To \u76ee\u7684\u94feID Version \u534f\u8bae\u7248\u672c\u53f7 Index \u8de8\u94fe\u4ea4\u6613\u7d22\u5f15 Payload \u8de8\u94fe\u8c03\u7528\u5185\u5bb9\u7f16\u7801 Timestamp \u8de8\u94fe\u4e8b\u4ef6\u53d1\u751f\u65f6\u95f4\u6233 Proof \u8de8\u94fe\u4ea4\u6613\u8bc1\u660e Extra \u81ea\u5b9a\u4e49\u5b57\u6bb5 IBTP \u6d88\u606f\u91c7\u7528 P2P \u7684\u65b9\u5f0f\u8fdb\u884c\u4f20\u8f93\uff0c\u6d88\u606f\u7684\u4e3b\u4f53\u5185\u5bb9\u5747\u91c7\u7528\u5bf9\u65b9\u7684\u516c\u94a5\u8fdb\u884c\u52a0\u5bc6\u786e\u4fdd\u6d88\u606f\u5185\u5bb9\u4f20\u64ad\u7684\u4e0d\u88ab\u7b2c\u4e09\u65b9\u7a83\u53d6\u3002\u540c\u65f6\u8c03\u7528\u5185\u5bb9\u7ecf\u8de8\u94fe\u7f51\u5173\u95f4\u534f\u5546\u7684\u5bf9\u79f0\u5bc6\u94a5\u52a0\u5bc6\u540e\u518d\u53d1\u9001\u81f3\u4e2d\u7ee7\u94fe\uff0c\u4fdd\u969c\u4f20\u8f93\u8c03\u7528\u7684\u5b89\u5168\u6027\u4e0e\u53ef\u9760\u6027\u3002 \u4e2d\u7ee7\u94fe \u5171\u8bc6\u7b97\u6cd5 \u4e2d\u7ee7\u94fe\u63a5\u5165\u4e86\u5f3a\u9c81\u68d2\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5 RBFT\uff0c\u5176\u5931\u6548\u6570\u636e\u6062\u590d\u3001\u52a8\u6001\u8282\u70b9\u589e\u5220\u7b49\u673a\u5236\u4fdd\u8bc1\u4e86\u4e2d\u7ee7\u94fe\u5929\u7136\u7684\u9ad8\u53ef\u7528\u6027\u3002BitXHub \u4e2d\u7684\u8de8\u94fe\u4ea4\u6613\u5728\u4ee5\u4e8b\u4ef6\u5f62\u5f0f\u629b\u51fa\u65f6\u901a\u8fc7\u5e8f\u53f7\u9012\u589e\u7684\u65b9\u5f0f\u5b58\u50a8\uff0c\u5728\u5171\u8bc6\u9636\u6bb5\u5bf9\u6765\u81ea\u540c\u4e00\u5e94\u7528\u94fe\u7684\u4ea4\u6613\u9700\u8981\u4e25\u683c\u6309\u7167\u5e8f\u53f7\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\uff0c\u82e5\u63a5\u6536\u5230\u7684\u4ea4\u6613\u5e8f\u53f7\u5f02\u5e38\u65f6\u6682\u65f6\u5c06\u5176\u653e\u5165\u7f13\u5b58\u4e2d\u7b49\u5f85\uff0c\u76f4\u5230\u6b63\u786e\u5e8f\u53f7\u7684\u4ea4\u6613\u5230\u8fbe\u540e\u518d\u7ee7\u7eed\u8fdb\u884c\u6392\u5e8f\u3001\u6253\u5305\u3002 \u4e3a\u4e86\u6ee1\u8db3\u66f4\u591a\u5e94\u7528\u573a\u666f\u7684\u9700\u6c42\uff0cBitXHub \u7684\u4e2d\u7ee7\u94fe\u53ef\u4ee5\u5bf9\u8282\u70b9\u8fdb\u884c\u52a8\u6001\u589e\u5220\uff0c\u94fe\u4e0a\u7684\u8282\u70b9\u5bf9\u4e2d\u7ee7\u94fe\u5171\u540c\u7ef4\u62a4\u5e76\u53c2\u4e0e\u5171\u8bc6\uff0c\u4e3a\u4e86\u907f\u514d\u90e8\u5206\u8282\u70b9\u56e0\u4e3a\u67d0\u4e9b\u6545\u969c\u5bfc\u81f4\u8282\u70b9\u72b6\u6001\u5927\u5e45\u843d\u540e\u533a\u5757\u94fe\u7f51\u7edc\uff0c\u5e73\u53f0\u63d0\u4f9b\u4e00\u79cd Sync Protocol \u7684\u65b9\u5f0f\u6765\u66f4\u65b0\u5f02\u5e38\u8282\u70b9\u72b6\u6001\uff0c\u4fdd\u969c\u6574\u4e2a\u4e2d\u7ee7\u94fe\u7cfb\u7edf\u7684\u7a33\u5b9a\u8fd0\u884c\u3002 \u9a8c\u8bc1\u5f15\u64ce \u4e2d\u7ee7\u94fe\u4e2d\u9a8c\u8bc1\u5f15\u64ce\u7684\u8bbe\u8ba1\u91c7\u7528\u4e86\u9a8c\u8bc1\u5668\u7684\u63d2\u62d4\u5f0f\u8bbe\u8ba1\uff0c\u5373\u5bf9\u4e8e\u4e0d\u540c\u7684\u8de8\u94fe\u4ea4\u6613\u6240\u91c7\u7528\u4e0d\u540c\u7684\u9a8c\u8bc1\u89c4\u5219\u7b56\u7565\uff0c\u9a8c\u8bc1\u5f15\u64ce\u4f1a\u6839\u636e\u89c4\u5219\u5730\u5740\u6765\u5224\u65ad\u91c7\u7528\u4e0d\u540c\u7684\u9a8c\u8bc1\u5668\u8fdb\u884c\u9a8c\u8bc1\u3002\u73b0\u9636\u6bb5\u7684\u9a8c\u8bc1\u5f15\u64ce\u652f\u6301 Go \u5185\u7f6e\u9a8c\u8bc1\u5668\u548c WASM \u865a\u62df\u673a\u9a8c\u8bc1\u5668\u3002 \u4e8b\u52a1\u7ba1\u7406 \u4e2d\u7ee7\u94fe\u5185\u7f6e\u4e86\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\uff0c\u63d0\u4f9b\u57fa\u4e8e\u672c\u5730\u6d88\u606f\u8868\u7684\u4e8b\u52a1\u652f\u6301\uff0c\u5b9e\u73b0\u4e86\u8de8\u94fe\u4e8b\u52a1\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u3002\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u5728\u5904\u7406\u8de8\u94fe\u4ea4\u6613\u65f6\uff0c\u6839\u636e\u76ee\u7684\u94fe\u6570\u91cf\u7684\u4e0d\u540c\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09\uff0c\u91c7\u7528\u4e0d\u540c\u7684\u903b\u8f91\u751f\u6210\u8de8\u94fe\u4e8b\u52a1 ID\uff0c\u5e76\u5c06\u4e8b\u52a1 ID \u5bf9\u5e94\u7684\u521d\u59cb\u72b6\u6001\u8bb0\u5f55\u5728\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u3002\u5f53\u76ee\u7684\u94fe\u6267\u884c\u5b8c\u8de8\u94fe\u4ea4\u6613\u540e\uff0c\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u6839\u636e\u76ee\u7684\u94fe\u4ea4\u6613\u7684\u6267\u884c\u7ed3\u679c\uff08\u6210\u529f\u6216\u5931\u8d25\uff09\u66f4\u65b0\u5bf9\u5e94\u4e8b\u52a1\u7684\u72b6\u6001\u3002\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u4e86\u63a5\u53e3\uff0c\u53ef\u4f9b\u5404\u5e94\u7528\u94fe\u67e5\u8be2\u67d0\u4e2a\u4e8b\u52a1 ID \u5bf9\u5e94\u7684\u4e8b\u52a1\u72b6\u6001\u3002\u82e5\u5e94\u7528\u94fe\u53d1\u73b0\u4e8b\u52a1\u6267\u884c\u5931\u8d25\uff0c\u5219\u9700\u8981\u8d1f\u8d23\u4e1a\u52a1\u4e0a\u7684\u56de\u6eda\u64cd\u4f5c\u3002 \u8de8\u94fe\u7f51\u5173 \u8de8\u94fe\u7f51\u5173\uff08Pier\uff09\u662f\u7531\u5e94\u7528\u94fe\u7ef4\u62a4\u3001\u53ef\u4e0e\u5e94\u7528\u94fe\u548c\u4e2d\u7ee7\u94fe\u76f4\u63a5\u4ea4\u4e92\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4f5c\u4e3a\u53d1\u9001\u65b9\u65f6\u9700\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u63a5\u6536\u6709\u5e8f\u6027\uff0c\u4f5c\u4e3a\u63a5\u6536\u65b9\u65f6\u9700\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u53ef\u9760\u6027\u3002\u6bcf\u4e2a\u533a\u5757\u94fe\u7f51\u7edc\u7684\u7ba1\u7406\u5458\u9700\u8981\u6307\u5b9a\u5e76\u7ef4\u62a4\u81ea\u5df1\u53ef\u4fe1\u4efb\u7684\u8de8\u94fe\u7f51\u5173\u8282\u70b9\uff0c\u5141\u8bb8\u8de8\u94fe\u7f51\u5173\u8282\u70b9\u6388\u4fe1\u8bbf\u95ee\u548c\u89e3\u6790\u672c\u533a\u5757\u94fe\u4e0a\u7684\u533a\u5757\u94fe\u8de8\u94fe\u4fe1\u606f\u548c\u76f8\u5173\u72b6\u6001\u4fe1\u606f\u3002 \u5728\u590d\u6742\u7684\u8de8\u94fe\u573a\u666f\u4e0b\uff0c\u5e94\u7528\u94fe\u5982\u4f55\u4fbf\u6377\u5730\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u4ee5\u8fbe\u5230\u826f\u597d\u7684\u6269\u5c55\u6027\uff0c\u5bf9\u4e8e\u6fc0\u53d1\u8de8\u94fe\u7cfb\u7edf\u751f\u6001\u7684\u6d3b\u529b\u81f3\u5173\u91cd\u8981\u3002\u8de8\u94fe\u7f51\u5173\u662f\u4e00\u79cd\u8fde\u63a5\u4e0d\u540c\u533a\u5757\u94fe\u7cfb\u7edf\u7684\u4ea4\u4e92\u7ec4\u4ef6\uff0c\u5728 BitXHub \u4e2d\u5145\u5f53\u7740\u4e24\u4e2a\u4e0d\u540c\u7684\u89d2\u8272\uff1a \u8fde\u63a5\u5e94\u7528\u94fe\u548c\u4e2d\u7ee7\u94fe\u3002\u5728\u5355\u4e2d\u7ee7\u94fe\u7684\u5c42\u7ea7\u4e2d\uff0cPier \u4f5c\u4e3a\u4e00\u4e2a\u4e2d\u95f4\u90e8\u4ef6\u6765 \u7b80\u5316\u533a\u5757\u94fe\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u7684\u8fc7\u7a0b\uff0c\u589e\u5f3a\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u7684\u4fbf\u6377\u6027\u3002 \u8fde\u63a5\u4e0d\u540c\u7684\u4e2d\u7ee7\u94fe\u3002\u5728\u591a\u4e2d\u7ee7\u94fe\u5f62\u6210\u7684\u533a\u5757\u94fe\u7f51\u7edc\u4e2d\uff0cPier \u901a\u8fc7 P2P \u7ec4 \u7f51\u7684\u65b9\u5f0f\u5728\u591a\u4e2a\u5c42\u7ea7\u4e2d\u8d77\u5230\u201c\u8def\u7531\u5668\u201d\u7684\u4f5c\u7528\u3002 \u4e3a\u4e86\u5b9e\u73b0\u4e0a\u8ff0\u7684\u4fbf\u6377\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u8de8\u94fe\u7f51\u5173\u5728\u5e94\u7528\u94fe\u7684\u9002\u914d\u548c\u6838\u5fc3\u529f\u80fd\u7684\u5b9e\u73b0\u4e0a\u4f5c\u4e86\u7075\u6d3b\u8bbe\u8ba1\u3002 \u63d2\u4ef6\u673a\u5236 BitXHub \u63d0\u4f9b\u8de8\u94fe\u7f51\u5173\u63d2\u4ef6\u673a\u5236\uff0c\u5176\u4e00\u5927\u7279\u70b9\u662f\u5c06\u8de8\u94fe\u7f51\u5173\u4e2d\u4e0e\u5e94\u7528\u94fe\u7684\u4ea4\u4e92\u6a21\u5757\u548c\u6838\u5fc3\u6a21\u5757\u8fdb\u884c\u89e3\u8026\uff0c\u4ece\u800c\u65b9\u4fbf\u66f4\u591a\u7684\u5e94\u7528\u94fe\u52a0\u5165\u8de8\u94fe\u7cfb\u7edf\u3002\u5982\u4e0b\u56fe 1-5 \u6240\u793a\uff0c\u5728\u8de8\u94fe\u7f51\u5173\u8fd0\u884c\u65f6\uff0c\u901a\u8fc7\u52a8\u6001\u52a0\u8f7d\u63d2\u4ef6\u7684\u65b9\u5f0f\u5b8c\u6210\u5e94\u7528\u94fe\u7684\u63a5\u5165\u3002 \u7f51\u5173\u9ad8\u53ef\u7528 \u4e3a\u4e86\u66f4\u597d\u7684\u4fdd\u969c\u8de8\u94fe\u7f51\u7edc\u4e4b\u95f4\u4e92\u901a\u7684\u7a33\u5b9a\u6027\uff0cBitXHub \u63d0\u4f9b\u4e3b\u5907\u8de8\u94fe\u7f51\u5173\u529f\u80fd\uff0c\u5982\u56fe 1-6 \u6240\u793a\uff0c\u57fa\u4e8e\u4e2d\u7ee7\u94fe\uff0c\u4e3b\u5907\u8de8\u94fe\u7f51\u5173\u548c\u4e2d\u7ee7\u94fe\u4e0a\u7684\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\uff0c\u901a\u8fc7\u7ade\u4e89\u673a\u5236\uff0c\u6309\u7167\u8fde\u63a5\u8282\u70b9\u7684\u5148\u540e\u51b3\u5b9a\u4e3b\u5907\u7f51\u5173\u6b21\u5e8f\uff0c\u4fdd\u969c\u4e2d\u7ee7\u94fe\u4e0a\u7f51\u5173\u4e3b\u8282\u70b9\u7684\u552f\u4e00\u6027\u3002\u5e76\u652f\u6301\u4e3b\u5907\u7f51\u5173\u8fdb\u884c\u7075\u6d3b\u5207\u6362\uff0c\u5f53\u4e3b\u8282\u70b9\u7f51\u5173\u51fa\u73b0\u5f02\u5e38\u5b95\u673a\u65f6\uff0c\u7cfb\u7edf\u53ef\u8fdb\u884c\u81ea\u52a8\u65e0\u7f1d\u5207\u6362\uff0c\u4e3a\u4e2d\u7ee7\u94fe\u63d0\u4f9b\u9ad8\u53ef\u9760\u7684\u8de8\u94fe\u670d\u52a1\uff0c\u5b9e\u73b0\u66f4\u52a0\u7a33\u5b9a\u7684\u6570\u636e\u4e92\u901a\u4e92\u8054\u3002 \u533a\u5757\u94fe\u4e92\u8054\u7f51\u7edc \u5728\u6700\u65b0\u7684 BitXHub \u8de8\u94fe\u5e73\u53f0\u4e2d\uff0c\u4e2d\u7ee7\u94fe\u5728\u539f\u6709\u529f\u80fd\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u5927\u89c4\u6a21\u8de8\u94fe\u7f51\u7edc\u7684\u529f\u80fd\uff0c\u5982\u56fe 1-7 \u6240\u793a\uff0c\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u5f62\u6210\u4e00\u4e2a P2P \u7f51\u7edc\uff0c\u5bf9\u4e0d\u540c\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u6d88\u606f\u8fdb\u884c\u6d88\u606f\u8def\u7531\uff0c\u8fbe\u5230\u5e73\u884c\u6269\u5c55\u4e2d\u7ee7\u94fe\u7684\u6548\u679c\u3002\u5728\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u7684\u8de8\u94fe\u7f51\u7edc\u4e2d\uff0c\u589e\u52a0\u5927\u89c4\u6a21\u7f51\u7edc\u4e2d\u7684\u6d88\u606f\u8def\u7531\u673a\u5236\uff0c\u5e76\u901a\u8fc7\u591a\u7b7e\u8ba4\u8bc1\u7684\u65b9\u5f0f\uff0c\u5b9e\u73b0\u4e0d\u540c\u4e2d\u7ee7\u94fe\u4e0a\u7684\u5e94\u7528\u94fe\u95f4\u7684\u8eab\u4efd\u9a8c\u8bc1\u3002\u76ee\u524d\u5e73\u53f0\u53ef\u652f\u6301\u8d85\u8fc7 1000+\u7684\u5e94\u7528\u94fe\u7684\u5e76\u53d1\u63a5\u5165\u6027\u80fd\u3002 \u8de8\u94fe\u6280\u672f\u4f5c\u4e3a\u8fde\u63a5\u5404\u533a\u5757\u94fe\u7684\u6865\u6881\uff0c\u5b9e\u73b0\u4e86\u4e0d\u540c\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u8d44\u4ea7\u539f\u5b50\u6027\u4ea4\u6613\u3001\u4fe1\u606f\u6570\u636e\u4e92\u901a\u3001\u4e1a\u52a1\u670d\u52a1\u4e92\u8865\u7b49\u529f\u80fd\uff0c\u6253\u7834\u4e0d\u540c\u533a\u5757\u94fe\u95f4\u7684\u6570\u636e\u5b64\u5c9b\u3002\u8de8\u94fe\u6280\u672f\u662f\u6784\u5efa\u533a\u5757\u94fe\u4e92\u8054\u4e92\u901a\u7f51\u7edc\u751f\u6001\uff0c\u5b9e\u73b0\u533a\u5757\u94fe\u201c\u4ef7\u503c\u4e92\u8054\u7f51\u201d\u7684\u5173\u952e\u67a2\u7ebd\u3002","title":"\u5e73\u53f0\u4ecb\u7ecd"},{"location":"bitxhub/introduction/summary/#_1","text":"","title":"\u8de8\u94fe\u670d\u52a1\u5e73\u53f0\u4ecb\u7ecd"},{"location":"bitxhub/introduction/summary/#_2","text":"BitXHub \u662f\u8da3\u94fe\u79d1\u6280\u81ea\u4e3b\u7814\u53d1\u7684\u8de8\u94fe\u6280\u672f\u5e73\u53f0\uff0c\u63d0\u4f9b\u57fa\u4e8e\u5f02\u6784\u8054\u76df\u94fe\u95f4\u7684\u8d26\u672c\u4e92\u64cd\u4f5c\u89e3\u51b3\u65b9\u6848\u3002BitXHub \u653b\u514b\u4e86\u5f02\u6784\u8de8\u94fe\u8fc7\u7a0b\u4e2d\u7684\u4ea4\u6613\u6355\u83b7\u3001\u4fe1\u606f\u4f20\u8f93\u4ee5\u53ca\u8eab\u4efd\u9a8c\u8bc1\u7b49\u6838\u5fc3\u96be\u9898\uff0c\u540c\u65f6\u517c\u5bb9\u540c\u6784\u53ca\u5f02\u6784\u533a\u5757\u94fe\u94fe\u95f4\u7684\u8de8\u94fe\u4ea4\u6613\uff0c\u5141\u8bb8\u5f02\u6784\u533a\u5757\u94fe\u95f4\u7684\u8d44\u4ea7\u4e92\u6362\u3001\u6570\u636e\u4e92\u901a\u53ca\u4e1a\u52a1\u4e92\u8865\uff0c\u81f4\u529b\u4e8e\u6253\u9020\u9ad8\u53ef\u6269\u5c55\u3001\u5f3a\u9c81\u68d2\u6027\u3001\u6613\u8fd0\u7ef4\u5347\u7ea7\u7684\u8054\u76df\u94fe\u8de8\u94fe\u901a\u7528\u534f\u8bae\u53ca\u793a\u8303\u5e73\u53f0\uff0c\u4e3a\u533a\u5757\u94fe\u751f\u6001\u4e2d\u7684\u7f51\u7edc\u4e92\u8054\u4e0e\u94fe\u4e0a\u6570\u636e\u4e92\u901a\u63d0\u4f9b\u53ef\u9760\u3001\u9ad8\u6548\u3001\u5b89\u5168\u7684\u5e95\u5c42\u6280\u672f\u652f\u6491\u3002 BitXHub \u4e8e 2020 \u5e74 3 \u6708\u6b63\u5f0f\u5f00\u6e90\uff0c\u5e0c\u671b\u5728\u5f00\u6e90\u793e\u533a\u5171\u5efa\u4e0b\uff0c\u9488\u5bf9\u66f4\u52a0\u4e30\u5bcc\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u5f62\u6210\u66f4\u52a0\u5e7f\u6cdb\u7684\u5171\u8bc6\uff0c\u8ba9\u8de8\u94fe\u534f\u8bae\u66f4\u52a0\u901a\u7528\u5316\u3001\u6807\u51c6\u5316\u3001\u89c4\u8303\u5316\u3002\u671f\u5f85\u66f4\u591a\u7684\u533a\u5757\u94fe\u5f00\u53d1\u8005\u4e0e\u76f8\u5173\u884c\u4e1a\u4ece\u4e1a\u8005\u53c2\u4e0e\u5230\u8da3\u94fe\u8de8\u94fe\u6280\u672f\u6807\u51c6\u5316\u548c\u9769\u65b0\u6f14\u8fdb\u7684\u8fdb\u7a0b\u4e2d\uff0c\u4e00\u8d77\u7ee7\u7eed\u4e30\u5bcc\u5b8c\u5584\u8de8\u94fe\u6807\u51c6\uff0c\u6865\u63a5\u66f4\u591a\u7c7b\u578b\u7684\u533a\u5757\u94fe\u5e73\u53f0\u3002","title":"\u4ea7\u54c1\u7b80\u4ecb"},{"location":"bitxhub/introduction/summary/#_3","text":"\u8da3\u94fe\u79d1\u6280\u8de8\u94fe\u6280\u672f\u5e73\u53f0 BitXHub \u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u4e2d\u7ee7\u94fe\u3001\u8de8\u94fe\u7f51\u5173\u3001\u5e94\u7528\u94fe\u3002 \u4e2d\u7ee7\u94fe\uff08Relay-chain \uff1a\u7528\u4e8e\u5e94\u7528\u94fe\u7ba1\u7406\u4ee5\u53ca\u8de8\u94fe\u4ea4\u6613\u7684\u53ef\u4fe1\u9a8c\u8bc1\u4e0e\u53ef\u9760\u8def\u7531\uff0c\u662f\u4e00\u79cd\u5b9e\u73b0 IBTP \u534f\u8bae\u7684\u5f00\u653e\u8bb8\u53ef\u94fe\uff0c\u786e\u4fdd\u8de8\u94fe\u4ea4\u6613\u7684\u4e8b\u52a1\u4e00\u81f4\u6027\uff1b \u8de8\u94fe\u7f51\u5173\uff08Pier\uff09 \uff1a\u7531\u76f8\u5e94\u7684\u5e94\u7528\u94fe\u7ef4\u62a4\u7684\u670d\u52a1\u7a0b\u5e8f\uff0c\u62c5\u4efb\u7740\u533a\u5757\u94fe\u95f4\u6536\u96c6\u548c\u4f20\u64ad\u4ea4\u6613\u7684\u89d2\u8272\uff0c\u65e2\u53ef\u4ee5\u652f\u6301\u5e94\u7528\u94fe\u548c\u4e2d\u7ee7\u94fe\u4e4b\u95f4\uff0c\u4e5f\u53ef\u4ee5\u652f\u6301\u4e2d\u7ee7\u94fe\u4e0e\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u7684\u4ea4\u4e92\uff1b \u5e94\u7528\u94fe\uff08App-chain\uff09 \uff1a\u8d1f\u8d23\u627f\u8f7d\u4e0d\u540c\u5e94\u7528\u573a\u666f\u4e0b\u7684\u5177\u4f53\u5e94\u7528\u7684\u4e1a\u52a1\u5408\u7ea6\u903b\u8f91\uff1b \u4e3a\u4e86\u9002\u5e94\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\uff0cBitXHub \u7684\u8bbe\u8ba1\u91c7\u7528\u7075\u6d3b\u53ef\u7ec4\u5408\u67b6\u6784\uff0c\u4e3b\u8981\u6709\u4e09\u79cd\u67b6\u6784\uff1a\u9002\u914d\u5e94\u7528\u89c4\u6a21\u8f83\u5927\u7684\u4e2d\u7ee7\u94fe\u67b6\u6784\uff0c\u5904\u7406\u6548\u7387\u66f4\u9ad8\u6548\u4fbf\u6377\u7684\u94fe\u5bf9\u94fe\u67b6\u6784\u4ee5\u53ca\u533a\u5206\u5c42\u7ea7\u5173\u7cfb\u7684\u4e3b\u4fa7\u94fe\u67b6\u6784\u3002","title":"\u4ea7\u54c1\u67b6\u6784"},{"location":"bitxhub/introduction/summary/#_4","text":"\u4e2d\u7ee7\u94fe\u67b6\u6784\u7531\u4e2d\u7ee7\u94fe\u548c\u8de8\u94fe\u7f51\u5173\u7ec4\u6210\u3002\u5bf9\u4e8e\u7b80\u5355\u8de8\u94fe\u573a\u666f\uff0c\u5982\u4e0b\u56fe 1-1 \u4e2d\uff0c\u5e94\u7528\u94fe A \u548c\u5e94\u7528\u94fe C \u4e4b\u95f4\u7684\u8de8\u94fe\u64cd\u4f5c\uff0c\u4e2d\u7ee7\u94fe A \u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u7684\u9a8c\u8bc1\u548c\u5b58\u8bc1\uff0c\u8de8\u94fe\u7f51\u5173\u5728\u4e2d\u7ee7\u94fe\u548c\u5e94\u7528\u94fe\u95f4\u8d1f\u8d23\u8de8\u94fe\u4ea4\u6613\u7684\u76d1\u542c\u3001\u540c\u6b65\u548c\u6267\u884c\u3002 \u4f46\u7531\u4e8e\u4e2d\u7ee7\u94fe\u63a5\u5165\u5e94\u7528\u94fe\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e3a\u4e86\u66f4\u597d\u5730\u6ee1\u8db3\u5927\u89c4\u6a21\u8de8\u94fe\u573a\u666f\uff0c\u9700\u8981\u63a5\u5165\u591a\u4e2a\u4e2d\u7ee7\u94fe\u8fdb\u884c\u8de8\u94fe\u3002\u4e2d\u7ee7\u94fe\u95f4\u8de8\u94fe\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u7ec4\u6210\u7684\u8de8\u94fe\u4ea4\u6613\u8def\u7531\u7f51\u7edc\u8fdb\u884c\u8def\u7531\u3002\u5982\u56fe 1-1 \u6240\u793a\uff0c\u5e94\u7528\u94fe A \u60f3\u53d1\u9001\u8de8\u94fe\u4ea4\u6613\u5230\u5e94\u7528\u94fe B \u65f6\uff0c\u9996\u5148\u9700\u8981\u628a\u8de8\u94fe\u4ea4\u6613\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe A \u4e2d\uff0c\u8de8\u94fe\u7f51\u5173 A \u540c\u6b65\u5230\u8be5\u8de8\u94fe\u4ea4\u6613\u540e\uff0c\u53d1\u73b0\u76ee\u7684\u94fe\u4e0d\u5728\u4e2d\u7ee7\u94fe A \u8d1f\u8d23\u7684\u5e94\u7528\u94fe\u8054\u76df\u91cc\u9762\uff0c\u5c31\u628a\u8de8\u94fe\u4ea4\u6613\u540c\u6b65\u5230\u8de8\u94fe\u4ea4\u6613\u8def\u7531\u7f51\u7edc\u4e2d\u3002\u8de8\u94fe\u7f51\u5173 B \u4ece\u8def\u7531\u7f51\u7edc\u4e2d\u540c\u6b65\u5230\u8be5\u8de8\u94fe\u4ea4\u6613\u540e\uff0c\u63d0\u4ea4\u5230\u4e2d\u7ee7\u94fe B\uff0c\u6700\u540e\uff0c\u7531\u8de8\u94fe\u7f51\u5173\u63d0\u4ea4\u5230\u5e94\u7528\u94fe B \u5b8c\u6210\u6574\u4e2a\u8de8\u94fe\u64cd\u4f5c\u3002 \u4e2d\u7ee7\u94fe\u67b6\u6784\u9002\u7528\u4e8e\u5b89\u5168\u6027\u3001\u53ef\u8ffd\u6eaf\u6027\u6bd4\u8f83\u9ad8\u7684\u573a\u666f\uff0c\u53ef\u6784\u5efa\u5927\u89c4\u6a21\u5f02\u6784\u533a\u5757\u94fe\u8de8\u94fe\u7f51\u7edc\u3002","title":"\u4e2d\u7ee7\u94fe\u67b6\u6784"},{"location":"bitxhub/introduction/summary/#_5","text":"\u5bf9\u4e8e\u5b89\u5168\u6027\u8981\u6c42\u4e0d\u9ad8\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u4e0d\u501f\u52a9\u4e2d\u7ee7\u94fe\u8fdb\u884c\u8de8\u94fe\u64cd\u4f5c\uff0c\u5982\u56fe 1-2 \u662f\u7531\u8de8\u94fe\u7f51\u5173\u7ec4\u6210\u7684\u94fe\u5bf9\u94fe\u67b6\u6784\u3002\u5982\u5e94\u7528\u94fe A \u548c\u5e94\u7528\u94fe B \u7684\u8de8\u94fe\u4e92\u64cd\u4f5c\u76f4\u63a5\u901a\u8fc7\u4e2d\u95f4\u7684\u8de8\u94fe\u8def\u7531\u7f51\u7edc\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613\u7684\u540c\u6b65\u548c\u4f20\u8f93\uff0c\u8de8\u94fe\u4ea4\u6613\u7684\u771f\u5b9e\u6027\u9a8c\u8bc1\u4e5f\u7531\u8de8\u94fe\u7f51\u5173\u5b8c\u6210\u3002","title":"\u94fe\u5bf9\u94fe\u67b6\u6784"},{"location":"bitxhub/introduction/summary/#_6","text":"\u5982\u679c\u53c2\u4e0e\u65b9\u5b58\u5728\u4e0a\u4e0b\u7ea7\u7684\u6cbb\u7406\u5173\u7cfb\uff0c\u53ef\u4ee5\u9009\u7528\u4e3b\u4fa7\u94fe\u67b6\u6784\u3002\u5982\u56fe 1-3 \u4e2d\uff0c\u4e2d\u7ee7\u94fe\u5145\u5f53\u4e3b\u94fe\uff0c\u8d1f\u8d23\u4fa7\u94fe\u6210\u5458\u7ba1\u7406\u3001\u6570\u636e\u4e00\u81f4\u6027\u4fdd\u969c\u3001\u6838\u5fc3\u6570\u636e\u5b58\u8bc1\u7b49\uff0c\u4e14\u4e2d\u7ee7\u94fe\u7684\u4e0d\u53ef\u7be1\u6539\u7279\u6027\u53ef\u4ee5\u65b9\u4fbf\u5b9e\u73b0\u8de8\u94fe\u4ea4\u6613\u7684\u539f\u5b50\u6027\u4fdd\u969c\uff0c\u4e2d\u7ee7\u94fe\u901a\u8fc7\u9ad8\u6027\u80fd\u667a\u80fd\u5408\u7ea6\u7684\u65b9\u5f0f\u5c06\u8de8\u94fe\u5b89\u5168\u6027\u9a8c\u8bc1\u89c4\u5219\u5316\uff0c\u65b9\u4fbf\u5b9e\u73b0\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u8de8\u94fe\u4ea4\u6613\u9a8c\u8bc1\u7684\u65b9\u6cd5\u6ce8\u5165\u3001\u5347\u7ea7\uff1b\u4fa7\u94fe\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u63a5\u5165\u4e3b\u94fe\uff0c\u8d1f\u8d23\u627f\u8f7d\u5177\u4f53\u7684\u4e1a\u52a1\u670d\u52a1\uff0c\u5f62\u6210\u53ef\u6a2a\u5411\u6269\u5c55\u7684\u4fa7\u94fe\u96c6\u7fa4\u3002\u91c7\u7528\u8de8\u94fe\u7f51\u5173\u7684\u65b9\u5f0f\u5bf9\u63a5\u5177\u4f53\u7684\u5e94\u7528\u4fa7\u94fe\u53ef\u4ee5\u51cf\u5c11\u5bf9\u5177\u4f53\u6570\u636e\u6cbb\u7406\u94fe\u7684\u4fb5\u5165\u6027\uff0c\u7279\u522b\u662f\u9488\u5bf9\u5f02\u6784\u6570\u636e\u6cbb\u7406\u94fe\uff0c\u7f51\u5173\u53ef\u4ee5\u5c06\u8de8\u94fe\u4ea4\u6613\u8f6c\u6362\u6210\u4e2d\u7ee7\u53ef\u89e3\u6790\u9a8c\u8bc1\u7684\u683c\u5f0f\uff0c\u5bf9\u8de8\u94fe\u4e92\u8054\u670d\u52a1\u5c4f\u853d\u5177\u4f53\u533a\u5757\u94fe\u7684\u6570\u636e\u5dee\u5f02\u6027\uff1b\u7f51\u5173\u548c\u4e2d\u7ee7\u94fe\u5206\u79bb\u7684\u65b9\u6848\u53ef\u4ee5\u4fdd\u8bc1\u4e2d\u7ee7\u94fe\u7684\u7a33\u5b9a\u6027\u3002","title":"\u4e3b\u4fa7\u94fe\u67b6\u6784"},{"location":"bitxhub/introduction/summary/#_7","text":"\u4e0d\u540c\u533a\u5757\u94fe\u7531\u4e8e\u5176\u5e95\u5c42\u5e73\u53f0\u7684\u52a0\u5bc6\u7b97\u6cd5\u3001\u533a\u5757\u7ed3\u6784\u7b49\u4e0d\u540c\uff0c\u4e0d\u540c\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u6d88\u606f\u4e0d\u80fd\u76f4\u63a5\u901a\u4fe1\u3002\u4e3a\u4e86\u80fd\u591f\u652f\u6301\u5f02\u6784\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u8de8\u94fe\u4ea4\u6613\u8def\u7531\u548c\u53ef\u4fe1\u9a8c\u8bc1\uff0cBitXHub \u8bbe\u8ba1\u4e86\u901a\u7528\u7684\u8de8\u94fe\u4f20\u8f93\u534f\u8bae IBTP\uff08InterBlockchain Transfer Protocol\uff09,\u5141\u8bb8\u5f02\u6784\u8d44\u4ea7\u3001\u6570\u636e\u53ca\u670d\u52a1\u8fdb\u884c\u8de8\u94fe\u8c03\u7528\u3002 \u8be5\u534f\u8bae\u5185\u5bb9\u6307\u5b9a\u4e86\u76f8\u5173\u8de8\u94fe\u4e8b\u4ef6\u7684\u6765\u6e90\u94fe\u3001\u76ee\u7684\u94fe\u3001\u8de8\u94fe\u4ea4\u6613\u65b9\u6cd5\u4ee5\u53ca\u9a8c\u8bc1\u7b56\u7565\u3001\u7b7e\u540d\u7b49\u8bf8\u591a\u4fe1\u606f\uff0c\u652f\u6301\u5e94\u7528\u94fe\u4e0e\u4e2d\u7ee7\u94fe\u3001\u5e94\u7528\u94fe\u4e0e\u5e94\u7528\u94fe\u95f4\u7684\u4ea4\u4e92\u64cd\u4f5c\uff0c\u5176\u7ed3\u6784\u5982\u56fe 1-4 \u6240\u793a\u3002\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u6d88\u606f\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u8f6c\u6362\u6210 IBTP \u7ed3\u6784\u63d0\u4ea4\u81f3\u4e2d\u7ee7\u94fe\uff0c\u4e2d\u7ee7\u94fe\u901a\u8fc7 IBTP \u5185\u5bb9\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613\u7684\u5408\u6cd5\u6027\u9a8c\u8bc1\u53ca\u53ef\u9760\u8def\u7531\u3002\u57fa\u4e8e IBTP \u534f\u8bae\u8de8\u94fe\u7f51\u5173\u53ef\u5c06\u4e0d\u540c\u5e94\u7528\u94fe\u629b\u51fa\u7684\u4e8b\u4ef6\u6570\u636e\u683c\u5f0f\u8f6c\u6362\u4e3a\u7edf\u4e00\u7ed3\u6784\u3002 \u53c2\u6570 \u8bf4\u660e From \u6765\u6e90\u94feID To \u76ee\u7684\u94feID Version \u534f\u8bae\u7248\u672c\u53f7 Index \u8de8\u94fe\u4ea4\u6613\u7d22\u5f15 Payload \u8de8\u94fe\u8c03\u7528\u5185\u5bb9\u7f16\u7801 Timestamp \u8de8\u94fe\u4e8b\u4ef6\u53d1\u751f\u65f6\u95f4\u6233 Proof \u8de8\u94fe\u4ea4\u6613\u8bc1\u660e Extra \u81ea\u5b9a\u4e49\u5b57\u6bb5 IBTP \u6d88\u606f\u91c7\u7528 P2P \u7684\u65b9\u5f0f\u8fdb\u884c\u4f20\u8f93\uff0c\u6d88\u606f\u7684\u4e3b\u4f53\u5185\u5bb9\u5747\u91c7\u7528\u5bf9\u65b9\u7684\u516c\u94a5\u8fdb\u884c\u52a0\u5bc6\u786e\u4fdd\u6d88\u606f\u5185\u5bb9\u4f20\u64ad\u7684\u4e0d\u88ab\u7b2c\u4e09\u65b9\u7a83\u53d6\u3002\u540c\u65f6\u8c03\u7528\u5185\u5bb9\u7ecf\u8de8\u94fe\u7f51\u5173\u95f4\u534f\u5546\u7684\u5bf9\u79f0\u5bc6\u94a5\u52a0\u5bc6\u540e\u518d\u53d1\u9001\u81f3\u4e2d\u7ee7\u94fe\uff0c\u4fdd\u969c\u4f20\u8f93\u8c03\u7528\u7684\u5b89\u5168\u6027\u4e0e\u53ef\u9760\u6027\u3002","title":"\u8de8\u94fe\u534f\u8bae"},{"location":"bitxhub/introduction/summary/#_8","text":"","title":"\u4e2d\u7ee7\u94fe"},{"location":"bitxhub/introduction/summary/#_9","text":"\u4e2d\u7ee7\u94fe\u63a5\u5165\u4e86\u5f3a\u9c81\u68d2\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5 RBFT\uff0c\u5176\u5931\u6548\u6570\u636e\u6062\u590d\u3001\u52a8\u6001\u8282\u70b9\u589e\u5220\u7b49\u673a\u5236\u4fdd\u8bc1\u4e86\u4e2d\u7ee7\u94fe\u5929\u7136\u7684\u9ad8\u53ef\u7528\u6027\u3002BitXHub \u4e2d\u7684\u8de8\u94fe\u4ea4\u6613\u5728\u4ee5\u4e8b\u4ef6\u5f62\u5f0f\u629b\u51fa\u65f6\u901a\u8fc7\u5e8f\u53f7\u9012\u589e\u7684\u65b9\u5f0f\u5b58\u50a8\uff0c\u5728\u5171\u8bc6\u9636\u6bb5\u5bf9\u6765\u81ea\u540c\u4e00\u5e94\u7528\u94fe\u7684\u4ea4\u6613\u9700\u8981\u4e25\u683c\u6309\u7167\u5e8f\u53f7\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\uff0c\u82e5\u63a5\u6536\u5230\u7684\u4ea4\u6613\u5e8f\u53f7\u5f02\u5e38\u65f6\u6682\u65f6\u5c06\u5176\u653e\u5165\u7f13\u5b58\u4e2d\u7b49\u5f85\uff0c\u76f4\u5230\u6b63\u786e\u5e8f\u53f7\u7684\u4ea4\u6613\u5230\u8fbe\u540e\u518d\u7ee7\u7eed\u8fdb\u884c\u6392\u5e8f\u3001\u6253\u5305\u3002 \u4e3a\u4e86\u6ee1\u8db3\u66f4\u591a\u5e94\u7528\u573a\u666f\u7684\u9700\u6c42\uff0cBitXHub \u7684\u4e2d\u7ee7\u94fe\u53ef\u4ee5\u5bf9\u8282\u70b9\u8fdb\u884c\u52a8\u6001\u589e\u5220\uff0c\u94fe\u4e0a\u7684\u8282\u70b9\u5bf9\u4e2d\u7ee7\u94fe\u5171\u540c\u7ef4\u62a4\u5e76\u53c2\u4e0e\u5171\u8bc6\uff0c\u4e3a\u4e86\u907f\u514d\u90e8\u5206\u8282\u70b9\u56e0\u4e3a\u67d0\u4e9b\u6545\u969c\u5bfc\u81f4\u8282\u70b9\u72b6\u6001\u5927\u5e45\u843d\u540e\u533a\u5757\u94fe\u7f51\u7edc\uff0c\u5e73\u53f0\u63d0\u4f9b\u4e00\u79cd Sync Protocol \u7684\u65b9\u5f0f\u6765\u66f4\u65b0\u5f02\u5e38\u8282\u70b9\u72b6\u6001\uff0c\u4fdd\u969c\u6574\u4e2a\u4e2d\u7ee7\u94fe\u7cfb\u7edf\u7684\u7a33\u5b9a\u8fd0\u884c\u3002","title":"\u5171\u8bc6\u7b97\u6cd5"},{"location":"bitxhub/introduction/summary/#_10","text":"\u4e2d\u7ee7\u94fe\u4e2d\u9a8c\u8bc1\u5f15\u64ce\u7684\u8bbe\u8ba1\u91c7\u7528\u4e86\u9a8c\u8bc1\u5668\u7684\u63d2\u62d4\u5f0f\u8bbe\u8ba1\uff0c\u5373\u5bf9\u4e8e\u4e0d\u540c\u7684\u8de8\u94fe\u4ea4\u6613\u6240\u91c7\u7528\u4e0d\u540c\u7684\u9a8c\u8bc1\u89c4\u5219\u7b56\u7565\uff0c\u9a8c\u8bc1\u5f15\u64ce\u4f1a\u6839\u636e\u89c4\u5219\u5730\u5740\u6765\u5224\u65ad\u91c7\u7528\u4e0d\u540c\u7684\u9a8c\u8bc1\u5668\u8fdb\u884c\u9a8c\u8bc1\u3002\u73b0\u9636\u6bb5\u7684\u9a8c\u8bc1\u5f15\u64ce\u652f\u6301 Go \u5185\u7f6e\u9a8c\u8bc1\u5668\u548c WASM \u865a\u62df\u673a\u9a8c\u8bc1\u5668\u3002","title":"\u9a8c\u8bc1\u5f15\u64ce"},{"location":"bitxhub/introduction/summary/#_11","text":"\u4e2d\u7ee7\u94fe\u5185\u7f6e\u4e86\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\uff0c\u63d0\u4f9b\u57fa\u4e8e\u672c\u5730\u6d88\u606f\u8868\u7684\u4e8b\u52a1\u652f\u6301\uff0c\u5b9e\u73b0\u4e86\u8de8\u94fe\u4e8b\u52a1\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u3002\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u5728\u5904\u7406\u8de8\u94fe\u4ea4\u6613\u65f6\uff0c\u6839\u636e\u76ee\u7684\u94fe\u6570\u91cf\u7684\u4e0d\u540c\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09\uff0c\u91c7\u7528\u4e0d\u540c\u7684\u903b\u8f91\u751f\u6210\u8de8\u94fe\u4e8b\u52a1 ID\uff0c\u5e76\u5c06\u4e8b\u52a1 ID \u5bf9\u5e94\u7684\u521d\u59cb\u72b6\u6001\u8bb0\u5f55\u5728\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u3002\u5f53\u76ee\u7684\u94fe\u6267\u884c\u5b8c\u8de8\u94fe\u4ea4\u6613\u540e\uff0c\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u6839\u636e\u76ee\u7684\u94fe\u4ea4\u6613\u7684\u6267\u884c\u7ed3\u679c\uff08\u6210\u529f\u6216\u5931\u8d25\uff09\u66f4\u65b0\u5bf9\u5e94\u4e8b\u52a1\u7684\u72b6\u6001\u3002\u4e8b\u52a1\u7ba1\u7406\u5408\u7ea6\u63d0\u4f9b\u4e86\u63a5\u53e3\uff0c\u53ef\u4f9b\u5404\u5e94\u7528\u94fe\u67e5\u8be2\u67d0\u4e2a\u4e8b\u52a1 ID \u5bf9\u5e94\u7684\u4e8b\u52a1\u72b6\u6001\u3002\u82e5\u5e94\u7528\u94fe\u53d1\u73b0\u4e8b\u52a1\u6267\u884c\u5931\u8d25\uff0c\u5219\u9700\u8981\u8d1f\u8d23\u4e1a\u52a1\u4e0a\u7684\u56de\u6eda\u64cd\u4f5c\u3002","title":"\u4e8b\u52a1\u7ba1\u7406"},{"location":"bitxhub/introduction/summary/#_12","text":"\u8de8\u94fe\u7f51\u5173\uff08Pier\uff09\u662f\u7531\u5e94\u7528\u94fe\u7ef4\u62a4\u3001\u53ef\u4e0e\u5e94\u7528\u94fe\u548c\u4e2d\u7ee7\u94fe\u76f4\u63a5\u4ea4\u4e92\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4f5c\u4e3a\u53d1\u9001\u65b9\u65f6\u9700\u4fdd\u8bc1\u8de8\u94fe\u4ea4\u6613\u63a5\u6536\u6709\u5e8f\u6027\uff0c\u4f5c\u4e3a\u63a5\u6536\u65b9\u65f6\u9700\u9a8c\u8bc1\u8de8\u94fe\u4ea4\u6613\u53ef\u9760\u6027\u3002\u6bcf\u4e2a\u533a\u5757\u94fe\u7f51\u7edc\u7684\u7ba1\u7406\u5458\u9700\u8981\u6307\u5b9a\u5e76\u7ef4\u62a4\u81ea\u5df1\u53ef\u4fe1\u4efb\u7684\u8de8\u94fe\u7f51\u5173\u8282\u70b9\uff0c\u5141\u8bb8\u8de8\u94fe\u7f51\u5173\u8282\u70b9\u6388\u4fe1\u8bbf\u95ee\u548c\u89e3\u6790\u672c\u533a\u5757\u94fe\u4e0a\u7684\u533a\u5757\u94fe\u8de8\u94fe\u4fe1\u606f\u548c\u76f8\u5173\u72b6\u6001\u4fe1\u606f\u3002 \u5728\u590d\u6742\u7684\u8de8\u94fe\u573a\u666f\u4e0b\uff0c\u5e94\u7528\u94fe\u5982\u4f55\u4fbf\u6377\u5730\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u4ee5\u8fbe\u5230\u826f\u597d\u7684\u6269\u5c55\u6027\uff0c\u5bf9\u4e8e\u6fc0\u53d1\u8de8\u94fe\u7cfb\u7edf\u751f\u6001\u7684\u6d3b\u529b\u81f3\u5173\u91cd\u8981\u3002\u8de8\u94fe\u7f51\u5173\u662f\u4e00\u79cd\u8fde\u63a5\u4e0d\u540c\u533a\u5757\u94fe\u7cfb\u7edf\u7684\u4ea4\u4e92\u7ec4\u4ef6\uff0c\u5728 BitXHub \u4e2d\u5145\u5f53\u7740\u4e24\u4e2a\u4e0d\u540c\u7684\u89d2\u8272\uff1a \u8fde\u63a5\u5e94\u7528\u94fe\u548c\u4e2d\u7ee7\u94fe\u3002\u5728\u5355\u4e2d\u7ee7\u94fe\u7684\u5c42\u7ea7\u4e2d\uff0cPier \u4f5c\u4e3a\u4e00\u4e2a\u4e2d\u95f4\u90e8\u4ef6\u6765 \u7b80\u5316\u533a\u5757\u94fe\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u7684\u8fc7\u7a0b\uff0c\u589e\u5f3a\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u7684\u4fbf\u6377\u6027\u3002 \u8fde\u63a5\u4e0d\u540c\u7684\u4e2d\u7ee7\u94fe\u3002\u5728\u591a\u4e2d\u7ee7\u94fe\u5f62\u6210\u7684\u533a\u5757\u94fe\u7f51\u7edc\u4e2d\uff0cPier \u901a\u8fc7 P2P \u7ec4 \u7f51\u7684\u65b9\u5f0f\u5728\u591a\u4e2a\u5c42\u7ea7\u4e2d\u8d77\u5230\u201c\u8def\u7531\u5668\u201d\u7684\u4f5c\u7528\u3002 \u4e3a\u4e86\u5b9e\u73b0\u4e0a\u8ff0\u7684\u4fbf\u6377\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u8de8\u94fe\u7f51\u5173\u5728\u5e94\u7528\u94fe\u7684\u9002\u914d\u548c\u6838\u5fc3\u529f\u80fd\u7684\u5b9e\u73b0\u4e0a\u4f5c\u4e86\u7075\u6d3b\u8bbe\u8ba1\u3002","title":"\u8de8\u94fe\u7f51\u5173"},{"location":"bitxhub/introduction/summary/#_13","text":"BitXHub \u63d0\u4f9b\u8de8\u94fe\u7f51\u5173\u63d2\u4ef6\u673a\u5236\uff0c\u5176\u4e00\u5927\u7279\u70b9\u662f\u5c06\u8de8\u94fe\u7f51\u5173\u4e2d\u4e0e\u5e94\u7528\u94fe\u7684\u4ea4\u4e92\u6a21\u5757\u548c\u6838\u5fc3\u6a21\u5757\u8fdb\u884c\u89e3\u8026\uff0c\u4ece\u800c\u65b9\u4fbf\u66f4\u591a\u7684\u5e94\u7528\u94fe\u52a0\u5165\u8de8\u94fe\u7cfb\u7edf\u3002\u5982\u4e0b\u56fe 1-5 \u6240\u793a\uff0c\u5728\u8de8\u94fe\u7f51\u5173\u8fd0\u884c\u65f6\uff0c\u901a\u8fc7\u52a8\u6001\u52a0\u8f7d\u63d2\u4ef6\u7684\u65b9\u5f0f\u5b8c\u6210\u5e94\u7528\u94fe\u7684\u63a5\u5165\u3002","title":"\u63d2\u4ef6\u673a\u5236"},{"location":"bitxhub/introduction/summary/#_14","text":"\u4e3a\u4e86\u66f4\u597d\u7684\u4fdd\u969c\u8de8\u94fe\u7f51\u7edc\u4e4b\u95f4\u4e92\u901a\u7684\u7a33\u5b9a\u6027\uff0cBitXHub \u63d0\u4f9b\u4e3b\u5907\u8de8\u94fe\u7f51\u5173\u529f\u80fd\uff0c\u5982\u56fe 1-6 \u6240\u793a\uff0c\u57fa\u4e8e\u4e2d\u7ee7\u94fe\uff0c\u4e3b\u5907\u8de8\u94fe\u7f51\u5173\u548c\u4e2d\u7ee7\u94fe\u4e0a\u7684\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\uff0c\u901a\u8fc7\u7ade\u4e89\u673a\u5236\uff0c\u6309\u7167\u8fde\u63a5\u8282\u70b9\u7684\u5148\u540e\u51b3\u5b9a\u4e3b\u5907\u7f51\u5173\u6b21\u5e8f\uff0c\u4fdd\u969c\u4e2d\u7ee7\u94fe\u4e0a\u7f51\u5173\u4e3b\u8282\u70b9\u7684\u552f\u4e00\u6027\u3002\u5e76\u652f\u6301\u4e3b\u5907\u7f51\u5173\u8fdb\u884c\u7075\u6d3b\u5207\u6362\uff0c\u5f53\u4e3b\u8282\u70b9\u7f51\u5173\u51fa\u73b0\u5f02\u5e38\u5b95\u673a\u65f6\uff0c\u7cfb\u7edf\u53ef\u8fdb\u884c\u81ea\u52a8\u65e0\u7f1d\u5207\u6362\uff0c\u4e3a\u4e2d\u7ee7\u94fe\u63d0\u4f9b\u9ad8\u53ef\u9760\u7684\u8de8\u94fe\u670d\u52a1\uff0c\u5b9e\u73b0\u66f4\u52a0\u7a33\u5b9a\u7684\u6570\u636e\u4e92\u901a\u4e92\u8054\u3002","title":"\u7f51\u5173\u9ad8\u53ef\u7528"},{"location":"bitxhub/introduction/summary/#_15","text":"\u5728\u6700\u65b0\u7684 BitXHub \u8de8\u94fe\u5e73\u53f0\u4e2d\uff0c\u4e2d\u7ee7\u94fe\u5728\u539f\u6709\u529f\u80fd\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u5927\u89c4\u6a21\u8de8\u94fe\u7f51\u7edc\u7684\u529f\u80fd\uff0c\u5982\u56fe 1-7 \u6240\u793a\uff0c\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u5f62\u6210\u4e00\u4e2a P2P \u7f51\u7edc\uff0c\u5bf9\u4e0d\u540c\u4e2d\u7ee7\u94fe\u7684\u8de8\u94fe\u6d88\u606f\u8fdb\u884c\u6d88\u606f\u8def\u7531\uff0c\u8fbe\u5230\u5e73\u884c\u6269\u5c55\u4e2d\u7ee7\u94fe\u7684\u6548\u679c\u3002\u5728\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u7684\u8de8\u94fe\u7f51\u7edc\u4e2d\uff0c\u589e\u52a0\u5927\u89c4\u6a21\u7f51\u7edc\u4e2d\u7684\u6d88\u606f\u8def\u7531\u673a\u5236\uff0c\u5e76\u901a\u8fc7\u591a\u7b7e\u8ba4\u8bc1\u7684\u65b9\u5f0f\uff0c\u5b9e\u73b0\u4e0d\u540c\u4e2d\u7ee7\u94fe\u4e0a\u7684\u5e94\u7528\u94fe\u95f4\u7684\u8eab\u4efd\u9a8c\u8bc1\u3002\u76ee\u524d\u5e73\u53f0\u53ef\u652f\u6301\u8d85\u8fc7 1000+\u7684\u5e94\u7528\u94fe\u7684\u5e76\u53d1\u63a5\u5165\u6027\u80fd\u3002 \u8de8\u94fe\u6280\u672f\u4f5c\u4e3a\u8fde\u63a5\u5404\u533a\u5757\u94fe\u7684\u6865\u6881\uff0c\u5b9e\u73b0\u4e86\u4e0d\u540c\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u8d44\u4ea7\u539f\u5b50\u6027\u4ea4\u6613\u3001\u4fe1\u606f\u6570\u636e\u4e92\u901a\u3001\u4e1a\u52a1\u670d\u52a1\u4e92\u8865\u7b49\u529f\u80fd\uff0c\u6253\u7834\u4e0d\u540c\u533a\u5757\u94fe\u95f4\u7684\u6570\u636e\u5b64\u5c9b\u3002\u8de8\u94fe\u6280\u672f\u662f\u6784\u5efa\u533a\u5757\u94fe\u4e92\u8054\u4e92\u901a\u7f51\u7edc\u751f\u6001\uff0c\u5b9e\u73b0\u533a\u5757\u94fe\u201c\u4ef7\u503c\u4e92\u8054\u7f51\u201d\u7684\u5173\u952e\u67a2\u7ebd\u3002","title":"\u533a\u5757\u94fe\u4e92\u8054\u7f51\u7edc"},{"location":"bitxhub/operation/exception_problem_handling/","text":"\u5f02\u5e38\u95ee\u9898\u5904\u7406 \u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u8de8\u94fe\u7cfb\u7edf\u51fa\u73b0\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\u5982\u4f55\u5b9a\u4f4d\u95ee\u9898\u548c\u5feb\u901f\u64cd\u4f5c\uff0c\u8ba9\u8de8\u94fe\u7cfb\u7edf\u6062\u590d\u53ef\u7528\u72b6\u6001 \u573a\u666f\u4e00\uff1aPier\u4e0eBitXHub\u4e4b\u95f4\u8fde\u63a5\u5f02\u5e38 \u73b0\u8c61 Pier\u8de8\u94fe\u7f51\u5173\u65e5\u5fd7\u663e\u793a\u8fde\u63a5\u4e0d\u5230BitXHub\u8282\u70b9\uff08\u53ef\u53c2\u8003\u67e5\u770bpier\u8282\u70b9\u65e5\u5fd7\u7684\u64cd\u4f5c\u8bf4\u660e\uff09\u3002 \u95ee\u9898\u5b9a\u4f4d \u770b\u5230\u6b64\u73b0\u8c61\u9996\u5148\u68c0\u67e5\u8be5Pier\u8fde\u63a5\u7684BitXHub\u8282\u70b9\u72b6\u6001\u662f\u5426\u6b63\u5e38\uff0c\u5982\u679cBitXHub\u72b6\u6001\u6b63\u5e38\uff0c\u90a3\u518d\u68c0\u67e5Pier\u5230BitXHub\u4e4b\u95f4\u7684\u7f51\u7edc\u662f\u5426\u8fde\u901a\uff0c\u5e94\u5177\u4f53\u5230\u5bf9\u5e94\u7aef\u53e3\u8fde\u63a5\u3002 \u5e94\u6025\u6062\u590d\u65b9\u6cd5 \u5982\u679cBitXHub\u8282\u70b9\u72b6\u6001\u4e0d\u6b63\u5e38\uff0c\u5e94\u8be5\u5148\u6062\u590d\u8be5BitXHub\u8282\u70b9\u6216\u5207\u6362\u5230\u8fde\u63a5\u5176\u5b83\u6b63\u5e38\u7684BitXHub\u8282\u70b9\u540e\uff0c\u518d\u542f\u52a8\u8fd0\u884cPier\uff1b \u5982\u679cBitXHub\u8282\u70b9\u72b6\u6001\u6b63\u5e38\uff0c\u95ee\u9898\u662f\u7f51\u7edc\u4e0d\u901a\u5bfc\u81f4\uff0c\u5219\u5e94\u5148\u68c0\u67e5\u5e76\u89e3\u51b3\u7f51\u7edc\u8fde\u901a\u95ee\u9898\uff0c\u518d\u542f\u52a8\u8fd0\u884cPier\u3002 \u9a8c\u8bc1\u65b9\u6cd5 \u91cd\u65b0\u542f\u52a8\u7684Pier\u8de8\u94fe\u7f51\u5173\u5de5\u4f5c\u6b63\u5e38\uff0c\u53ef\u4ee5\u8fde\u63a5BitXHub\u8282\u70b9 \u573a\u666f\u4e8c\uff1aPier\u4e0e\u5e94\u7528\u94fe\u4e4b\u95f4\u8fde\u63a5\u5f02\u5e38 \u73b0\u8c61 Pier\u8de8\u94fe\u7f51\u5173\u542f\u52a8\u65f6\u65e5\u5fd7\u663e\u793a\u8fde\u63a5\u4e0d\u5230\u6307\u5b9a\u7684\u5e94\u7528\u94fe\uff0c\u6216Pier\u5904\u7406\u8de8\u94fe\u4ea4\u6613\u65f6\u65e5\u5fd7\u663e\u793a\u4e00\u76f4\u91cd\u8bd5\u8fde\u63a5\u5e94\u7528\u94fe\uff08\u53ef\u53c2\u8003\u67e5\u770bpier\u8282\u70b9\u65e5\u5fd7\u7684\u64cd\u4f5c\u8bf4\u660e\uff09\u3002 \u95ee\u9898\u5b9a\u4f4d \u770b\u770b\u5230\u6b64\u73b0\u8c61\u9996\u5148\u68c0\u67e5\u8be5Pier\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u8282\u70b9\u72b6\u6001\u662f\u5426\u6b63\u5e38\uff0c\u5982\u679c\u5e94\u7528\u94fe\u72b6\u6001\u6b63\u5e38\uff0c\u90a3\u518d\u68c0\u67e5Pier\u5230\u5e94\u7528\u94fe\u4e4b\u95f4\u7684\u7f51\u7edc\u662f\u5426\u8fde\u901a\uff0c\u5e94\u5177\u4f53\u5230\u5bf9\u5e94\u7aef\u53e3\u8fde\u63a5\u3002 \u5e94\u6025\u6062\u590d\u65b9\u6cd5 \u5982\u679c\u5e94\u7528\u94fe\u8282\u70b9\u72b6\u6001\u4e0d\u6b63\u5e38\uff0c\u5e94\u8be5\u5148\u6062\u590d\u8be5\u5e94\u7528\u94fe\u8282\u70b9\u540e\uff0c\u518d\u542f\u52a8\u8fd0\u884cPier\uff1b \u5982\u679c\u5e94\u7528\u94fe\u8282\u70b9\u72b6\u6001\u6b63\u5e38\uff0c\u95ee\u9898\u662f\u7f51\u7edc\u4e0d\u901a\u5bfc\u81f4\uff0c\u5219\u5e94\u5148\u68c0\u67e5\u5e76\u89e3\u51b3\u7f51\u7edc\u8fde\u901a\u95ee\u9898\uff0c\u518d\u542f\u52a8\u8fd0\u884cPier\u3002 \u9a8c\u8bc1\u65b9\u6cd5 \u91cd\u65b0\u542f\u52a8\u7684Pier\u8de8\u94fe\u7f51\u5173\u5de5\u4f5c\u6b63\u5e38\uff0c\u53ef\u4ee5\u8fde\u63a5\u5e94\u7528\u94fe\u8282\u70b9\u3002 \u573a\u666f\u4e09\uff1aPier\u65e5\u5fd7\u63d0\u793a\u201csystem is temporarily unavailable\u201d \u73b0\u8c61 Pier\u8de8\u94fe\u7f51\u5173\u65e5\u5fd7\u663e\u793a\u201csystem is temporarily unavailable\u201d\uff08\u53ef\u53c2\u8003\u67e5\u770bpier\u8282\u70b9\u65e5\u5fd7\u7684\u64cd\u4f5c\u8bf4\u660e\uff09\u3002 \u95ee\u9898\u5b9a\u4f4d \u770b\u5230\u6b64\u73b0\u8c61\u9996\u5148\u68c0\u67e5\u8be5Pier\u8fde\u63a5\u7684BitXHub\u8282\u70b9\u72b6\u6001\u662f\u5426\u6b63\u5e38\uff0c\u518d\u67e5\u770bBitXHub\u96c6\u7fa4\u4e2d\u5404\u8282\u70b9\u7684\u65e5\u5fd7\u4fe1\u606f\u3002 \u5e94\u6025\u6062\u590d\u65b9\u6cd5 \u5982\u679cBitXHub\u96c6\u7fa4\u6b63\u5904\u4e8e\u9009\u4e3e\u6216\u6062\u590d\u9636\u6bb5\uff0c\u53ef\u4ee5\u7b49\u5176\u5171\u8bc6\u5b8c\u6210\u540e\u518d\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\u8bf7\u6c42\uff1b \u5982\u679cBitXHub\u96c6\u7fa4\u5df2\u6709\u8d85\u8fc7\u53ef\u5bb9\u5fcd\u7684\u8282\u70b9\u5904\u4e8e\u5931\u53bb\u8fde\u63a5\u72b6\u6001\uff0c\u5e94\u5148\u6309\u7167\u573a\u666f\u4e00\u7684\u65b9\u6cd5\u89e3\u51b3\u95ee\u9898\uff0c\u4f7f\u96c6\u7fa4\u72b6\u6001\u6062\u590d\u6b63\u5e38\u540e\u518d\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\u8bf7\u6c42\u3002 \u9a8c\u8bc1\u65b9\u6cd5 BitXHub\u96c6\u7fa4\u5de5\u4f5c\u6b63\u5e38\uff0c\u8de8\u94fe\u4ea4\u6613\u6267\u884c\u6210\u529f\uff0c\u53ef\u4ee5\u6b63\u786e\u8fd4\u56de\u4ea4\u6613\u56de\u6267\u3002","title":"\u5f02\u5e38\u95ee\u9898\u5904"},{"location":"bitxhub/operation/exception_problem_handling/#_1","text":"\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u8de8\u94fe\u7cfb\u7edf\u51fa\u73b0\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\u5982\u4f55\u5b9a\u4f4d\u95ee\u9898\u548c\u5feb\u901f\u64cd\u4f5c\uff0c\u8ba9\u8de8\u94fe\u7cfb\u7edf\u6062\u590d\u53ef\u7528\u72b6\u6001","title":"\u5f02\u5e38\u95ee\u9898\u5904\u7406"},{"location":"bitxhub/operation/exception_problem_handling/#pierbitxhub","text":"","title":"\u573a\u666f\u4e00\uff1aPier\u4e0eBitXHub\u4e4b\u95f4\u8fde\u63a5\u5f02\u5e38"},{"location":"bitxhub/operation/exception_problem_handling/#_2","text":"Pier\u8de8\u94fe\u7f51\u5173\u65e5\u5fd7\u663e\u793a\u8fde\u63a5\u4e0d\u5230BitXHub\u8282\u70b9\uff08\u53ef\u53c2\u8003\u67e5\u770bpier\u8282\u70b9\u65e5\u5fd7\u7684\u64cd\u4f5c\u8bf4\u660e\uff09\u3002","title":"\u73b0\u8c61"},{"location":"bitxhub/operation/exception_problem_handling/#_3","text":"\u770b\u5230\u6b64\u73b0\u8c61\u9996\u5148\u68c0\u67e5\u8be5Pier\u8fde\u63a5\u7684BitXHub\u8282\u70b9\u72b6\u6001\u662f\u5426\u6b63\u5e38\uff0c\u5982\u679cBitXHub\u72b6\u6001\u6b63\u5e38\uff0c\u90a3\u518d\u68c0\u67e5Pier\u5230BitXHub\u4e4b\u95f4\u7684\u7f51\u7edc\u662f\u5426\u8fde\u901a\uff0c\u5e94\u5177\u4f53\u5230\u5bf9\u5e94\u7aef\u53e3\u8fde\u63a5\u3002","title":"\u95ee\u9898\u5b9a\u4f4d"},{"location":"bitxhub/operation/exception_problem_handling/#_4","text":"\u5982\u679cBitXHub\u8282\u70b9\u72b6\u6001\u4e0d\u6b63\u5e38\uff0c\u5e94\u8be5\u5148\u6062\u590d\u8be5BitXHub\u8282\u70b9\u6216\u5207\u6362\u5230\u8fde\u63a5\u5176\u5b83\u6b63\u5e38\u7684BitXHub\u8282\u70b9\u540e\uff0c\u518d\u542f\u52a8\u8fd0\u884cPier\uff1b \u5982\u679cBitXHub\u8282\u70b9\u72b6\u6001\u6b63\u5e38\uff0c\u95ee\u9898\u662f\u7f51\u7edc\u4e0d\u901a\u5bfc\u81f4\uff0c\u5219\u5e94\u5148\u68c0\u67e5\u5e76\u89e3\u51b3\u7f51\u7edc\u8fde\u901a\u95ee\u9898\uff0c\u518d\u542f\u52a8\u8fd0\u884cPier\u3002","title":"\u5e94\u6025\u6062\u590d\u65b9\u6cd5"},{"location":"bitxhub/operation/exception_problem_handling/#_5","text":"\u91cd\u65b0\u542f\u52a8\u7684Pier\u8de8\u94fe\u7f51\u5173\u5de5\u4f5c\u6b63\u5e38\uff0c\u53ef\u4ee5\u8fde\u63a5BitXHub\u8282\u70b9","title":"\u9a8c\u8bc1\u65b9\u6cd5"},{"location":"bitxhub/operation/exception_problem_handling/#pier","text":"","title":"\u573a\u666f\u4e8c\uff1aPier\u4e0e\u5e94\u7528\u94fe\u4e4b\u95f4\u8fde\u63a5\u5f02\u5e38"},{"location":"bitxhub/operation/exception_problem_handling/#_6","text":"Pier\u8de8\u94fe\u7f51\u5173\u542f\u52a8\u65f6\u65e5\u5fd7\u663e\u793a\u8fde\u63a5\u4e0d\u5230\u6307\u5b9a\u7684\u5e94\u7528\u94fe\uff0c\u6216Pier\u5904\u7406\u8de8\u94fe\u4ea4\u6613\u65f6\u65e5\u5fd7\u663e\u793a\u4e00\u76f4\u91cd\u8bd5\u8fde\u63a5\u5e94\u7528\u94fe\uff08\u53ef\u53c2\u8003\u67e5\u770bpier\u8282\u70b9\u65e5\u5fd7\u7684\u64cd\u4f5c\u8bf4\u660e\uff09\u3002","title":"\u73b0\u8c61"},{"location":"bitxhub/operation/exception_problem_handling/#_7","text":"\u770b\u770b\u5230\u6b64\u73b0\u8c61\u9996\u5148\u68c0\u67e5\u8be5Pier\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u8282\u70b9\u72b6\u6001\u662f\u5426\u6b63\u5e38\uff0c\u5982\u679c\u5e94\u7528\u94fe\u72b6\u6001\u6b63\u5e38\uff0c\u90a3\u518d\u68c0\u67e5Pier\u5230\u5e94\u7528\u94fe\u4e4b\u95f4\u7684\u7f51\u7edc\u662f\u5426\u8fde\u901a\uff0c\u5e94\u5177\u4f53\u5230\u5bf9\u5e94\u7aef\u53e3\u8fde\u63a5\u3002","title":"\u95ee\u9898\u5b9a\u4f4d"},{"location":"bitxhub/operation/exception_problem_handling/#_8","text":"\u5982\u679c\u5e94\u7528\u94fe\u8282\u70b9\u72b6\u6001\u4e0d\u6b63\u5e38\uff0c\u5e94\u8be5\u5148\u6062\u590d\u8be5\u5e94\u7528\u94fe\u8282\u70b9\u540e\uff0c\u518d\u542f\u52a8\u8fd0\u884cPier\uff1b \u5982\u679c\u5e94\u7528\u94fe\u8282\u70b9\u72b6\u6001\u6b63\u5e38\uff0c\u95ee\u9898\u662f\u7f51\u7edc\u4e0d\u901a\u5bfc\u81f4\uff0c\u5219\u5e94\u5148\u68c0\u67e5\u5e76\u89e3\u51b3\u7f51\u7edc\u8fde\u901a\u95ee\u9898\uff0c\u518d\u542f\u52a8\u8fd0\u884cPier\u3002","title":"\u5e94\u6025\u6062\u590d\u65b9\u6cd5"},{"location":"bitxhub/operation/exception_problem_handling/#_9","text":"\u91cd\u65b0\u542f\u52a8\u7684Pier\u8de8\u94fe\u7f51\u5173\u5de5\u4f5c\u6b63\u5e38\uff0c\u53ef\u4ee5\u8fde\u63a5\u5e94\u7528\u94fe\u8282\u70b9\u3002","title":"\u9a8c\u8bc1\u65b9\u6cd5"},{"location":"bitxhub/operation/exception_problem_handling/#piersystem-is-temporarily-unavailable","text":"","title":"\u573a\u666f\u4e09\uff1aPier\u65e5\u5fd7\u63d0\u793a\u201csystem is temporarily unavailable\u201d"},{"location":"bitxhub/operation/exception_problem_handling/#_10","text":"Pier\u8de8\u94fe\u7f51\u5173\u65e5\u5fd7\u663e\u793a\u201csystem is temporarily unavailable\u201d\uff08\u53ef\u53c2\u8003\u67e5\u770bpier\u8282\u70b9\u65e5\u5fd7\u7684\u64cd\u4f5c\u8bf4\u660e\uff09\u3002","title":"\u73b0\u8c61"},{"location":"bitxhub/operation/exception_problem_handling/#_11","text":"\u770b\u5230\u6b64\u73b0\u8c61\u9996\u5148\u68c0\u67e5\u8be5Pier\u8fde\u63a5\u7684BitXHub\u8282\u70b9\u72b6\u6001\u662f\u5426\u6b63\u5e38\uff0c\u518d\u67e5\u770bBitXHub\u96c6\u7fa4\u4e2d\u5404\u8282\u70b9\u7684\u65e5\u5fd7\u4fe1\u606f\u3002","title":"\u95ee\u9898\u5b9a\u4f4d"},{"location":"bitxhub/operation/exception_problem_handling/#_12","text":"\u5982\u679cBitXHub\u96c6\u7fa4\u6b63\u5904\u4e8e\u9009\u4e3e\u6216\u6062\u590d\u9636\u6bb5\uff0c\u53ef\u4ee5\u7b49\u5176\u5171\u8bc6\u5b8c\u6210\u540e\u518d\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\u8bf7\u6c42\uff1b \u5982\u679cBitXHub\u96c6\u7fa4\u5df2\u6709\u8d85\u8fc7\u53ef\u5bb9\u5fcd\u7684\u8282\u70b9\u5904\u4e8e\u5931\u53bb\u8fde\u63a5\u72b6\u6001\uff0c\u5e94\u5148\u6309\u7167\u573a\u666f\u4e00\u7684\u65b9\u6cd5\u89e3\u51b3\u95ee\u9898\uff0c\u4f7f\u96c6\u7fa4\u72b6\u6001\u6062\u590d\u6b63\u5e38\u540e\u518d\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\u8bf7\u6c42\u3002","title":"\u5e94\u6025\u6062\u590d\u65b9\u6cd5"},{"location":"bitxhub/operation/exception_problem_handling/#_13","text":"BitXHub\u96c6\u7fa4\u5de5\u4f5c\u6b63\u5e38\uff0c\u8de8\u94fe\u4ea4\u6613\u6267\u884c\u6210\u529f\uff0c\u53ef\u4ee5\u6b63\u786e\u8fd4\u56de\u4ea4\u6613\u56de\u6267\u3002","title":"\u9a8c\u8bc1\u65b9\u6cd5"},{"location":"bitxhub/operation/node_log_view/","text":"\u8282\u70b9\u65e5\u5fd7\u67e5\u770b \u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u67e5\u770b\u8de8\u94fe\u7cfb\u7edf\u4e2dbitxhub\u548cpier\u8282\u70b9\u7684\u65e5\u5fd7\u4fe1\u606f\u3002 BitXHub \u5982\u679c\u662f\u5728\u7ec8\u7aef\u524d\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u65e5\u5fd7\u4f1a\u5b9e\u65f6\u6253\u5370\u5728\u7ec8\u7aef\u4e0a\uff0c\u89c2\u5bdf\u5176\u65e0\u62a5\u9519\u5373\u53ef\uff1b \u5982\u679c\u662f\u901a\u8fc7nohup\u7b49\u540e\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u5728\u8282\u70b9\u4e3b\u914d\u7f6e\u76ee\u5f55\u7684logs\u6587\u4ef6\u5939\u4e2d\u5c31\u662f\u8282\u70b9\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u6253\u5f00\u5373\u53ef\u68c0\u67e5\u65e5\u5fd7\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u9664\u4e86\u51fa\u5757\uff0cbitxhub\u8282\u70b9\u4e4b\u95f4\u4f1a\u5b9a\u65f6\u76f8\u4e92 ping \u5176\u5b83\u8282\u70b9\u5e76\u8fd4\u56de\u5ef6\u65f6\u4fe1\u606f\uff0c\u53ef\u4ee5\u7b80\u5355\u770b\u5230\u8282\u70b9\u96c6\u7fa4\u4e4b\u95f4\u7684\u7f51\u7edc\u72b6\u6001\u3002 Pier \u5982\u679c\u662f\u5728\u7ec8\u7aef\u524d\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u65e5\u5fd7\u4f1a\u5b9e\u65f6\u6253\u5370\u5728\u7ec8\u7aef\u4e0a\uff0c\u89c2\u5bdf\u5176\u65e0\u62a5\u9519\u5373\u53ef\uff1b \u5982\u679c\u662f\u901a\u8fc7nohup\u7b49\u540e\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u5728\u8282\u70b9\u4e3b\u914d\u7f6e\u76ee\u5f55\u7684logs\u6587\u4ef6\u5939\u4e2d\u5c31\u662f\u8282\u70b9\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u6253\u5f00\u5373\u53ef\u68c0\u67e5\u65e5\u5fd7\uff0c","title":"\u67e5\u770b\u65e5\u5fd7"},{"location":"bitxhub/operation/node_log_view/#_1","text":"\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u67e5\u770b\u8de8\u94fe\u7cfb\u7edf\u4e2dbitxhub\u548cpier\u8282\u70b9\u7684\u65e5\u5fd7\u4fe1\u606f\u3002","title":"\u8282\u70b9\u65e5\u5fd7\u67e5\u770b"},{"location":"bitxhub/operation/node_log_view/#bitxhub","text":"\u5982\u679c\u662f\u5728\u7ec8\u7aef\u524d\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u65e5\u5fd7\u4f1a\u5b9e\u65f6\u6253\u5370\u5728\u7ec8\u7aef\u4e0a\uff0c\u89c2\u5bdf\u5176\u65e0\u62a5\u9519\u5373\u53ef\uff1b \u5982\u679c\u662f\u901a\u8fc7nohup\u7b49\u540e\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u5728\u8282\u70b9\u4e3b\u914d\u7f6e\u76ee\u5f55\u7684logs\u6587\u4ef6\u5939\u4e2d\u5c31\u662f\u8282\u70b9\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u6253\u5f00\u5373\u53ef\u68c0\u67e5\u65e5\u5fd7\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u9664\u4e86\u51fa\u5757\uff0cbitxhub\u8282\u70b9\u4e4b\u95f4\u4f1a\u5b9a\u65f6\u76f8\u4e92 ping \u5176\u5b83\u8282\u70b9\u5e76\u8fd4\u56de\u5ef6\u65f6\u4fe1\u606f\uff0c\u53ef\u4ee5\u7b80\u5355\u770b\u5230\u8282\u70b9\u96c6\u7fa4\u4e4b\u95f4\u7684\u7f51\u7edc\u72b6\u6001\u3002","title":"BitXHub"},{"location":"bitxhub/operation/node_log_view/#pier","text":"\u5982\u679c\u662f\u5728\u7ec8\u7aef\u524d\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u65e5\u5fd7\u4f1a\u5b9e\u65f6\u6253\u5370\u5728\u7ec8\u7aef\u4e0a\uff0c\u89c2\u5bdf\u5176\u65e0\u62a5\u9519\u5373\u53ef\uff1b \u5982\u679c\u662f\u901a\u8fc7nohup\u7b49\u540e\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u5728\u8282\u70b9\u4e3b\u914d\u7f6e\u76ee\u5f55\u7684logs\u6587\u4ef6\u5939\u4e2d\u5c31\u662f\u8282\u70b9\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u6253\u5f00\u5373\u53ef\u68c0\u67e5\u65e5\u5fd7\uff0c","title":"Pier"},{"location":"bitxhub/operation/node_status_check/","text":"\u8282\u70b9\u72b6\u6001\u68c0\u67e5 \u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u68c0\u67e5\u8de8\u94fe\u7cfb\u7edf\u4e2dbitxhub\u548cpier\u8282\u70b9\u7684\u8fdb\u7a0b\u72b6\u6001\u3002 BitXHub \u53ef\u4ee5\u901a\u8fc7ps\u547d\u4ee4\u67e5\u770b\u8282\u70b9\u8fdb\u7a0b\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a ps aux|grep bitxhub \u6b63\u5e38\u60c5\u51b5\u4e0b\u53ef\u4ee5\u770b\u5230bitxhub\u8282\u70b9\u7684\u8fdb\u7a0b\u5b58\u6d3b\u3002 Pier \u53ef\u4ee5\u901a\u8fc7ps\u547d\u4ee4\u67e5\u770b\u8282\u70b9\u8fdb\u7a0b\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a ps aux|grep pier \u6b63\u5e38\u60c5\u51b5\u4e0b\u53ef\u4ee5\u770b\u5230pier\u8282\u70b9\u7684\u8fdb\u7a0b\u5b58\u6d3b\u3002","title":"\u8282\u70b9\u72b6\u6001\u68c0\u6d4b"},{"location":"bitxhub/operation/node_status_check/#_1","text":"\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u68c0\u67e5\u8de8\u94fe\u7cfb\u7edf\u4e2dbitxhub\u548cpier\u8282\u70b9\u7684\u8fdb\u7a0b\u72b6\u6001\u3002","title":"\u8282\u70b9\u72b6\u6001\u68c0\u67e5"},{"location":"bitxhub/operation/node_status_check/#bitxhub","text":"\u53ef\u4ee5\u901a\u8fc7ps\u547d\u4ee4\u67e5\u770b\u8282\u70b9\u8fdb\u7a0b\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a ps aux|grep bitxhub \u6b63\u5e38\u60c5\u51b5\u4e0b\u53ef\u4ee5\u770b\u5230bitxhub\u8282\u70b9\u7684\u8fdb\u7a0b\u5b58\u6d3b\u3002","title":"BitXHub"},{"location":"bitxhub/operation/node_status_check/#pier","text":"\u53ef\u4ee5\u901a\u8fc7ps\u547d\u4ee4\u67e5\u770b\u8282\u70b9\u8fdb\u7a0b\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a ps aux|grep pier \u6b63\u5e38\u60c5\u51b5\u4e0b\u53ef\u4ee5\u770b\u5230pier\u8282\u70b9\u7684\u8fdb\u7a0b\u5b58\u6d3b\u3002","title":"Pier"},{"location":"bitxhub/usage/env/","text":"\u73af\u5883\u51c6\u5907 \u73af\u5883\u51c6\u5907\u662f\u90e8\u7f72\u548c\u4f7f\u7528BitXHub\u8de8\u94fe\u5e73\u53f0\u7684\u7b2c\u4e00\u6b65\uff0c\u4e3b\u8981\u662f\u8bf4\u660eBitXHub\u53ca\u76f8\u5173\u7ec4\u4ef6\u8fd0\u884c\u7684\u786c\u4ef6\u914d\u7f6e\u548c\u8f6f\u4ef6\u4f9d\u8d56\uff0c\u60a8\u9700\u8981\u5728\u90e8\u7f72BitXHub\u5e73\u53f0\u4e4b\u524d\u786e\u8ba4\u673a\u5668\u6ee1\u8db3\u4e0b\u8ff0\u7684\u8981\u6c42\u3002 \u786c\u4ef6 \u914d\u7f6e \u63a8\u8350\u914d\u7f6e \u6700\u4f4e\u914d\u7f6e CPU 2.4GHz *8\u6838\u6216\u4ee5\u4e0a 1.5GHz *4\u6838 \u5185\u5b58 16GB\u6216\u4ee5\u4e0a 8GB \u5b58\u50a8 500G\u6216\u4ee5\u4e0a\uff08\u9700\u8981\u652f\u6301\u6269\u5bb9\uff09 100G \u5e26\u5bbd 10Mb 2Mb \u64cd\u4f5c\u7cfb\u7edf\u652f\u6301 \u76ee\u524dBitXHub\u652f\u6301\u7684\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u53ca\u5bf9\u5e94\u7248\u672c\u53f7\u5982\u4e0b\uff1a \u64cd\u4f5c\u7cfb\u7edf \u53d1\u884c\u7248\u672c \u7cfb\u7edf\u67b6\u6784 RHEL 6\u6216\u66f4\u65b0 amd64\uff0c386 CentOS 6\u6216\u66f4\u65b0 amd64\uff0c386 SUSE 11SP3\u6216\u66f4\u65b0 amd64\uff0c386 Ubuntu 14.04\u6216\u66f4\u65b0 amd64\uff0c386 MacOS 10.8\u6216\u66f4\u65b0 amd64\uff0c386 \u8bf4\u660e\uff1a\u4e3a\u4e86\u66f4\u597d\u7684\u90e8\u7f72\u5b89\u88c5\u4f53\u9a8c\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u9009\u7528CentOS 8.2\u3001Ubuntu 16.04\u548cMacOS 10.15\u6765\u8fdb\u884c\u90e8\u7f72\u5b89\u88c5\u3002 \u8f6f\u4ef6\u4f9d\u8d56 Go\u73af\u5883 BitXHub\u4f5c\u4e3agolang\u9879\u76ee\uff0c\u9700\u8981\u5b89\u88c5\u548c\u914d\u7f6eGo\u73af\u5883\uff0c\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u9002\u7528\u4e8e\u60a8\u7684\u5e73\u53f0\u7684\u6700\u65b0\u7248\u672cGo\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a \u4e0b\u8f7d -\uff08\u8bf7\u4e0b\u8f7d 1.13.x \u6216\u66f4\u65b0\u7684\u7a33\u5b9a\u7248\u672c\uff09\uff0c\u4e5f\u53ef\u4ee5\u4e0b\u8f7dGo\u6e90\u4ee3\u7801\u5e76\u4ece\u6e90\u4ee3\u7801\u8fdb\u884c\u5b89\u88c5\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 \u4e0b\u8f7d\u5b8c\u6210\u540e\u60a8\u9700\u8981\u5b89\u88c5Go\uff0c\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a \u5b89\u88c5Go \uff0c\u63a8\u8350\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u5b89\u88c5\u5373\u53ef\uff0c \u5bf9\u4e8eMac OS X \u548c Linux\u64cd\u4f5c\u7cfb\u7edf\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bGo\u4f1a\u88ab\u5b89\u88c5\u5230/usr/local/go/\uff0c\u5e76\u4e14\u5c06\u73af\u5883\u53d8\u91cfGOROOT\u8bbe\u7f6e\u4e3a\u8be5\u8def\u5f84/usr/local/go. export GOROOT = /usr/local/go \u540c\u65f6\uff0c\u7531\u4e8e\u6211\u4eec\u53ef\u80fd\u5c06\u5728Go\u4e2d\u8fdb\u884c\u4e00\u7cfb\u5217\u7f16\u8bd1\u64cd\u4f5c\uff0c\u8fd8\u9700\u8981\u8bbe\u7f6eGOPATH\u7b49\uff0c\u60a8\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u5185\u5bb9\u6dfb\u52a0\u5230\u60a8\u7684~/.bashrc\u6587\u4ef6\u4e2d\uff1a export GOROOT = /usr/local/go export GOPATH = $HOME /go export PATH = $PATH : $GOPATH /bin: $GOROOT /bin \u8bf4\u660e\uff1a\u4ee5\u4e0a\u914d\u7f6e\u5747\u662f\u53c2\u8003\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u5b89\u88c5\u914d\u7f6e\u3002 Docker \u5982\u679c\u60a8\u60f3\u4f7f\u7528\u5bb9\u5668\u6765\u90e8\u7f72bitxhub\u5e73\u53f0\uff0c\u5219\u9700\u8981\u63d0\u524d\u5b89\u88c5\u597dDocker\uff0c\u63a8\u8350\u5b89\u88c518.03\u6216\u66f4\u65b0\u7684\u7a33\u5b9a\u7248\u672c\uff0c\u5177\u4f53\u7684\u5b89\u88c5\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a \u5b89\u88c5Docker \u606d\u559c\u60a8\uff01\u73af\u5883\u786e\u8ba4\u548c\u51c6\u5907\u5b8c\u6210\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u6109\u5feb\u5730\u5f00\u59cb\u90e8\u7f72BitXHub\u5e73\u53f0\u5566\uff01\uff01\uff01","title":"\u73af\u5883\u51c6\u5907"},{"location":"bitxhub/usage/env/#_1","text":"\u73af\u5883\u51c6\u5907\u662f\u90e8\u7f72\u548c\u4f7f\u7528BitXHub\u8de8\u94fe\u5e73\u53f0\u7684\u7b2c\u4e00\u6b65\uff0c\u4e3b\u8981\u662f\u8bf4\u660eBitXHub\u53ca\u76f8\u5173\u7ec4\u4ef6\u8fd0\u884c\u7684\u786c\u4ef6\u914d\u7f6e\u548c\u8f6f\u4ef6\u4f9d\u8d56\uff0c\u60a8\u9700\u8981\u5728\u90e8\u7f72BitXHub\u5e73\u53f0\u4e4b\u524d\u786e\u8ba4\u673a\u5668\u6ee1\u8db3\u4e0b\u8ff0\u7684\u8981\u6c42\u3002","title":"\u73af\u5883\u51c6\u5907"},{"location":"bitxhub/usage/env/#_2","text":"\u914d\u7f6e \u63a8\u8350\u914d\u7f6e \u6700\u4f4e\u914d\u7f6e CPU 2.4GHz *8\u6838\u6216\u4ee5\u4e0a 1.5GHz *4\u6838 \u5185\u5b58 16GB\u6216\u4ee5\u4e0a 8GB \u5b58\u50a8 500G\u6216\u4ee5\u4e0a\uff08\u9700\u8981\u652f\u6301\u6269\u5bb9\uff09 100G \u5e26\u5bbd 10Mb 2Mb","title":"\u786c\u4ef6"},{"location":"bitxhub/usage/env/#_3","text":"\u76ee\u524dBitXHub\u652f\u6301\u7684\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u53ca\u5bf9\u5e94\u7248\u672c\u53f7\u5982\u4e0b\uff1a \u64cd\u4f5c\u7cfb\u7edf \u53d1\u884c\u7248\u672c \u7cfb\u7edf\u67b6\u6784 RHEL 6\u6216\u66f4\u65b0 amd64\uff0c386 CentOS 6\u6216\u66f4\u65b0 amd64\uff0c386 SUSE 11SP3\u6216\u66f4\u65b0 amd64\uff0c386 Ubuntu 14.04\u6216\u66f4\u65b0 amd64\uff0c386 MacOS 10.8\u6216\u66f4\u65b0 amd64\uff0c386 \u8bf4\u660e\uff1a\u4e3a\u4e86\u66f4\u597d\u7684\u90e8\u7f72\u5b89\u88c5\u4f53\u9a8c\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u9009\u7528CentOS 8.2\u3001Ubuntu 16.04\u548cMacOS 10.15\u6765\u8fdb\u884c\u90e8\u7f72\u5b89\u88c5\u3002","title":"\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301"},{"location":"bitxhub/usage/env/#_4","text":"","title":"\u8f6f\u4ef6\u4f9d\u8d56"},{"location":"bitxhub/usage/env/#go","text":"BitXHub\u4f5c\u4e3agolang\u9879\u76ee\uff0c\u9700\u8981\u5b89\u88c5\u548c\u914d\u7f6eGo\u73af\u5883\uff0c\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u9002\u7528\u4e8e\u60a8\u7684\u5e73\u53f0\u7684\u6700\u65b0\u7248\u672cGo\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a \u4e0b\u8f7d -\uff08\u8bf7\u4e0b\u8f7d 1.13.x \u6216\u66f4\u65b0\u7684\u7a33\u5b9a\u7248\u672c\uff09\uff0c\u4e5f\u53ef\u4ee5\u4e0b\u8f7dGo\u6e90\u4ee3\u7801\u5e76\u4ece\u6e90\u4ee3\u7801\u8fdb\u884c\u5b89\u88c5\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 \u4e0b\u8f7d\u5b8c\u6210\u540e\u60a8\u9700\u8981\u5b89\u88c5Go\uff0c\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a \u5b89\u88c5Go \uff0c\u63a8\u8350\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u5b89\u88c5\u5373\u53ef\uff0c \u5bf9\u4e8eMac OS X \u548c Linux\u64cd\u4f5c\u7cfb\u7edf\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bGo\u4f1a\u88ab\u5b89\u88c5\u5230/usr/local/go/\uff0c\u5e76\u4e14\u5c06\u73af\u5883\u53d8\u91cfGOROOT\u8bbe\u7f6e\u4e3a\u8be5\u8def\u5f84/usr/local/go. export GOROOT = /usr/local/go \u540c\u65f6\uff0c\u7531\u4e8e\u6211\u4eec\u53ef\u80fd\u5c06\u5728Go\u4e2d\u8fdb\u884c\u4e00\u7cfb\u5217\u7f16\u8bd1\u64cd\u4f5c\uff0c\u8fd8\u9700\u8981\u8bbe\u7f6eGOPATH\u7b49\uff0c\u60a8\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u5185\u5bb9\u6dfb\u52a0\u5230\u60a8\u7684~/.bashrc\u6587\u4ef6\u4e2d\uff1a export GOROOT = /usr/local/go export GOPATH = $HOME /go export PATH = $PATH : $GOPATH /bin: $GOROOT /bin \u8bf4\u660e\uff1a\u4ee5\u4e0a\u914d\u7f6e\u5747\u662f\u53c2\u8003\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u5b89\u88c5\u914d\u7f6e\u3002","title":"Go\u73af\u5883"},{"location":"bitxhub/usage/env/#docker","text":"\u5982\u679c\u60a8\u60f3\u4f7f\u7528\u5bb9\u5668\u6765\u90e8\u7f72bitxhub\u5e73\u53f0\uff0c\u5219\u9700\u8981\u63d0\u524d\u5b89\u88c5\u597dDocker\uff0c\u63a8\u8350\u5b89\u88c518.03\u6216\u66f4\u65b0\u7684\u7a33\u5b9a\u7248\u672c\uff0c\u5177\u4f53\u7684\u5b89\u88c5\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a \u5b89\u88c5Docker \u606d\u559c\u60a8\uff01\u73af\u5883\u786e\u8ba4\u548c\u51c6\u5907\u5b8c\u6210\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u6109\u5feb\u5730\u5f00\u59cb\u90e8\u7f72BitXHub\u5e73\u53f0\u5566\uff01\uff01\uff01","title":"Docker"},{"location":"bitxhub/usage/inter_relay_deploy/","text":"\u4e2d\u7ee7\u8de8\u94fe \u90e8\u7f72\u6587\u6863 \u4e2d\u7ee7\u94fe\u7528\u4e8e\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u7ba1\u7406\uff0c\u4ee5\u53ca\u8de8\u94fe\u4ea4\u6613\u7684\u53ef\u4fe1\u9a8c\u8bc1\u4e0e\u53ef\u9760\u8def\u7531\uff0c\u662f\u4e00\u79cd\u5b9e\u73b0IBTP\u534f\u8bae\u7684\u5f00\u653e\u8bb8\u53ef\u94fe\u3002\u76ee\u524dBitXHub\u5df2\u7ecf\u652f\u6301\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u76f8\u4e92\u8fde\u63a5\uff0c\u8fbe\u5230\u8de8\u94fe\u4ea4\u6613\u5728\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u8fdb\u884c\u540c\u6b65\uff0c\u6781\u5927\u5730\u63d0\u5347\u4e86BitXHub\u7684\u53ef\u6269\u5c55\u6027\u3002 \u90e8\u7f72\u524d\u51c6\u5907 \u5b89\u88c5\u5305\u83b7\u53d6\u53ef\u53c2\u7167\u5355\u72ec\u90e8\u7f72\u4e2d\u7ee7\u94fe\u7684\u6587\u6863\u8fdb\u884c\u4e0b\u8f7d\u548c\u64cd\u4f5c\uff0c\u6ce8\u610f\u4e2d\u7ee7\u8de8\u94fe\u81f3\u5c11\u9700\u8981\u90e8\u7f72\u4e24\u5957\u4e2d\u7ee7\u94fe\u8282\u70b9\u73af\u5883\uff0c\u5176\u4e2d\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u901a\u8fc7\u7279\u6b8a\u914d\u7f6e\u7684pier\uff08\u6211\u4eec\u79f0\u4e4b\u4e3aUpier\uff09\u76f8\u8fde\uff0c\u7531\u6b64\u53ef\u77e5\u90e8\u7f72\u4e2d\u7ee7\u8de8\u94fe\u7cfb\u7edf\u7684\u5173\u952e\u662f\u5728\u4e8e\u914d\u7f6e\u597dUpier \u4fee\u6539BitXHub\u914d\u7f6e\u6587\u4ef6\u5e76\u542f\u52a8\u4e24\u5957\u8282\u70b9 \u8fd9\u90e8\u5206\u5185\u5bb9\u4e5f\u53ef\u53c2\u7167\u5355\u72ec\u90e8\u7f72\u4e2d\u7ee7\u94fe\u7684\u6587\u6863\u8fdb\u884c\u90e8\u7f72\uff0c\u5f85\u8282\u70b9\u96c6\u7fa4\u5747\u6253\u5370\u51fabitxhub\u7684LOGO\uff0c\u8868\u793abitxhub\u96c6\u7fa4\u5f00\u59cb\u6b63\u5e38\u5de5\u4f5c Pier\u914d\u7f6e\u548c\u90e8\u7f72 \u90e8\u7f72\u524d\u51c6\u5907 \u5b89\u88c5\u5305\u83b7\u53d6\u53ef\u53c2\u7167\u5355\u72ec\u90e8\u7f72\u8de8\u94fe\u7f51\u5173\u7684\u6587\u6863\u8fdb\u884c\u4e0b\u8f7d\u548c\u64cd\u4f5c\uff0c\u6ce8\u610f\u6bcf\u5957\u4e2d\u7ee7\u94fe\u8282\u70b9\u5747\u5bf9\u5e94\u4e00\u4e2aUPier\uff0c\u6240\u4ee5\u4e5f\u81f3\u5c11\u9700\u8981\u914d\u7f6e\u548c\u90e8\u7f72\u4e24\u4e2aUpier\u8282\u70b9\u3002 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 UPier\u548c\u5e38\u89c4\u90e8\u7f72\u7684pier\u914d\u7f6e\u5927\u4f53\u4e00\u81f4\uff0c\u53ea\u662f\u5176\u542f\u52a8\u7684\u6a21\u5f0f\u5e94\u9009\u62e9\u4e3aunion\uff0c\u5177\u4f53\u914d\u7f6e\u9879\u5982\u4e0b\uff1a #\u6253\u5f00pier.toml\u8fdb\u884c\u914d\u7f6e\u4fee\u6539 [ mode ] type = \"union\" # relay, direct or union ... ... [ mode.union ] connectors = [ \"/ip4/127.0.0.1/tcp/44502/p2p/QmSqkijKLziphdTHpjqx6nRwhogqjhrMv2uGdbga7SqmdN\" , \"/ip4/127.0.0.1/tcp/44501/p2p/QmXdcTWNXBCDyhmoQ2wuf8cwomjccWr2jZpD9jGZcwj8YY\" ] \u6ce8\u610f\uff1a\u4e0a\u9762connectors\u5b57\u6bb5\u9700\u8981\u914d\u7f6e\u4e24\u65b9\u7684UPier\u7684\u5730\u5740\uff0c\u5176\u4e2d\u540e\u9762\u90a3\u4e00\u6bb5\u662f\u6839\u636epier\u79c1\u94a5\u751f\u6210\u7684id\uff0c\u53ef\u4ee5\u4f7f\u7528pier p2p id \u547d\u4ee4\u6765\u83b7\u53d6\uff0c\u8fd9\u4e5f\u662funion\u6a21\u5f0f\u533a\u522b\u4e8e\u4e2d\u7ee7\u6a21\u5f0f\u7684\u5173\u952e\u914d\u7f6e\u3002 \u5bfc\u5165\u5e94\u7528\u94fe\u7684\u4e8c\u8fdb\u5236\u63d2\u4ef6\u53ca\u76f8\u5173\u7684\u914d\u7f6e\u5747\u53ef\u53c2\u7167\u57fa\u7840\u7684\u914d\u7f6e\u6587\u6863\u8fdb\u884c\u64cd\u4f5c \u8bf4\u660e\uff1a\u56e0\u4e3a\u8de8\u94fe\u5408\u7ea6\u548c\u9a8c\u8bc1\u89c4\u5219\u7684\u90e8\u7f72\u6d89\u53ca\u5230\u4e0d\u540c\u5e94\u7528\u94fe\u7684\u7ec6\u8282\uff0c\u4e14\u9700\u4f9d\u8d56\u5e94\u7528\u94fe\u7684\u5b89\u88c5\u90e8\u7f72\uff0c\u5177\u4f53\u64cd\u4f5c\u8bf7\u89c1\u5feb\u901f\u5f00\u59cb\u624b\u518c\u6216\u4f7f\u7528\u6587\u6863\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0 \u4e92\u76f8\u6ce8\u518c\u4e2d\u7ee7\u94fe\u5e76\u542f\u52a8 \u7f16\u5199\u4e92\u76f8\u6ce8\u518c\u4e2d\u7ee7\u94fe\u7684\u811a\u672c\uff0c\u7136\u540e\u542f\u52a8Upier\uff08\u4e0b\u9762\u4ee5Upier1\u4e3a\u4f8b\uff09 ##\u4e92\u76f8\u6ce8\u518c\u4e2d\u7ee7\u94fe: ##1 \u901a\u8fc7UPier1\u5411Relay1\u6ce8\u518cRelay1: pier --repo=UPier1 appchain register --name Relay1 --type relaychain --desc Relay1 --version 1 --validators UPier1/genesis.json --addr localhost:60011 ##\u56de\u663e\uff1a appchain register successfully, id is 0x454e2569dD093D09E5E8B4aB764692780D795C9a ##2 \u901a\u8fc7UPier1\u5411Relay2\u6ce8\u518cRelay1: pier --repo=UPier1 appchain register --name Relay1 --type relaychain --desc Relay1 --version 1 --validators UPier1/genesis.json --addr localhost:50011 ##\u56de\u663e\uff1a appchain register successfully, id is 0x454e2569dD093D09E5E8B4aB764692780D795C9a ##3 \u542f\u52a8UPier: ## \u6e05\u9664\u4e0bPier\u4e0b\u7684store\u76ee\u5f55 rm -rf UPier1/store ## \u542f\u52a8UPier1 pier --repo=UPier1 start \u8bf4\u660e\uff1a1. \u4ee5\u4e0a\u4e24\u4e2a\u6ce8\u518c\u7684\u6b65\u9aa4\uff0c--addr\u540e\u9762\u7684\u53c2\u6570\u5206\u522b\u662f\u4e24\u5957\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u5730\u5740\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u66f4\u6539\uff1b2. \u53e6\u4e00\u4e2aUpier2\u7684\u811a\u672c\u8ddf\u4e0a\u9762\u7684\u5185\u5bb9\u57fa\u672c\u4e00\u81f4\uff0c\u76f8\u4e92\u6ce8\u518c\u7684bitxhub\u5730\u5740\u8c03\u6362\u5373\u53ef\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0 \u8fd0\u884c pier --repo=UPier start \u5206\u522b\u542f\u52a8\u4e24\u4e2aUPier\uff0c\u5176\u65e5\u5fd7\u663e\u793a\u4e24\u4e2aUPier\u8fde\u63a5\u6210\u529f\uff0c\u4e24\u65b9\u7684bitxhub\u8282\u70b9\u65e5\u5fd7\u4e0a\u5747\u663e\u793a \u201cappchain register successfully\u201d\u5373\u6b63\u5e38\u542f\u52a8\u3002","title":"\u4e2d\u7ee7\u8de8\u94fe \u90e8\u7f72\u6587\u6863"},{"location":"bitxhub/usage/inter_relay_deploy/#_1","text":"\u4e2d\u7ee7\u94fe\u7528\u4e8e\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u7ba1\u7406\uff0c\u4ee5\u53ca\u8de8\u94fe\u4ea4\u6613\u7684\u53ef\u4fe1\u9a8c\u8bc1\u4e0e\u53ef\u9760\u8def\u7531\uff0c\u662f\u4e00\u79cd\u5b9e\u73b0IBTP\u534f\u8bae\u7684\u5f00\u653e\u8bb8\u53ef\u94fe\u3002\u76ee\u524dBitXHub\u5df2\u7ecf\u652f\u6301\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u76f8\u4e92\u8fde\u63a5\uff0c\u8fbe\u5230\u8de8\u94fe\u4ea4\u6613\u5728\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u8fdb\u884c\u540c\u6b65\uff0c\u6781\u5927\u5730\u63d0\u5347\u4e86BitXHub\u7684\u53ef\u6269\u5c55\u6027\u3002","title":"\u4e2d\u7ee7\u8de8\u94fe \u90e8\u7f72\u6587\u6863"},{"location":"bitxhub/usage/inter_relay_deploy/#_2","text":"\u5b89\u88c5\u5305\u83b7\u53d6\u53ef\u53c2\u7167\u5355\u72ec\u90e8\u7f72\u4e2d\u7ee7\u94fe\u7684\u6587\u6863\u8fdb\u884c\u4e0b\u8f7d\u548c\u64cd\u4f5c\uff0c\u6ce8\u610f\u4e2d\u7ee7\u8de8\u94fe\u81f3\u5c11\u9700\u8981\u90e8\u7f72\u4e24\u5957\u4e2d\u7ee7\u94fe\u8282\u70b9\u73af\u5883\uff0c\u5176\u4e2d\u4e2d\u7ee7\u94fe\u4e4b\u95f4\u901a\u8fc7\u7279\u6b8a\u914d\u7f6e\u7684pier\uff08\u6211\u4eec\u79f0\u4e4b\u4e3aUpier\uff09\u76f8\u8fde\uff0c\u7531\u6b64\u53ef\u77e5\u90e8\u7f72\u4e2d\u7ee7\u8de8\u94fe\u7cfb\u7edf\u7684\u5173\u952e\u662f\u5728\u4e8e\u914d\u7f6e\u597dUpier","title":"\u90e8\u7f72\u524d\u51c6\u5907"},{"location":"bitxhub/usage/inter_relay_deploy/#bitxhub","text":"\u8fd9\u90e8\u5206\u5185\u5bb9\u4e5f\u53ef\u53c2\u7167\u5355\u72ec\u90e8\u7f72\u4e2d\u7ee7\u94fe\u7684\u6587\u6863\u8fdb\u884c\u90e8\u7f72\uff0c\u5f85\u8282\u70b9\u96c6\u7fa4\u5747\u6253\u5370\u51fabitxhub\u7684LOGO\uff0c\u8868\u793abitxhub\u96c6\u7fa4\u5f00\u59cb\u6b63\u5e38\u5de5\u4f5c","title":"\u4fee\u6539BitXHub\u914d\u7f6e\u6587\u4ef6\u5e76\u542f\u52a8\u4e24\u5957\u8282\u70b9"},{"location":"bitxhub/usage/inter_relay_deploy/#pier","text":"","title":"Pier\u914d\u7f6e\u548c\u90e8\u7f72"},{"location":"bitxhub/usage/inter_relay_deploy/#_3","text":"\u5b89\u88c5\u5305\u83b7\u53d6\u53ef\u53c2\u7167\u5355\u72ec\u90e8\u7f72\u8de8\u94fe\u7f51\u5173\u7684\u6587\u6863\u8fdb\u884c\u4e0b\u8f7d\u548c\u64cd\u4f5c\uff0c\u6ce8\u610f\u6bcf\u5957\u4e2d\u7ee7\u94fe\u8282\u70b9\u5747\u5bf9\u5e94\u4e00\u4e2aUPier\uff0c\u6240\u4ee5\u4e5f\u81f3\u5c11\u9700\u8981\u914d\u7f6e\u548c\u90e8\u7f72\u4e24\u4e2aUpier\u8282\u70b9\u3002","title":"\u90e8\u7f72\u524d\u51c6\u5907"},{"location":"bitxhub/usage/inter_relay_deploy/#_4","text":"UPier\u548c\u5e38\u89c4\u90e8\u7f72\u7684pier\u914d\u7f6e\u5927\u4f53\u4e00\u81f4\uff0c\u53ea\u662f\u5176\u542f\u52a8\u7684\u6a21\u5f0f\u5e94\u9009\u62e9\u4e3aunion\uff0c\u5177\u4f53\u914d\u7f6e\u9879\u5982\u4e0b\uff1a #\u6253\u5f00pier.toml\u8fdb\u884c\u914d\u7f6e\u4fee\u6539 [ mode ] type = \"union\" # relay, direct or union ... ... [ mode.union ] connectors = [ \"/ip4/127.0.0.1/tcp/44502/p2p/QmSqkijKLziphdTHpjqx6nRwhogqjhrMv2uGdbga7SqmdN\" , \"/ip4/127.0.0.1/tcp/44501/p2p/QmXdcTWNXBCDyhmoQ2wuf8cwomjccWr2jZpD9jGZcwj8YY\" ] \u6ce8\u610f\uff1a\u4e0a\u9762connectors\u5b57\u6bb5\u9700\u8981\u914d\u7f6e\u4e24\u65b9\u7684UPier\u7684\u5730\u5740\uff0c\u5176\u4e2d\u540e\u9762\u90a3\u4e00\u6bb5\u662f\u6839\u636epier\u79c1\u94a5\u751f\u6210\u7684id\uff0c\u53ef\u4ee5\u4f7f\u7528pier p2p id \u547d\u4ee4\u6765\u83b7\u53d6\uff0c\u8fd9\u4e5f\u662funion\u6a21\u5f0f\u533a\u522b\u4e8e\u4e2d\u7ee7\u6a21\u5f0f\u7684\u5173\u952e\u914d\u7f6e\u3002 \u5bfc\u5165\u5e94\u7528\u94fe\u7684\u4e8c\u8fdb\u5236\u63d2\u4ef6\u53ca\u76f8\u5173\u7684\u914d\u7f6e\u5747\u53ef\u53c2\u7167\u57fa\u7840\u7684\u914d\u7f6e\u6587\u6863\u8fdb\u884c\u64cd\u4f5c \u8bf4\u660e\uff1a\u56e0\u4e3a\u8de8\u94fe\u5408\u7ea6\u548c\u9a8c\u8bc1\u89c4\u5219\u7684\u90e8\u7f72\u6d89\u53ca\u5230\u4e0d\u540c\u5e94\u7528\u94fe\u7684\u7ec6\u8282\uff0c\u4e14\u9700\u4f9d\u8d56\u5e94\u7528\u94fe\u7684\u5b89\u88c5\u90e8\u7f72\uff0c\u5177\u4f53\u64cd\u4f5c\u8bf7\u89c1\u5feb\u901f\u5f00\u59cb\u624b\u518c\u6216\u4f7f\u7528\u6587\u6863\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0","title":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"bitxhub/usage/inter_relay_deploy/#_5","text":"\u7f16\u5199\u4e92\u76f8\u6ce8\u518c\u4e2d\u7ee7\u94fe\u7684\u811a\u672c\uff0c\u7136\u540e\u542f\u52a8Upier\uff08\u4e0b\u9762\u4ee5Upier1\u4e3a\u4f8b\uff09 ##\u4e92\u76f8\u6ce8\u518c\u4e2d\u7ee7\u94fe: ##1 \u901a\u8fc7UPier1\u5411Relay1\u6ce8\u518cRelay1: pier --repo=UPier1 appchain register --name Relay1 --type relaychain --desc Relay1 --version 1 --validators UPier1/genesis.json --addr localhost:60011 ##\u56de\u663e\uff1a appchain register successfully, id is 0x454e2569dD093D09E5E8B4aB764692780D795C9a ##2 \u901a\u8fc7UPier1\u5411Relay2\u6ce8\u518cRelay1: pier --repo=UPier1 appchain register --name Relay1 --type relaychain --desc Relay1 --version 1 --validators UPier1/genesis.json --addr localhost:50011 ##\u56de\u663e\uff1a appchain register successfully, id is 0x454e2569dD093D09E5E8B4aB764692780D795C9a ##3 \u542f\u52a8UPier: ## \u6e05\u9664\u4e0bPier\u4e0b\u7684store\u76ee\u5f55 rm -rf UPier1/store ## \u542f\u52a8UPier1 pier --repo=UPier1 start \u8bf4\u660e\uff1a1. \u4ee5\u4e0a\u4e24\u4e2a\u6ce8\u518c\u7684\u6b65\u9aa4\uff0c--addr\u540e\u9762\u7684\u53c2\u6570\u5206\u522b\u662f\u4e24\u5957\u4e2d\u7ee7\u94fe\u8282\u70b9\u7684\u5730\u5740\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u66f4\u6539\uff1b2. \u53e6\u4e00\u4e2aUpier2\u7684\u811a\u672c\u8ddf\u4e0a\u9762\u7684\u5185\u5bb9\u57fa\u672c\u4e00\u81f4\uff0c\u76f8\u4e92\u6ce8\u518c\u7684bitxhub\u5730\u5740\u8c03\u6362\u5373\u53ef\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0 \u8fd0\u884c pier --repo=UPier start \u5206\u522b\u542f\u52a8\u4e24\u4e2aUPier\uff0c\u5176\u65e5\u5fd7\u663e\u793a\u4e24\u4e2aUPier\u8fde\u63a5\u6210\u529f\uff0c\u4e24\u65b9\u7684bitxhub\u8282\u70b9\u65e5\u5fd7\u4e0a\u5747\u663e\u793a \u201cappchain register successfully\u201d\u5373\u6b63\u5e38\u542f\u52a8\u3002","title":"\u4e92\u76f8\u6ce8\u518c\u4e2d\u7ee7\u94fe\u5e76\u542f\u52a8"},{"location":"bitxhub/usage/overall_description/","text":"\u6574\u4f53\u8bf4\u660e \u8fd9\u7bc7\u6587\u6863\u662f\u5bf9BitXHub\u8de8\u94fe\u7cfb\u7edf\u90e8\u7f72\u7684\u6574\u4f53\u8bf4\u660e\uff0c\u4e3b\u8981\u662f\u4ecb\u7ecdBitXHub\u8de8\u94fe\u7cfb\u7edf\u7684\u4e00\u822c\u90e8\u7f72\u6d41\u7a0b\u548c\u90e8\u7f72\u67b6\u6784\u3002 1. \u73af\u5883\u51c6\u5907 \u73af\u5883\u51c6\u5907\u662f\u90e8\u7f72\u548c\u4f7f\u7528BitXHub\u8de8\u94fe\u5e73\u53f0\u7684\u7b2c\u4e00\u6b65\uff0c\u4e3b\u8981\u662f\u8bf4\u660eBitXHub\u53ca\u76f8\u5173\u7ec4\u4ef6\u8fd0\u884c\u7684\u786c\u4ef6\u914d\u7f6e\u548c\u8f6f\u4ef6\u4f9d\u8d56\uff0c\u60a8\u9700\u8981\u5728\u90e8\u7f72BitXHub\u5e73\u53f0\u4e4b\u524d\u786e\u8ba4\u670d\u52a1\u5668\u6ee1\u8db3\u786c\u4ef6\u548c\u8f6f\u4ef6\u7684\u8981\u6c42\uff0c\u5177\u4f53\u4fe1\u606f\u8bf7\u67e5\u770b \u73af\u5883\u51c6\u5907 \u6587\u6863\u3002 2. \u5355\u4e2d\u7ee7\u94fe\u90e8\u7f72\u67b6\u6784 \u4e00\u822c\u6765\u8bf4\uff0c\u5355\u4e2d\u7ee7\u94fe\u67b6\u6784\u9002\u7528\u4e8e\u5927\u591a\u6570\u90e8\u7f72\u573a\u666f\uff0c\u5efa\u8bae\u60a8\u4f7f\u7528\u6b64\u79cd\u90e8\u7f72\u67b6\u6784\u6765\u4f53\u9a8cBitXHub\u8de8\u94fe\u7cfb\u7edf\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u90e8\u7f72\u5b8cbitxhub\u8282\u70b9\u96c6\u7fa4\uff08\u4e5f\u53ef\u4ee5\u662fsolo\u6a21\u5f0f\u7684\u5355\u673a\u8282\u70b9\uff09\uff0c\u4e24\u6761\u6216\u591a\u6761\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u597d\u8de8\u94fe\u5408\u7ea6\uff0c\u7136\u540e\u901a\u8fc7\u5404\u81ea\u7684\u8de8\u94fe\u7f51\u5173\u63a5\u5165\u5230\u4e2d\u7ee7\u94fe\u4e2d\uff0c\u5b8c\u6210\u8de8\u94fe\u7cfb\u7edf\u7684\u642d\u5efa\u3002 \u5728\u660e\u6670\u4e86\u90e8\u7f72\u67b6\u6784\u4e4b\u540e\uff0c\u8fd9\u91cc\u518d\u8bf4\u660e\u4e0b\u90e8\u7f72\u7684\u4e00\u822c\u6d41\u7a0b\uff1a \u9996\u5148\u9700\u8981\u90e8\u7f72BitXHub\u4e2d\u7ee7\u94fe\u8282\u70b9\uff0c\u8fd9\u662f\u642d\u5efa\u8de8\u94fe\u7cfb\u7edf\u7684\u57fa\u7840\uff0c\u53ef\u4ee5\u53c2\u8003\u5355\u4e2d\u7ee7\u94fe\u90e8\u7f72\u67b6\u6784\u76ee\u5f55\u4e0b\u7684 \u4e2d\u7ee7\u94fe\u90e8\u7f72 \u6587\u6863\uff1b \u7136\u540e\u662f\u90e8\u7f72Pier\u8de8\u94fe\u7f51\u5173\u8282\u70b9\uff0c\u8fd9\u662f\u63a5\u5165\u5e94\u7528\u94fe\u7684\u5fc5\u8981\u7ec4\u4ef6\uff0c\u5176\u4e2d\u91cd\u8981\u7684\u6d41\u7a0b\u6709\u8de8\u94fe\u5408\u7ea6\u90e8\u7f72\u3001\u7f51\u5173/\u63d2\u4ef6\u7684\u914d\u7f6e\u4fee\u6539\u3001\u5e94\u7528\u94fe\u6ce8\u518c\u548c\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\uff0c\u53ef\u4ee5\u53c2\u8003\u5355\u4e2d\u7ee7\u94fe\u90e8\u7f72\u67b6\u6784\u76ee\u5f55\u4e0b\u7684 \u8de8\u94fe\u7f51\u5173\u90e8\u7f72 \u6587\u6863\u3002 3. \u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u90e8\u7f72\u67b6\u6784 \u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u90e8\u7f72\u67b6\u6784\u662f\u6307\u4e0d\u4f7f\u7528\u4e2d\u7ee7\u94fe\uff0c\u4e24\u65b9\u7684\u5e94\u7528\u94fe\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u4e0e\u5bf9\u65b9\u76f4\u63a5\u8fde\u63a5\uff0c\u90e8\u7f72\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u9664\u4e86\u65e0\u9700\u90e8\u7f72\u4e2d\u7ee7\u94fe\u8282\u70b9\u4e4b\u5916\uff0c\u90e8\u7f72\u7684\u6d41\u7a0b\u4e0e\u4e0a\u4e00\u7ae0\u57fa\u672c\u4e00\u81f4\uff0c\u5177\u4f53\u7684\u90e8\u7f72\u6d41\u7a0b\u53ef\u4ee5\u53c2\u8003 \u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u6a21\u5f0f\u90e8\u7f72 \u6587\u6863\u3002","title":"\u6574\u4f53\u8bf4\u660e"},{"location":"bitxhub/usage/overall_description/#_1","text":"\u8fd9\u7bc7\u6587\u6863\u662f\u5bf9BitXHub\u8de8\u94fe\u7cfb\u7edf\u90e8\u7f72\u7684\u6574\u4f53\u8bf4\u660e\uff0c\u4e3b\u8981\u662f\u4ecb\u7ecdBitXHub\u8de8\u94fe\u7cfb\u7edf\u7684\u4e00\u822c\u90e8\u7f72\u6d41\u7a0b\u548c\u90e8\u7f72\u67b6\u6784\u3002","title":"\u6574\u4f53\u8bf4\u660e"},{"location":"bitxhub/usage/overall_description/#1","text":"\u73af\u5883\u51c6\u5907\u662f\u90e8\u7f72\u548c\u4f7f\u7528BitXHub\u8de8\u94fe\u5e73\u53f0\u7684\u7b2c\u4e00\u6b65\uff0c\u4e3b\u8981\u662f\u8bf4\u660eBitXHub\u53ca\u76f8\u5173\u7ec4\u4ef6\u8fd0\u884c\u7684\u786c\u4ef6\u914d\u7f6e\u548c\u8f6f\u4ef6\u4f9d\u8d56\uff0c\u60a8\u9700\u8981\u5728\u90e8\u7f72BitXHub\u5e73\u53f0\u4e4b\u524d\u786e\u8ba4\u670d\u52a1\u5668\u6ee1\u8db3\u786c\u4ef6\u548c\u8f6f\u4ef6\u7684\u8981\u6c42\uff0c\u5177\u4f53\u4fe1\u606f\u8bf7\u67e5\u770b \u73af\u5883\u51c6\u5907 \u6587\u6863\u3002","title":"1. \u73af\u5883\u51c6\u5907"},{"location":"bitxhub/usage/overall_description/#2","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u5355\u4e2d\u7ee7\u94fe\u67b6\u6784\u9002\u7528\u4e8e\u5927\u591a\u6570\u90e8\u7f72\u573a\u666f\uff0c\u5efa\u8bae\u60a8\u4f7f\u7528\u6b64\u79cd\u90e8\u7f72\u67b6\u6784\u6765\u4f53\u9a8cBitXHub\u8de8\u94fe\u7cfb\u7edf\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u90e8\u7f72\u5b8cbitxhub\u8282\u70b9\u96c6\u7fa4\uff08\u4e5f\u53ef\u4ee5\u662fsolo\u6a21\u5f0f\u7684\u5355\u673a\u8282\u70b9\uff09\uff0c\u4e24\u6761\u6216\u591a\u6761\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u597d\u8de8\u94fe\u5408\u7ea6\uff0c\u7136\u540e\u901a\u8fc7\u5404\u81ea\u7684\u8de8\u94fe\u7f51\u5173\u63a5\u5165\u5230\u4e2d\u7ee7\u94fe\u4e2d\uff0c\u5b8c\u6210\u8de8\u94fe\u7cfb\u7edf\u7684\u642d\u5efa\u3002 \u5728\u660e\u6670\u4e86\u90e8\u7f72\u67b6\u6784\u4e4b\u540e\uff0c\u8fd9\u91cc\u518d\u8bf4\u660e\u4e0b\u90e8\u7f72\u7684\u4e00\u822c\u6d41\u7a0b\uff1a \u9996\u5148\u9700\u8981\u90e8\u7f72BitXHub\u4e2d\u7ee7\u94fe\u8282\u70b9\uff0c\u8fd9\u662f\u642d\u5efa\u8de8\u94fe\u7cfb\u7edf\u7684\u57fa\u7840\uff0c\u53ef\u4ee5\u53c2\u8003\u5355\u4e2d\u7ee7\u94fe\u90e8\u7f72\u67b6\u6784\u76ee\u5f55\u4e0b\u7684 \u4e2d\u7ee7\u94fe\u90e8\u7f72 \u6587\u6863\uff1b \u7136\u540e\u662f\u90e8\u7f72Pier\u8de8\u94fe\u7f51\u5173\u8282\u70b9\uff0c\u8fd9\u662f\u63a5\u5165\u5e94\u7528\u94fe\u7684\u5fc5\u8981\u7ec4\u4ef6\uff0c\u5176\u4e2d\u91cd\u8981\u7684\u6d41\u7a0b\u6709\u8de8\u94fe\u5408\u7ea6\u90e8\u7f72\u3001\u7f51\u5173/\u63d2\u4ef6\u7684\u914d\u7f6e\u4fee\u6539\u3001\u5e94\u7528\u94fe\u6ce8\u518c\u548c\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\uff0c\u53ef\u4ee5\u53c2\u8003\u5355\u4e2d\u7ee7\u94fe\u90e8\u7f72\u67b6\u6784\u76ee\u5f55\u4e0b\u7684 \u8de8\u94fe\u7f51\u5173\u90e8\u7f72 \u6587\u6863\u3002","title":"2. \u5355\u4e2d\u7ee7\u94fe\u90e8\u7f72\u67b6\u6784"},{"location":"bitxhub/usage/overall_description/#3","text":"\u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u90e8\u7f72\u67b6\u6784\u662f\u6307\u4e0d\u4f7f\u7528\u4e2d\u7ee7\u94fe\uff0c\u4e24\u65b9\u7684\u5e94\u7528\u94fe\u901a\u8fc7\u8de8\u94fe\u7f51\u5173\u4e0e\u5bf9\u65b9\u76f4\u63a5\u8fde\u63a5\uff0c\u90e8\u7f72\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u9664\u4e86\u65e0\u9700\u90e8\u7f72\u4e2d\u7ee7\u94fe\u8282\u70b9\u4e4b\u5916\uff0c\u90e8\u7f72\u7684\u6d41\u7a0b\u4e0e\u4e0a\u4e00\u7ae0\u57fa\u672c\u4e00\u81f4\uff0c\u5177\u4f53\u7684\u90e8\u7f72\u6d41\u7a0b\u53ef\u4ee5\u53c2\u8003 \u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u6a21\u5f0f\u90e8\u7f72 \u6587\u6863\u3002","title":"3. \u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u90e8\u7f72\u67b6\u6784"},{"location":"bitxhub/usage/status_verification/","text":"\u7cfb\u7edf\u9a8c\u8bc1\u548c\u68c0\u67e5 \u5728\u90e8\u7f72\u5b8c\u8de8\u94fe\u7cfb\u7edf\u4e4b\u540e\uff0c\u901a\u5e38\u9700\u8981\u68c0\u67e5\u6216\u76d1\u63a7\u7cfb\u7edf\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e9b\u68c0\u67e5\u548c\u76d1\u63a7BitXHub\u7cfb\u7edf\u7684\u65b9\u6cd5\u3002 \u8282\u70b9\u8fdb\u7a0b\u72b6\u6001\u9a8c\u8bc1 \u53ef\u4ee5\u901a\u8fc7ps\u547d\u4ee4\u67e5\u770b\u8282\u70b9\u8fdb\u7a0b\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a ps aux|grep bitxhub ps aux|grep pier \u8282\u70b9\u65e5\u5fd7\u68c0\u67e5 \u5982\u679c\u662f\u5728\u7ec8\u7aef\u524d\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u65e5\u5fd7\u4f1a\u5b9e\u65f6\u6253\u5370\u5728\u7ec8\u7aef\u4e0a\uff0c\u89c2\u5bdf\u5176\u65e0\u62a5\u9519\u5373\u53ef\uff1b \u5982\u679c\u662f\u901a\u8fc7nohup\u7b49\u540e\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u5728\u8282\u70b9\u4e3b\u914d\u7f6e\u76ee\u5f55\u7684logs\u6587\u4ef6\u5939\u4e2d\u5c31\u662f\u8282\u70b9\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u6253\u5f00\u5373\u53ef\u68c0\u67e5\u65e5\u5fd7\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u9664\u4e86\u51fa\u5757\uff0cbitxhub\u8282\u70b9\u4e4b\u95f4\u4f1a\u5b9a\u65f6\u76f8\u4e92 ping \u5176\u5b83\u8282\u70b9\u5e76\u8fd4\u56de\u5ef6\u65f6\u4fe1\u606f\uff0c\u53ef\u4ee5\u7b80\u5355\u770b\u5230\u8282\u70b9\u96c6\u7fa4\u4e4b\u95f4\u7684\u7f51\u7edc\u72b6\u6001\u3002","title":"\u7cfb\u7edf\u9a8c\u8bc1"},{"location":"bitxhub/usage/status_verification/#_1","text":"\u5728\u90e8\u7f72\u5b8c\u8de8\u94fe\u7cfb\u7edf\u4e4b\u540e\uff0c\u901a\u5e38\u9700\u8981\u68c0\u67e5\u6216\u76d1\u63a7\u7cfb\u7edf\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e9b\u68c0\u67e5\u548c\u76d1\u63a7BitXHub\u7cfb\u7edf\u7684\u65b9\u6cd5\u3002","title":"\u7cfb\u7edf\u9a8c\u8bc1\u548c\u68c0\u67e5"},{"location":"bitxhub/usage/status_verification/#_2","text":"\u53ef\u4ee5\u901a\u8fc7ps\u547d\u4ee4\u67e5\u770b\u8282\u70b9\u8fdb\u7a0b\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a ps aux|grep bitxhub ps aux|grep pier","title":"\u8282\u70b9\u8fdb\u7a0b\u72b6\u6001\u9a8c\u8bc1"},{"location":"bitxhub/usage/status_verification/#_3","text":"\u5982\u679c\u662f\u5728\u7ec8\u7aef\u524d\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u65e5\u5fd7\u4f1a\u5b9e\u65f6\u6253\u5370\u5728\u7ec8\u7aef\u4e0a\uff0c\u89c2\u5bdf\u5176\u65e0\u62a5\u9519\u5373\u53ef\uff1b \u5982\u679c\u662f\u901a\u8fc7nohup\u7b49\u540e\u53f0\u542f\u52a8\u7684\u8282\u70b9\uff0c\u5728\u8282\u70b9\u4e3b\u914d\u7f6e\u76ee\u5f55\u7684logs\u6587\u4ef6\u5939\u4e2d\u5c31\u662f\u8282\u70b9\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u6253\u5f00\u5373\u53ef\u68c0\u67e5\u65e5\u5fd7\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u9664\u4e86\u51fa\u5757\uff0cbitxhub\u8282\u70b9\u4e4b\u95f4\u4f1a\u5b9a\u65f6\u76f8\u4e92 ping \u5176\u5b83\u8282\u70b9\u5e76\u8fd4\u56de\u5ef6\u65f6\u4fe1\u606f\uff0c\u53ef\u4ee5\u7b80\u5355\u770b\u5230\u8282\u70b9\u96c6\u7fa4\u4e4b\u95f4\u7684\u7f51\u7edc\u72b6\u6001\u3002","title":"\u8282\u70b9\u65e5\u5fd7\u68c0\u67e5"},{"location":"bitxhub/usage/direct_mode_pier/pier_direct_mode_deploy/","text":"\u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u6a21\u5f0f\u90e8\u7f72 \u8de8\u94fe\u7f51\u5173Pier\u80fd\u591f\u652f\u6301\u8de8\u94fe\u6d88\u606f\u683c\u5f0f\u8f6c\u6362\u3001\u8de8\u94fe\u6d88\u606f\u7684\u8def\u7531\u3001\u8de8\u94fe\u64cd\u4f5c\u7684\u8c03\u7528\u7b49\u6838\u5fc3\u529f\u80fd\uff0c\u4e0d\u4ec5\u4fdd\u8bc1\u4e0d\u540c\u683c\u5f0f\u7684\u8de8\u94fe\u6d88\u606f\u80fd\u591f\u5b89\u5168\u53ef\u4fe1\u7684\u5230\u8fbe\u76ee\u6807\u5e94\u7528\u94fe\uff0c\u800c\u4e14\u4fdd\u8bc1\u4e86\u8de8\u94fe\u4ea4\u6613\u5f02\u5e38\u60c5\u51b5\u4e0b\u6765\u6e90\u94fe\u7684\u5b89\u5168\u3002\u8de8\u94fe\u7f51\u5173\u4e3a\u533a\u5757\u94fe\u4e92\u8054\u5f62\u6210\u7f51\u7edc\u63d0\u4f9b\u4e86\u4fbf\u6377\u7684\u63a5\u5165\u65b9\u5f0f\uff0c\u65e8\u5728\u964d\u4f4e\u8de8\u94fe\u4e92\u8054\u7684\u4f7f\u7528\u6210\u672c\u3002\u5728\u4e4b\u524d\u7684\u6587\u6863\u4e2d\u4ecb\u7ecd\u4e86\u4e2d\u7ee7\u6a21\u5f0f\u7684pier\u5b89\u88c5\u6b65\u9aa4\uff0c\u4e0b\u9762\u4ecb\u7ecd\u76f4\u8fde\u6a21\u5f0f\u4e0bpier\u7684\u5b89\u88c5\u6b65\u9aa4\u3002\u8bf7\u6ce8\u610f\uff0cpier\u76f4\u8fde\u4e0d\u4f9d\u8d56\u4e8e\u4e2d\u7ee7\u94fe\u8282\u70b9\uff0c\u6240\u4ee5\u672c\u6587\u6863\u4e0d\u8d58\u8ff0bitxhub\u7684\u90e8\u7f72\u4e86\u3002 \u5b89\u88c5\u5305\u83b7\u53d6 \u6e90\u7801\u5b89\u88c5 \u8de8\u94fe\u7f51\u5173\u542f\u52a8\u7684\u8bdd\u9700\u8981\u5e94\u7528\u94fe\u63d2\u4ef6\uff0c\u6240\u4ee5\u4ece\u6e90\u7801\u5b89\u88c5\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u7f16\u8bd1\u76f8\u5e94\u7684\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u3002 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier make prepare && make install # \u7f16\u8bd1Fabric cd $HOME git clone https://github.com/meshplus/pier-client-fabric.git cd pier-client-fabric make fabric1.4 # \u7f16\u8bd1\u4ee5\u592a\u574a\u79c1\u94fe\u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-ethereum.git cd pier-client-ethereum make eth # \u63d2\u4ef6\u6267\u884cmake\u7684\u7f16\u8bd1\u4e4b\u540e\uff0c\u90fd\u4f1a\u5728\u9879\u76ee\u76ee\u5f55\u7684\u4e4b\u4e0b\u7684build\u76ee\u5f55\u751f\u6210\u76f8\u5e94\u7684 .so \u6587\u4ef6 \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u6b65\u9aa4\u4f1a\u5728 $GOPATH/bin \u4e0b\u751f\u6210 pier \u4e8c\u8fdb\u5236\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a # $GOPATH/bin\u9700\u8981\u5728PATH\u76ee\u5f55\u4e0b pier version \u5982\u679c\u6b63\u5e38\u5b89\u88c5\u4f1a\u6253\u5370\u51fa\u7c7b\u4f3c\u4e0b\u9762\u7684\u8bf4\u660e Pier version: dev-release-1.6-7eb8c9a App build date: 2021-07-22T10:46:50 System version: linux/amd64 Golang version: go1.14.13 \u4e8c\u8fdb\u5236\u5b89\u88c5 \u6ca1\u6709\u73b0\u6709\u7f16\u8bd1\u73af\u5883\u7684\u7528\u6237\uff0c\u4e5f\u53ef\u4ee5\u5728GitHub\u5f00\u6e90\u4ed3\u5e93\u4e0b\u8f7d\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\uff0c\u5730\u5740\uff1a https://github.com/meshplus/pier/releases , \u6839\u636e\u9700\u8981\u7684\u7248\u672c\u8fdb\u884c\u4e0b\u8f7d\u5373\u53ef\u3002\u8be5\u90e8\u7f72\u5305\u4e2d\u5305\u542b\u4e86 Pier\u8de8\u94fe\u7f51\u5173\u7684\u4e8c\u8fdb\u5236\u548c pier-client-fabric \u548c pier-client-ethereum \u7684\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u3002 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539pier\u914d\u7f6e \u5728\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u3001\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u7b49\u6b65\u9aa4\u4e4b\u524d\uff0c\u9700\u8981\u521d\u59cb\u5316\u8de8\u94fe\u7f51\u5173\u7684\u914d\u7f6e\u76ee\u5f55 #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b pier --repo = ~/pier1 init \u8be5\u547d\u4ee4\u4f1a\u751f\u6210\u8de8\u94fe\u7f51\u5173\u7684\u4e00\u4e9b\u57fa\u7840\u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c\u4f7f\u7528 tree \u547d\u4ee4\u53ef\u67e5\u770b\u76ee\u5f55\u4fe1\u606f\uff1a tree -L 1 ~/.pier1 \u251c\u2500\u2500 api \u251c\u2500\u2500 certs \u251c\u2500\u2500 key.json \u251c\u2500\u2500 node.priv \u2514\u2500\u2500 pier.toml 1 directory, 4 files \u5bfc\u5165\u63d2\u4ef6\u4e8c\u8fdb\u5236\uff08hyperchain\u7684\u63d2\u4ef6\u4e8c\u8fdb\u5236\u548c\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\u9700\u8981\u5185\u90e8\u6388\u6743\uff09 mkdir -p ~/.pier1/plugins cp fabric-client-1.4.so ~/.pier1/plugins pier.toml \u6587\u4ef6\u63cf\u8ff0\u94fe\u8de8\u94fe\u7f51\u5173\u542f\u52a8\u7684\u5fc5\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u914d\u7f6e\u9879\u548c\u8bf4\u660e\u5982\u4e0b\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e [port] http\u3001grpc\u670d\u52a1\u7aef\u53e3 [log] \u65e5\u5fd7\u8f93\u51fa\u76f8\u5173\u8bbe\u7f6e [bitxhub] \u8fde\u63a5\u7684bitxhub\u7684IP\u5730\u5740\u3001\u9a8c\u8bc1\u4eba\u5730\u5740 [appchain] \u5bf9\u63a5\u7684\u5e94\u7528\u94fe\u7684\u57fa\u7840\u914d\u7f6e\u4fe1\u606f \u4e3b\u8981\u9700\u8981\u4fee\u6539\u7684\u90e8\u5206\u662f\u7aef\u53e3\u4fe1\u606f\u3001\u4e2d\u7ee7\u94fe\u7684\u4fe1\u606f\u3001\u5e94\u7528\u94fe\u7684\u4fe1\u606f \u4fee\u6539\u7aef\u53e3\u4fe1\u606f [port] // \u5982\u679c\u4e0d\u51b2\u7a81\u7684\u8bdd\uff0c\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539 http = 44544 pprof = 44555 \u4fee\u6539\u8de8\u94fe\u7f51\u5173\u4fe1\u606f [mode] type = \"direct\" # relay or direct ... ... [mode.direct] peers = [\"/ip4/127.0.0.1/tcp/3003/p2p/QmXfAngyiAkb44ofp1633Ak4nKTKWaBhmQbvE1tsPJzQTX\", \"/ip4/127.0.0.1/tcp/3004/p2p/QmWLrVrbJxkZxBZsr2UmNEz7eLgCExW6KTax89wDRMXaWw\"] \u6ce8\u610f\uff1a\u4e0a\u9762peers\u5b57\u6bb5\u9700\u8981\u914d\u7f6e\u4e24\u65b9\u7684pier\u7684p2p\u5730\u5740\uff0c\u5176\u4e2d\u540e\u9762\u90a3\u4e00\u6bb5\u662f\u6839\u636epier\u79c1\u94a5\u751f\u6210\u7684id\uff0c\u53ef\u4ee5\u4f7f\u7528pier p2p id \u547d\u4ee4\u6765\u83b7\u53d6\uff0c\u8fd9\u4e5f\u662f\u76f4\u8fde\u6a21\u5f0f\u533a\u522b\u4e8e\u4e2d\u7ee7\u6a21\u5f0f\u7684\u5173\u952e\u914d\u7f6e\u3002 \u4fee\u6539\u5e94\u7528\u94fe\u4fe1\u606f [appchain] // \u6240\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u5bf9\u5e94\u7684Plugin\u6587\u4ef6\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 plugin = \"fabric-client-1.4.so\" // \u6240\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u7684\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"fabric\" \u4fee\u6539fabric\u63d2\u4ef6\u914d\u7f6e Fabric\u63d2\u4ef6\u914d\u7f6e\u7684\u6a21\u677f\u5728 pier-client-fabric \u9879\u76ee\u4e2d\uff0c\u5e76\u4e14\u5df2\u7ecf\u5728GitHub\u4e0a\u8fdb\u884c\u5f00\u6e90\uff0c\u6240\u4ee5\u76f4\u63a5\u5728GitHub\u4e0a\u4e0b\u8f7d\u4ee3\u7801\u5373\u53ef # \u8f6c\u5230pier-client-fabric\u9879\u76ee\u8def\u5f84\u4e0b git clone https://github.com/meshplus/pier-client-fabric.git && cd pier-client-fabric cp ./config $HOME /.pier1/fabric \u914d\u7f6e\u76ee\u5f55\u7ed3\u6784 \u251c\u2500\u2500 crypto-config/ \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 fabric.toml \u2514\u2500\u2500 fabric.validators \u4e3b\u8981\u4fee\u6539Fabric\u7f51\u7edc\u914d\u7f6e\uff0c\u9a8c\u8bc1\u8bc1\u4e66\uff0c\u8de8\u94fe\u5408\u7ea6\u8bbe\u7f6e\uff1a Fabric\u8bc1\u4e66\u914d\u7f6e \u542f\u52a8Fabric\u7f51\u7edc\u65f6\uff0c\u4f1a\u751f\u6210\u6240\u6709\u8282\u70b9\uff08\u5305\u62ecOrder\u3001peer\u7b49\uff09\u7684\u8bc1\u4e66\u4fe1\u606f\uff0c\u5e76\u4fdd\u5b58\u5728 crypto-config\u6587\u4ef6\u5939\u4e2d\uff0cFabric\u63d2\u4ef6\u548cFabric\u4ea4\u4e92\u65f6\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u8bc1\u4e66\u3002 # \u590d\u5236\u4f60\u6240\u90e8\u7f72\u7684Fabric\u6240\u4ea7\u751f\u7684crypto-config\u6587\u4ef6\u5939 cp -r /path/to/crypto-config $HOME /.pier1/fabric/ # \u590d\u5236Fabric\u4e0a\u9a8c\u8bc1\u4eba\u8bc1\u4e66 cp $HOME /.pier1/fabric/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/signcerts/peer1.org2.example.com-cert.pem $HOME /.pier1/fabric/fabric.validators \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6 config.yaml config.yaml \u6587\u4ef6\u8bb0\u5f55\u7684Fabric\u7f51\u7edc\u914d\u7f6e\uff08\u5982\u679c\u4f60\u662f\u6309\u7167\u4f60\u81ea\u5df1\u7684\u7f51\u7edc\u62d3\u6251\u90e8\u7f72\u7684Fabric\uff0c\u7528\u4f60\u7684\u7f51\u7edc\u62d3\u6251\u914d\u7f6e\u6587\u4ef6\u66ff\u6362\u8fd9\u4e2a\u6837\u4f8b\u6587\u4ef6\uff09\uff0c\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u628a\u6240\u6709\u7684\u8def\u5f84\u90fd\u4fee\u6539\u4e3a crypto-config \u6587\u4ef6\u5939\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\uff0c$USER\u6307\u4ee3\u5f53\u524d\u7528\u6237\u540d path : { CONFIG_PATH } /fabric/crypto-config => path : /home/$USER/.pier/fabric/crypto-config \u66ff\u6362\u4e3a\u4f60\u90e8\u7f72\u7684Fabric\u7f51\u7edc\u7684\u62d3\u6251\u8bbe\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u540c\u65f6\u9700\u8981\u4fee\u6539\u6240\u6709\u7684Fabric \u7684IP\u5730\u5740\uff0c\u5982\uff1a url : grpcs://localhost:7050 => url : grpcs://10.1.16.48:7050 \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6 fabric.toml \u914d\u7f6e\u9879\u548c\u8bf4\u660e\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e addr Fabric \u533a\u5757\u94fe\u6240\u5728\u7684\u670d\u52a1\u5668\u5730\u5740\u548c\u7aef\u53e3 event_filter \u8de8\u94fe\u5408\u7ea6\u4e2d\u629b\u51fa\u7684\u8de8\u94fe\u4e8b\u4ef6\u7684\u540d\u79f0 username Fabric\u7528\u6237\u540d\u79f0 ccid \u6240\u90e8\u7f72\u7684\u8de8\u94fe\u5408\u7ea6\u540d\u79f0 channel_id \u90e8\u7f72\u7684\u8de8\u94fe\u5408\u7ea6\u6240\u5728\u7684channel org \u90e8\u7f72\u7684\u8de8\u94fe\u5408\u7ea6\u6240\u5728\u7684org \u793a\u4f8b\u914d\u7f6e addr = \"localhost:7053\" // \u82e5Fabric\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u8be5\u4e3a\u670d\u52a1\u5668\u5730\u5740 event_filter = \"interchain-event-name\" username = \"Admin\" ccid = \"broker\" // \u82e5\u90e8\u7f72\u8de8\u94febroker\u5408\u7ea6\u540d\u5b57\u4e0d\u662fbroker\u9700\u8981\u4fee\u6539 channel_id = \"mychannel\" org = \"org2\" \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6fabric.validators fabric.validators \u662fFabric\u9a8c\u8bc1\u4eba\u7684\u8bc1\u4e66\uff0c\u914d\u7f6e\u793a\u4f8b\uff1a -----BEGIN CERTIFICATE----- MIICKTCCAc+gAwIBAgIRAIBO31aZaSZoEYSy2AJuhJcwCgYIKoZIzj0EAwIwczEL MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh Lm9yZzIuZXhhbXBsZS5jb20wHhcNMjAwMjA1MDgyMjAwWhcNMzAwMjAyMDgyMjAw WjBqMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN U2FuIEZyYW5jaXNjbzENMAsGA1UECxMEcGVlcjEfMB0GA1UEAxMWcGVlcjEub3Jn Mi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABG3jszFPTbGm dAYg2BxmHMTDKfQReNw3p9ttMK130qF5lQo5zLBG8Sa3viOCLnvjjg6A/P+yKnwv isI/jEVE8T2jTTBLMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1Ud IwQkMCKAIMVL+daK7nMGr2/AQIXTSPFkdd3UiPVDkWtkh5ujnalEMAoGCCqGSM49 BAMCA0gAMEUCIQDMYOQiYeMiQZTxlRkj/3/jjYvwwdCcX5AWuFmraiHkugIgFkX/ 6uiTSD0lz8P+wwlLf24cIABq2aZyi8q4gj0YfwA= -----END CERTIFICATE----- ### \u542f\u52a8\u7a0b\u5e8f #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier1\u4e3a\u4f8b pier --repo=~/pier1 start \u89c2\u5bdf\u65e5\u5fd7\u4fe1\u606f\u6ca1\u6709\u62a5\u9519\u4fe1\u606f\uff0cpier\u542f\u52a8\u6210\u529f \u8bf4\u660e\uff1a1. \u56e0\u4e3a\u8de8\u94fe\u5408\u7ea6\u548c\u9a8c\u8bc1\u89c4\u5219\u7684\u90e8\u7f72\u6d89\u53ca\u5230\u4e0d\u540c\u5e94\u7528\u94fe\u7684\u7ec6\u8282\uff0c\u4e14\u9700\u4f9d\u8d56\u5e94\u7528\u94fe\u7684\u5b89\u88c5\u90e8\u7f72\uff0c\u5177\u4f53\u64cd\u4f5c\u8bf7\u89c1\u5feb\u901f\u5f00\u59cb\u624b\u518c\u6216\u4f7f\u7528\u6587\u6863\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u30022. \u672c\u6587\u662f\u4ee5\u4e00\u65b9\u7684\u8de8\u94fe\u7f51\u5173\u4e3a\u4f8b\u8fdb\u884c\u90e8\u7f72\uff0c\u800c\u53e6\u4e00\u65b9\u7684\u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u4e0e\u4e4b\u57fa\u672c\u4e00\u6837\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 \u76f4\u8fde\u6a21\u5f0f\u4e0b\uff0c\u4e24\u8fb9\u7684\u8de8\u94fe\u7f51\u5173\u9700\u8981\u76f8\u4e92\u6ce8\u518c\u540c\u65f6\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219 idA = $( pier --repo ~/pier1 id ) idB = $( pier --repo ~/pier2 id ) pier --repo ~/pier1 client register --pier_id ${ idB } --name fab --type fabric --desc simple --version 1 --validators ~/pier1/fabric/fabric.validators --consensusType raft pier --repo ~/pier2 client register --pier_id ${ idA } --name eth --type ethereum --desc simple --version 1 --validators ~/pier2/ethereum/ether.validators --consensusType raft pier --repo ~/pier1 client rule --pier_id ${ idB } --path ~/pier1/fabric/rule.wasm pier --repo ~/pier2 client rule --pier_id ${ idA } --path ~/pier2/ethereum/rule.wasm \u5b8c\u6210\u4e0a\u8ff0\u5e03\u7f6e\u540e\uff0c\u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u6a21\u5f0f\u4e0b\u90e8\u7f72\u5c31\u5df2\u7ecf\u5b8c\u6210\uff0c\u4e24\u8fb9\u7684\u5e94\u7528\u94fe\u53ef\u4ee5\u8fdb\u884c\u8de8\u94fe\u64cd\u4f5c","title":"\u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u6a21\u5f0f\u90e8\u7f72"},{"location":"bitxhub/usage/direct_mode_pier/pier_direct_mode_deploy/#_1","text":"\u8de8\u94fe\u7f51\u5173Pier\u80fd\u591f\u652f\u6301\u8de8\u94fe\u6d88\u606f\u683c\u5f0f\u8f6c\u6362\u3001\u8de8\u94fe\u6d88\u606f\u7684\u8def\u7531\u3001\u8de8\u94fe\u64cd\u4f5c\u7684\u8c03\u7528\u7b49\u6838\u5fc3\u529f\u80fd\uff0c\u4e0d\u4ec5\u4fdd\u8bc1\u4e0d\u540c\u683c\u5f0f\u7684\u8de8\u94fe\u6d88\u606f\u80fd\u591f\u5b89\u5168\u53ef\u4fe1\u7684\u5230\u8fbe\u76ee\u6807\u5e94\u7528\u94fe\uff0c\u800c\u4e14\u4fdd\u8bc1\u4e86\u8de8\u94fe\u4ea4\u6613\u5f02\u5e38\u60c5\u51b5\u4e0b\u6765\u6e90\u94fe\u7684\u5b89\u5168\u3002\u8de8\u94fe\u7f51\u5173\u4e3a\u533a\u5757\u94fe\u4e92\u8054\u5f62\u6210\u7f51\u7edc\u63d0\u4f9b\u4e86\u4fbf\u6377\u7684\u63a5\u5165\u65b9\u5f0f\uff0c\u65e8\u5728\u964d\u4f4e\u8de8\u94fe\u4e92\u8054\u7684\u4f7f\u7528\u6210\u672c\u3002\u5728\u4e4b\u524d\u7684\u6587\u6863\u4e2d\u4ecb\u7ecd\u4e86\u4e2d\u7ee7\u6a21\u5f0f\u7684pier\u5b89\u88c5\u6b65\u9aa4\uff0c\u4e0b\u9762\u4ecb\u7ecd\u76f4\u8fde\u6a21\u5f0f\u4e0bpier\u7684\u5b89\u88c5\u6b65\u9aa4\u3002\u8bf7\u6ce8\u610f\uff0cpier\u76f4\u8fde\u4e0d\u4f9d\u8d56\u4e8e\u4e2d\u7ee7\u94fe\u8282\u70b9\uff0c\u6240\u4ee5\u672c\u6587\u6863\u4e0d\u8d58\u8ff0bitxhub\u7684\u90e8\u7f72\u4e86\u3002","title":"\u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u6a21\u5f0f\u90e8\u7f72"},{"location":"bitxhub/usage/direct_mode_pier/pier_direct_mode_deploy/#_2","text":"","title":"\u5b89\u88c5\u5305\u83b7\u53d6"},{"location":"bitxhub/usage/direct_mode_pier/pier_direct_mode_deploy/#_3","text":"\u8de8\u94fe\u7f51\u5173\u542f\u52a8\u7684\u8bdd\u9700\u8981\u5e94\u7528\u94fe\u63d2\u4ef6\uff0c\u6240\u4ee5\u4ece\u6e90\u7801\u5b89\u88c5\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u7f16\u8bd1\u76f8\u5e94\u7684\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u3002 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier make prepare && make install # \u7f16\u8bd1Fabric cd $HOME git clone https://github.com/meshplus/pier-client-fabric.git cd pier-client-fabric make fabric1.4 # \u7f16\u8bd1\u4ee5\u592a\u574a\u79c1\u94fe\u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-ethereum.git cd pier-client-ethereum make eth # \u63d2\u4ef6\u6267\u884cmake\u7684\u7f16\u8bd1\u4e4b\u540e\uff0c\u90fd\u4f1a\u5728\u9879\u76ee\u76ee\u5f55\u7684\u4e4b\u4e0b\u7684build\u76ee\u5f55\u751f\u6210\u76f8\u5e94\u7684 .so \u6587\u4ef6 \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u6b65\u9aa4\u4f1a\u5728 $GOPATH/bin \u4e0b\u751f\u6210 pier \u4e8c\u8fdb\u5236\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a # $GOPATH/bin\u9700\u8981\u5728PATH\u76ee\u5f55\u4e0b pier version \u5982\u679c\u6b63\u5e38\u5b89\u88c5\u4f1a\u6253\u5370\u51fa\u7c7b\u4f3c\u4e0b\u9762\u7684\u8bf4\u660e Pier version: dev-release-1.6-7eb8c9a App build date: 2021-07-22T10:46:50 System version: linux/amd64 Golang version: go1.14.13","title":"\u6e90\u7801\u5b89\u88c5"},{"location":"bitxhub/usage/direct_mode_pier/pier_direct_mode_deploy/#_4","text":"\u6ca1\u6709\u73b0\u6709\u7f16\u8bd1\u73af\u5883\u7684\u7528\u6237\uff0c\u4e5f\u53ef\u4ee5\u5728GitHub\u5f00\u6e90\u4ed3\u5e93\u4e0b\u8f7d\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\uff0c\u5730\u5740\uff1a https://github.com/meshplus/pier/releases , \u6839\u636e\u9700\u8981\u7684\u7248\u672c\u8fdb\u884c\u4e0b\u8f7d\u5373\u53ef\u3002\u8be5\u90e8\u7f72\u5305\u4e2d\u5305\u542b\u4e86 Pier\u8de8\u94fe\u7f51\u5173\u7684\u4e8c\u8fdb\u5236\u548c pier-client-fabric \u548c pier-client-ethereum \u7684\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u3002","title":"\u4e8c\u8fdb\u5236\u5b89\u88c5"},{"location":"bitxhub/usage/direct_mode_pier/pier_direct_mode_deploy/#_5","text":"","title":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"bitxhub/usage/direct_mode_pier/pier_direct_mode_deploy/#pier","text":"\u5728\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u3001\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u7b49\u6b65\u9aa4\u4e4b\u524d\uff0c\u9700\u8981\u521d\u59cb\u5316\u8de8\u94fe\u7f51\u5173\u7684\u914d\u7f6e\u76ee\u5f55 #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b pier --repo = ~/pier1 init \u8be5\u547d\u4ee4\u4f1a\u751f\u6210\u8de8\u94fe\u7f51\u5173\u7684\u4e00\u4e9b\u57fa\u7840\u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c\u4f7f\u7528 tree \u547d\u4ee4\u53ef\u67e5\u770b\u76ee\u5f55\u4fe1\u606f\uff1a tree -L 1 ~/.pier1 \u251c\u2500\u2500 api \u251c\u2500\u2500 certs \u251c\u2500\u2500 key.json \u251c\u2500\u2500 node.priv \u2514\u2500\u2500 pier.toml 1 directory, 4 files \u5bfc\u5165\u63d2\u4ef6\u4e8c\u8fdb\u5236\uff08hyperchain\u7684\u63d2\u4ef6\u4e8c\u8fdb\u5236\u548c\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\u9700\u8981\u5185\u90e8\u6388\u6743\uff09 mkdir -p ~/.pier1/plugins cp fabric-client-1.4.so ~/.pier1/plugins pier.toml \u6587\u4ef6\u63cf\u8ff0\u94fe\u8de8\u94fe\u7f51\u5173\u542f\u52a8\u7684\u5fc5\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u914d\u7f6e\u9879\u548c\u8bf4\u660e\u5982\u4e0b\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e [port] http\u3001grpc\u670d\u52a1\u7aef\u53e3 [log] \u65e5\u5fd7\u8f93\u51fa\u76f8\u5173\u8bbe\u7f6e [bitxhub] \u8fde\u63a5\u7684bitxhub\u7684IP\u5730\u5740\u3001\u9a8c\u8bc1\u4eba\u5730\u5740 [appchain] \u5bf9\u63a5\u7684\u5e94\u7528\u94fe\u7684\u57fa\u7840\u914d\u7f6e\u4fe1\u606f \u4e3b\u8981\u9700\u8981\u4fee\u6539\u7684\u90e8\u5206\u662f\u7aef\u53e3\u4fe1\u606f\u3001\u4e2d\u7ee7\u94fe\u7684\u4fe1\u606f\u3001\u5e94\u7528\u94fe\u7684\u4fe1\u606f \u4fee\u6539\u7aef\u53e3\u4fe1\u606f [port] // \u5982\u679c\u4e0d\u51b2\u7a81\u7684\u8bdd\uff0c\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539 http = 44544 pprof = 44555 \u4fee\u6539\u8de8\u94fe\u7f51\u5173\u4fe1\u606f [mode] type = \"direct\" # relay or direct ... ... [mode.direct] peers = [\"/ip4/127.0.0.1/tcp/3003/p2p/QmXfAngyiAkb44ofp1633Ak4nKTKWaBhmQbvE1tsPJzQTX\", \"/ip4/127.0.0.1/tcp/3004/p2p/QmWLrVrbJxkZxBZsr2UmNEz7eLgCExW6KTax89wDRMXaWw\"] \u6ce8\u610f\uff1a\u4e0a\u9762peers\u5b57\u6bb5\u9700\u8981\u914d\u7f6e\u4e24\u65b9\u7684pier\u7684p2p\u5730\u5740\uff0c\u5176\u4e2d\u540e\u9762\u90a3\u4e00\u6bb5\u662f\u6839\u636epier\u79c1\u94a5\u751f\u6210\u7684id\uff0c\u53ef\u4ee5\u4f7f\u7528pier p2p id \u547d\u4ee4\u6765\u83b7\u53d6\uff0c\u8fd9\u4e5f\u662f\u76f4\u8fde\u6a21\u5f0f\u533a\u522b\u4e8e\u4e2d\u7ee7\u6a21\u5f0f\u7684\u5173\u952e\u914d\u7f6e\u3002 \u4fee\u6539\u5e94\u7528\u94fe\u4fe1\u606f [appchain] // \u6240\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u5bf9\u5e94\u7684Plugin\u6587\u4ef6\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 plugin = \"fabric-client-1.4.so\" // \u6240\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u7684\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"fabric\"","title":"\u4fee\u6539pier\u914d\u7f6e"},{"location":"bitxhub/usage/direct_mode_pier/pier_direct_mode_deploy/#fabric","text":"Fabric\u63d2\u4ef6\u914d\u7f6e\u7684\u6a21\u677f\u5728 pier-client-fabric \u9879\u76ee\u4e2d\uff0c\u5e76\u4e14\u5df2\u7ecf\u5728GitHub\u4e0a\u8fdb\u884c\u5f00\u6e90\uff0c\u6240\u4ee5\u76f4\u63a5\u5728GitHub\u4e0a\u4e0b\u8f7d\u4ee3\u7801\u5373\u53ef # \u8f6c\u5230pier-client-fabric\u9879\u76ee\u8def\u5f84\u4e0b git clone https://github.com/meshplus/pier-client-fabric.git && cd pier-client-fabric cp ./config $HOME /.pier1/fabric \u914d\u7f6e\u76ee\u5f55\u7ed3\u6784 \u251c\u2500\u2500 crypto-config/ \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 fabric.toml \u2514\u2500\u2500 fabric.validators \u4e3b\u8981\u4fee\u6539Fabric\u7f51\u7edc\u914d\u7f6e\uff0c\u9a8c\u8bc1\u8bc1\u4e66\uff0c\u8de8\u94fe\u5408\u7ea6\u8bbe\u7f6e\uff1a Fabric\u8bc1\u4e66\u914d\u7f6e \u542f\u52a8Fabric\u7f51\u7edc\u65f6\uff0c\u4f1a\u751f\u6210\u6240\u6709\u8282\u70b9\uff08\u5305\u62ecOrder\u3001peer\u7b49\uff09\u7684\u8bc1\u4e66\u4fe1\u606f\uff0c\u5e76\u4fdd\u5b58\u5728 crypto-config\u6587\u4ef6\u5939\u4e2d\uff0cFabric\u63d2\u4ef6\u548cFabric\u4ea4\u4e92\u65f6\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u8bc1\u4e66\u3002 # \u590d\u5236\u4f60\u6240\u90e8\u7f72\u7684Fabric\u6240\u4ea7\u751f\u7684crypto-config\u6587\u4ef6\u5939 cp -r /path/to/crypto-config $HOME /.pier1/fabric/ # \u590d\u5236Fabric\u4e0a\u9a8c\u8bc1\u4eba\u8bc1\u4e66 cp $HOME /.pier1/fabric/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/signcerts/peer1.org2.example.com-cert.pem $HOME /.pier1/fabric/fabric.validators \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6 config.yaml config.yaml \u6587\u4ef6\u8bb0\u5f55\u7684Fabric\u7f51\u7edc\u914d\u7f6e\uff08\u5982\u679c\u4f60\u662f\u6309\u7167\u4f60\u81ea\u5df1\u7684\u7f51\u7edc\u62d3\u6251\u90e8\u7f72\u7684Fabric\uff0c\u7528\u4f60\u7684\u7f51\u7edc\u62d3\u6251\u914d\u7f6e\u6587\u4ef6\u66ff\u6362\u8fd9\u4e2a\u6837\u4f8b\u6587\u4ef6\uff09\uff0c\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u628a\u6240\u6709\u7684\u8def\u5f84\u90fd\u4fee\u6539\u4e3a crypto-config \u6587\u4ef6\u5939\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\uff0c$USER\u6307\u4ee3\u5f53\u524d\u7528\u6237\u540d path : { CONFIG_PATH } /fabric/crypto-config => path : /home/$USER/.pier/fabric/crypto-config \u66ff\u6362\u4e3a\u4f60\u90e8\u7f72\u7684Fabric\u7f51\u7edc\u7684\u62d3\u6251\u8bbe\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u540c\u65f6\u9700\u8981\u4fee\u6539\u6240\u6709\u7684Fabric \u7684IP\u5730\u5740\uff0c\u5982\uff1a url : grpcs://localhost:7050 => url : grpcs://10.1.16.48:7050 \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6 fabric.toml \u914d\u7f6e\u9879\u548c\u8bf4\u660e\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e addr Fabric \u533a\u5757\u94fe\u6240\u5728\u7684\u670d\u52a1\u5668\u5730\u5740\u548c\u7aef\u53e3 event_filter \u8de8\u94fe\u5408\u7ea6\u4e2d\u629b\u51fa\u7684\u8de8\u94fe\u4e8b\u4ef6\u7684\u540d\u79f0 username Fabric\u7528\u6237\u540d\u79f0 ccid \u6240\u90e8\u7f72\u7684\u8de8\u94fe\u5408\u7ea6\u540d\u79f0 channel_id \u90e8\u7f72\u7684\u8de8\u94fe\u5408\u7ea6\u6240\u5728\u7684channel org \u90e8\u7f72\u7684\u8de8\u94fe\u5408\u7ea6\u6240\u5728\u7684org \u793a\u4f8b\u914d\u7f6e addr = \"localhost:7053\" // \u82e5Fabric\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u8be5\u4e3a\u670d\u52a1\u5668\u5730\u5740 event_filter = \"interchain-event-name\" username = \"Admin\" ccid = \"broker\" // \u82e5\u90e8\u7f72\u8de8\u94febroker\u5408\u7ea6\u540d\u5b57\u4e0d\u662fbroker\u9700\u8981\u4fee\u6539 channel_id = \"mychannel\" org = \"org2\" \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6fabric.validators fabric.validators \u662fFabric\u9a8c\u8bc1\u4eba\u7684\u8bc1\u4e66\uff0c\u914d\u7f6e\u793a\u4f8b\uff1a -----BEGIN CERTIFICATE----- MIICKTCCAc+gAwIBAgIRAIBO31aZaSZoEYSy2AJuhJcwCgYIKoZIzj0EAwIwczEL MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG cmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh Lm9yZzIuZXhhbXBsZS5jb20wHhcNMjAwMjA1MDgyMjAwWhcNMzAwMjAyMDgyMjAw WjBqMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN U2FuIEZyYW5jaXNjbzENMAsGA1UECxMEcGVlcjEfMB0GA1UEAxMWcGVlcjEub3Jn Mi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABG3jszFPTbGm dAYg2BxmHMTDKfQReNw3p9ttMK130qF5lQo5zLBG8Sa3viOCLnvjjg6A/P+yKnwv isI/jEVE8T2jTTBLMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1Ud IwQkMCKAIMVL+daK7nMGr2/AQIXTSPFkdd3UiPVDkWtkh5ujnalEMAoGCCqGSM49 BAMCA0gAMEUCIQDMYOQiYeMiQZTxlRkj/3/jjYvwwdCcX5AWuFmraiHkugIgFkX/ 6uiTSD0lz8P+wwlLf24cIABq2aZyi8q4gj0YfwA= -----END CERTIFICATE----- ### \u542f\u52a8\u7a0b\u5e8f #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier1\u4e3a\u4f8b pier --repo=~/pier1 start \u89c2\u5bdf\u65e5\u5fd7\u4fe1\u606f\u6ca1\u6709\u62a5\u9519\u4fe1\u606f\uff0cpier\u542f\u52a8\u6210\u529f \u8bf4\u660e\uff1a1. \u56e0\u4e3a\u8de8\u94fe\u5408\u7ea6\u548c\u9a8c\u8bc1\u89c4\u5219\u7684\u90e8\u7f72\u6d89\u53ca\u5230\u4e0d\u540c\u5e94\u7528\u94fe\u7684\u7ec6\u8282\uff0c\u4e14\u9700\u4f9d\u8d56\u5e94\u7528\u94fe\u7684\u5b89\u88c5\u90e8\u7f72\uff0c\u5177\u4f53\u64cd\u4f5c\u8bf7\u89c1\u5feb\u901f\u5f00\u59cb\u624b\u518c\u6216\u4f7f\u7528\u6587\u6863\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u30022. \u672c\u6587\u662f\u4ee5\u4e00\u65b9\u7684\u8de8\u94fe\u7f51\u5173\u4e3a\u4f8b\u8fdb\u884c\u90e8\u7f72\uff0c\u800c\u53e6\u4e00\u65b9\u7684\u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u4e0e\u4e4b\u57fa\u672c\u4e00\u6837\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 \u76f4\u8fde\u6a21\u5f0f\u4e0b\uff0c\u4e24\u8fb9\u7684\u8de8\u94fe\u7f51\u5173\u9700\u8981\u76f8\u4e92\u6ce8\u518c\u540c\u65f6\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219 idA = $( pier --repo ~/pier1 id ) idB = $( pier --repo ~/pier2 id ) pier --repo ~/pier1 client register --pier_id ${ idB } --name fab --type fabric --desc simple --version 1 --validators ~/pier1/fabric/fabric.validators --consensusType raft pier --repo ~/pier2 client register --pier_id ${ idA } --name eth --type ethereum --desc simple --version 1 --validators ~/pier2/ethereum/ether.validators --consensusType raft pier --repo ~/pier1 client rule --pier_id ${ idB } --path ~/pier1/fabric/rule.wasm pier --repo ~/pier2 client rule --pier_id ${ idA } --path ~/pier2/ethereum/rule.wasm \u5b8c\u6210\u4e0a\u8ff0\u5e03\u7f6e\u540e\uff0c\u8de8\u94fe\u7f51\u5173\u76f4\u8fde\u6a21\u5f0f\u4e0b\u90e8\u7f72\u5c31\u5df2\u7ecf\u5b8c\u6210\uff0c\u4e24\u8fb9\u7684\u5e94\u7528\u94fe\u53ef\u4ee5\u8fdb\u884c\u8de8\u94fe\u64cd\u4f5c","title":"\u4fee\u6539fabric\u63d2\u4ef6\u914d\u7f6e"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/","text":"\u4e2d\u7ee7\u94fe\u90e8\u7f72 \u4e2d\u7ee7\u94fe\u7528\u4e8e\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u7ba1\u7406\uff0c\u4ee5\u53ca\u8de8\u94fe\u4ea4\u6613\u7684\u53ef\u4fe1\u9a8c\u8bc1\u4e0e\u53ef\u9760\u8def\u7531\uff0c\u662f\u4e00\u79cd\u5b9e\u73b0IBTP\u534f\u8bae\u7684\u5f00\u653e\u8bb8\u53ef\u94fe\u3002\u90e8\u7f72\u4e2d\u7ee7\u94fe\u8282\u70b9\u4e3b\u8981\u662f\u4e09\u4e2a\u6b65\u9aa4\uff1a\u5b89\u88c5\u5305\u83b7\u53d6\uff08\u51c6\u5907\uff09\u3001\u914d\u7f6e\u6587\u4ef6\u4fee\u6539\u548c\u7a0b\u5e8f\u542f\u52a8\uff0c\u4e0b\u9762\u4f9d\u6b21\u8fdb\u884c\u8bf4\u660e\u3002 \u5b89\u88c5\u5305\u83b7\u53d6 \u6e90\u7801\u7f16\u8bd1 \u60a8\u53ef\u4ee5\u81ea\u884c\u62c9\u53d6BitXHub\u9879\u76ee\u7684\u6e90\u7801\uff0c\u7136\u540e\u5728\u672c\u5730\u7f16\u8bd1BitXHub\u53ca\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u53ef\u53c2\u8003\u5982\u4e0b\uff1a # 1. \u9996\u5148\u62c9\u53d6bitxhub\u9879\u76ee\u6e90\u4ee3\u7801 git clone https://github.com/meshplus/bitxhub.git # 2. \u8fdb\u5165bitxhub\u76ee\u5f55\uff0c\u5207\u6362\u5230\u6307\u5b9a\u7684\u5206\u652f\u6216\u7248\u672c\u540e\u7f16\u8bd1bitxhub\u4e8c\u8fdb\u5236 cd bitxhub && git checkout v1.6.2 && make build # \u6ce8\u610f\u26a0\ufe0f\uff1a\u9996\u6b21\u7f16\u8bd1\u9700\u8981\u5728build\u4e4b\u524d\u5148\u6267\u884c make prepare \u5b8c\u6210\u4f9d\u8d56\u5b89\u88c5 # \u7f16\u8bd1\u5b8c\u6210\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u7684bin\u76ee\u5f55\u4e0b\u770b\u5230\u521a\u521a\u751f\u6210\u7684bitxhub\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u4ee5\u786e\u8ba4\u4e0bbitxhub\u7248\u672c\u662fv1.6.2 ./bin/bitxhub version # 3. \u63a5\u4e0b\u6765\u9700\u8981\u7f16\u8bd1\u5171\u8bc6\u63d2\u4ef6\uff0c\u8fdb\u5165\u5230 internal/plugins \u76ee\u5f55\u8fdb\u884c\u7f16\u8bd1 cd internal/plugins && make plugins # \u7f16\u8bd1\u5b8c\u6210\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u7684internal/plugins/build\u76ee\u5f55\u4e0b\u770b\u5230\u521a\u521a\u751f\u6210\u7684\u5171\u8bc6\u63d2\u4ef6\u6587\u4ef6\uff0craft.so\u548csolo.so \u63d0\u793a\uff1a\u5728bitxhub v1.7.0\u53ca\u4ee5\u4e0a\u7684\u7248\u672c\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u4e00\u952e\u751f\u6210\u90e8\u7f72\u6240\u9700\u7684\u6587\u4ef6\u5305\u7684make\u547d\u4ee4\uff1amake release-binary\uff0c\u6267\u884c\u5b8c\u6210\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u7684dist\u76ee\u5f55\u770b\u5230\u7b26\u5408\u60a8\u7cfb\u7edf\u7684\u538b\u7f29\u5305\uff0c\u89e3\u538b\u5373\u53ef\u4f7f\u7528\u3002 \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u76f8\u4fe1\u60a8\u5df2\u7ecf\u7f16\u8bd1\u51fa\u4e86\u90e8\u7f72\u4e2d\u7ee7\u94fe\u8282\u70b9\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e2d\u7ee7\u94fe\u8282\u70b9\u8fd0\u884c\u8fd8\u9700\u8981\u5916\u90e8\u4f9d\u8d56\u5e93\uff0c\u5747\u5728\u9879\u76eebuild\u76ee\u5f55\u4e0b\uff08Macos\u4f7f\u7528libwasmer.dylib\uff0cLinux\u4f7f\u7528libwasmer.so\uff09,\u5efa\u8bae\u5c06\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u548c\u9002\u914d\u7684\u4f9d\u8d56\u5e93\u6587\u4ef6\u62f7\u8d1d\u5230\u540c\u4e00\u76ee\u5f55\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u64cd\u4f5c\u3002 \u4e8c\u8fdb\u5236\u76f4\u63a5\u4e0b\u8f7d \u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dBitXHub\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a BitXHub\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \uff0c\u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u548c\u7cfb\u7edf\u4e0b\u8f7d\u5373\u53ef\uff0c\u5efa\u8bae\u4f7f\u7528\u6700\u65b0\u7684BitXHub\u53d1\u5e03\u7248\u672c\u3002 \u5feb\u901f\u542f\u52a8BitXHub\u8282\u70b9 \u83b7\u53d6\u5230\u5b89\u88c5\u5305\u540e\uff0c\u63a5\u4e0b\u6765\u8981\u6839\u636e\u60a8\u7684\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u3002 \u5982\u679c\u60a8\u662f\u5728\u672c\u5730\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u5305\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c make cluster \u4e00\u952e\u542f\u52a8\u56db\u8282\u70b9raft\u5171\u8bc6\u7684BitXHub\u96c6\u7fa4\uff0c\u6216\u8005\u6267\u884c make solo \u4e00\u952e\u542f\u52a8\u5355\u8282\u70b9solo\u5171\u8bc6\u7684BitXHub\u8282\u70b9\u3002 \u5982\u679c\u60a8\u662f\u76f4\u63a5\u4e0b\u8f7d\u7684\u4e8c\u8fdb\u5236\u5b89\u88c5\u5305\uff0c\u4e3a\u4e86\u7b80\u5316\u64cd\u4f5c\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u53ef\u4ee5\u76f4\u63a5\u542f\u52a8raft/solo\u5171\u8bc6\u7684\u8282\u70b9\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\uff0c\u5176\u4e0b\u8f7d\u5730\u5740\u4e0e\u4e8c\u8fdb\u5236\u5305\u4e00\u6837\uff0c\u6587\u4ef6\u540d\u4ee5example\u5f00\u5934\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0craft\u5171\u8bc6\u7684\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\u662f\u56db\u8282\u70b9\u96c6\u7fa4\uff0csolo\u5171\u8bc6\u7684\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\u662f\u5355\u8282\u70b9 \u63a5\u4e0b\u6765\u53ea\u9700\u5c06\u4e0a\u4e00\u6b65\u4e0b\u8f7d\u7684BitXHub\u4e8c\u8fdb\u5236\u53ca\u5bf9\u5e94\u63d2\u4ef6\u62f7\u8d1d\u5230\u914d\u7f6e\u76ee\u5f55\u5373\u53ef\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a # 1. \u89e3\u538b\u4e8c\u8fdb\u5236\u538b\u7f29\u5305 mkdir bitxhub && cd bitxhub cp ~/Downloads/bitxhub_v1.6.2_Darwin_x86_64.tar.gz . tar -zxvf bitxhub_v1.6.2_Darwin_x86_64.tar.gz # 2. \u89e3\u538b\u914d\u7f6e\u6587\u4ef6\u538b\u7f29\u5305(\u4ee5raft\u5171\u8bc6\u4e3a\u4f8b) mkdir raft-nodes tar -zxvf example_bitxhub_v1.6.2.tar.gz -C raft-nodes/ # 3. \u5c06bitxhub\u3001\u5171\u8bc6\u63d2\u4ef6\u4e8c\u8fdb\u5236\u548c\u4f9d\u8d56\u5e93\u6587\u4ef6\u5206\u522b\u62f7\u8d1d\u52304\u4e2a\u8282\u70b9\u7684\u914d\u7f6e\u76ee\u5f55\uff08\u4ee5node1\u4e3a\u4f8b\uff09 cp bitxhub raft-nodes/node1/ cp libwasmer.dylib raft-nodes/node1/ cp raft.so raft-nodes/node1/plugins/ # \u6ce8\u610f\u26a0\ufe0f\uff1a\u8282\u70b92\u30013\u30014\u4e5f\u9700\u8981\u6267\u884c\u4e0a\u9762\u62f7\u8d1d\u64cd\u4f5c\uff0c\u5bf9\u4e8eLinux\u7cfb\u7edf\u4f9d\u8d56\u5e93\u6587\u4ef6\u662flibwasmer.so # \u4ee5\u4e0a\u64cd\u4f5c\u5747\u662f\u793a\u4f8b\uff0c\u6267\u884c\u65f6\u4e8c\u8fdb\u5236\u548c\u914d\u7f6e\u6587\u4ef6\u538b\u7f29\u5305\u7684\u540d\u79f0\u53ef\u80fd\u5b58\u5728\u5dee\u5f02\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574 \u62f7\u8d1d\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u8fdb\u5165\u5404\u4e2a\u8282\u70b9\u7684\u914d\u7f6e\u76ee\u5f55\uff0c\u4f9d\u6b21\u542f\u52a8BitXHub\u8282\u70b9\u5373\u53ef\uff0c\u542f\u52a8\u64cd\u4f5c\u5982\u4e0b\uff1a cd bitxhub/raft-nodes/node1 export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd) ./bitxhub --repo ./ start ... ... cd bitxhub/raft-nodes/node4 export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd) ./bitxhub --repo ./ start \u5f85\u8282\u70b9\u96c6\u7fa4\u6253\u5370\u51fabitxhub\u7684LOGO\uff0c\u8868\u793aBitXHub\u96c6\u7fa4\u5f00\u59cb\u6b63\u5e38\u5de5\u4f5c BitXHub\u914d\u7f6e\u6587\u4ef6\u8bf4\u660e \u524d\u9762\u7684\u63d0\u4f9b\u7684\u914d\u7f6e\u793a\u4f8b\u53ef\u4ee5\u65b9\u4fbf\u5730\u5feb\u901f\u542f\u52a8BitXHub\u8282\u70b9(\u96c6\u7fa4)\uff0c\u4f46\u662f\u6ca1\u6709\u5bf9\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u5177\u4f53\u8bf4\u660e\uff0c\u8003\u8651\u5230\u60a8\u53ef\u80fd\u9700\u8981\u8be6\u7ec6\u4e86\u89e3bitxhub\u7684\u8fd0\u884c\u539f\u7406\u548c\u914d\u7f6e\u9879\u7684\u5177\u4f53\u542b\u4e49\uff0c\u4ece\u800c\u53ef\u4ee5\u7075\u6d3b\u914d\u7f6e\u548c\u542f\u52a8\u8282\u70b9\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u5bf9BitXHub\u7684\u5177\u4f53\u914d\u7f6e\u9879\u8fdb\u884c\u8bf4\u660e\u3002 \u4e2d\u7ee7\u94fe\u8282\u70b9\u4e3b\u8981\u5305\u62ecbitxhub.toml\u3001network.tom\u548corder.toml\u914d\u7f6e\u6587\u4ef6\uff0c\u5206\u522b\u4ee3\u8868\u8282\u70b9\u672c\u8eab\u3001\u8282\u70b9\u7f51\u7edc\u4ee5\u53ca\u8282\u70b9\u5171\u8bc6\u65b9\u9762\u7684\u914d\u7f6e\uff0c\u5176\u4e2dorder.toml\u4e00\u822c\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef\uff0c\u5176\u5b83\u4e24\u4e2a\u6587\u4ef6\u5747\u9700\u8981\u6839\u636e\u5b9e\u9645\u90e8\u7f72\u60c5\u51b5\u8fdb\u884c\u4fee\u6539\uff0c\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u4f9d\u7136\u4ee5node1\u4e3a\u4f8b\u3002 bitxhub.toml\u6587\u4ef6\u914d\u7f6e\u4fee\u6539 bitxhub.toml\u6587\u4ef6\u662fBitXHub\u8282\u70b9\u542f\u52a8\u7684\u4e3b\u8981\u914d\u7f6e\u6587\u4ef6\u3002\u5404\u914d\u7f6e\u9879\u8bf4\u660e\u5982\u4e0b\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e solo \u662f\u5426\u6309\u7167\u5355\u8282\u70b9\u6a21\u5f0f\u542f\u52a8BitXHub [port] gateway\u3001grpc\u3001pprof\u548cmonitor\u670d\u52a1\u7aef\u53e3 [pprof] \u6027\u80fd\u5256\u6790\u914d\u7f6e [monitor] \u76d1\u63a7\u670d\u52a1\u914d\u7f6e [gateway] \u8de8\u57df\u914d\u7f6e [ping] ping\u96c6\u7fa4\u8282\u70b9\u529f\u80fd [security] \u8bc1\u4e66\u4f53\u7cfb [limiter] \u6d41\u91cf\u63a7\u5236\u914d\u7f6e [log] \u65e5\u5fd7\u8f93\u51fa\u76f8\u5173\u8bbe\u7f6e [cert] \u662f\u5426\u5f00\u542f\u8ba4\u8bc1\u8282\u70b9p2p\u901a\u4fe1\u8bc1\u4e66 [order] \u5171\u8bc6\u6a21\u5757\uff0c\u4f5c\u4e3a\u63d2\u4ef6\u8fdb\u884c\u52a0\u8f7d [executor] \u6267\u884c\u5f15\u64ce\u7c7b\u578b [genesis] \u521b\u4e16\u8282\u70b9\u914d\u7f6e \u5728\u5feb\u901f\u4f53\u9a8c\u90e8\u7f72\u6d41\u7a0b\u4e2d\uff0c\u9700\u8981\u4fee\u6539\u7684\u914d\u7f6e\u4e00\u822c\u53ea\u6709port\u3001order\u7684\u4fe1\u606f\uff0c\u5176\u5b83\u914d\u7f6e\u9ed8\u8ba4\u5373\u53ef\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\u53c2\u8003 \u6839\u636e\u60a8\u673a\u5668\u5b9e\u9645\u5206\u914d\u7684\u7aef\u53e3\u8fdb\u884c\u53d8\u66f4\uff1a [ port ] gateway = 9091 grpc = 60011 pprof = 53121 monitor = 40011 \u5171\u8bc6\u7b97\u6cd5\u7c7b\u578b\u9009\u62e9\uff08\u5f00\u6e90\u7248\u672c\u76ee\u524d\u652f\u6301raft\u548csolo\uff09\uff1a [ order ] plugin = \"plugins/raft.so\" network.toml\u6587\u4ef6\u914d\u7f6e\u4fee\u6539 network.toml\u6587\u4ef6\u662fBitXHub\u8282\u70b9\u7f51\u7edc\u914d\u7f6e\u6587\u4ef6\uff0c\u5404\u914d\u7f6e\u9879\u8bf4\u660e\u5982\u4e0b\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e N \u96c6\u7fa4\u8282\u70b9\u6570\u91cf id \u5f53\u524d\u8282\u70b9\u6807\u8bc6 new \u5224\u65ad\u5f53\u524d\u8282\u70b9\u662f\u65b0\u52a0\u5165\u7684\u8282\u70b9 [nodes] \u96c6\u7fa4\u8282\u70b9\u4fe1\u606f account \u8282\u70b9\u9a8c\u8bc1\u8005\u5730\u5740 hosts \u8282\u70b9\u7f51\u7edc\u5730\u5740 id \u8282\u70b9\u6807\u8bc6 pid p2p\u7f51\u7edc\u552f\u4e00\u6807\u8bc6 \u5728\u5b9e\u9645\u90e8\u7f72\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u4fee\u6539\u7684\u914d\u7f6e\u4e00\u822c\u662f\u8282\u70b9\u6570\u91cf\u3001nodes\u7684\u4fe1\u606f\uff0c\u5176\u5b83\u914d\u7f6e\u9ed8\u8ba4\u5373\u53ef\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\u53c2\u8003 \u914d\u7f6e\u5f53\u524d\u8282\u70b9\u96c6\u7fa4\u7684\u6570\u91cf\u4ee5\u53ca\u81ea\u8eab\u7684id: id = 1 # self id n = 4 # the number of vp nodes new = false # track whether the node is a new node \u914d\u7f6e\u96c6\u7fa4\u4e2d\u5404\u4e2a\u8282\u70b9\u7684\u4fe1\u606f [[ nodes ]] account = \"0xc7F999b83Af6DF9e67d0a37Ee7e900bF38b3D013\" hosts = [ \"/ip4/127.0.0.1/tcp/4001/p2p/\" ] id = 1 pid = \"QmXi58fp9ZczF3Z5iz1yXAez3Hy5NYo1R8STHWKEM9XnTL\" \u8bf4\u660e\uff1a\u4e0a\u9762 account\u5c31\u662f\u4e0a\u4e00\u8282\u4e2dbitxhub\u8282\u70b9\u7684address\u5730\u5740\uff0chosts\u4e2d\u4e00\u822c\u5c31\u6539\u53d8ip\u5730\u5740\u5373\u53ef\uff0c\u8282\u70b9\u7684pid\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\uff1a . / bitxhub cert priv pid -- path . / node1 / key . priv # \u793a\u4f8b\u8f93\u51fa \uff1a QmWAaFDQ3p2Hj383WsBGU2nLMtsJk1aT9obXXXxL5UyUuA order.toml\u6587\u4ef6\u914d\u7f6e\u4fee\u6539 order.toml\u6587\u4ef6\u662fbitxhub\u5171\u8bc6\u914d\u7f6e\u6587\u4ef6\u3002\u5404\u914d\u7f6e\u9879\u8bf4\u660e\u5982\u4e0b\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e [raft] raft \u76f8\u5173\u914d\u7f6e [rbft] rbft \u76f8\u5173\u914d\u7f6e [solo] solo\u76f8\u5173\u914d\u7f6e \u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff08\u65e0\u7279\u6b8a\u60c5\u51b5\u4e0d\u8981\u4fee\u6539\u6b64\u914d\u7f6e\uff09\uff1a [ raft ] batch_timeout = \"0.3s\" # Block packaging time period . tick_timeout = \"0.1s\" # TickTimeout is the internal logical clock for the Node by a single tick , Election timeouts and heartbeat timeouts are in units of ticks . election_tick = 10 # ElectionTick is the number of Node . Tick invocations that must pass between elections . heartbeat_tick = 1 # HeartbeatTick is the number of Node . Tick invocations that must pass between heartbeats . max_size_per_msg = 1048576 # 1024 * 1024 , MaxSizePerMsg limits the max size of each append message . max_inflight_msgs = 500 # MaxInflightMsgs limits the max number of in - flight append messages during optimistic replication phase . check_quorum = true # Leader steps down when quorum is not active for an electionTimeout . pre_vote = true # PreVote prevents reconnected node from disturbing network . disable_proposal_forwarding = true # This prevents blocks from being accidentally proposed by followers . [ raft . mempool ] batch_size = 200 # How many transactions should the primary pack . pool_size = 50000 # How many transactions could the txPool stores in total . tx_slice_size = 10 # How many transactions should the node broadcast at once tx_slice_timeout = \"0.1s\" # Node broadcasts transactions if there are cached transactions , although set_size isn 't reached yet [raft.syncer] sync_blocks = 1 # How many blocks should the behind node fetch at once snapshot_count = 1000 # How many apply index(blocks) should the node trigger at once [rbft] #RBFT configurations set_size = 25 # How many transactions should the node broadcast at once batch_size = 500 # How many transactions should the primary pack before sending pre-prepare pool_size = 50000 # How many transactions could the txPool stores in total vc_period = 0 # After how many checkpoint periods( Blocks = 10 * vcperiod ) the primary gets cycled automatically. ( Set 0 to disable ) check_interval = \"3m\" # interval of the check loop tolerance_time = \"5m\" # The max tolerance time duration (in seconds) of out-of-date batch_mem_limit = false # Indicates whether limit batch mem size or not batch_max_mem = 10000 # The max memory size of one batch [rbft.timeout] sync_state = \"3s\" # How long to wait quorum sync state response sync_interval = \"1m\" # How long to restart sync state process recovery = \"15s\" # How long to wait before recovery finished(This is for release1.2) first_request = \"30s\" # How long to wait before first request should come batch = \"0.5s\"# Primary send a pre-prepare if there are pending requests, although batchsize isn' t reached yet , request = \"6s\" # How long may a request ( transaction batch ) take between reception and execution , must be greater than the batch timeout null_request = \"9s\" # Primary send it to inform aliveness , must be greater than request timeout viewchange = \"8s\" # How long may a view change take resend_viewchange = \"10s\" # How long to wait for a view change quorum before resending ( the same ) view change clean_viewchange = \"60s\" # How long to clean out - of - data view change message update = \"4s\" # How long may a update - n take set = \"0.1s\" # Node broadcasts transactions if there are cached transactions , although set_size isn 't reached yet [rbft.syncer] sync_blocks = 1 # How many blocks should the behind node fetch at once [solo] batch_timeout = \"0.3s\" # Block packaging time period. [solo.mempool] batch_size = 200 # How many transactions should the primary pack. pool_size = 50000 # How many transactions could the txPool stores in total. tx_slice_size = 10 # How many transactions should the node broadcast at once tx_slice_timeout = \"0.1s\" # Node broadcasts transactions if there are cached transactions, although set_size isn' t reached yet","title":"\u4e2d\u7ee7\u94fe\u90e8\u7f72"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/#_1","text":"\u4e2d\u7ee7\u94fe\u7528\u4e8e\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u7ba1\u7406\uff0c\u4ee5\u53ca\u8de8\u94fe\u4ea4\u6613\u7684\u53ef\u4fe1\u9a8c\u8bc1\u4e0e\u53ef\u9760\u8def\u7531\uff0c\u662f\u4e00\u79cd\u5b9e\u73b0IBTP\u534f\u8bae\u7684\u5f00\u653e\u8bb8\u53ef\u94fe\u3002\u90e8\u7f72\u4e2d\u7ee7\u94fe\u8282\u70b9\u4e3b\u8981\u662f\u4e09\u4e2a\u6b65\u9aa4\uff1a\u5b89\u88c5\u5305\u83b7\u53d6\uff08\u51c6\u5907\uff09\u3001\u914d\u7f6e\u6587\u4ef6\u4fee\u6539\u548c\u7a0b\u5e8f\u542f\u52a8\uff0c\u4e0b\u9762\u4f9d\u6b21\u8fdb\u884c\u8bf4\u660e\u3002","title":"\u4e2d\u7ee7\u94fe\u90e8\u7f72"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/#_2","text":"","title":"\u5b89\u88c5\u5305\u83b7\u53d6"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/#_3","text":"\u60a8\u53ef\u4ee5\u81ea\u884c\u62c9\u53d6BitXHub\u9879\u76ee\u7684\u6e90\u7801\uff0c\u7136\u540e\u5728\u672c\u5730\u7f16\u8bd1BitXHub\u53ca\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u53ef\u53c2\u8003\u5982\u4e0b\uff1a # 1. \u9996\u5148\u62c9\u53d6bitxhub\u9879\u76ee\u6e90\u4ee3\u7801 git clone https://github.com/meshplus/bitxhub.git # 2. \u8fdb\u5165bitxhub\u76ee\u5f55\uff0c\u5207\u6362\u5230\u6307\u5b9a\u7684\u5206\u652f\u6216\u7248\u672c\u540e\u7f16\u8bd1bitxhub\u4e8c\u8fdb\u5236 cd bitxhub && git checkout v1.6.2 && make build # \u6ce8\u610f\u26a0\ufe0f\uff1a\u9996\u6b21\u7f16\u8bd1\u9700\u8981\u5728build\u4e4b\u524d\u5148\u6267\u884c make prepare \u5b8c\u6210\u4f9d\u8d56\u5b89\u88c5 # \u7f16\u8bd1\u5b8c\u6210\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u7684bin\u76ee\u5f55\u4e0b\u770b\u5230\u521a\u521a\u751f\u6210\u7684bitxhub\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u4ee5\u786e\u8ba4\u4e0bbitxhub\u7248\u672c\u662fv1.6.2 ./bin/bitxhub version # 3. \u63a5\u4e0b\u6765\u9700\u8981\u7f16\u8bd1\u5171\u8bc6\u63d2\u4ef6\uff0c\u8fdb\u5165\u5230 internal/plugins \u76ee\u5f55\u8fdb\u884c\u7f16\u8bd1 cd internal/plugins && make plugins # \u7f16\u8bd1\u5b8c\u6210\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u7684internal/plugins/build\u76ee\u5f55\u4e0b\u770b\u5230\u521a\u521a\u751f\u6210\u7684\u5171\u8bc6\u63d2\u4ef6\u6587\u4ef6\uff0craft.so\u548csolo.so \u63d0\u793a\uff1a\u5728bitxhub v1.7.0\u53ca\u4ee5\u4e0a\u7684\u7248\u672c\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u4e00\u952e\u751f\u6210\u90e8\u7f72\u6240\u9700\u7684\u6587\u4ef6\u5305\u7684make\u547d\u4ee4\uff1amake release-binary\uff0c\u6267\u884c\u5b8c\u6210\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u7684dist\u76ee\u5f55\u770b\u5230\u7b26\u5408\u60a8\u7cfb\u7edf\u7684\u538b\u7f29\u5305\uff0c\u89e3\u538b\u5373\u53ef\u4f7f\u7528\u3002 \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u76f8\u4fe1\u60a8\u5df2\u7ecf\u7f16\u8bd1\u51fa\u4e86\u90e8\u7f72\u4e2d\u7ee7\u94fe\u8282\u70b9\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e2d\u7ee7\u94fe\u8282\u70b9\u8fd0\u884c\u8fd8\u9700\u8981\u5916\u90e8\u4f9d\u8d56\u5e93\uff0c\u5747\u5728\u9879\u76eebuild\u76ee\u5f55\u4e0b\uff08Macos\u4f7f\u7528libwasmer.dylib\uff0cLinux\u4f7f\u7528libwasmer.so\uff09,\u5efa\u8bae\u5c06\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u548c\u9002\u914d\u7684\u4f9d\u8d56\u5e93\u6587\u4ef6\u62f7\u8d1d\u5230\u540c\u4e00\u76ee\u5f55\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u64cd\u4f5c\u3002","title":"\u6e90\u7801\u7f16\u8bd1"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/#_4","text":"\u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dBitXHub\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a BitXHub\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \uff0c\u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u548c\u7cfb\u7edf\u4e0b\u8f7d\u5373\u53ef\uff0c\u5efa\u8bae\u4f7f\u7528\u6700\u65b0\u7684BitXHub\u53d1\u5e03\u7248\u672c\u3002","title":"\u4e8c\u8fdb\u5236\u76f4\u63a5\u4e0b\u8f7d"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/#bitxhub","text":"\u83b7\u53d6\u5230\u5b89\u88c5\u5305\u540e\uff0c\u63a5\u4e0b\u6765\u8981\u6839\u636e\u60a8\u7684\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u3002 \u5982\u679c\u60a8\u662f\u5728\u672c\u5730\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u5305\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c make cluster \u4e00\u952e\u542f\u52a8\u56db\u8282\u70b9raft\u5171\u8bc6\u7684BitXHub\u96c6\u7fa4\uff0c\u6216\u8005\u6267\u884c make solo \u4e00\u952e\u542f\u52a8\u5355\u8282\u70b9solo\u5171\u8bc6\u7684BitXHub\u8282\u70b9\u3002 \u5982\u679c\u60a8\u662f\u76f4\u63a5\u4e0b\u8f7d\u7684\u4e8c\u8fdb\u5236\u5b89\u88c5\u5305\uff0c\u4e3a\u4e86\u7b80\u5316\u64cd\u4f5c\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u53ef\u4ee5\u76f4\u63a5\u542f\u52a8raft/solo\u5171\u8bc6\u7684\u8282\u70b9\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\uff0c\u5176\u4e0b\u8f7d\u5730\u5740\u4e0e\u4e8c\u8fdb\u5236\u5305\u4e00\u6837\uff0c\u6587\u4ef6\u540d\u4ee5example\u5f00\u5934\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0craft\u5171\u8bc6\u7684\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\u662f\u56db\u8282\u70b9\u96c6\u7fa4\uff0csolo\u5171\u8bc6\u7684\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\u662f\u5355\u8282\u70b9 \u63a5\u4e0b\u6765\u53ea\u9700\u5c06\u4e0a\u4e00\u6b65\u4e0b\u8f7d\u7684BitXHub\u4e8c\u8fdb\u5236\u53ca\u5bf9\u5e94\u63d2\u4ef6\u62f7\u8d1d\u5230\u914d\u7f6e\u76ee\u5f55\u5373\u53ef\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a # 1. \u89e3\u538b\u4e8c\u8fdb\u5236\u538b\u7f29\u5305 mkdir bitxhub && cd bitxhub cp ~/Downloads/bitxhub_v1.6.2_Darwin_x86_64.tar.gz . tar -zxvf bitxhub_v1.6.2_Darwin_x86_64.tar.gz # 2. \u89e3\u538b\u914d\u7f6e\u6587\u4ef6\u538b\u7f29\u5305(\u4ee5raft\u5171\u8bc6\u4e3a\u4f8b) mkdir raft-nodes tar -zxvf example_bitxhub_v1.6.2.tar.gz -C raft-nodes/ # 3. \u5c06bitxhub\u3001\u5171\u8bc6\u63d2\u4ef6\u4e8c\u8fdb\u5236\u548c\u4f9d\u8d56\u5e93\u6587\u4ef6\u5206\u522b\u62f7\u8d1d\u52304\u4e2a\u8282\u70b9\u7684\u914d\u7f6e\u76ee\u5f55\uff08\u4ee5node1\u4e3a\u4f8b\uff09 cp bitxhub raft-nodes/node1/ cp libwasmer.dylib raft-nodes/node1/ cp raft.so raft-nodes/node1/plugins/ # \u6ce8\u610f\u26a0\ufe0f\uff1a\u8282\u70b92\u30013\u30014\u4e5f\u9700\u8981\u6267\u884c\u4e0a\u9762\u62f7\u8d1d\u64cd\u4f5c\uff0c\u5bf9\u4e8eLinux\u7cfb\u7edf\u4f9d\u8d56\u5e93\u6587\u4ef6\u662flibwasmer.so # \u4ee5\u4e0a\u64cd\u4f5c\u5747\u662f\u793a\u4f8b\uff0c\u6267\u884c\u65f6\u4e8c\u8fdb\u5236\u548c\u914d\u7f6e\u6587\u4ef6\u538b\u7f29\u5305\u7684\u540d\u79f0\u53ef\u80fd\u5b58\u5728\u5dee\u5f02\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574 \u62f7\u8d1d\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u8fdb\u5165\u5404\u4e2a\u8282\u70b9\u7684\u914d\u7f6e\u76ee\u5f55\uff0c\u4f9d\u6b21\u542f\u52a8BitXHub\u8282\u70b9\u5373\u53ef\uff0c\u542f\u52a8\u64cd\u4f5c\u5982\u4e0b\uff1a cd bitxhub/raft-nodes/node1 export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd) ./bitxhub --repo ./ start ... ... cd bitxhub/raft-nodes/node4 export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd) ./bitxhub --repo ./ start \u5f85\u8282\u70b9\u96c6\u7fa4\u6253\u5370\u51fabitxhub\u7684LOGO\uff0c\u8868\u793aBitXHub\u96c6\u7fa4\u5f00\u59cb\u6b63\u5e38\u5de5\u4f5c","title":"\u5feb\u901f\u542f\u52a8BitXHub\u8282\u70b9"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/#bitxhub_1","text":"\u524d\u9762\u7684\u63d0\u4f9b\u7684\u914d\u7f6e\u793a\u4f8b\u53ef\u4ee5\u65b9\u4fbf\u5730\u5feb\u901f\u542f\u52a8BitXHub\u8282\u70b9(\u96c6\u7fa4)\uff0c\u4f46\u662f\u6ca1\u6709\u5bf9\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u5177\u4f53\u8bf4\u660e\uff0c\u8003\u8651\u5230\u60a8\u53ef\u80fd\u9700\u8981\u8be6\u7ec6\u4e86\u89e3bitxhub\u7684\u8fd0\u884c\u539f\u7406\u548c\u914d\u7f6e\u9879\u7684\u5177\u4f53\u542b\u4e49\uff0c\u4ece\u800c\u53ef\u4ee5\u7075\u6d3b\u914d\u7f6e\u548c\u542f\u52a8\u8282\u70b9\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u5bf9BitXHub\u7684\u5177\u4f53\u914d\u7f6e\u9879\u8fdb\u884c\u8bf4\u660e\u3002 \u4e2d\u7ee7\u94fe\u8282\u70b9\u4e3b\u8981\u5305\u62ecbitxhub.toml\u3001network.tom\u548corder.toml\u914d\u7f6e\u6587\u4ef6\uff0c\u5206\u522b\u4ee3\u8868\u8282\u70b9\u672c\u8eab\u3001\u8282\u70b9\u7f51\u7edc\u4ee5\u53ca\u8282\u70b9\u5171\u8bc6\u65b9\u9762\u7684\u914d\u7f6e\uff0c\u5176\u4e2dorder.toml\u4e00\u822c\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef\uff0c\u5176\u5b83\u4e24\u4e2a\u6587\u4ef6\u5747\u9700\u8981\u6839\u636e\u5b9e\u9645\u90e8\u7f72\u60c5\u51b5\u8fdb\u884c\u4fee\u6539\uff0c\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u4f9d\u7136\u4ee5node1\u4e3a\u4f8b\u3002","title":"BitXHub\u914d\u7f6e\u6587\u4ef6\u8bf4\u660e"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/#bitxhubtoml","text":"bitxhub.toml\u6587\u4ef6\u662fBitXHub\u8282\u70b9\u542f\u52a8\u7684\u4e3b\u8981\u914d\u7f6e\u6587\u4ef6\u3002\u5404\u914d\u7f6e\u9879\u8bf4\u660e\u5982\u4e0b\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e solo \u662f\u5426\u6309\u7167\u5355\u8282\u70b9\u6a21\u5f0f\u542f\u52a8BitXHub [port] gateway\u3001grpc\u3001pprof\u548cmonitor\u670d\u52a1\u7aef\u53e3 [pprof] \u6027\u80fd\u5256\u6790\u914d\u7f6e [monitor] \u76d1\u63a7\u670d\u52a1\u914d\u7f6e [gateway] \u8de8\u57df\u914d\u7f6e [ping] ping\u96c6\u7fa4\u8282\u70b9\u529f\u80fd [security] \u8bc1\u4e66\u4f53\u7cfb [limiter] \u6d41\u91cf\u63a7\u5236\u914d\u7f6e [log] \u65e5\u5fd7\u8f93\u51fa\u76f8\u5173\u8bbe\u7f6e [cert] \u662f\u5426\u5f00\u542f\u8ba4\u8bc1\u8282\u70b9p2p\u901a\u4fe1\u8bc1\u4e66 [order] \u5171\u8bc6\u6a21\u5757\uff0c\u4f5c\u4e3a\u63d2\u4ef6\u8fdb\u884c\u52a0\u8f7d [executor] \u6267\u884c\u5f15\u64ce\u7c7b\u578b [genesis] \u521b\u4e16\u8282\u70b9\u914d\u7f6e \u5728\u5feb\u901f\u4f53\u9a8c\u90e8\u7f72\u6d41\u7a0b\u4e2d\uff0c\u9700\u8981\u4fee\u6539\u7684\u914d\u7f6e\u4e00\u822c\u53ea\u6709port\u3001order\u7684\u4fe1\u606f\uff0c\u5176\u5b83\u914d\u7f6e\u9ed8\u8ba4\u5373\u53ef\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\u53c2\u8003 \u6839\u636e\u60a8\u673a\u5668\u5b9e\u9645\u5206\u914d\u7684\u7aef\u53e3\u8fdb\u884c\u53d8\u66f4\uff1a [ port ] gateway = 9091 grpc = 60011 pprof = 53121 monitor = 40011 \u5171\u8bc6\u7b97\u6cd5\u7c7b\u578b\u9009\u62e9\uff08\u5f00\u6e90\u7248\u672c\u76ee\u524d\u652f\u6301raft\u548csolo\uff09\uff1a [ order ] plugin = \"plugins/raft.so\"","title":"bitxhub.toml\u6587\u4ef6\u914d\u7f6e\u4fee\u6539"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/#networktoml","text":"network.toml\u6587\u4ef6\u662fBitXHub\u8282\u70b9\u7f51\u7edc\u914d\u7f6e\u6587\u4ef6\uff0c\u5404\u914d\u7f6e\u9879\u8bf4\u660e\u5982\u4e0b\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e N \u96c6\u7fa4\u8282\u70b9\u6570\u91cf id \u5f53\u524d\u8282\u70b9\u6807\u8bc6 new \u5224\u65ad\u5f53\u524d\u8282\u70b9\u662f\u65b0\u52a0\u5165\u7684\u8282\u70b9 [nodes] \u96c6\u7fa4\u8282\u70b9\u4fe1\u606f account \u8282\u70b9\u9a8c\u8bc1\u8005\u5730\u5740 hosts \u8282\u70b9\u7f51\u7edc\u5730\u5740 id \u8282\u70b9\u6807\u8bc6 pid p2p\u7f51\u7edc\u552f\u4e00\u6807\u8bc6 \u5728\u5b9e\u9645\u90e8\u7f72\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u4fee\u6539\u7684\u914d\u7f6e\u4e00\u822c\u662f\u8282\u70b9\u6570\u91cf\u3001nodes\u7684\u4fe1\u606f\uff0c\u5176\u5b83\u914d\u7f6e\u9ed8\u8ba4\u5373\u53ef\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\u53c2\u8003 \u914d\u7f6e\u5f53\u524d\u8282\u70b9\u96c6\u7fa4\u7684\u6570\u91cf\u4ee5\u53ca\u81ea\u8eab\u7684id: id = 1 # self id n = 4 # the number of vp nodes new = false # track whether the node is a new node \u914d\u7f6e\u96c6\u7fa4\u4e2d\u5404\u4e2a\u8282\u70b9\u7684\u4fe1\u606f [[ nodes ]] account = \"0xc7F999b83Af6DF9e67d0a37Ee7e900bF38b3D013\" hosts = [ \"/ip4/127.0.0.1/tcp/4001/p2p/\" ] id = 1 pid = \"QmXi58fp9ZczF3Z5iz1yXAez3Hy5NYo1R8STHWKEM9XnTL\" \u8bf4\u660e\uff1a\u4e0a\u9762 account\u5c31\u662f\u4e0a\u4e00\u8282\u4e2dbitxhub\u8282\u70b9\u7684address\u5730\u5740\uff0chosts\u4e2d\u4e00\u822c\u5c31\u6539\u53d8ip\u5730\u5740\u5373\u53ef\uff0c\u8282\u70b9\u7684pid\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\uff1a . / bitxhub cert priv pid -- path . / node1 / key . priv # \u793a\u4f8b\u8f93\u51fa \uff1a QmWAaFDQ3p2Hj383WsBGU2nLMtsJk1aT9obXXXxL5UyUuA","title":"network.toml\u6587\u4ef6\u914d\u7f6e\u4fee\u6539"},{"location":"bitxhub/usage/single_bitxhub/deploy_bitxhub/#ordertoml","text":"order.toml\u6587\u4ef6\u662fbitxhub\u5171\u8bc6\u914d\u7f6e\u6587\u4ef6\u3002\u5404\u914d\u7f6e\u9879\u8bf4\u660e\u5982\u4e0b\uff1a \u914d\u7f6e\u9879 \u8bf4\u660e [raft] raft \u76f8\u5173\u914d\u7f6e [rbft] rbft \u76f8\u5173\u914d\u7f6e [solo] solo\u76f8\u5173\u914d\u7f6e \u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff08\u65e0\u7279\u6b8a\u60c5\u51b5\u4e0d\u8981\u4fee\u6539\u6b64\u914d\u7f6e\uff09\uff1a [ raft ] batch_timeout = \"0.3s\" # Block packaging time period . tick_timeout = \"0.1s\" # TickTimeout is the internal logical clock for the Node by a single tick , Election timeouts and heartbeat timeouts are in units of ticks . election_tick = 10 # ElectionTick is the number of Node . Tick invocations that must pass between elections . heartbeat_tick = 1 # HeartbeatTick is the number of Node . Tick invocations that must pass between heartbeats . max_size_per_msg = 1048576 # 1024 * 1024 , MaxSizePerMsg limits the max size of each append message . max_inflight_msgs = 500 # MaxInflightMsgs limits the max number of in - flight append messages during optimistic replication phase . check_quorum = true # Leader steps down when quorum is not active for an electionTimeout . pre_vote = true # PreVote prevents reconnected node from disturbing network . disable_proposal_forwarding = true # This prevents blocks from being accidentally proposed by followers . [ raft . mempool ] batch_size = 200 # How many transactions should the primary pack . pool_size = 50000 # How many transactions could the txPool stores in total . tx_slice_size = 10 # How many transactions should the node broadcast at once tx_slice_timeout = \"0.1s\" # Node broadcasts transactions if there are cached transactions , although set_size isn 't reached yet [raft.syncer] sync_blocks = 1 # How many blocks should the behind node fetch at once snapshot_count = 1000 # How many apply index(blocks) should the node trigger at once [rbft] #RBFT configurations set_size = 25 # How many transactions should the node broadcast at once batch_size = 500 # How many transactions should the primary pack before sending pre-prepare pool_size = 50000 # How many transactions could the txPool stores in total vc_period = 0 # After how many checkpoint periods( Blocks = 10 * vcperiod ) the primary gets cycled automatically. ( Set 0 to disable ) check_interval = \"3m\" # interval of the check loop tolerance_time = \"5m\" # The max tolerance time duration (in seconds) of out-of-date batch_mem_limit = false # Indicates whether limit batch mem size or not batch_max_mem = 10000 # The max memory size of one batch [rbft.timeout] sync_state = \"3s\" # How long to wait quorum sync state response sync_interval = \"1m\" # How long to restart sync state process recovery = \"15s\" # How long to wait before recovery finished(This is for release1.2) first_request = \"30s\" # How long to wait before first request should come batch = \"0.5s\"# Primary send a pre-prepare if there are pending requests, although batchsize isn' t reached yet , request = \"6s\" # How long may a request ( transaction batch ) take between reception and execution , must be greater than the batch timeout null_request = \"9s\" # Primary send it to inform aliveness , must be greater than request timeout viewchange = \"8s\" # How long may a view change take resend_viewchange = \"10s\" # How long to wait for a view change quorum before resending ( the same ) view change clean_viewchange = \"60s\" # How long to clean out - of - data view change message update = \"4s\" # How long may a update - n take set = \"0.1s\" # Node broadcasts transactions if there are cached transactions , although set_size isn 't reached yet [rbft.syncer] sync_blocks = 1 # How many blocks should the behind node fetch at once [solo] batch_timeout = \"0.3s\" # Block packaging time period. [solo.mempool] batch_size = 200 # How many transactions should the primary pack. pool_size = 50000 # How many transactions could the txPool stores in total. tx_slice_size = 10 # How many transactions should the node broadcast at once tx_slice_timeout = \"0.1s\" # Node broadcasts transactions if there are cached transactions, although set_size isn' t reached yet","title":"order.toml\u6587\u4ef6\u914d\u7f6e\u4fee\u6539"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/","text":"\u8de8\u94fe\u7f51\u5173\u90e8\u7f72 \u8de8\u94fe\u7f51\u5173Pier\u80fd\u591f\u652f\u6301\u4e1a\u52a1\u6240\u5728\u533a\u5757\u94fe\uff08\u4ee5\u4e0b\u7b80\u79f0 \u5e94\u7528\u94fe\uff09\u4fbf\u6377\u3001\u5feb\u901f\u7684\u63a5\u5165\u5230\u8de8\u94fe\u5e73\u53f0BitXHub\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u548c\u5176\u4ed6\u4e1a\u52a1\u533a\u5757\u94fe\u7684\u8de8\u94fe\u64cd\u4f5c\u3002\u76ee\u524d\u4e2d\u7ee7\u94fe\u548c\u8de8\u94fe\u7f51\u5173\u5df2\u7ecf\u652f\u6301 Fabric \u3001 Ethereum \u3001 BCOS \u3001 CITA \u548c Hyperchain \u4e94\u79cd\u5e94\u7528\u94fe\u63a5\u5165\u5e76\u5b8c\u6210\u8de8\u94fe\u4ea4\u6613\uff0c\u5982\u679c\u60a8\u6709\u5174\u8da3\uff0c\u4e5f\u53ef\u4ee5\u53c2\u4e0e\u5f00\u53d1\u9002\u914d\u53e6\u5916\u79cd\u7c7b\u5e94\u7528\u94fe\u7684\u63d2\u4ef6\u548c\u5408\u7ea6\u3002 \u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u9700\u8981\u63d0\u524d\u786e\u5b9a\u5e94\u7528\u94fe\u7c7b\u578b\uff08\u5bf9\u5e94\u4e0d\u540c\u7684\u63d2\u4ef6\u548c\u914d\u7f6e\uff09\uff0c\u4e5f\u9700\u8981\u63d0\u524d\u5728\u5bf9\u5e94\u7684\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\uff0c\u6211\u4eec\u5c06\u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u4f9d\u6b21\u5206\u4e3a\u5982\u4e0b\u4e94\u4e2a\u6b65\u9aa4\uff1a \u90e8\u7f72\u8de8\u94fe\u5408\u7ea6 \u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u914d\u7f6e \u6ce8\u518c\u5e94\u7528\u94fe\u4fe1\u606f \u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219 \u542f\u52a8\u8de8\u94fe\u7f51\u5173 \u90e8\u7f72\u8de8\u94fe\u5408\u7ea6 \u8fd9\u4e00\u7ae0\u662f\u8981\u5728\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\uff0c \u6ce8\u610f\uff1a\u5728\u6b64\u64cd\u4f5c\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u786e\u8ba4\u5df2\u7ecf\u90e8\u7f72\u6709\u53ef\u63a5\u5165\u7684\u5e94\u7528\u94fe \u3002 \u6211\u4eec\u63d0\u4f9b\u4e86\u9488\u5bf9\u4e0d\u540c\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u5408\u7ea6\uff0cbroker\u5408\u7ea6\u662f\u7ba1\u7406\u5408\u7ea6\uff0ctransfer\u5408\u7ea6\u662f\u4e1a\u52a1\u4ea4\u6613\u5408\u7ea6\uff0c\u9700\u8981\u8bf4\u660e\u7684\u662f transfer\u5408\u7ea6\u9700\u8981\u7ecf\u8fc7broker\u5408\u7ea6\u5ba1\u6838\u901a\u8fc7\u540e\u624d\u80fd\u53d1\u8d77\u6216\u63a5\u53d7\u8de8\u94fe\u4ea4\u6613\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\uff1a\u8c03\u7528broker\u5408\u7ea6\u7684audit\u65b9\u6cd5\uff0c\u5176\u53c2\u6570\u4f9d\u6b21\u662f\u4e1a\u52a1\u5408\u7ea6\u5730\u5740\u548c\u5408\u7ea6\u72b6\u6001\uff08\u6570\u5b571\u8868\u793a\u5ba1\u6838\u901a\u8fc7\uff0c\u6570\u5b572\u8868\u793a\u5ba1\u6838\u5931\u8d25\uff09\u3002 \u4e0b\u9762\u4ee5Ethereum\u548cFabric\u4e3a\u4f8b\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5176\u5b83\u7c7b\u578b\u7684\u5e94\u7528\u94fe\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u7684\u6b65\u9aa4\u57fa\u672c\u4e0a\u662f\u4e00\u81f4\u7684\u3002 Ethereum \u5728Ethereum\u4e0a\u90e8\u7f72\u5408\u7ea6\u7684\u5de5\u5177\u6709\u5f88\u591a\uff0c\u60a8\u53ef\u4ee5\u4f7f Remix \u8fdb\u884c\u5408\u7ea6\u7684\u7f16\u8bd1\u548c\u90e8\u7f72\uff0c\u8fd9\u91cc\u5173\u952e\u7684\u662f\u8de8\u94fe\u5408\u7ea6\u7684\u83b7\u53d6\u3002\u53ef\u4ee5\u4e0b\u8f7dpier-client-ethereum\u9879\u76ee\uff1a git clone https://github.com/meshplus/pier-client-ethereum.git && git checkout v1.6.2 \u8bf4\u660e\uff1a 1. \u5408\u7ea6\u6587\u4ef6\u5c31\u5728\u9879\u76ee\u7684example\u76ee\u5f55\u4e0b\uff0cbroker.sol\u662f\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\uff0ctransfer.sol\u662f\u793a\u4f8b\u4e1a\u52a1\u5408\u7ea6\uff1b 2. \u9996\u5148\u90e8\u7f72broker\u5408\u7ea6\uff0c\u7136\u540e\u5c06\u8fd4\u56de\u7684\u5408\u7ea6\u5730\u5740\u586b\u5165transfer\u5408\u7ea6\u4e2d\u7684 BrokerAddr \u5b57\u6bb5\uff0c\u8fd9\u6837\u4e1a\u52a1\u5408\u7ea6\u624d\u80fd\u6b63\u786e\u8de8\u94fe\u8c03\u7528\u3002 Fabric \u5728Fabric\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u5de5\u5177\u4e00\u822c\u662ffabric-cli\uff08\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u9879\u76ee\u7684\u4f7f\u7528\u8bf4\u660e \uff09\uff0c \u5728Fabric\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u7684\u8fc7\u7a0b\u548c\u90e8\u7f72\u5176\u5b83\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u53ea\u662f\u5408\u7ea6\u540d\u79f0\u548c\u4ee3\u7801\u6587\u4ef6\u9700\u8981\u66ff\u6362\uff0c\u4ee5\u4e0b\u64cd\u4f5c\u7684\u547d\u4ee4\u53ef\u4f9b\u53c2\u8003\uff0c\u9ed8\u8ba4\u5e94\u7528\u94fe\u662f\u4f7f\u7528\u7684fabric-sample\u9879\u76ee\u7684v1.4.3\u7248\u672c\u90e8\u7f72\u3002 Step1: \u5b89\u88c5\u90e8\u7f72\u5408\u7ea6\u7684\u5de5\u5177fabric-cli go get github.com/securekey/fabric-examples/fabric-cli/cmd/fabric-cli Step2: \u83b7\u53d6\u9700\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u6587\u4ef6\u5e76\u89e3\u538b git clone https://github.com/meshplus/pier-client-ethereum.git && git checkout v1.6.2 # \u9700\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u6587\u4ef6\u5c31\u5728example\u76ee\u5f55\u4e0b #\u89e3\u538b\u5373\u53ef unzip -q contracts.zip Step3: \u90e8\u7f72broker\u3001transfer\u5408\u7ea6 #\u5b89\u88c5\u548c\u793a\u4f8b\u5316broker\u5408\u7ea6 fabric-cli chaincode install --gopath ./contracts --ccp broker --ccid broker --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel fabric-cli chaincode instantiate --ccp broker --ccid broker --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel #\u5b89\u88c5\u548c\u793a\u4f8b\u5316transfer\u5408\u7ea6 fabric-cli chaincode install --gopath ./contracts --ccp transfer --ccid transfer --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel fabric-cli chaincode instantiate --ccp transfer --ccid transfer --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel #\u4e1a\u52a1\u5408\u7ea6\u9700\u8981broker\u7ba1\u7406\u5408\u7ea6\u5ba1\u8ba1\u540e\uff0c\u624d\u80fd\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613 fabric-cli chaincode invoke --cid mychannel --ccid=broker \\ --args='{\"Func\":\"audit\", \"Args\":[\"mychannel\", \"transfer\", \"1\"]}' \\ --user Admin --orgid org2 --payload --config \"${CONFIG_YAML}\" \u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u914d\u7f6e \u8fd9\u4e00\u7ae0\u662f\u8981\u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u7684\u914d\u7f6e\uff0c\u4e3a\u542f\u52a8pier\u8282\u70b9\u4f5c\u51c6\u5907\uff0c\u4e3b\u8981\u5206\u4e3apier\u672c\u8eab\u548c\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e\u4fee\u6539\u3002\u53ef\u4ee5\u901a\u8fc7\u6e90\u7801\u7f16\u8bd1\u548c\u4e8c\u8fdb\u5236\u4e0b\u8f7d\u7684\u65b9\u5f0f\u83b7\u53d6\u90e8\u7f72\u5305\u3002 \u83b7\u53d6\u90e8\u7f72\u5305 Ethereum \u6e90\u7801\u4e0b\u8f7d\u7f16\u8bd1 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier && git checkout v1.6.2 make prepare && make build # \u7f16\u8bd1Ethereum \u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-ethereum.git cd pier-client-ethereum && git checkout v1.6.2 make eth # \u8bf4\u660e\uff1a1.ethereum\u63d2\u4ef6\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u63d2\u4ef6\u9879\u76ee\u7684build\u76ee\u5f55\u751f\u6210eth-client\u6587\u4ef6\uff1b 2.pier\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u9879\u76eebin\u76ee\u5f55\u751f\u6210\u540c\u540d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u9700\u8981\u5c06\u5b83\u62f7\u8d1d\u5230\u914d\u7f6e\u4e3b\u76ee\u5f55\u65b9\u4fbf\u540e\u7eed\u6267\u884c\u3002 \u4e8c\u8fdb\u5236\u4e0b\u8f7d \u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dPier\u53ca\u5176\u63d2\u4ef6\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a Pier\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u548c ethereum\u63d2\u4ef6\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u548c\u4e0b\u8f7d\u5373\u53ef\u3002 Fabric \u6e90\u7801\u4e0b\u8f7d\u7f16\u8bd1 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier && git checkout v1.6.2 make prepare && make build # \u7f16\u8bd1Fabric\u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-fabric.git cd pier-client-fabric && git checkout v1.6.2 make fabric1.4 # \u8bf4\u660e\uff1a1.fabric\u63d2\u4ef6\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u63d2\u4ef6\u9879\u76ee\u7684build\u76ee\u5f55\u751f\u6210fabric-client-1.4\u6587 \u4ef6\uff1b 2.pier\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u9879\u76eebin\u76ee\u5f55\u751f\u6210\u540c\u540d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u9700\u8981\u5c06\u5b83\u62f7\u8d1d\u5230\u914d\u7f6e\u4e3b\u76ee\u5f55\u65b9\u4fbf\u540e\u7eed\u6267\u884c\u3002 \u4e8c\u8fdb\u5236\u4e0b\u8f7d \u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dPier\u53ca\u5176\u63d2\u4ef6\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a Pier\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u548c fabric\u63d2\u4ef6\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u548c\u4e0b\u8f7d\u5373\u53ef\u3002 \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u76f8\u4fe1\u60a8\u5df2\u7ecf\u7f16\u8bd1\u51fa\u4e86\u90e8\u7f72Pier\u548cfabric/ethereum\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0cPier\u8282\u70b9\u8fd0\u884c\u8fd8\u9700\u8981\u5916\u90e8\u4f9d\u8d56\u5e93\uff0c\u5747\u5728\u9879\u76eebuild\u76ee\u5f55\u4e0b\uff08Macos\u4f7f\u7528libwasmer.dylib\uff0cLinux\u4f7f\u7528libwasmer.so\uff09,\u5efa\u8bae\u5c06\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u548c\u9002\u914d\u7684\u4f9d\u8d56\u5e93\u6587\u4ef6\u62f7\u8d1d\u5230\u540c\u4e00\u76ee\u5f55\uff0c\u7136\u540e\u4f7f\u7528 export LD_LIBRARY_PATH=$(pwd) \u547d\u4ee4\u6307\u5b9a\u4f9d\u8d56\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u64cd\u4f5c\u3002 \u4fee\u6539Pier\u81ea\u8eab\u7684\u914d\u7f6e \u5728\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u3001\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u7b49\u6b65\u9aa4\u4e4b\u524d\uff0c\u9700\u8981\u521d\u59cb\u5316\u8de8\u94fe\u7f51\u5173\u7684\u914d\u7f6e\u76ee\u5f55\uff0c\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b\uff1a ./pier --repo=~/.pier init \u8be5\u547d\u4ee4\u4f1a\u751f\u6210\u8de8\u94fe\u7f51\u5173\u7684\u4e00\u4e9b\u57fa\u7840\u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c\u4f7f\u7528 tree \u547d\u4ee4\u53ef\u67e5\u770b\u76ee\u5f55\u4fe1\u606f\uff1a tree -L 1 ~/.pier \u251c\u2500\u2500 api \u251c\u2500\u2500 certs \u251c\u2500\u2500 key.json \u251c\u2500\u2500 node.priv \u2514\u2500\u2500 pier.toml 1 directory, 4 files pier.toml\u662f\u63cf\u8ff0\u94fe\u8de8\u94fe\u7f51\u5173\u542f\u52a8\u7684\u4e3b\u8981\u914d\u7f6e\uff0c\u4e00\u822c\u9700\u8981\u4fee\u6539\u7684\u662f\u7aef\u53e3\u4fe1\u606f\u3001\u4e2d\u7ee7\u94fe\u7684\u4fe1\u606f\u3001\u5e94\u7528\u94fe\u7684\u4fe1\u606f\u3002 \u4fee\u6539\u7aef\u53e3\u4fe1\u606f [port] # \u5982\u679c\u4e0d\u51b2\u7a81\u7684\u8bdd\uff0c\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539 http = 44544 pprof = 44555 \u4fee\u6539\u4e2d\u7ee7\u94fe\u4fe1\u606f\uff08\u4e00\u822c\u53ea\u4fee\u6539addrs\u5b57\u6bb5\uff0c\u6307\u5b9abitxhub\u7684\u8282\u70b9\u5730\u5740\uff09 [mode] type = \"relay\" # relay or direct [mode.relay] addrs = [\"localhost:60011\", \"localhost:60012\", \"localhost:60013\", \"localhost:60014\"] quorum = 2 validators = [ \"0x000f1a7a08ccc48e5d30f80850cf1cf283aa3abd\", \"0xe93b92f1da08f925bdee44e91e7768380ae83307\", \"0xb18c8575e3284e79b92100025a31378feb8100d6\", \"0x856E2B9A5FA82FD1B031D1FF6863864DBAC7995D\", ] \u4fee\u6539\u5e94\u7528\u94fe\u4fe1\u606f\uff08\u9488\u5bf9\u4e0d\u540c\u5e94\u7528\u94fe\u7c7b\u578b\u8fdb\u884c\u914d\u7f6e\uff09 Ethereum [appchain] # ethereum\u63d2\u4ef6\u6587\u4ef6\u7684\u540d\u79f0 plugin = \"eth-client\" # ethereum\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"ether\" Fabric [appchain] # fabric\u63d2\u4ef6\u6587\u4ef6\u7684\u540d\u79f0 plugin = \"fabric-client-1.4\" # ethereum\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"fabric\" \u4fee\u6539\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e \u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e\u76ee\u5f55\u5373\u662fpier.toml\u4e2d\u7684config\u5b57\u6bb5\uff0c\u5b83\u7684\u6a21\u677f\u5728 pier-client-ethereum \u6216 pier-client-ethereum \u9879\u76ee\uff08\u4e4b\u524d\u62c9\u53d6\u8de8\u94fe\u5408\u7ea6\u65f6\u5df2\u7ecfclone\uff09\uff0c\u76f4\u63a5\u5728GitHub\u4e0a\u4e0b\u8f7d\u4ee3\u7801\u5373\u53ef Ethereum # \u5c06ethereum\u63d2\u4ef6\u62f7\u8d1d\u5230plugins\u76ee\u5f55\u4e0b cp ether-client ~/.pier/plugins/ # \u5207\u6362\u5230pier-client-ethereum\u9879\u76ee\u8def\u5f84\u4e0b cd pier-client-ethereum cp ./config $HOME /.pier/ether \u5176\u4e2d\u91cd\u8981\u914d\u7f6e\u5982\u4e0b\uff1a \u251c\u2500\u2500 account.key \u251c\u2500\u2500 broker.abi \u251c\u2500\u2500 ether.validators \u251c\u2500\u2500 ethereum.toml \u251c\u2500\u2500 password \u2514\u2500\u2500 validating.wasm \u8bf4\u660e \uff1aaccount.key\u548cpassword\u5efa\u8bae\u6362\u6210\u5e94\u7528\u94fe\u4e0a\u7684\u771f\u5b9e\u8d26\u6237\uff0c\u4e14\u987b\u4fdd\u8bc1\u6709\u4e00\u5b9a\u91d1\u989d\uff08ethereum\u4e0a\u8c03\u7528\u5408\u7ea6\u9700\u8981gas\u8d39\uff09\uff0cbroker.abi\u53ef\u4ee5\u4f7f\u7528\u793a\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u60a8\u81ea\u5df1\u7f16\u8bd1/\u90e8\u7f72broker\u5408\u7ea6\u65f6\u8fd4\u56de\u7684abi\uff0cether.validators\u548cvalidating.wasm\u4e00\u822c\u4e0d\u9700\u8981\u4fee\u6539\u3002ethereum.toml\u662f\u9700\u8981\u91cd\u70b9\u4fee\u6539\u7684\uff0c\u9700\u8981\u6839\u636e\u5e94\u7528\u94fe\u5b9e\u9645\u60c5\u51b5\u586b\u5199ethereum\u7f51\u7edc\u5730\u5740\u3001broker\u5408\u7ea6\u5730\u5740\u53caabi\uff0c\u8d26\u6237\u7684key\u7b49\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a [ether] addr = \"wss://kovan.infura.io/ws/v3/cc512c8c74c94938aef1c833e1b50b9a\" name = \"ether-kovan\" ## \u6b64\u5904\u5408\u7ea6\u5730\u5740\u9700\u8981\u66ff\u6362\u6210\u53d8\u91cf\u4ee3\u8868\u7684\u5b9e\u9645\u5b57\u7b26\u4e32 contract_address = \"$brokerAddr-kovan\" abi_path = \"broker.abi\" key_path = \"account.key\" password = \"password\" Fabric # \u5c06fabric\u63d2\u4ef6\u62f7\u8d1d\u5230plugins\u76ee\u5f55\u4e0b cp fabric-client-1.4 ~/.pier/plugins/ # \u5207\u6362\u5230pier-client-fabric\u9879\u76ee\u8def\u5f84\u4e0b cd pier-client-fabric cp ./config $HOME /.pier/fabric \u5176\u4e2d\u91cd\u8981\u914d\u7f6e\u5982\u4e0b\uff1a \u251c\u2500\u2500 crypto-config/ \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 fabric.toml \u251c\u2500\u2500 fabric.validators \u2514\u2500\u2500 validating.wasm \u63a5\u4e0b\u6765\u4e3b\u8981\u4fee\u6539Fabric\u7f51\u7edc\u914d\u7f6e\uff0c\u9a8c\u8bc1\u8bc1\u4e66\uff0c\u8de8\u94fe\u5408\u7ea6\u8bbe\u7f6e\uff1a fabric\u8bc1\u4e66\u914d\u7f6e \u542f\u52a8Fabric\u7f51\u7edc\u65f6\uff0c\u4f1a\u751f\u6210\u6240\u6709\u8282\u70b9\uff08\u5305\u62ecOrder\u3001peer\u7b49\uff09\u7684\u8bc1\u4e66\u4fe1\u606f\uff0c\u5e76\u4fdd\u5b58\u5728 crypto-config\u6587\u4ef6\u5939\u4e2d\uff0cFabric\u63d2\u4ef6\u548cFabric\u4ea4\u4e92\u65f6\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u8bc1\u4e66\u3002 # \u590d\u5236\u60a8\u6240\u90e8\u7f72\u7684Fabric\u6240\u4ea7\u751f\u7684crypto-config\u6587\u4ef6\u5939 cp -r /path/to/crypto-config $HOME/.pier/fabric/ # \u590d\u5236Fabric\u4e0a\u9a8c\u8bc1\u4eba\u8bc1\u4e66 cp $HOME/.pier/fabric/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/signcerts/peer1.org2.example.com-cert.pem $HOME/.pier/fabric/fabric.validators 2. \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6config.yaml config.yaml \u6587\u4ef6\u8bb0\u5f55\u7684Fabric\u7f51\u7edc\u914d\u7f6e\uff08\u7528\u60a8\u7684\u7f51\u7edc\u62d3\u6251\u914d\u7f6e\u6587\u4ef6\u66ff\u6362\u8fd9\u4e2a\u6837\u4f8b\u6587\u4ef6\uff09\uff0c\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u628a\u6240\u6709\u7684\u8def\u5f84\u90fd\u4fee\u6539\u4e3a crypto-config \u6587\u4ef6\u5939\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\u3002 {CONFIG_PATH}/fabric/crypto-config =>\uff5e/.pier/fabric/crypto-config # \u66ff\u6362\u4e3a\u60a8\u90e8\u7f72\u7684Fabric\u7f51\u7edc\u7684\u62d3\u6251\u8bbe\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u540c\u65f6\u9700\u8981\u4fee\u6539\u6240\u6709\u7684Fabric \u7684IP\u5730\u5740\uff0c\u5982\uff1a url: grpcs://localhost:7050 => url: grpcs://10.1.16.48:7050 3. \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6 fabric.toml \u793a\u4f8b\u662f\u4ee5\u5b98\u65b9\u90e8\u7f72\u811a\u672c\u8fdb\u884c\u914d\u7f6e\uff1a addr = \"localhost:7053\" // \u82e5Fabric\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u8be5\u4e3a\u670d\u52a1\u5668\u5730\u5740 event_filter = \"interchain-event-name\" username = \"Admin\" ccid = \"broker\" // \u82e5\u90e8\u7f72\u8de8\u94febroker\u5408\u7ea6\u540d\u5b57\u4e0d\u662fbroker\u9700\u8981\u4fee\u6539 channel_id = \"mychannel\" org = \"org2\" \u81f3\u6b64\uff0c\u5bf9\u63a5ethereum\u548cfabric\u5e94\u7528\u94fe\u7684pier\u53ca\u5176\u63d2\u4ef6\u7684\u914d\u7f6e\u5df2\u7ecf\u5b8c\u6210\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u548c\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u540e\uff0c\u518d\u542f\u52a8pier\u8282\u70b9\u3002 \u6ce8\u518c\u5e94\u7528\u94fe \u5728\u542f\u52a8\u8de8\u94fe\u7f51\u5173Pier\u4e4b\u524d\uff0c\u9700\u8981\u5148\u6ce8\u518c\u5e94\u7528\u94fe\u5e76\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5747\u662fPier\u547d\u4ee4\u884c\u53d1\u8d77\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728v1.6.0\u53ca\u4ee5\u4e0a\u7684\u7248\u672c\uff0c\u6ce8\u518c\u5e94\u7528\u94fe\u9700\u8981\u4e2d\u7ee7\u94feBitXHub\u8282\u70b9\u7ba1\u7406\u5458\u8fdb\u884c\u6295\u7968\uff0c\u6295\u7968\u901a\u8fc7\u4e4b\u540e\u624d\u80fd\u63a5\u5165\u3002\u8fd9\u4e00\u6b65Ethereum\u548cFabric\uff08\u5305\u62ec\u5176\u5b83\u7c7b\u578b\u5e94\u7528\u94fe\uff09\u7684\u6d41\u7a0b\u4e00\u6837\uff0c\u53ea\u662f\u6ce8\u518c\u4fe1\u606f\u6709\u6240\u4e0d\u540c\uff0c\u4ee5\u4e0b\u662f\u4ee5Ethereum\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff1a Pier\u547d\u4ee4\u884c\u53d1\u8d77\u5e94\u7528\u94fe\u6ce8\u518c # \u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b ./pier --repo ~/.pier appchain register --name=ethereum --type=ether --consensusType POS --validators=~/.pier1/ether/ether.validators --desc=\"ethereum appchain for test\" --version=1.0.0 # \u53d1\u8d77\u6ce8\u518c\u540e\u4f1a\u6253\u5370\u51fa\u5e94\u7528\u94feid\u548c\u63d0\u6848id appchain register successfully, chain id is 0xcb33b10104cd217aAB4b302e9BbeEd1957EDaA31, proposal id is 0xcb33b10104cd217aAB4b302e9BbeEd1957EDaA31-0 \u4e2d\u7ee7\u94fe\u8282\u70b9\u4f9d\u6b21\u6295\u7968 # \u8fdb\u5165bitxhub\u8282\u70b9\u7684\u5b89\u88c5\u76ee\u5f55\uff0c\u7528\u4e0a\u4e00\u6b65\u5f97\u5230\u7684\u63d0\u6848id\u8fdb\u884c\u6295\u7968 ./bitxhub --repo ../node1 client governance vote --id 0xcb33b10104cd217aAB4b302e9BbeEd1957EDaA31-0 --info approve --reason approve # \u6295\u7968\u5b8c\u540e\u4f1a\u6253\u5370\uff1avote successfully! # \u5982\u679c\u662f\u591a\u4e2abitxhub\u8282\u70b9\u7ec4\u6210\u7684\u96c6\u7fa4\uff0c\u4f9d\u6b21\u6307\u5b9a\u5404\u8282\u70b9\u7684\u5b89\u88c5\u76ee\u5f55\u8fdb\u884c\u6295\u7968 \u5f53BitXHub\u96c6\u7fa4\u8d85\u8fc7\u534a\u6570\u7684\u7ba1\u7406\u5458\u6295\u7968\u901a\u8fc7\u540e\uff0c\u5e94\u7528\u94fe\u6ce8\u518c\u6210\u529f\uff08\u5982\u679cBitXHub\u662fsolo\u6a21\u5f0f\uff0c\u5219\u53ea\u9700\u8981\u4e00\u7968\u540c\u610f\u5373\u53ef\uff09 \uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u67e5\u8be2\u63d0\u6848\u72b6\u6001\uff1a ./bitxhub --repo ../node1 client governance proposals --type AppchainMgr \u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219 \u5e94\u7528\u94fe\u53ea\u6709\u5728\u53ef\u7528\u72b6\u6001\u4e0b\u53ef\u4ee5\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\uff0c\u5373\u9700\u8981\u5e94\u7528\u94fe\u6ce8\u518c\u6210\u529f\u4e14\u4e2d\u7ee7\u94fe\u6295\u7968\u901a\u8fc7\u540e\u624d\u53ef\u4ee5\u8fdb\u884c\u89c4\u5219\u90e8\u7f72\u3002\u4e4b\u524d\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u9a8c\u8bc1\u89c4\u5219\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\u5728Pier\u7aef\u53d1\u8d77\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u7684\u547d\u4ee4\u3002 Ethereum #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b pier --repo ~/.pier rule deploy --path=~/.pier/ether/validating.wasm Fabric #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b pier --repo ~/.pier rule deploy --path=~/.pier/fabric/validating.wasm \u542f\u52a8\u8de8\u94fe\u7f51\u5173\u8282\u70b9 \u5728\u5b8c\u6210\u4ee5\u4e0a\u6b65\u9aa4\u4e4b\u540e\uff0c\u53ef\u4ee5\u542f\u52a8\u8de8\u94fe\u7f51\u5173\u8282\u70b9\u4e86 #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b ./pier --repo=~/.pier start \u89c2\u5bdf\u65e5\u5fd7\u4fe1\u606f\u6ca1\u6709\u62a5\u9519\u4fe1\u606f\uff0c\u53ef\u4ee5\u6b63\u5e38\u540c\u6b65\u5230\u4e2d\u7ee7\u94fe\u4e0a\u7684\u533a\u5757\u4fe1\u606f\uff0c\u5373\u8bf4\u660epier\u542f\u52a8\u6210\u529f\u3002","title":"\u8de8\u94fe\u7f51\u5173\u90e8\u7f72"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/#_1","text":"\u8de8\u94fe\u7f51\u5173Pier\u80fd\u591f\u652f\u6301\u4e1a\u52a1\u6240\u5728\u533a\u5757\u94fe\uff08\u4ee5\u4e0b\u7b80\u79f0 \u5e94\u7528\u94fe\uff09\u4fbf\u6377\u3001\u5feb\u901f\u7684\u63a5\u5165\u5230\u8de8\u94fe\u5e73\u53f0BitXHub\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u548c\u5176\u4ed6\u4e1a\u52a1\u533a\u5757\u94fe\u7684\u8de8\u94fe\u64cd\u4f5c\u3002\u76ee\u524d\u4e2d\u7ee7\u94fe\u548c\u8de8\u94fe\u7f51\u5173\u5df2\u7ecf\u652f\u6301 Fabric \u3001 Ethereum \u3001 BCOS \u3001 CITA \u548c Hyperchain \u4e94\u79cd\u5e94\u7528\u94fe\u63a5\u5165\u5e76\u5b8c\u6210\u8de8\u94fe\u4ea4\u6613\uff0c\u5982\u679c\u60a8\u6709\u5174\u8da3\uff0c\u4e5f\u53ef\u4ee5\u53c2\u4e0e\u5f00\u53d1\u9002\u914d\u53e6\u5916\u79cd\u7c7b\u5e94\u7528\u94fe\u7684\u63d2\u4ef6\u548c\u5408\u7ea6\u3002 \u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u9700\u8981\u63d0\u524d\u786e\u5b9a\u5e94\u7528\u94fe\u7c7b\u578b\uff08\u5bf9\u5e94\u4e0d\u540c\u7684\u63d2\u4ef6\u548c\u914d\u7f6e\uff09\uff0c\u4e5f\u9700\u8981\u63d0\u524d\u5728\u5bf9\u5e94\u7684\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\uff0c\u6211\u4eec\u5c06\u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u4f9d\u6b21\u5206\u4e3a\u5982\u4e0b\u4e94\u4e2a\u6b65\u9aa4\uff1a \u90e8\u7f72\u8de8\u94fe\u5408\u7ea6 \u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u914d\u7f6e \u6ce8\u518c\u5e94\u7528\u94fe\u4fe1\u606f \u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219 \u542f\u52a8\u8de8\u94fe\u7f51\u5173","title":"\u8de8\u94fe\u7f51\u5173\u90e8\u7f72"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/#_2","text":"\u8fd9\u4e00\u7ae0\u662f\u8981\u5728\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\uff0c \u6ce8\u610f\uff1a\u5728\u6b64\u64cd\u4f5c\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u786e\u8ba4\u5df2\u7ecf\u90e8\u7f72\u6709\u53ef\u63a5\u5165\u7684\u5e94\u7528\u94fe \u3002 \u6211\u4eec\u63d0\u4f9b\u4e86\u9488\u5bf9\u4e0d\u540c\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u5408\u7ea6\uff0cbroker\u5408\u7ea6\u662f\u7ba1\u7406\u5408\u7ea6\uff0ctransfer\u5408\u7ea6\u662f\u4e1a\u52a1\u4ea4\u6613\u5408\u7ea6\uff0c\u9700\u8981\u8bf4\u660e\u7684\u662f transfer\u5408\u7ea6\u9700\u8981\u7ecf\u8fc7broker\u5408\u7ea6\u5ba1\u6838\u901a\u8fc7\u540e\u624d\u80fd\u53d1\u8d77\u6216\u63a5\u53d7\u8de8\u94fe\u4ea4\u6613\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\uff1a\u8c03\u7528broker\u5408\u7ea6\u7684audit\u65b9\u6cd5\uff0c\u5176\u53c2\u6570\u4f9d\u6b21\u662f\u4e1a\u52a1\u5408\u7ea6\u5730\u5740\u548c\u5408\u7ea6\u72b6\u6001\uff08\u6570\u5b571\u8868\u793a\u5ba1\u6838\u901a\u8fc7\uff0c\u6570\u5b572\u8868\u793a\u5ba1\u6838\u5931\u8d25\uff09\u3002 \u4e0b\u9762\u4ee5Ethereum\u548cFabric\u4e3a\u4f8b\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5176\u5b83\u7c7b\u578b\u7684\u5e94\u7528\u94fe\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u7684\u6b65\u9aa4\u57fa\u672c\u4e0a\u662f\u4e00\u81f4\u7684\u3002 Ethereum \u5728Ethereum\u4e0a\u90e8\u7f72\u5408\u7ea6\u7684\u5de5\u5177\u6709\u5f88\u591a\uff0c\u60a8\u53ef\u4ee5\u4f7f Remix \u8fdb\u884c\u5408\u7ea6\u7684\u7f16\u8bd1\u548c\u90e8\u7f72\uff0c\u8fd9\u91cc\u5173\u952e\u7684\u662f\u8de8\u94fe\u5408\u7ea6\u7684\u83b7\u53d6\u3002\u53ef\u4ee5\u4e0b\u8f7dpier-client-ethereum\u9879\u76ee\uff1a git clone https://github.com/meshplus/pier-client-ethereum.git && git checkout v1.6.2 \u8bf4\u660e\uff1a 1. \u5408\u7ea6\u6587\u4ef6\u5c31\u5728\u9879\u76ee\u7684example\u76ee\u5f55\u4e0b\uff0cbroker.sol\u662f\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\uff0ctransfer.sol\u662f\u793a\u4f8b\u4e1a\u52a1\u5408\u7ea6\uff1b 2. \u9996\u5148\u90e8\u7f72broker\u5408\u7ea6\uff0c\u7136\u540e\u5c06\u8fd4\u56de\u7684\u5408\u7ea6\u5730\u5740\u586b\u5165transfer\u5408\u7ea6\u4e2d\u7684 BrokerAddr \u5b57\u6bb5\uff0c\u8fd9\u6837\u4e1a\u52a1\u5408\u7ea6\u624d\u80fd\u6b63\u786e\u8de8\u94fe\u8c03\u7528\u3002 Fabric \u5728Fabric\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u5de5\u5177\u4e00\u822c\u662ffabric-cli\uff08\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u9879\u76ee\u7684\u4f7f\u7528\u8bf4\u660e \uff09\uff0c \u5728Fabric\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u7684\u8fc7\u7a0b\u548c\u90e8\u7f72\u5176\u5b83\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u53ea\u662f\u5408\u7ea6\u540d\u79f0\u548c\u4ee3\u7801\u6587\u4ef6\u9700\u8981\u66ff\u6362\uff0c\u4ee5\u4e0b\u64cd\u4f5c\u7684\u547d\u4ee4\u53ef\u4f9b\u53c2\u8003\uff0c\u9ed8\u8ba4\u5e94\u7528\u94fe\u662f\u4f7f\u7528\u7684fabric-sample\u9879\u76ee\u7684v1.4.3\u7248\u672c\u90e8\u7f72\u3002 Step1: \u5b89\u88c5\u90e8\u7f72\u5408\u7ea6\u7684\u5de5\u5177fabric-cli go get github.com/securekey/fabric-examples/fabric-cli/cmd/fabric-cli Step2: \u83b7\u53d6\u9700\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u6587\u4ef6\u5e76\u89e3\u538b git clone https://github.com/meshplus/pier-client-ethereum.git && git checkout v1.6.2 # \u9700\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u6587\u4ef6\u5c31\u5728example\u76ee\u5f55\u4e0b #\u89e3\u538b\u5373\u53ef unzip -q contracts.zip Step3: \u90e8\u7f72broker\u3001transfer\u5408\u7ea6 #\u5b89\u88c5\u548c\u793a\u4f8b\u5316broker\u5408\u7ea6 fabric-cli chaincode install --gopath ./contracts --ccp broker --ccid broker --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel fabric-cli chaincode instantiate --ccp broker --ccid broker --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel #\u5b89\u88c5\u548c\u793a\u4f8b\u5316transfer\u5408\u7ea6 fabric-cli chaincode install --gopath ./contracts --ccp transfer --ccid transfer --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel fabric-cli chaincode instantiate --ccp transfer --ccid transfer --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel #\u4e1a\u52a1\u5408\u7ea6\u9700\u8981broker\u7ba1\u7406\u5408\u7ea6\u5ba1\u8ba1\u540e\uff0c\u624d\u80fd\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613 fabric-cli chaincode invoke --cid mychannel --ccid=broker \\ --args='{\"Func\":\"audit\", \"Args\":[\"mychannel\", \"transfer\", \"1\"]}' \\ --user Admin --orgid org2 --payload --config \"${CONFIG_YAML}\"","title":"\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/#pier","text":"\u8fd9\u4e00\u7ae0\u662f\u8981\u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u7684\u914d\u7f6e\uff0c\u4e3a\u542f\u52a8pier\u8282\u70b9\u4f5c\u51c6\u5907\uff0c\u4e3b\u8981\u5206\u4e3apier\u672c\u8eab\u548c\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e\u4fee\u6539\u3002\u53ef\u4ee5\u901a\u8fc7\u6e90\u7801\u7f16\u8bd1\u548c\u4e8c\u8fdb\u5236\u4e0b\u8f7d\u7684\u65b9\u5f0f\u83b7\u53d6\u90e8\u7f72\u5305\u3002","title":"\u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u914d\u7f6e"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/#_3","text":"Ethereum \u6e90\u7801\u4e0b\u8f7d\u7f16\u8bd1 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier && git checkout v1.6.2 make prepare && make build # \u7f16\u8bd1Ethereum \u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-ethereum.git cd pier-client-ethereum && git checkout v1.6.2 make eth # \u8bf4\u660e\uff1a1.ethereum\u63d2\u4ef6\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u63d2\u4ef6\u9879\u76ee\u7684build\u76ee\u5f55\u751f\u6210eth-client\u6587\u4ef6\uff1b 2.pier\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u9879\u76eebin\u76ee\u5f55\u751f\u6210\u540c\u540d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u9700\u8981\u5c06\u5b83\u62f7\u8d1d\u5230\u914d\u7f6e\u4e3b\u76ee\u5f55\u65b9\u4fbf\u540e\u7eed\u6267\u884c\u3002 \u4e8c\u8fdb\u5236\u4e0b\u8f7d \u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dPier\u53ca\u5176\u63d2\u4ef6\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a Pier\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u548c ethereum\u63d2\u4ef6\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u548c\u4e0b\u8f7d\u5373\u53ef\u3002 Fabric \u6e90\u7801\u4e0b\u8f7d\u7f16\u8bd1 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier && git checkout v1.6.2 make prepare && make build # \u7f16\u8bd1Fabric\u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-fabric.git cd pier-client-fabric && git checkout v1.6.2 make fabric1.4 # \u8bf4\u660e\uff1a1.fabric\u63d2\u4ef6\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u63d2\u4ef6\u9879\u76ee\u7684build\u76ee\u5f55\u751f\u6210fabric-client-1.4\u6587 \u4ef6\uff1b 2.pier\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u9879\u76eebin\u76ee\u5f55\u751f\u6210\u540c\u540d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u9700\u8981\u5c06\u5b83\u62f7\u8d1d\u5230\u914d\u7f6e\u4e3b\u76ee\u5f55\u65b9\u4fbf\u540e\u7eed\u6267\u884c\u3002 \u4e8c\u8fdb\u5236\u4e0b\u8f7d \u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dPier\u53ca\u5176\u63d2\u4ef6\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a Pier\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u548c fabric\u63d2\u4ef6\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u548c\u4e0b\u8f7d\u5373\u53ef\u3002 \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u76f8\u4fe1\u60a8\u5df2\u7ecf\u7f16\u8bd1\u51fa\u4e86\u90e8\u7f72Pier\u548cfabric/ethereum\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0cPier\u8282\u70b9\u8fd0\u884c\u8fd8\u9700\u8981\u5916\u90e8\u4f9d\u8d56\u5e93\uff0c\u5747\u5728\u9879\u76eebuild\u76ee\u5f55\u4e0b\uff08Macos\u4f7f\u7528libwasmer.dylib\uff0cLinux\u4f7f\u7528libwasmer.so\uff09,\u5efa\u8bae\u5c06\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u548c\u9002\u914d\u7684\u4f9d\u8d56\u5e93\u6587\u4ef6\u62f7\u8d1d\u5230\u540c\u4e00\u76ee\u5f55\uff0c\u7136\u540e\u4f7f\u7528 export LD_LIBRARY_PATH=$(pwd) \u547d\u4ee4\u6307\u5b9a\u4f9d\u8d56\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u64cd\u4f5c\u3002","title":"\u83b7\u53d6\u90e8\u7f72\u5305"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/#pier_1","text":"\u5728\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u3001\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u7b49\u6b65\u9aa4\u4e4b\u524d\uff0c\u9700\u8981\u521d\u59cb\u5316\u8de8\u94fe\u7f51\u5173\u7684\u914d\u7f6e\u76ee\u5f55\uff0c\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b\uff1a ./pier --repo=~/.pier init \u8be5\u547d\u4ee4\u4f1a\u751f\u6210\u8de8\u94fe\u7f51\u5173\u7684\u4e00\u4e9b\u57fa\u7840\u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c\u4f7f\u7528 tree \u547d\u4ee4\u53ef\u67e5\u770b\u76ee\u5f55\u4fe1\u606f\uff1a tree -L 1 ~/.pier \u251c\u2500\u2500 api \u251c\u2500\u2500 certs \u251c\u2500\u2500 key.json \u251c\u2500\u2500 node.priv \u2514\u2500\u2500 pier.toml 1 directory, 4 files pier.toml\u662f\u63cf\u8ff0\u94fe\u8de8\u94fe\u7f51\u5173\u542f\u52a8\u7684\u4e3b\u8981\u914d\u7f6e\uff0c\u4e00\u822c\u9700\u8981\u4fee\u6539\u7684\u662f\u7aef\u53e3\u4fe1\u606f\u3001\u4e2d\u7ee7\u94fe\u7684\u4fe1\u606f\u3001\u5e94\u7528\u94fe\u7684\u4fe1\u606f\u3002 \u4fee\u6539\u7aef\u53e3\u4fe1\u606f [port] # \u5982\u679c\u4e0d\u51b2\u7a81\u7684\u8bdd\uff0c\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539 http = 44544 pprof = 44555 \u4fee\u6539\u4e2d\u7ee7\u94fe\u4fe1\u606f\uff08\u4e00\u822c\u53ea\u4fee\u6539addrs\u5b57\u6bb5\uff0c\u6307\u5b9abitxhub\u7684\u8282\u70b9\u5730\u5740\uff09 [mode] type = \"relay\" # relay or direct [mode.relay] addrs = [\"localhost:60011\", \"localhost:60012\", \"localhost:60013\", \"localhost:60014\"] quorum = 2 validators = [ \"0x000f1a7a08ccc48e5d30f80850cf1cf283aa3abd\", \"0xe93b92f1da08f925bdee44e91e7768380ae83307\", \"0xb18c8575e3284e79b92100025a31378feb8100d6\", \"0x856E2B9A5FA82FD1B031D1FF6863864DBAC7995D\", ] \u4fee\u6539\u5e94\u7528\u94fe\u4fe1\u606f\uff08\u9488\u5bf9\u4e0d\u540c\u5e94\u7528\u94fe\u7c7b\u578b\u8fdb\u884c\u914d\u7f6e\uff09 Ethereum [appchain] # ethereum\u63d2\u4ef6\u6587\u4ef6\u7684\u540d\u79f0 plugin = \"eth-client\" # ethereum\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"ether\" Fabric [appchain] # fabric\u63d2\u4ef6\u6587\u4ef6\u7684\u540d\u79f0 plugin = \"fabric-client-1.4\" # ethereum\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"fabric\"","title":"\u4fee\u6539Pier\u81ea\u8eab\u7684\u914d\u7f6e"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/#_4","text":"\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e\u76ee\u5f55\u5373\u662fpier.toml\u4e2d\u7684config\u5b57\u6bb5\uff0c\u5b83\u7684\u6a21\u677f\u5728 pier-client-ethereum \u6216 pier-client-ethereum \u9879\u76ee\uff08\u4e4b\u524d\u62c9\u53d6\u8de8\u94fe\u5408\u7ea6\u65f6\u5df2\u7ecfclone\uff09\uff0c\u76f4\u63a5\u5728GitHub\u4e0a\u4e0b\u8f7d\u4ee3\u7801\u5373\u53ef Ethereum # \u5c06ethereum\u63d2\u4ef6\u62f7\u8d1d\u5230plugins\u76ee\u5f55\u4e0b cp ether-client ~/.pier/plugins/ # \u5207\u6362\u5230pier-client-ethereum\u9879\u76ee\u8def\u5f84\u4e0b cd pier-client-ethereum cp ./config $HOME /.pier/ether \u5176\u4e2d\u91cd\u8981\u914d\u7f6e\u5982\u4e0b\uff1a \u251c\u2500\u2500 account.key \u251c\u2500\u2500 broker.abi \u251c\u2500\u2500 ether.validators \u251c\u2500\u2500 ethereum.toml \u251c\u2500\u2500 password \u2514\u2500\u2500 validating.wasm \u8bf4\u660e \uff1aaccount.key\u548cpassword\u5efa\u8bae\u6362\u6210\u5e94\u7528\u94fe\u4e0a\u7684\u771f\u5b9e\u8d26\u6237\uff0c\u4e14\u987b\u4fdd\u8bc1\u6709\u4e00\u5b9a\u91d1\u989d\uff08ethereum\u4e0a\u8c03\u7528\u5408\u7ea6\u9700\u8981gas\u8d39\uff09\uff0cbroker.abi\u53ef\u4ee5\u4f7f\u7528\u793a\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u60a8\u81ea\u5df1\u7f16\u8bd1/\u90e8\u7f72broker\u5408\u7ea6\u65f6\u8fd4\u56de\u7684abi\uff0cether.validators\u548cvalidating.wasm\u4e00\u822c\u4e0d\u9700\u8981\u4fee\u6539\u3002ethereum.toml\u662f\u9700\u8981\u91cd\u70b9\u4fee\u6539\u7684\uff0c\u9700\u8981\u6839\u636e\u5e94\u7528\u94fe\u5b9e\u9645\u60c5\u51b5\u586b\u5199ethereum\u7f51\u7edc\u5730\u5740\u3001broker\u5408\u7ea6\u5730\u5740\u53caabi\uff0c\u8d26\u6237\u7684key\u7b49\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a [ether] addr = \"wss://kovan.infura.io/ws/v3/cc512c8c74c94938aef1c833e1b50b9a\" name = \"ether-kovan\" ## \u6b64\u5904\u5408\u7ea6\u5730\u5740\u9700\u8981\u66ff\u6362\u6210\u53d8\u91cf\u4ee3\u8868\u7684\u5b9e\u9645\u5b57\u7b26\u4e32 contract_address = \"$brokerAddr-kovan\" abi_path = \"broker.abi\" key_path = \"account.key\" password = \"password\" Fabric # \u5c06fabric\u63d2\u4ef6\u62f7\u8d1d\u5230plugins\u76ee\u5f55\u4e0b cp fabric-client-1.4 ~/.pier/plugins/ # \u5207\u6362\u5230pier-client-fabric\u9879\u76ee\u8def\u5f84\u4e0b cd pier-client-fabric cp ./config $HOME /.pier/fabric \u5176\u4e2d\u91cd\u8981\u914d\u7f6e\u5982\u4e0b\uff1a \u251c\u2500\u2500 crypto-config/ \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 fabric.toml \u251c\u2500\u2500 fabric.validators \u2514\u2500\u2500 validating.wasm \u63a5\u4e0b\u6765\u4e3b\u8981\u4fee\u6539Fabric\u7f51\u7edc\u914d\u7f6e\uff0c\u9a8c\u8bc1\u8bc1\u4e66\uff0c\u8de8\u94fe\u5408\u7ea6\u8bbe\u7f6e\uff1a fabric\u8bc1\u4e66\u914d\u7f6e \u542f\u52a8Fabric\u7f51\u7edc\u65f6\uff0c\u4f1a\u751f\u6210\u6240\u6709\u8282\u70b9\uff08\u5305\u62ecOrder\u3001peer\u7b49\uff09\u7684\u8bc1\u4e66\u4fe1\u606f\uff0c\u5e76\u4fdd\u5b58\u5728 crypto-config\u6587\u4ef6\u5939\u4e2d\uff0cFabric\u63d2\u4ef6\u548cFabric\u4ea4\u4e92\u65f6\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u8bc1\u4e66\u3002 # \u590d\u5236\u60a8\u6240\u90e8\u7f72\u7684Fabric\u6240\u4ea7\u751f\u7684crypto-config\u6587\u4ef6\u5939 cp -r /path/to/crypto-config $HOME/.pier/fabric/ # \u590d\u5236Fabric\u4e0a\u9a8c\u8bc1\u4eba\u8bc1\u4e66 cp $HOME/.pier/fabric/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/signcerts/peer1.org2.example.com-cert.pem $HOME/.pier/fabric/fabric.validators 2. \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6config.yaml config.yaml \u6587\u4ef6\u8bb0\u5f55\u7684Fabric\u7f51\u7edc\u914d\u7f6e\uff08\u7528\u60a8\u7684\u7f51\u7edc\u62d3\u6251\u914d\u7f6e\u6587\u4ef6\u66ff\u6362\u8fd9\u4e2a\u6837\u4f8b\u6587\u4ef6\uff09\uff0c\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u628a\u6240\u6709\u7684\u8def\u5f84\u90fd\u4fee\u6539\u4e3a crypto-config \u6587\u4ef6\u5939\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\u3002 {CONFIG_PATH}/fabric/crypto-config =>\uff5e/.pier/fabric/crypto-config # \u66ff\u6362\u4e3a\u60a8\u90e8\u7f72\u7684Fabric\u7f51\u7edc\u7684\u62d3\u6251\u8bbe\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u540c\u65f6\u9700\u8981\u4fee\u6539\u6240\u6709\u7684Fabric \u7684IP\u5730\u5740\uff0c\u5982\uff1a url: grpcs://localhost:7050 => url: grpcs://10.1.16.48:7050 3. \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6 fabric.toml \u793a\u4f8b\u662f\u4ee5\u5b98\u65b9\u90e8\u7f72\u811a\u672c\u8fdb\u884c\u914d\u7f6e\uff1a addr = \"localhost:7053\" // \u82e5Fabric\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u8be5\u4e3a\u670d\u52a1\u5668\u5730\u5740 event_filter = \"interchain-event-name\" username = \"Admin\" ccid = \"broker\" // \u82e5\u90e8\u7f72\u8de8\u94febroker\u5408\u7ea6\u540d\u5b57\u4e0d\u662fbroker\u9700\u8981\u4fee\u6539 channel_id = \"mychannel\" org = \"org2\" \u81f3\u6b64\uff0c\u5bf9\u63a5ethereum\u548cfabric\u5e94\u7528\u94fe\u7684pier\u53ca\u5176\u63d2\u4ef6\u7684\u914d\u7f6e\u5df2\u7ecf\u5b8c\u6210\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u548c\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u540e\uff0c\u518d\u542f\u52a8pier\u8282\u70b9\u3002","title":"\u4fee\u6539\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/#_5","text":"\u5728\u542f\u52a8\u8de8\u94fe\u7f51\u5173Pier\u4e4b\u524d\uff0c\u9700\u8981\u5148\u6ce8\u518c\u5e94\u7528\u94fe\u5e76\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5747\u662fPier\u547d\u4ee4\u884c\u53d1\u8d77\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728v1.6.0\u53ca\u4ee5\u4e0a\u7684\u7248\u672c\uff0c\u6ce8\u518c\u5e94\u7528\u94fe\u9700\u8981\u4e2d\u7ee7\u94feBitXHub\u8282\u70b9\u7ba1\u7406\u5458\u8fdb\u884c\u6295\u7968\uff0c\u6295\u7968\u901a\u8fc7\u4e4b\u540e\u624d\u80fd\u63a5\u5165\u3002\u8fd9\u4e00\u6b65Ethereum\u548cFabric\uff08\u5305\u62ec\u5176\u5b83\u7c7b\u578b\u5e94\u7528\u94fe\uff09\u7684\u6d41\u7a0b\u4e00\u6837\uff0c\u53ea\u662f\u6ce8\u518c\u4fe1\u606f\u6709\u6240\u4e0d\u540c\uff0c\u4ee5\u4e0b\u662f\u4ee5Ethereum\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff1a Pier\u547d\u4ee4\u884c\u53d1\u8d77\u5e94\u7528\u94fe\u6ce8\u518c # \u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b ./pier --repo ~/.pier appchain register --name=ethereum --type=ether --consensusType POS --validators=~/.pier1/ether/ether.validators --desc=\"ethereum appchain for test\" --version=1.0.0 # \u53d1\u8d77\u6ce8\u518c\u540e\u4f1a\u6253\u5370\u51fa\u5e94\u7528\u94feid\u548c\u63d0\u6848id appchain register successfully, chain id is 0xcb33b10104cd217aAB4b302e9BbeEd1957EDaA31, proposal id is 0xcb33b10104cd217aAB4b302e9BbeEd1957EDaA31-0 \u4e2d\u7ee7\u94fe\u8282\u70b9\u4f9d\u6b21\u6295\u7968 # \u8fdb\u5165bitxhub\u8282\u70b9\u7684\u5b89\u88c5\u76ee\u5f55\uff0c\u7528\u4e0a\u4e00\u6b65\u5f97\u5230\u7684\u63d0\u6848id\u8fdb\u884c\u6295\u7968 ./bitxhub --repo ../node1 client governance vote --id 0xcb33b10104cd217aAB4b302e9BbeEd1957EDaA31-0 --info approve --reason approve # \u6295\u7968\u5b8c\u540e\u4f1a\u6253\u5370\uff1avote successfully! # \u5982\u679c\u662f\u591a\u4e2abitxhub\u8282\u70b9\u7ec4\u6210\u7684\u96c6\u7fa4\uff0c\u4f9d\u6b21\u6307\u5b9a\u5404\u8282\u70b9\u7684\u5b89\u88c5\u76ee\u5f55\u8fdb\u884c\u6295\u7968 \u5f53BitXHub\u96c6\u7fa4\u8d85\u8fc7\u534a\u6570\u7684\u7ba1\u7406\u5458\u6295\u7968\u901a\u8fc7\u540e\uff0c\u5e94\u7528\u94fe\u6ce8\u518c\u6210\u529f\uff08\u5982\u679cBitXHub\u662fsolo\u6a21\u5f0f\uff0c\u5219\u53ea\u9700\u8981\u4e00\u7968\u540c\u610f\u5373\u53ef\uff09 \uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u67e5\u8be2\u63d0\u6848\u72b6\u6001\uff1a ./bitxhub --repo ../node1 client governance proposals --type AppchainMgr","title":"\u6ce8\u518c\u5e94\u7528\u94fe"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/#_6","text":"\u5e94\u7528\u94fe\u53ea\u6709\u5728\u53ef\u7528\u72b6\u6001\u4e0b\u53ef\u4ee5\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\uff0c\u5373\u9700\u8981\u5e94\u7528\u94fe\u6ce8\u518c\u6210\u529f\u4e14\u4e2d\u7ee7\u94fe\u6295\u7968\u901a\u8fc7\u540e\u624d\u53ef\u4ee5\u8fdb\u884c\u89c4\u5219\u90e8\u7f72\u3002\u4e4b\u524d\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u9a8c\u8bc1\u89c4\u5219\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\u5728Pier\u7aef\u53d1\u8d77\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u7684\u547d\u4ee4\u3002 Ethereum #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b pier --repo ~/.pier rule deploy --path=~/.pier/ether/validating.wasm Fabric #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b pier --repo ~/.pier rule deploy --path=~/.pier/fabric/validating.wasm","title":"\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219"},{"location":"bitxhub/usage/single_bitxhub/deploy_pier/#_7","text":"\u5728\u5b8c\u6210\u4ee5\u4e0a\u6b65\u9aa4\u4e4b\u540e\uff0c\u53ef\u4ee5\u542f\u52a8\u8de8\u94fe\u7f51\u5173\u8282\u70b9\u4e86 #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b ./pier --repo=~/.pier start \u89c2\u5bdf\u65e5\u5fd7\u4fe1\u606f\u6ca1\u6709\u62a5\u9519\u4fe1\u606f\uff0c\u53ef\u4ee5\u6b63\u5e38\u540c\u6b65\u5230\u4e2d\u7ee7\u94fe\u4e0a\u7684\u533a\u5757\u4fe1\u606f\uff0c\u5373\u8bf4\u660epier\u542f\u52a8\u6210\u529f\u3002","title":"\u542f\u52a8\u8de8\u94fe\u7f51\u5173\u8282\u70b9"},{"location":"goduck/","text":"Goduck\u8fd0\u7ef4\u5c0f\u5de5\u5177 1 \u5b89\u88c5 1.1 \u83b7\u53d6\u6e90\u7801 \u4e0b\u8f7d\u6e90\u7801\u5e76\u5207\u5230\u7a33\u5b9a\u7248\u672crelease-1.0 git clone git@github.com:meshplus/goduck cd goduck git checkout release-1.0 1.2 \u7f16\u8bd1\u5b89\u88c5 make install 1.3 \u521d\u59cb\u5316 goduck init \u4f7f\u7528\u4e4b\u524d\u4e00\u5b9a\u8981\u5148\u521d\u59cb\u5316 2 \u4f7f\u7528 2.1 \u547d\u4ee4\u683c\u5f0f goduck [global options] command [command options] [arguments...] command deploy \u8fdc\u7a0b\u90e8\u7f72bitxhub\u548cpier version \u67e5\u770b\u7ec4\u4ef6\u7248\u672c\u4fe1\u606f init \u521d\u59cb\u5316\u914d\u7f6e status \u5217\u4e3e\u5b9e\u4f8b\u5316\u7ec4\u4ef6\u72b6\u6001 key \u521b\u5efa\u5e76\u5c55\u793a\u5bc6\u94a5\u4fe1\u606f bitxhub \u542f\u52a8\u6216\u5173\u95edbithxub\u8282\u70b9 pier \u6709\u5173pier\u7684\u64cd\u4f5c playground \u4e00\u952e\u542f\u52a8\u8de8\u94fe\u7ec4\u4ef6 info \u5c55\u793a\u8de8\u94fe\u57fa\u672c\u4fe1\u606f prometheus \u542f\u52a8\u6216\u5173\u95edprometheus help, h \u8fd9\u4e9b\u547d\u4ee4\u4e2d\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u662finit\uff08\u4f7f\u7528\u524d\u4e00\u5b9a\u8981\u521d\u59cb\u5316\uff09\u3001status\uff08\u67e5\u770b\u5f53\u524d\u8fd0\u884c\u7ec4\u4ef6\u72b6\u6001\uff09\u3001bitxhub\u3001pier\u3002 global options --repo value goduck\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u5b58\u50a8\u8def\u5f84 --help, -h 2.2 \u5173\u4e8eBitXHub\u7684\u64cd\u4f5c goduck bitxhub command [command options] [arguments...] 2.2.1 \u542f\u52a8BitXHub\u8282\u70b9 goduck bitxhub start \u8be5\u547d\u4ee4\u4f1a\u521d\u59cb\u5316\u5e76\u542f\u52a8BitXHub\u8282\u70b9\uff0c\u5982\u679c\u6709\u5df2\u542f\u52a8\u7684BitXHub\u8282\u70b9\u4f1a\u6267\u884c\u5931\u8d25\u3002\u6267\u884c\u6210\u529f\u540e\u63d0\u793a\u5982\u4e0b\uff1a 1 BitXHub nodes at /Users/fangbaozhu/.goduck/bitxhub are initialized successfully exec: /bin/bash /Users/fangbaozhu/.goduck/playground.sh up v1.4.0 solo binary 4 Start bitxhub solo by binary ===> Start bitxhub solo successful \u8fd9\u662f\u9ed8\u8ba4\u542f\u52a8\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u643a\u5e26\u53c2\u6570\u81ea\u5b9a\u4e49\u542f\u52a8\uff0c\u53c2\u6570\u8bbe\u7f6e\u5982\u4e0b\uff1a --type value \u914d\u7f6e\u7c7b\u578b\uff0cbinary\u6216docker \uff08\u9ed8\u8ba4\uff1a\u201cbinary\u201d\uff09 --mode value \u914d\u7f6e\u6a21\u5f0f\uff0csolo\u6216cluster \uff08\u9ed8\u8ba4\uff1a\u201csolo\u201d\uff09 --num value \u8282\u70b9\u4e2a\u6570\uff0c\u53ea\u5728cluster \u6a21\u5f0f\u4e0b\u4f5c\u7528\uff08\u9ed8\u8ba4\uff1a4\uff09 --tls \u662f\u5426\u542f\u52a8TLS, \u53ea\u5728v1.4.0+\u7248\u672c\u6709\u6548 (default: false) --version value BitXHub\u7248\u672c (default: \"v1.4.0\") --help, -h 2.2.2 \u4e3aBitXHub\u8282\u70b9\u751f\u6210\u914d\u7f6e\u6587\u4ef6 goduck bitxhub config \u8be5\u547d\u4ee4\u9ed8\u8ba4\u521d\u59cb\u53164\u4e2aBitXHub\u8282\u70b9\u3002\u6267\u884c\u6210\u529f\u540e\u5f53\u524d\u6587\u4ef6\u5939\u4f1a\u751f\u6210\u76f8\u5173\u8bc1\u4e66\u3001\u79c1\u94a5\u6587\u4ef6\u4ee5\u53ca\u56db\u4e2a\u8282\u70b9\u7684\u6587\u4ef6\u5939\uff0c\u6210\u529f\u63d0\u793a\u5982\u4e0b\uff1a initializing 4 BitXHub nodes at . 4 BitXHub nodes at . are initialized successfully You can see the following in the current directory\uff1a . \u251c\u2500\u2500 agency.cert \u251c\u2500\u2500 agency.priv \u251c\u2500\u2500 ca.cert \u251c\u2500\u2500 ca.priv \u251c\u2500\u2500 key.priv \u251c\u2500\u2500 node1/ \u251c\u2500\u2500 node2/ \u251c\u2500\u2500 node3/ \u2514\u2500\u2500 node4/ \u53ef\u4ee5\u643a\u5e26\u53c2\u6570\u81ea\u5b9a\u4e49\u914d\u7f6e\u60c5\u51b5\uff1a --num value \u8282\u70b9\u4e2a\u6570\uff0c\u53ea\u5728cluster \u6a21\u5f0f\u4e0b\u4f5c\u7528\uff08\u9ed8\u8ba4\uff1a4\uff09 --type value \u914d\u7f6e\u7c7b\u578b\uff0cbinary\u6216docker \uff08\u9ed8\u8ba4\uff1a\u201cbinary\u201d\uff09 --mode value \u914d\u7f6e\u6a21\u5f0f\uff0csolo\u6216cluster \uff08\u9ed8\u8ba4\uff1a\u201csolo\u201d\uff09 --ips value \u8282\u70b9IP, \u9ed8\u8ba4\u6240\u6709\u8282\u70b9\u4e3a127.0.0.1, e.g. --ips \"127.0.0.1\" --ips \"127.0.0.2\" --ips \"127.0.0.3\" --ips \" 127.0.0.4\" --target value \u8282\u70b9\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\uff08\u9ed8\u8ba4\uff1a\u5f53\u524d\u76ee\u5f55\uff09 --tls \u662f\u5426\u542f\u52a8TLS, \u53ea\u5728v1.4.0+\u7248\u672c\u6709\u6548 (default: false) --version value BitXHub\u7248\u672c (default: \"v1.4.0\") --help, -h 2.2.3 \u5173\u95edBitXHub\u8282\u70b9 goduck bitxhub stop \u8be5\u547d\u4ee4\u4f1a\u5173\u95ed\u6240\u6709\u542f\u52a8\u7684BitXHub\u8282\u70b9\u3002\u6267\u884c\u6210\u529f\u540e\u4f1a\u63d0\u793a\u91cc\u4f1a\u7ed9\u51fa\u5173\u95ed\u8282\u70b9\u7684id\uff1a exec: /bin/bash /Users/fangbaozhu/.goduck/playground.sh down ===> Stop bitxhub node pid:65246 exit 2.2.4 \u6e05\u9664BitXHub\u8282\u70b9 goduck bitxhub clean \u8be5\u547d\u4ee4\u4f1a\u6e05\u9664bitxhub\u8282\u70b9\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5982\u679cbitxhub\u8282\u70b9\u6ca1\u6709\u5173\u95ed\uff0c\u4f1a\u5148\u5173\u95ed\u8282\u70b9\u518d\u6e05\u9664\u914d\u7f6e\u6587\u4ef6\u3002 \u5f53bitxhub solo\u8282\u70b9\u6210\u529f\u5728\u5173\u95ed\u540e\u6267\u884c\u6b64\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u51fa\u63d0\u793a\u5982\u4e0b\uff1a exec: /bin/bash /Users/fangbaozhu/.goduck/playground.sh clean ===> Stop bitxhub ===> Clean bitxhub remove bitxhub configure nodeSolo \u5f53bitxhub solo\u8282\u70b9\u6210\u529f\u5728\u672a\u5173\u95ed\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u6b64\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u51fa\u63d0\u793a\u5982\u4e0b\uff1a exec: /bin/bash /Users/fangbaozhu/.goduck/playground.sh clean ===> Stop bitxhub node pid:65686 exit ===> Clean bitxhub remove bitxhub configure nodeSolo 2.3 \u5173\u4e8epier\u7684\u64cd\u4f5c GoDuck pier command [command options] [arguments...] 2.3.1 \u542f\u52a8pier goduck pier start \u53c2\u6570\u8bbe\u7f6e\u5982\u4e0b\uff1a --chain value \u5e94\u7528\u94fe\u7c7b\u578b\uff0cethereum \u6216 fabric\uff08\u9ed8\u8ba4\uff1aethereum\uff09 --cryptoPath value crypto-config\u8def\u5f84, \u53ea\u5bf9fabric\u94fe\u6709\u6548, e.g $HOME/crypto-config --pier-type value pier\u7c7b\u578b\uff0cdocker\u6216\u8005binary (\u9ed8\u8ba4: \"docker\") --version value pier\u7248\u672c (\u9ed8\u8ba4: \"v1.4.0\") --tls value \u662f\u5426\u542f\u52a8TLS, true or false, \u53ea\u5bf9v1.4.0+\u7248\u672c\u6709\u6548 (\u9ed8\u8ba4: \"false\") --http-port value pier\u7684http\u7aef\u53e3\u53f7, \u53ea\u5bf9v1.4.0+\u7248\u672c\u6709\u6548 (\u9ed8\u8ba4: \"44544\") --pprof-port value pier\u7684pprof\u7aef\u53e3\u53f7, \u53ea\u5bf9binary\u6709\u6548 (\u9ed8\u8ba4: \"44550\") --api-port value pier\u7684api\u7aef\u53e3\u53f7, \u53ea\u5bf9binary\u6709\u6548 (\u9ed8\u8ba4: \"8080\") --overwrite value \u5f53\u672c\u5730\u9ed8\u8ba4\u8def\u5f84\u5b58\u5728pier\u914d\u7f6e\u6587\u4ef6\u65f6\u662f\u5426\u91cd\u5199\u914d\u7f6e (\u9ed8\u8ba4: \"true\") --appchainIP value pier\u8fde\u63a5\u7684\u5e94\u7528\u94feip (\u9ed8\u8ba4: \"127.0.0.1\") --help, -h \u5728\u4f7f\u7528\u6b64\u547d\u4ee4\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u76f8\u540c\u7248\u672c\u7684BitxHub\u548c\u4e00\u4e2a\u9700\u8981pier\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u3002\u5982\u679c\u5e94\u7528\u94fe\u6216bitxhub\u4e0d\u5b58\u5728\uff0cpier\u5c06\u65e0\u6cd5\u542f\u52a8\uff0c\u6253\u5370\u63d0\u793a\u5982\u4e0b: exec: /bin/bash run_pier.sh up -m ethereum -t docker -r .pier_ethereum -v v1.4.0 -c -p 44550 -a 8080 ===> Start pier of ethereum-v1.4.0 in docker... ===> Start a new pier-ethereum container ===> Wait for ethereum-node container to start for seconds... 136d323b1418a026101515313dbbdafee240ac0f0c0d63b4f202304019e13e24 ===> Start pier fail \u5982\u679c\u8981\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u548cBitxHub\u5df2\u7ecf\u542f\u52a8\uff0c\u4e14PIER\u5df2\u7ecf\u542f\u52a8\u6210\u529f\uff0c\u6253\u5370\u63d0\u793a\u5982\u4e0b: exec: /bin/bash run_pier.sh up -m ethereum -t docker -r .pier_ethereum -v v1.0.0-rc1 -c -p 44550 -a 8080 ===> Start pier of ethereum-v1.0.0-rc1 in docker... ===> Start a new pier-ethereum container ===> Wait for ethereum-node container to start for seconds... 351bd8e8eb8d5a1803690ac0cd9b77c274b775507f30cb6271164fb843442bfd ===> Start pier successfully 2.3.2 \u5173\u95edpier goduck pier stop \u8be5\u547d\u4ee4\u53ef\u4ee5\u5173\u95edpier\uff0c\u53ef\u4ee5\u901a\u8fc7\u643a\u5e26\u53c2\u6570\u6307\u5b9a\u5173\u95ed\u90a3\u79cd\u7c7b\u578b\u5e94\u7528\u94fe\u7684pier 2.3.3 \u6e05\u9664Pier goduck pier clean \u8be5\u547d\u4ee4\u53ef\u4ee5\u6e05\u9664pier\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u679cpier\u8fd8\u6ca1\u6709\u5173\u95ed\uff0c\u8be5\u547d\u4ee4\u4f1a\u5148\u5173\u95edpier\u518d\u6e05\u9664\u5176\u914d\u7f6e\u6587\u4ef6\u3002 2.3.4 \u751f\u6210Pier\u7684\u914d\u7f6e\u6587\u4ef6 goduck pier config --mode value \u914d\u7f6e\u6a21\u5f0f, \u76f4\u8fde\u6a21\u5f0f\u6216\u8005\u4e2d\u7ee7\u6a21\u5f0f(\u9ed8\u8ba4: \"direct\") --type value \u914d\u7f6e\u7c7b\u578b, binary\u6216\u8005docker (\u9ed8\u8ba4: \"binary\") --bitxhub value BitXHub\u7684\u5730\u5740\uff0c\u53ea\u5728\u4e2d\u7ee7\u6a21\u5f0f\u6709\u6548 --validators value BitXHub\u7684\u9a8c\u8bc1\u4eba\u5730\u5740\uff0c\u53ea\u5728\u4e2d\u7ee7\u6a21\u5f0f\u6709\u6548, \u4f8b\u5982 --validators \"0xc7F999b83Af6DF9e67d0a37Ee7e900bF38b3D013\" --validators \"0x79a1215469FaB6f9c63c1816b45183AD3624bE34\" --validators \"0x97c8B516D19edBf575D72a172Af7F418BE498C37\" --validators \"0x97c8B516D19edBf575D72a172Af7F418BE498C37\" --port value pier\u7684\u7aef\u53e3\u53f7\uff0c\u53ea\u5728\u76f4\u8fde\u6a21\u5f0f\u6709\u6548 (\u9ed8\u8ba4: 5001) --peers value \u8fde\u63a5\u8282\u70b9\u7684\u5730\u5740\uff0c\u53ea\u5728\u76f4\u8fde\u6a21\u5f0f\u6709\u6548, \u4f8b\u5982 --peers \" /ip4/127.0.0.1/tcp/4001/p2p/Qma1oh5JtrV24gfP9bFrVv4miGKz7AABpfJhZ4F2Z5ngmL\" --connectors value \u5f85\u8fde\u63a5\u8282\u70b9\u7684\u5730\u5740\uff0c\u53ea\u5728v1.4.0+\u7248\u672c\u7684union\u6a21\u5f0f\u6709\u6548, \u4f8b\u5982 --connectors \" /ip4/127.0.0.1/tcp/4001/p2p/Qma1oh5JtrV24gfP9bFrVv4miGKz7AABpfJhZ4F2Z5ngmL\" --connectors \" /ip4/127.0.0.1/tcp/4002/p2p/Qma1oh5JtrV24gfP9bFrVv4miGKz7AABpfJhZ4F2Z5abcD\" --appchain-type value \u5e94\u7528\u94fe\u7c7b\u578b, ethereum\u6216\u8005fabric (\u9ed8\u8ba4: \"ethereum\") --appchain-IP value \u5e94\u7528\u94feIP\u5730\u5740 (\u9ed8\u8ba4: \"127.0.0.1\") --target value \u751f\u6210\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 (\u9ed8\u8ba4: \".\") --tls value \u662f\u5426\u5f00\u542fTLS\uff0c\u53ea\u5728v1.4.0+\u7248\u672c\u6709\u6548 (\u9ed8\u8ba4: \"false\") --http-port value pier\u7684http\u7aef\u53e3\u53f7, \u53ea\u5728v1.4.0+\u7248\u672c\u6709\u6548 (\u9ed8\u8ba4: \"44544\") --pprof-port value pier\u7684pprof\u7aef\u53e3\u53f7 (\u9ed8\u8ba4: \"44550\") --api-port value pier\u7684api\u7aef\u53e3\u53f7 (\u9ed8\u8ba4: \"8080\") --cryptoPath value crypto-config\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u53ea\u5bf9fabric\u94fe\u6709\u6548\uff0c\u4f8b\u5982 $HOME/crypto-config (default: \" $HOME/.goduck/crypto-config\") --version value pier\u7248\u672c (\u9ed8\u8ba4: \"v1.4.0\") --help, -h","title":"Getting started"},{"location":"goduck/#goduck","text":"","title":"Goduck\u8fd0\u7ef4\u5c0f\u5de5\u5177"},{"location":"goduck/#1","text":"","title":"1 \u5b89\u88c5"},{"location":"goduck/#11","text":"\u4e0b\u8f7d\u6e90\u7801\u5e76\u5207\u5230\u7a33\u5b9a\u7248\u672crelease-1.0 git clone git@github.com:meshplus/goduck cd goduck git checkout release-1.0","title":"1.1 \u83b7\u53d6\u6e90\u7801"},{"location":"goduck/#12","text":"make install","title":"1.2 \u7f16\u8bd1\u5b89\u88c5"},{"location":"goduck/#13","text":"goduck init \u4f7f\u7528\u4e4b\u524d\u4e00\u5b9a\u8981\u5148\u521d\u59cb\u5316","title":"1.3 \u521d\u59cb\u5316"},{"location":"goduck/#2","text":"","title":"2 \u4f7f\u7528"},{"location":"goduck/#21","text":"goduck [global options] command [command options] [arguments...] command deploy \u8fdc\u7a0b\u90e8\u7f72bitxhub\u548cpier version \u67e5\u770b\u7ec4\u4ef6\u7248\u672c\u4fe1\u606f init \u521d\u59cb\u5316\u914d\u7f6e status \u5217\u4e3e\u5b9e\u4f8b\u5316\u7ec4\u4ef6\u72b6\u6001 key \u521b\u5efa\u5e76\u5c55\u793a\u5bc6\u94a5\u4fe1\u606f bitxhub \u542f\u52a8\u6216\u5173\u95edbithxub\u8282\u70b9 pier \u6709\u5173pier\u7684\u64cd\u4f5c playground \u4e00\u952e\u542f\u52a8\u8de8\u94fe\u7ec4\u4ef6 info \u5c55\u793a\u8de8\u94fe\u57fa\u672c\u4fe1\u606f prometheus \u542f\u52a8\u6216\u5173\u95edprometheus help, h \u8fd9\u4e9b\u547d\u4ee4\u4e2d\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u662finit\uff08\u4f7f\u7528\u524d\u4e00\u5b9a\u8981\u521d\u59cb\u5316\uff09\u3001status\uff08\u67e5\u770b\u5f53\u524d\u8fd0\u884c\u7ec4\u4ef6\u72b6\u6001\uff09\u3001bitxhub\u3001pier\u3002 global options --repo value goduck\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u5b58\u50a8\u8def\u5f84 --help, -h","title":"2.1 \u547d\u4ee4\u683c\u5f0f"},{"location":"goduck/#22-bitxhub","text":"goduck bitxhub command [command options] [arguments...]","title":"2.2 \u5173\u4e8eBitXHub\u7684\u64cd\u4f5c"},{"location":"goduck/#221-bitxhub","text":"goduck bitxhub start \u8be5\u547d\u4ee4\u4f1a\u521d\u59cb\u5316\u5e76\u542f\u52a8BitXHub\u8282\u70b9\uff0c\u5982\u679c\u6709\u5df2\u542f\u52a8\u7684BitXHub\u8282\u70b9\u4f1a\u6267\u884c\u5931\u8d25\u3002\u6267\u884c\u6210\u529f\u540e\u63d0\u793a\u5982\u4e0b\uff1a 1 BitXHub nodes at /Users/fangbaozhu/.goduck/bitxhub are initialized successfully exec: /bin/bash /Users/fangbaozhu/.goduck/playground.sh up v1.4.0 solo binary 4 Start bitxhub solo by binary ===> Start bitxhub solo successful \u8fd9\u662f\u9ed8\u8ba4\u542f\u52a8\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u643a\u5e26\u53c2\u6570\u81ea\u5b9a\u4e49\u542f\u52a8\uff0c\u53c2\u6570\u8bbe\u7f6e\u5982\u4e0b\uff1a --type value \u914d\u7f6e\u7c7b\u578b\uff0cbinary\u6216docker \uff08\u9ed8\u8ba4\uff1a\u201cbinary\u201d\uff09 --mode value \u914d\u7f6e\u6a21\u5f0f\uff0csolo\u6216cluster \uff08\u9ed8\u8ba4\uff1a\u201csolo\u201d\uff09 --num value \u8282\u70b9\u4e2a\u6570\uff0c\u53ea\u5728cluster \u6a21\u5f0f\u4e0b\u4f5c\u7528\uff08\u9ed8\u8ba4\uff1a4\uff09 --tls \u662f\u5426\u542f\u52a8TLS, \u53ea\u5728v1.4.0+\u7248\u672c\u6709\u6548 (default: false) --version value BitXHub\u7248\u672c (default: \"v1.4.0\") --help, -h","title":"2.2.1 \u542f\u52a8BitXHub\u8282\u70b9"},{"location":"goduck/#222-bitxhub","text":"goduck bitxhub config \u8be5\u547d\u4ee4\u9ed8\u8ba4\u521d\u59cb\u53164\u4e2aBitXHub\u8282\u70b9\u3002\u6267\u884c\u6210\u529f\u540e\u5f53\u524d\u6587\u4ef6\u5939\u4f1a\u751f\u6210\u76f8\u5173\u8bc1\u4e66\u3001\u79c1\u94a5\u6587\u4ef6\u4ee5\u53ca\u56db\u4e2a\u8282\u70b9\u7684\u6587\u4ef6\u5939\uff0c\u6210\u529f\u63d0\u793a\u5982\u4e0b\uff1a initializing 4 BitXHub nodes at . 4 BitXHub nodes at . are initialized successfully You can see the following in the current directory\uff1a . \u251c\u2500\u2500 agency.cert \u251c\u2500\u2500 agency.priv \u251c\u2500\u2500 ca.cert \u251c\u2500\u2500 ca.priv \u251c\u2500\u2500 key.priv \u251c\u2500\u2500 node1/ \u251c\u2500\u2500 node2/ \u251c\u2500\u2500 node3/ \u2514\u2500\u2500 node4/ \u53ef\u4ee5\u643a\u5e26\u53c2\u6570\u81ea\u5b9a\u4e49\u914d\u7f6e\u60c5\u51b5\uff1a --num value \u8282\u70b9\u4e2a\u6570\uff0c\u53ea\u5728cluster \u6a21\u5f0f\u4e0b\u4f5c\u7528\uff08\u9ed8\u8ba4\uff1a4\uff09 --type value \u914d\u7f6e\u7c7b\u578b\uff0cbinary\u6216docker \uff08\u9ed8\u8ba4\uff1a\u201cbinary\u201d\uff09 --mode value \u914d\u7f6e\u6a21\u5f0f\uff0csolo\u6216cluster \uff08\u9ed8\u8ba4\uff1a\u201csolo\u201d\uff09 --ips value \u8282\u70b9IP, \u9ed8\u8ba4\u6240\u6709\u8282\u70b9\u4e3a127.0.0.1, e.g. --ips \"127.0.0.1\" --ips \"127.0.0.2\" --ips \"127.0.0.3\" --ips \" 127.0.0.4\" --target value \u8282\u70b9\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\uff08\u9ed8\u8ba4\uff1a\u5f53\u524d\u76ee\u5f55\uff09 --tls \u662f\u5426\u542f\u52a8TLS, \u53ea\u5728v1.4.0+\u7248\u672c\u6709\u6548 (default: false) --version value BitXHub\u7248\u672c (default: \"v1.4.0\") --help, -h","title":"2.2.2 \u4e3aBitXHub\u8282\u70b9\u751f\u6210\u914d\u7f6e\u6587\u4ef6"},{"location":"goduck/#223-bitxhub","text":"goduck bitxhub stop \u8be5\u547d\u4ee4\u4f1a\u5173\u95ed\u6240\u6709\u542f\u52a8\u7684BitXHub\u8282\u70b9\u3002\u6267\u884c\u6210\u529f\u540e\u4f1a\u63d0\u793a\u91cc\u4f1a\u7ed9\u51fa\u5173\u95ed\u8282\u70b9\u7684id\uff1a exec: /bin/bash /Users/fangbaozhu/.goduck/playground.sh down ===> Stop bitxhub node pid:65246 exit","title":"2.2.3 \u5173\u95edBitXHub\u8282\u70b9"},{"location":"goduck/#224-bitxhub","text":"goduck bitxhub clean \u8be5\u547d\u4ee4\u4f1a\u6e05\u9664bitxhub\u8282\u70b9\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5982\u679cbitxhub\u8282\u70b9\u6ca1\u6709\u5173\u95ed\uff0c\u4f1a\u5148\u5173\u95ed\u8282\u70b9\u518d\u6e05\u9664\u914d\u7f6e\u6587\u4ef6\u3002 \u5f53bitxhub solo\u8282\u70b9\u6210\u529f\u5728\u5173\u95ed\u540e\u6267\u884c\u6b64\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u51fa\u63d0\u793a\u5982\u4e0b\uff1a exec: /bin/bash /Users/fangbaozhu/.goduck/playground.sh clean ===> Stop bitxhub ===> Clean bitxhub remove bitxhub configure nodeSolo \u5f53bitxhub solo\u8282\u70b9\u6210\u529f\u5728\u672a\u5173\u95ed\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u6b64\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u51fa\u63d0\u793a\u5982\u4e0b\uff1a exec: /bin/bash /Users/fangbaozhu/.goduck/playground.sh clean ===> Stop bitxhub node pid:65686 exit ===> Clean bitxhub remove bitxhub configure nodeSolo","title":"2.2.4 \u6e05\u9664BitXHub\u8282\u70b9"},{"location":"goduck/#23-pier","text":"GoDuck pier command [command options] [arguments...]","title":"2.3 \u5173\u4e8epier\u7684\u64cd\u4f5c"},{"location":"goduck/#231-pier","text":"goduck pier start \u53c2\u6570\u8bbe\u7f6e\u5982\u4e0b\uff1a --chain value \u5e94\u7528\u94fe\u7c7b\u578b\uff0cethereum \u6216 fabric\uff08\u9ed8\u8ba4\uff1aethereum\uff09 --cryptoPath value crypto-config\u8def\u5f84, \u53ea\u5bf9fabric\u94fe\u6709\u6548, e.g $HOME/crypto-config --pier-type value pier\u7c7b\u578b\uff0cdocker\u6216\u8005binary (\u9ed8\u8ba4: \"docker\") --version value pier\u7248\u672c (\u9ed8\u8ba4: \"v1.4.0\") --tls value \u662f\u5426\u542f\u52a8TLS, true or false, \u53ea\u5bf9v1.4.0+\u7248\u672c\u6709\u6548 (\u9ed8\u8ba4: \"false\") --http-port value pier\u7684http\u7aef\u53e3\u53f7, \u53ea\u5bf9v1.4.0+\u7248\u672c\u6709\u6548 (\u9ed8\u8ba4: \"44544\") --pprof-port value pier\u7684pprof\u7aef\u53e3\u53f7, \u53ea\u5bf9binary\u6709\u6548 (\u9ed8\u8ba4: \"44550\") --api-port value pier\u7684api\u7aef\u53e3\u53f7, \u53ea\u5bf9binary\u6709\u6548 (\u9ed8\u8ba4: \"8080\") --overwrite value \u5f53\u672c\u5730\u9ed8\u8ba4\u8def\u5f84\u5b58\u5728pier\u914d\u7f6e\u6587\u4ef6\u65f6\u662f\u5426\u91cd\u5199\u914d\u7f6e (\u9ed8\u8ba4: \"true\") --appchainIP value pier\u8fde\u63a5\u7684\u5e94\u7528\u94feip (\u9ed8\u8ba4: \"127.0.0.1\") --help, -h \u5728\u4f7f\u7528\u6b64\u547d\u4ee4\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u76f8\u540c\u7248\u672c\u7684BitxHub\u548c\u4e00\u4e2a\u9700\u8981pier\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u3002\u5982\u679c\u5e94\u7528\u94fe\u6216bitxhub\u4e0d\u5b58\u5728\uff0cpier\u5c06\u65e0\u6cd5\u542f\u52a8\uff0c\u6253\u5370\u63d0\u793a\u5982\u4e0b: exec: /bin/bash run_pier.sh up -m ethereum -t docker -r .pier_ethereum -v v1.4.0 -c -p 44550 -a 8080 ===> Start pier of ethereum-v1.4.0 in docker... ===> Start a new pier-ethereum container ===> Wait for ethereum-node container to start for seconds... 136d323b1418a026101515313dbbdafee240ac0f0c0d63b4f202304019e13e24 ===> Start pier fail \u5982\u679c\u8981\u8fde\u63a5\u7684\u5e94\u7528\u94fe\u548cBitxHub\u5df2\u7ecf\u542f\u52a8\uff0c\u4e14PIER\u5df2\u7ecf\u542f\u52a8\u6210\u529f\uff0c\u6253\u5370\u63d0\u793a\u5982\u4e0b: exec: /bin/bash run_pier.sh up -m ethereum -t docker -r .pier_ethereum -v v1.0.0-rc1 -c -p 44550 -a 8080 ===> Start pier of ethereum-v1.0.0-rc1 in docker... ===> Start a new pier-ethereum container ===> Wait for ethereum-node container to start for seconds... 351bd8e8eb8d5a1803690ac0cd9b77c274b775507f30cb6271164fb843442bfd ===> Start pier successfully","title":"2.3.1 \u542f\u52a8pier"},{"location":"goduck/#232-pier","text":"goduck pier stop \u8be5\u547d\u4ee4\u53ef\u4ee5\u5173\u95edpier\uff0c\u53ef\u4ee5\u901a\u8fc7\u643a\u5e26\u53c2\u6570\u6307\u5b9a\u5173\u95ed\u90a3\u79cd\u7c7b\u578b\u5e94\u7528\u94fe\u7684pier","title":"2.3.2 \u5173\u95edpier"},{"location":"goduck/#233-pier","text":"goduck pier clean \u8be5\u547d\u4ee4\u53ef\u4ee5\u6e05\u9664pier\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u679cpier\u8fd8\u6ca1\u6709\u5173\u95ed\uff0c\u8be5\u547d\u4ee4\u4f1a\u5148\u5173\u95edpier\u518d\u6e05\u9664\u5176\u914d\u7f6e\u6587\u4ef6\u3002","title":"2.3.3 \u6e05\u9664Pier"},{"location":"goduck/#234-pier","text":"goduck pier config --mode value \u914d\u7f6e\u6a21\u5f0f, \u76f4\u8fde\u6a21\u5f0f\u6216\u8005\u4e2d\u7ee7\u6a21\u5f0f(\u9ed8\u8ba4: \"direct\") --type value \u914d\u7f6e\u7c7b\u578b, binary\u6216\u8005docker (\u9ed8\u8ba4: \"binary\") --bitxhub value BitXHub\u7684\u5730\u5740\uff0c\u53ea\u5728\u4e2d\u7ee7\u6a21\u5f0f\u6709\u6548 --validators value BitXHub\u7684\u9a8c\u8bc1\u4eba\u5730\u5740\uff0c\u53ea\u5728\u4e2d\u7ee7\u6a21\u5f0f\u6709\u6548, \u4f8b\u5982 --validators \"0xc7F999b83Af6DF9e67d0a37Ee7e900bF38b3D013\" --validators \"0x79a1215469FaB6f9c63c1816b45183AD3624bE34\" --validators \"0x97c8B516D19edBf575D72a172Af7F418BE498C37\" --validators \"0x97c8B516D19edBf575D72a172Af7F418BE498C37\" --port value pier\u7684\u7aef\u53e3\u53f7\uff0c\u53ea\u5728\u76f4\u8fde\u6a21\u5f0f\u6709\u6548 (\u9ed8\u8ba4: 5001) --peers value \u8fde\u63a5\u8282\u70b9\u7684\u5730\u5740\uff0c\u53ea\u5728\u76f4\u8fde\u6a21\u5f0f\u6709\u6548, \u4f8b\u5982 --peers \" /ip4/127.0.0.1/tcp/4001/p2p/Qma1oh5JtrV24gfP9bFrVv4miGKz7AABpfJhZ4F2Z5ngmL\" --connectors value \u5f85\u8fde\u63a5\u8282\u70b9\u7684\u5730\u5740\uff0c\u53ea\u5728v1.4.0+\u7248\u672c\u7684union\u6a21\u5f0f\u6709\u6548, \u4f8b\u5982 --connectors \" /ip4/127.0.0.1/tcp/4001/p2p/Qma1oh5JtrV24gfP9bFrVv4miGKz7AABpfJhZ4F2Z5ngmL\" --connectors \" /ip4/127.0.0.1/tcp/4002/p2p/Qma1oh5JtrV24gfP9bFrVv4miGKz7AABpfJhZ4F2Z5abcD\" --appchain-type value \u5e94\u7528\u94fe\u7c7b\u578b, ethereum\u6216\u8005fabric (\u9ed8\u8ba4: \"ethereum\") --appchain-IP value \u5e94\u7528\u94feIP\u5730\u5740 (\u9ed8\u8ba4: \"127.0.0.1\") --target value \u751f\u6210\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 (\u9ed8\u8ba4: \".\") --tls value \u662f\u5426\u5f00\u542fTLS\uff0c\u53ea\u5728v1.4.0+\u7248\u672c\u6709\u6548 (\u9ed8\u8ba4: \"false\") --http-port value pier\u7684http\u7aef\u53e3\u53f7, \u53ea\u5728v1.4.0+\u7248\u672c\u6709\u6548 (\u9ed8\u8ba4: \"44544\") --pprof-port value pier\u7684pprof\u7aef\u53e3\u53f7 (\u9ed8\u8ba4: \"44550\") --api-port value pier\u7684api\u7aef\u53e3\u53f7 (\u9ed8\u8ba4: \"8080\") --cryptoPath value crypto-config\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u53ea\u5bf9fabric\u94fe\u6709\u6548\uff0c\u4f8b\u5982 $HOME/crypto-config (default: \" $HOME/.goduck/crypto-config\") --version value pier\u7248\u672c (\u9ed8\u8ba4: \"v1.4.0\") --help, -h","title":"2.3.4 \u751f\u6210Pier\u7684\u914d\u7f6e\u6587\u4ef6"},{"location":"premo/usage/","text":"Premo\u4f7f\u7528\u6587\u6863 Premo\u662fBitXHub\u8de8\u94fe\u7cfb\u7edf\u6d4b\u8bd5\u6846\u67b6\uff0c\u76ee\u524d\u652f\u6301\u7cfb\u7edf\u96c6\u6210\u6d4b\u8bd5\u3001\u63a5\u53e3\u6d4b\u8bd5\u548c\u538b\u529b\u6d4b\u8bd5 \u5b89\u88c5 \u83b7\u53d6\u6e90\u7801 git clone git@github.com:meshplus/premo.git \u7f16\u8bd1 \u8fdb\u5165premo\u5de5\u7a0b\u76ee\u5f55: cd premo make install \u521d\u59cb\u5316 premo init \u57fa\u672c\u4f7f\u7528 premo [global options] command [command options] [arguments...] COMMANDS: init init config home for premo version Premo version test test bitxhub function pier Start or stop the pier bitxhub Start or stop the bitxhub cluster appchain Bring up the appchain network interchain Start or Stop the interchain system status List the status of instantiated components help, h Shows a list of commands or help for one command GLOBAL OPTIONS: --repo value Premo storage repo path --help, -h show help (default: false) \u96c6\u6210\u6d4b\u8bd5 \u8fdb\u5165premo\u7684\u5de5\u7a0b\u76ee\u5f55 cd premo make bitxhub-tester \u6ce8\u610f\uff1a\u96c6\u6210\u6d4b\u8bd5\u9ed8\u8ba4\u524d\u7f6e\u6761\u4ef6\u662f\u672c\u673a\u5df2\u542f\u52a8bitxhub\u56db\u8282\u70b9\u96c6\u7fa4\uff08\u53ef\u5728bitxhub\u5de5\u7a0b\u76ee\u5f55\u4e0b\u901a\u8fc7 make cluster \u547d\u4ee4\u542f\u52a8\uff09 \u63a5\u53e3\u6d4b\u8bd5 \u8fdb\u5165premo\u7684\u5de5\u7a0b\u76ee\u5f55 cd premo make http-tester \u6ce8\u610f\uff1a\u96c6\u6210\u6d4b\u8bd5\u9ed8\u8ba4\u524d\u7f6e\u6761\u4ef6\u662f\u672c\u673a\u5df2\u542f\u52a8bitxhub\u56db\u8282\u70b9\u96c6\u7fa4\uff08\u53ef\u5728bitxhub\u5de5\u7a0b\u76ee\u5f55\u4e0b\u901a\u8fc7 make cluster \u547d\u4ee4\u542f\u52a8\uff09 \u538b\u529b\u6d4b\u8bd5 test\u547d\u4ee4\u7528\u4e8e\u538b\u6d4bbitxhub\u7684TPS\u6027\u80fd\u3002\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u83b7\u53d6\u4f7f\u7528\u5e2e\u52a9\u4fe1\u606f\uff1a premo test --help \u5e2e\u52a9\u4fe1\u606f\u5982\u4e0b\uff1a NAME: premo test - test bitxhub function USAGE: premo test [command options] [arguments...] OPTIONS: --concurrent value, -c value concurrent number (default: 100) --tps value, -t value all tx number (default: 500) --duration value, -d value test duration (default: 60) --key_path value, -k value Specific key path --remote_bitxhub_addr value, -r value Specific remote bitxhub address (default: \"localhost:60011\") --type value Specific tx type: interchain, data, transfer (default: \"transfer\") --help, -h show help (default: false) --concurrent \u6216\u8005 -c \u6307\u5b9a\u5e76\u53d1\u91cf\uff1b --tps \u6216\u8005 -t \u6307\u5b9a\u6bcf\u79d2\u4ea4\u6613\u6570\u91cf\uff1b --duration \u6216\u8005 -d \u6307\u5b9a\u538b\u6d4b\u65f6\u95f4\uff1b --key_path \u6216\u8005 -k \u6307\u5b9a\u79c1\u94a5\u8def\u5f84\uff1b --remote_bitxhub_addr \u6216\u8005 -r \u6307\u5b9abitxhub\u7684\u5730\u5740\uff1b --type \u6307\u5b9a\u4ea4\u6613\u7c7b\u578b\uff0c\u5176\u4e2d transfer \u662f\u666e\u901a\u8f6c\u8d26\u4ea4\u6613\uff0c data \u662f\u8c03\u7528BVM\u4ea4\u6613\uff0c interchain \u662f\u8de8\u94fe\u4ea4\u6613\uff1b \u538b\u6d4b\u5b8c\u6210\u540e\u4f1a\u6253\u5370\u538b\u6d4b\u7684\u5b9e\u9645\u60c5\u51b5\uff1a $ premo test -c 50 -t 3000 -d 1000 INFO[0000] Premo configuration concurrent=50 duration=1000 tps=3000 type=transfer INFO[0000] generate all bees number=50 2020-08-10 13:51:11 [INFO] [$(GOPATH)/src/meshplus/premo/internal/bitxhub/bitxhub.go:92] starting broker INFO[0000] start all bees number=50 INFO[0001] current tps is 834.000000 INFO[0002] current tps is 1346.000000 INFO[0003] current tps is 2469.000000 INFO[0004] current tps is 1732.000000 INFO[0005] current tps is 2221.000000 INFO[0006] current tps is 2068.000000 INFO[0007] current tps is 1145.000000 INFO[0008] current tps is 1626.000000 INFO[0009] current tps is 2425.000000 INFO[0010] current tps is 1703.000000 INFO[0011] current tps is 1772.000000 INFO[0012] current tps is 1823.000000 INFO[0013] current tps is 1213.000000 INFO[0014] current tps is 1974.000000 INFO[0015] current tps is 1965.000000 INFO[0016] current tps is 2001.000000 INFO[0017] current tps is 975.000000 INFO[0018] current tps is 1505.000000 INFO[0019] current tps is 2338.000000 INFO[0020] current tps is 1704.000000 INFO[0021] current tps is 1270.000000 INFO[0022] current tps is 2418.000000 INFO[0023] current tps is 1673.000000 INFO[0024] current tps is 997.000000 INFO[0025] current tps is 1935.000000 INFO[0026] current tps is 1840.000000 INFO[0027] current tps is 710.000000 INFO[0028] current tps is 1041.000000 INFO[0029] current tps is 837.000000 INFO[0030] current tps is 1403.000000 received interrupt signal, shutting down... INFO[0030] finish testing duration=30.468557927 number=50880 tps=1669.9181872450927 tx_delay=968.0890066430818","title":"\u4f7f\u7528\u6587\u6863"},{"location":"premo/usage/#premo","text":"Premo\u662fBitXHub\u8de8\u94fe\u7cfb\u7edf\u6d4b\u8bd5\u6846\u67b6\uff0c\u76ee\u524d\u652f\u6301\u7cfb\u7edf\u96c6\u6210\u6d4b\u8bd5\u3001\u63a5\u53e3\u6d4b\u8bd5\u548c\u538b\u529b\u6d4b\u8bd5","title":"Premo\u4f7f\u7528\u6587\u6863"},{"location":"premo/usage/#_1","text":"","title":"\u5b89\u88c5"},{"location":"premo/usage/#_2","text":"git clone git@github.com:meshplus/premo.git","title":"\u83b7\u53d6\u6e90\u7801"},{"location":"premo/usage/#_3","text":"\u8fdb\u5165premo\u5de5\u7a0b\u76ee\u5f55: cd premo make install","title":"\u7f16\u8bd1"},{"location":"premo/usage/#_4","text":"premo init","title":"\u521d\u59cb\u5316"},{"location":"premo/usage/#_5","text":"premo [global options] command [command options] [arguments...]","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"premo/usage/#commands","text":"init init config home for premo version Premo version test test bitxhub function pier Start or stop the pier bitxhub Start or stop the bitxhub cluster appchain Bring up the appchain network interchain Start or Stop the interchain system status List the status of instantiated components help, h Shows a list of commands or help for one command","title":"COMMANDS:"},{"location":"premo/usage/#global-options","text":"--repo value Premo storage repo path --help, -h show help (default: false)","title":"GLOBAL OPTIONS:"},{"location":"premo/usage/#_6","text":"\u8fdb\u5165premo\u7684\u5de5\u7a0b\u76ee\u5f55 cd premo make bitxhub-tester \u6ce8\u610f\uff1a\u96c6\u6210\u6d4b\u8bd5\u9ed8\u8ba4\u524d\u7f6e\u6761\u4ef6\u662f\u672c\u673a\u5df2\u542f\u52a8bitxhub\u56db\u8282\u70b9\u96c6\u7fa4\uff08\u53ef\u5728bitxhub\u5de5\u7a0b\u76ee\u5f55\u4e0b\u901a\u8fc7 make cluster \u547d\u4ee4\u542f\u52a8\uff09","title":"\u96c6\u6210\u6d4b\u8bd5"},{"location":"premo/usage/#_7","text":"\u8fdb\u5165premo\u7684\u5de5\u7a0b\u76ee\u5f55 cd premo make http-tester \u6ce8\u610f\uff1a\u96c6\u6210\u6d4b\u8bd5\u9ed8\u8ba4\u524d\u7f6e\u6761\u4ef6\u662f\u672c\u673a\u5df2\u542f\u52a8bitxhub\u56db\u8282\u70b9\u96c6\u7fa4\uff08\u53ef\u5728bitxhub\u5de5\u7a0b\u76ee\u5f55\u4e0b\u901a\u8fc7 make cluster \u547d\u4ee4\u542f\u52a8\uff09","title":"\u63a5\u53e3\u6d4b\u8bd5"},{"location":"premo/usage/#_8","text":"test\u547d\u4ee4\u7528\u4e8e\u538b\u6d4bbitxhub\u7684TPS\u6027\u80fd\u3002\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u83b7\u53d6\u4f7f\u7528\u5e2e\u52a9\u4fe1\u606f\uff1a premo test --help \u5e2e\u52a9\u4fe1\u606f\u5982\u4e0b\uff1a NAME: premo test - test bitxhub function USAGE: premo test [command options] [arguments...] OPTIONS: --concurrent value, -c value concurrent number (default: 100) --tps value, -t value all tx number (default: 500) --duration value, -d value test duration (default: 60) --key_path value, -k value Specific key path --remote_bitxhub_addr value, -r value Specific remote bitxhub address (default: \"localhost:60011\") --type value Specific tx type: interchain, data, transfer (default: \"transfer\") --help, -h show help (default: false) --concurrent \u6216\u8005 -c \u6307\u5b9a\u5e76\u53d1\u91cf\uff1b --tps \u6216\u8005 -t \u6307\u5b9a\u6bcf\u79d2\u4ea4\u6613\u6570\u91cf\uff1b --duration \u6216\u8005 -d \u6307\u5b9a\u538b\u6d4b\u65f6\u95f4\uff1b --key_path \u6216\u8005 -k \u6307\u5b9a\u79c1\u94a5\u8def\u5f84\uff1b --remote_bitxhub_addr \u6216\u8005 -r \u6307\u5b9abitxhub\u7684\u5730\u5740\uff1b --type \u6307\u5b9a\u4ea4\u6613\u7c7b\u578b\uff0c\u5176\u4e2d transfer \u662f\u666e\u901a\u8f6c\u8d26\u4ea4\u6613\uff0c data \u662f\u8c03\u7528BVM\u4ea4\u6613\uff0c interchain \u662f\u8de8\u94fe\u4ea4\u6613\uff1b \u538b\u6d4b\u5b8c\u6210\u540e\u4f1a\u6253\u5370\u538b\u6d4b\u7684\u5b9e\u9645\u60c5\u51b5\uff1a $ premo test -c 50 -t 3000 -d 1000 INFO[0000] Premo configuration concurrent=50 duration=1000 tps=3000 type=transfer INFO[0000] generate all bees number=50 2020-08-10 13:51:11 [INFO] [$(GOPATH)/src/meshplus/premo/internal/bitxhub/bitxhub.go:92] starting broker INFO[0000] start all bees number=50 INFO[0001] current tps is 834.000000 INFO[0002] current tps is 1346.000000 INFO[0003] current tps is 2469.000000 INFO[0004] current tps is 1732.000000 INFO[0005] current tps is 2221.000000 INFO[0006] current tps is 2068.000000 INFO[0007] current tps is 1145.000000 INFO[0008] current tps is 1626.000000 INFO[0009] current tps is 2425.000000 INFO[0010] current tps is 1703.000000 INFO[0011] current tps is 1772.000000 INFO[0012] current tps is 1823.000000 INFO[0013] current tps is 1213.000000 INFO[0014] current tps is 1974.000000 INFO[0015] current tps is 1965.000000 INFO[0016] current tps is 2001.000000 INFO[0017] current tps is 975.000000 INFO[0018] current tps is 1505.000000 INFO[0019] current tps is 2338.000000 INFO[0020] current tps is 1704.000000 INFO[0021] current tps is 1270.000000 INFO[0022] current tps is 2418.000000 INFO[0023] current tps is 1673.000000 INFO[0024] current tps is 997.000000 INFO[0025] current tps is 1935.000000 INFO[0026] current tps is 1840.000000 INFO[0027] current tps is 710.000000 INFO[0028] current tps is 1041.000000 INFO[0029] current tps is 837.000000 INFO[0030] current tps is 1403.000000 received interrupt signal, shutting down... INFO[0030] finish testing duration=30.468557927 number=50880 tps=1669.9181872450927 tx_delay=968.0890066430818","title":"\u538b\u529b\u6d4b\u8bd5"},{"location":"scan/","text":"\u8de8\u94fe\u6d4f\u89c8\u5668\u4f53\u9a8c\u6307\u5357 \u4e00\u3001\u6d4b\u8bd5\u7f51\u914d\u7f6e\u6d41\u7a0b \u6211\u4eec\u5efa\u8bae\u4f7f\u7528 Google Chrome \u5e76\u5b89\u88c5 MetaMask \u94b1\u5305\u6269\u5c55\u7a0b\u5e8f(\u63a8\u8350\u4f7f\u752810.0.1\u53ca\u4ee5\u4e0a)\u3002\u4ee5\u4e0b\u662f MetaMask \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u4f9b\u53c2\u8003\uff01 \u6d4b\u8bd5\u7f51\u81ea\u52a8\u914d\u7f6e MetaMask\u63d2\u4ef6\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u6d4f\u89c8\u5668\u3010\u767b\u9646\u3011\u6309\u94ae\uff0c\u7cfb\u7edf\u4f1a\u5f39\u51fa\u6d4b\u8bd5\u7f51\u81ea\u52a8\u914d\u7f6e\u6dfb\u52a0\u9875\u9762\uff0c\u7528\u6237\u70b9\u51fb\u3010Approve\u3011\uff0c\u5373\u53ef\u6210\u529f\u6dfb\u52a0BitXHub\u6d4b\u8bd5\u7f51\u3002 BitXHub\u6d4b\u8bd5\u7f51\u7edc\u6dfb\u52a0\u6210\u529f\u540e\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u60a8\u8fdb\u884c\u7f51\u7edc\u5207\u6362\uff0c\u7528\u6237\u70b9\u51fb\u3010Switch network\u3011\uff0c\u5373\u53ef\u6210\u529f\u5207\u6362\u81f3BitXHub\u6d4b\u8bd5\u7f51\u7edc\u5e76\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c\u3002 \u6d4b\u8bd5\u7f51RPC\u624b\u52a8\u914d\u7f6e \u9009\u62e9\u9876\u90e8\u7f51\u7edc\u529f\u80fd\uff0c\u7136\u540e\u9009\u62e9\u3010\u81ea\u5b9a\u4e49RPC\u3011\u8fdb\u5165\u7f51\u7edc\u914d\u7f6e\u9875\u9762\u3002 BitXHub\u6d4b\u8bd5\u7f51\u914d\u7f6e\u4fe1\u606f\u8be6\u60c5 Chain ID 1356 RPC URL https://testnet-1.bitxhub.cn:8881 \u914d\u7f6e\u5982\u4e0b\u56fe\u6240\u793a \u4e8c\u3001\u5e94\u7528\u94fe\u73af\u5883\u51c6\u5907 \u5e94\u7528\u94fe\u63a5\u5165\u4e2d\u7ee7\u94fe\u4e4b\u524d\uff0c\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u8de8\u94fe\u5408\u7ea6\u90e8\u7f72\u4ee5\u53ca\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u7b49\u64cd\u4f5c\u3002 \u90e8\u7f72\u8de8\u94fe\u5408\u7ea6 \u53ef\u4ee5\u53c2\u8003BitXHub\u6587\u6863\u7ad9 \u94fe\u63a5 \u8fdb\u884c\u8de8\u94fe\u5408\u7ea6\u90e8\u7f72\u3002\uff08\u6ce8\u610f\uff1a\u6587\u6863\u4e2d\u63d0\u5230\u7684\u4e8c\u8fdb\u5236\u6216\u5f00\u6e90\u9879\u76ee\uff0c\u5747\u662f\u8981\u5bf9\u5e94 v1.11.0\u7684\u7248\u672c\uff09 \u83b7\u53d6Pier\u90e8\u7f72\u5305\u548c\u4fee\u6539\u914d\u7f6e \u53ef\u4ee5\u53c2\u8003BitXHub\u6587\u6863\u7ad9 \u94fe\u63a5 \u3002 \u6ce8\u610f\uff1a 1\uff09\u6587\u6863\u4e2d\u63d0\u5230\u7684\u4e8c\u8fdb\u5236\u6216\u5f00\u6e90\u9879\u76ee\uff0c\u5747\u662f\u8981\u5bf9\u5e94 v1.11.0\u7684\u7248\u672c\uff1b 2\uff09\u4ee5\u4e0apier\u914d\u7f6e\u8fc7\u7a0b\uff0cpier.toml\u4e2d\u5173\u4e8e\u5e94\u7528\u94fe\u7684\u90e8\u5206\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c\u4ee5fabric\u4e3a\u4f8b\uff0c[appchain]\u5b57\u6bb5\u4e0b\u7684\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff0c [mode.relay] addrs = [ \"testnet-1.bitxhub.cn:60111\" ] [appchain] plugin = \"fabric-client-1.4\" config = \"fabric\" \u83b7\u53d6\u5e94\u7528\u94fe\u79c1\u94a5\uff08\u7528\u4e8e\u5bfc\u5165MetaMask\u94b1\u5305\uff09 \u5b8c\u6210\u4ee5\u4e0a\u914d\u7f6e\u540e\uff0c\u5728\u9875\u9762\u4e0a\u6ce8\u518c\u5e94\u7528\u94fe\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u5c06\u4e0a\u4e00\u6b65pier\u914d\u7f6e\u76ee\u5f55\u4e0b\u7684key.json\u8f6c\u6362\u663e\u793a\u6210\u53ef\u4ee5\u5bfc\u5165MetaMask\u94b1\u5305\u7684\u516c\u79c1\u94a5\u5bf9\uff0c\u5177\u4f53\u793a\u4f8b\u5982\u4e0b\uff1a # 1.\u8fdb\u5165\u5230pier\u7684\u914d\u7f6e\u4e3b\u76ee\u5f55\uff0c\u5373pier.toml\u6240\u5728\u7684\u76ee\u5f55 # \u6267\u884cpier show\u547d\u4ee4 ./pier show --path ~/.pier/key.json # \u8fd4\u56de\u7ed3\u679c\u793a\u4f8b\uff1a private key: 0x88b434530176d3faf4dbf10ede1c25c4f7af673392152d71a18758a1ba677ddc public key: 0x041b311209c6feb1587aaf16d7a1bac9f96c1fecb539d4cde416f97ff5048139beeac307d14d0e7196c7e15ad657530dedcc33bbe821276dadf3989bfff470747a address: 0xE7f5E3c3963c6a588AB3de753817B3F735a6Ab58 # \u5c06\u8fd4\u56de\u7684private key\u7684\u5b57\u7b26\u4e32\u5bfc\u5165\u5230MetaMask\u94b1\u5305\u5373\u53ef \u4e09\u3001\u6d4f\u89c8\u5668\u53ef\u89c6\u5316\u64cd\u4f5c \u7528\u6237\u5b9e\u540d\u7ed1\u5b9a BitXHub\u6d4b\u8bd5\u7f51\u7edc\u4e0b\uff0c\u65b0\u7528\u6237\u9996\u6b21\u70b9\u51fb\u3010\u767b\u9646\u3011\uff0c\u9700\u8981\u5b8c\u6210\u624b\u673a\u5b9e\u540d\u7ed1\u5b9a\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u3010\u6b63\u5728\u4e3a\u60a8\u8df3\u8f6c\uff0c\u8bf7\u5148\u5b8c\u6210\u7528\u6237\u6ce8\u518c\u3011\uff0c\u5e76\u8df3\u8f6c\u5230\u6ce8\u518c\u9875\u9762\u3002 \u6ce8\u518c\u9875\u9762\u4e2d\uff0c\u7528\u6237\u9700\u8981\u8f93\u5165\u624b\u673a\u53f7\u8fdb\u884c\u9a8c\u8bc1\u7801\u6821\u9a8c\uff0c\u5b8c\u6210\u5bc6\u7801\u8bbe\u7f6e\u540e\uff0c\u70b9\u51fb\u3010\u6ce8\u518c\u3011\uff0c\u5373\u53ef\u8df3\u8f6c\u8fd4\u56de\u8de8\u94fe\u6d4f\u89c8\u5668\u9875\u9762\u3002\u65b0\u7528\u6237\u5b8c\u6210\u6ce8\u518c\u540e\uff0c\u60a8\u7684\u5730\u57401h\u5185\u5c06\u6536\u5230BitXHub\u6d4b\u8bd5\u7f51\u53d1\u9001\u7684\u71c3\u6599\u8d39\u7528\u4e8e\u8de8\u94fe\u4f53\u9a8c\u3002 \u5e94\u7528\u94fe\u6ce8\u518c\u7533\u8bf7 \u5bf9\u4e8e\u65b0\u6ce8\u518c\u7684\u7528\u6237\uff0c\u60a8\u7684\u5730\u57401h\u5185\u5c06\u6536\u5230BitXHub\u6d4b\u8bd5\u7f51\u53d1\u9001\u7684\u71c3\u6599\u8d39\u7528\u4e8e\u8de8\u94fe\u4f53\u9a8c\u3002\u5f53\u60a8\u7684\u5730\u5740\u4e2dBitXHub\u6d4b\u8bd5\u7f51\u71c3\u6599\u8d39\u4e3a0\u65f6\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u3010\u60a8\u7684\u6d4b\u8bd5\u7f51\u71c3\u6599\u6b63\u5206\u53d1\u4e2d\uff0c\u8bf7\u7a0d\u540e\u3011\u3002 \u5e94\u7528\u94fe\u6ce8\u518c \u6ce8\u518c\u5b57\u6bb5\u8bf4\u660e\uff1a \u8282\u70b9ID\uff1a\u7cfb\u7edf\u6839\u636e\u94b1\u5305\u5730\u5740\u81ea\u52a8\u751f\u6210 \u5e94\u7528\u94fe\u540d\u79f0\uff1a\u81ea\u5b9a\u4e49\u5e94\u7528\u94fe\u7684\u540d\u79f0 \u5e94\u7528\u94fe\u7c7b\u578b\uff1a\u5206\u4e3afabric1.4.3\u3001fabric1.4.4 \u3001hyperchain\u548c \u5176\u4ed6 \u56db\u7c7b \u7248\u672c\u53f7\uff1a\u5e94\u7528\u94fe\u5bf9\u5e94\u7684\u7248\u672c\u53f7 \u5171\u8bc6\u7b97\u6cd5\uff1a\u5e94\u7528\u94fe\u91c7\u7528\u7684\u5171\u8bc6\u7b97\u6cd5 \u9a8c\u8bc1\u8005\u4fe1\u606f\uff1a\u8bf7\u53c2\u8003 \u9a8c\u8bc1\u8005\u4fe1\u606f\u751f\u6210 \u9a8c\u8bc1\u89c4\u5219\uff1a\u5206\u4e3afabric1.4.3\u3001fabric1.4.4 \u3001\u65e0\u9a8c\u8bc1\u89c4\u5219\u548c \u5176\u4ed6 \u56db\u7c7b\uff08\u7528\u6237\u53ef\u9009\u62e9\u65e0\u9a8c\u8bc1\u89c4\u5219\u6a21\u5f0f\u8fdb\u884c\u5feb\u901f\u8de8\u94fe\u4f53\u9a8c\uff09\uff0c\u6839\u636e\u5bf9\u5e94\u5e94\u7528\u94fe\u7c7b\u578b\u9009\u62e9\u5408\u9002\u7684\u9a8c\u8bc1\u89c4\u5219\u3002\u6ce8\u610f\u5176\u4ed6\u7c7b\u578b\u9700\u8981\u63d0\u4ea4\u81ea\u5b9a\u4e49\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u5e76\u9644\u5e26\u6e90\u7801\u94fe\u63a5\u3002\u7f16\u5199\u89c4\u5219\u8bf7\u53c2\u8003 \u9a8c\u8bc1\u89c4\u5219\u7f16\u5199 \u7533\u8bf7\u7406\u7531\uff1a\u586b\u5199\u7533\u8bf7\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u7684\u7406\u7531 \u5e94\u7528\u94fe\u63a5\u5165BitXHub\u8de8\u94fe\u7cfb\u7edf\u9700\u8981\u83b7\u5f97\u4e2d\u7ee7\u94fe\u7ba1\u7406\u5458\u7684\u51c6\u5165\u5ba1\u6279\uff0c\u4e2d\u7ee7\u94fe\u7ba1\u7406\u5458\u4f1a\u572824h\u5185\u5b8c\u6210\u5e94\u7528\u94fe\u6ce8\u518c\u7533\u8bf7\u5ba1\uff0c\u5ba1\u6838\u901a\u8fc7\u5373\u53ef\u63a5\u5165\u5e94\u7528\u94fe\u3002 \u56db\u3001\u7f51\u5173\u542f\u52a8 \u5728\u5b8c\u6210\u4ee5\u4e0a\u6b65\u9aa4\u4e4b\u540e\uff0c\u7528\u6237\u542f\u52a8\u8de8\u94fe\u7f51\u5173\uff0c\u5373\u5b8c\u6210\u5e94\u7528\u94fe\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u7684\u64cd\u4f5c\u3002 #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b pier --repo = ~/.pier start \u4e94\u3001\u8de8\u94fe\u4f53\u9a8c \u76ee\u524d\u6d4b\u8bd5\u7f51\u5df2\u7ecf\u63a5\u5165Fabric\u548cHyperchain\uff0c\u4e24\u6761\u94fe\u90fd\u90e8\u7f72\u4e86\u5b58\u8bc1\u670d\u52a1\uff0c\u7528\u6237\u5e94\u7528\u94fe\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u540e\uff0c\u53ef\u901a\u8fc7BitXHub\u4f53\u9a8c\u8de8\u94fe\u5b58\u8bc1\u670d\u52a1\u3002 \u4e24\u6761\u6d4b\u8bd5\u5e94\u7528\u94fe\u7684\u4fe1\u606f\u5982\u4e0b\uff1a 1. Fabric \u5e94\u7528\u94feDID\uff1a did:bitxhub:appchain0xc11bA472f5955B2a3b0e66a91fFc05f68995eFDf:. \u5b58\u8bc1\u5408\u7ea6\u5730\u5740\uff1a mychannel&data_swapper 2. Hyperchain \u5e94\u7528\u94feDID\uff1a did:bitxhub:appchain0xe1E8c72408623Dd1825b704C21ceF7C03ab62aB6 \u5b58\u8bc1\u5408\u7ea6\u5730\u5740\uff1a 0xb8dc305352edef315f6a7844948c864717e93c84 \u5177\u4f53\u8c03\u7528\u8bf4\u660e\u5982\u4e0b\uff1a \u8de8\u94fe\u5b58\u8bc1 \u8c03\u7528\u81ea\u5df1\u5e94\u7528\u94fe\u4e0a\u7684data_swapper\u5408\u7ea6\u5411\u6211\u4eec\u5185\u90e8\u7684\u6d4b\u8bd5\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u5b58\u8bc1\u4ea4\u6613\uff0c\u8c03\u7528\u65b9\u6cd5\u662f set \uff0c\u5176\u53c2\u6570\u67093\u4e2a\uff0c\u4f9d\u6b21\u662f\u76ee\u7684\u94fe\u5408\u7ea6\u7684did\u3001\u8981\u5b58\u50a8\u7684key\uff0c\u8981\u5b58\u50a8\u7684value \u8de8\u94fe\u83b7\u53d6 \u8c03\u7528\u81ea\u5df1\u5e94\u7528\u94fe\u4e0a\u7684data_swapper\u5408\u7ea6\u5411\u6211\u4eec\u5185\u90e8\u7684\u6d4b\u8bd5\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\uff0c\u5c06\u83b7\u53d6\u5230\u7684\u6570\u636e\u5b58\u5230\u81ea\u5df1\u94fe\u4e0a\uff0c\u8c03\u7528\u65b9\u6cd5\u662f get \uff0c\u5176\u53c2\u6570\u67092\u4e2a\uff0c\u4f9d\u6b21\u662f \u76ee\u7684\u94fe\u5408\u7ea6\u7684did\u3001\u8981\u83b7\u53d6\u7684key\u3002 \u672c\u5730\u67e5\u8be2 \u8c03\u7528\u81ea\u5df1\u5e94\u7528\u94fe\u4e0a\u7684data_swapper\u5408\u7ea6\u67e5\u8be2\u4e0a\u4e00\u6b65\u83b7\u53d6\u7684\u6570\u636e\uff0c\u5982\u679c\u81ea\u5df1\u94fe\u662ffabric\uff0c\u5219\u8c03\u7528\u65b9\u6cd5\u662f get\uff0c\u5982\u679c\u81ea\u5df1\u94fe\u662fhyperchain\u6216\u5176\u5b83\uff0c\u5219\u8c03\u7528\u65b9\u6cd5\u662f getData\uff0c\u53c2\u6570\u5747\u53ea\u67091\u4e2a\uff0c\u5373\u8981\u67e5\u8be2\u7684key \u7528\u6237\u5982\u679c\u60f3\u9a8c\u8bc1\u76ee\u7684\u94fe\u4e0a\u662f\u5426\u771f\u6b63\u6267\u884c\u4e86\u8de8\u94fe\u64cd\u4f5c\uff0c\u53ef\u901a\u8fc7\u90e8\u7f72\u4e24\u6761\u81ea\u5df1\u7684\u5e94\u7528\u94fe\u8fdb\u884c\u8de8\u94fe\u5b58\u8bc1\u7684\u5b8c\u6574\u4f53\u9a8c\u3002","title":"\u4f7f\u7528\u6587\u6863"},{"location":"scan/#_1","text":"","title":"\u8de8\u94fe\u6d4f\u89c8\u5668\u4f53\u9a8c\u6307\u5357"},{"location":"scan/#_2","text":"\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 Google Chrome \u5e76\u5b89\u88c5 MetaMask \u94b1\u5305\u6269\u5c55\u7a0b\u5e8f(\u63a8\u8350\u4f7f\u752810.0.1\u53ca\u4ee5\u4e0a)\u3002\u4ee5\u4e0b\u662f MetaMask \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u4f9b\u53c2\u8003\uff01","title":"\u4e00\u3001\u6d4b\u8bd5\u7f51\u914d\u7f6e\u6d41\u7a0b"},{"location":"scan/#_3","text":"MetaMask\u63d2\u4ef6\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u6d4f\u89c8\u5668\u3010\u767b\u9646\u3011\u6309\u94ae\uff0c\u7cfb\u7edf\u4f1a\u5f39\u51fa\u6d4b\u8bd5\u7f51\u81ea\u52a8\u914d\u7f6e\u6dfb\u52a0\u9875\u9762\uff0c\u7528\u6237\u70b9\u51fb\u3010Approve\u3011\uff0c\u5373\u53ef\u6210\u529f\u6dfb\u52a0BitXHub\u6d4b\u8bd5\u7f51\u3002 BitXHub\u6d4b\u8bd5\u7f51\u7edc\u6dfb\u52a0\u6210\u529f\u540e\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u60a8\u8fdb\u884c\u7f51\u7edc\u5207\u6362\uff0c\u7528\u6237\u70b9\u51fb\u3010Switch network\u3011\uff0c\u5373\u53ef\u6210\u529f\u5207\u6362\u81f3BitXHub\u6d4b\u8bd5\u7f51\u7edc\u5e76\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c\u3002","title":"\u6d4b\u8bd5\u7f51\u81ea\u52a8\u914d\u7f6e"},{"location":"scan/#rpc","text":"\u9009\u62e9\u9876\u90e8\u7f51\u7edc\u529f\u80fd\uff0c\u7136\u540e\u9009\u62e9\u3010\u81ea\u5b9a\u4e49RPC\u3011\u8fdb\u5165\u7f51\u7edc\u914d\u7f6e\u9875\u9762\u3002","title":"\u6d4b\u8bd5\u7f51RPC\u624b\u52a8\u914d\u7f6e"},{"location":"scan/#bitxhub","text":"Chain ID 1356 RPC URL https://testnet-1.bitxhub.cn:8881 \u914d\u7f6e\u5982\u4e0b\u56fe\u6240\u793a","title":"BitXHub\u6d4b\u8bd5\u7f51\u914d\u7f6e\u4fe1\u606f\u8be6\u60c5"},{"location":"scan/#_4","text":"\u5e94\u7528\u94fe\u63a5\u5165\u4e2d\u7ee7\u94fe\u4e4b\u524d\uff0c\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u8de8\u94fe\u5408\u7ea6\u90e8\u7f72\u4ee5\u53ca\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u7b49\u64cd\u4f5c\u3002","title":"\u4e8c\u3001\u5e94\u7528\u94fe\u73af\u5883\u51c6\u5907"},{"location":"scan/#_5","text":"\u53ef\u4ee5\u53c2\u8003BitXHub\u6587\u6863\u7ad9 \u94fe\u63a5 \u8fdb\u884c\u8de8\u94fe\u5408\u7ea6\u90e8\u7f72\u3002\uff08\u6ce8\u610f\uff1a\u6587\u6863\u4e2d\u63d0\u5230\u7684\u4e8c\u8fdb\u5236\u6216\u5f00\u6e90\u9879\u76ee\uff0c\u5747\u662f\u8981\u5bf9\u5e94 v1.11.0\u7684\u7248\u672c\uff09","title":"\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6"},{"location":"scan/#pier","text":"\u53ef\u4ee5\u53c2\u8003BitXHub\u6587\u6863\u7ad9 \u94fe\u63a5 \u3002 \u6ce8\u610f\uff1a 1\uff09\u6587\u6863\u4e2d\u63d0\u5230\u7684\u4e8c\u8fdb\u5236\u6216\u5f00\u6e90\u9879\u76ee\uff0c\u5747\u662f\u8981\u5bf9\u5e94 v1.11.0\u7684\u7248\u672c\uff1b 2\uff09\u4ee5\u4e0apier\u914d\u7f6e\u8fc7\u7a0b\uff0cpier.toml\u4e2d\u5173\u4e8e\u5e94\u7528\u94fe\u7684\u90e8\u5206\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c\u4ee5fabric\u4e3a\u4f8b\uff0c[appchain]\u5b57\u6bb5\u4e0b\u7684\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff0c [mode.relay] addrs = [ \"testnet-1.bitxhub.cn:60111\" ] [appchain] plugin = \"fabric-client-1.4\" config = \"fabric\"","title":"\u83b7\u53d6Pier\u90e8\u7f72\u5305\u548c\u4fee\u6539\u914d\u7f6e"},{"location":"scan/#metamask","text":"\u5b8c\u6210\u4ee5\u4e0a\u914d\u7f6e\u540e\uff0c\u5728\u9875\u9762\u4e0a\u6ce8\u518c\u5e94\u7528\u94fe\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u5c06\u4e0a\u4e00\u6b65pier\u914d\u7f6e\u76ee\u5f55\u4e0b\u7684key.json\u8f6c\u6362\u663e\u793a\u6210\u53ef\u4ee5\u5bfc\u5165MetaMask\u94b1\u5305\u7684\u516c\u79c1\u94a5\u5bf9\uff0c\u5177\u4f53\u793a\u4f8b\u5982\u4e0b\uff1a # 1.\u8fdb\u5165\u5230pier\u7684\u914d\u7f6e\u4e3b\u76ee\u5f55\uff0c\u5373pier.toml\u6240\u5728\u7684\u76ee\u5f55 # \u6267\u884cpier show\u547d\u4ee4 ./pier show --path ~/.pier/key.json # \u8fd4\u56de\u7ed3\u679c\u793a\u4f8b\uff1a private key: 0x88b434530176d3faf4dbf10ede1c25c4f7af673392152d71a18758a1ba677ddc public key: 0x041b311209c6feb1587aaf16d7a1bac9f96c1fecb539d4cde416f97ff5048139beeac307d14d0e7196c7e15ad657530dedcc33bbe821276dadf3989bfff470747a address: 0xE7f5E3c3963c6a588AB3de753817B3F735a6Ab58 # \u5c06\u8fd4\u56de\u7684private key\u7684\u5b57\u7b26\u4e32\u5bfc\u5165\u5230MetaMask\u94b1\u5305\u5373\u53ef","title":"\u83b7\u53d6\u5e94\u7528\u94fe\u79c1\u94a5\uff08\u7528\u4e8e\u5bfc\u5165MetaMask\u94b1\u5305\uff09"},{"location":"scan/#_6","text":"","title":"\u4e09\u3001\u6d4f\u89c8\u5668\u53ef\u89c6\u5316\u64cd\u4f5c"},{"location":"scan/#_7","text":"BitXHub\u6d4b\u8bd5\u7f51\u7edc\u4e0b\uff0c\u65b0\u7528\u6237\u9996\u6b21\u70b9\u51fb\u3010\u767b\u9646\u3011\uff0c\u9700\u8981\u5b8c\u6210\u624b\u673a\u5b9e\u540d\u7ed1\u5b9a\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u3010\u6b63\u5728\u4e3a\u60a8\u8df3\u8f6c\uff0c\u8bf7\u5148\u5b8c\u6210\u7528\u6237\u6ce8\u518c\u3011\uff0c\u5e76\u8df3\u8f6c\u5230\u6ce8\u518c\u9875\u9762\u3002 \u6ce8\u518c\u9875\u9762\u4e2d\uff0c\u7528\u6237\u9700\u8981\u8f93\u5165\u624b\u673a\u53f7\u8fdb\u884c\u9a8c\u8bc1\u7801\u6821\u9a8c\uff0c\u5b8c\u6210\u5bc6\u7801\u8bbe\u7f6e\u540e\uff0c\u70b9\u51fb\u3010\u6ce8\u518c\u3011\uff0c\u5373\u53ef\u8df3\u8f6c\u8fd4\u56de\u8de8\u94fe\u6d4f\u89c8\u5668\u9875\u9762\u3002\u65b0\u7528\u6237\u5b8c\u6210\u6ce8\u518c\u540e\uff0c\u60a8\u7684\u5730\u57401h\u5185\u5c06\u6536\u5230BitXHub\u6d4b\u8bd5\u7f51\u53d1\u9001\u7684\u71c3\u6599\u8d39\u7528\u4e8e\u8de8\u94fe\u4f53\u9a8c\u3002","title":"\u7528\u6237\u5b9e\u540d\u7ed1\u5b9a"},{"location":"scan/#_8","text":"\u5bf9\u4e8e\u65b0\u6ce8\u518c\u7684\u7528\u6237\uff0c\u60a8\u7684\u5730\u57401h\u5185\u5c06\u6536\u5230BitXHub\u6d4b\u8bd5\u7f51\u53d1\u9001\u7684\u71c3\u6599\u8d39\u7528\u4e8e\u8de8\u94fe\u4f53\u9a8c\u3002\u5f53\u60a8\u7684\u5730\u5740\u4e2dBitXHub\u6d4b\u8bd5\u7f51\u71c3\u6599\u8d39\u4e3a0\u65f6\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u3010\u60a8\u7684\u6d4b\u8bd5\u7f51\u71c3\u6599\u6b63\u5206\u53d1\u4e2d\uff0c\u8bf7\u7a0d\u540e\u3011\u3002 \u5e94\u7528\u94fe\u6ce8\u518c \u6ce8\u518c\u5b57\u6bb5\u8bf4\u660e\uff1a \u8282\u70b9ID\uff1a\u7cfb\u7edf\u6839\u636e\u94b1\u5305\u5730\u5740\u81ea\u52a8\u751f\u6210 \u5e94\u7528\u94fe\u540d\u79f0\uff1a\u81ea\u5b9a\u4e49\u5e94\u7528\u94fe\u7684\u540d\u79f0 \u5e94\u7528\u94fe\u7c7b\u578b\uff1a\u5206\u4e3afabric1.4.3\u3001fabric1.4.4 \u3001hyperchain\u548c \u5176\u4ed6 \u56db\u7c7b \u7248\u672c\u53f7\uff1a\u5e94\u7528\u94fe\u5bf9\u5e94\u7684\u7248\u672c\u53f7 \u5171\u8bc6\u7b97\u6cd5\uff1a\u5e94\u7528\u94fe\u91c7\u7528\u7684\u5171\u8bc6\u7b97\u6cd5 \u9a8c\u8bc1\u8005\u4fe1\u606f\uff1a\u8bf7\u53c2\u8003 \u9a8c\u8bc1\u8005\u4fe1\u606f\u751f\u6210 \u9a8c\u8bc1\u89c4\u5219\uff1a\u5206\u4e3afabric1.4.3\u3001fabric1.4.4 \u3001\u65e0\u9a8c\u8bc1\u89c4\u5219\u548c \u5176\u4ed6 \u56db\u7c7b\uff08\u7528\u6237\u53ef\u9009\u62e9\u65e0\u9a8c\u8bc1\u89c4\u5219\u6a21\u5f0f\u8fdb\u884c\u5feb\u901f\u8de8\u94fe\u4f53\u9a8c\uff09\uff0c\u6839\u636e\u5bf9\u5e94\u5e94\u7528\u94fe\u7c7b\u578b\u9009\u62e9\u5408\u9002\u7684\u9a8c\u8bc1\u89c4\u5219\u3002\u6ce8\u610f\u5176\u4ed6\u7c7b\u578b\u9700\u8981\u63d0\u4ea4\u81ea\u5b9a\u4e49\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u5e76\u9644\u5e26\u6e90\u7801\u94fe\u63a5\u3002\u7f16\u5199\u89c4\u5219\u8bf7\u53c2\u8003 \u9a8c\u8bc1\u89c4\u5219\u7f16\u5199 \u7533\u8bf7\u7406\u7531\uff1a\u586b\u5199\u7533\u8bf7\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u7684\u7406\u7531 \u5e94\u7528\u94fe\u63a5\u5165BitXHub\u8de8\u94fe\u7cfb\u7edf\u9700\u8981\u83b7\u5f97\u4e2d\u7ee7\u94fe\u7ba1\u7406\u5458\u7684\u51c6\u5165\u5ba1\u6279\uff0c\u4e2d\u7ee7\u94fe\u7ba1\u7406\u5458\u4f1a\u572824h\u5185\u5b8c\u6210\u5e94\u7528\u94fe\u6ce8\u518c\u7533\u8bf7\u5ba1\uff0c\u5ba1\u6838\u901a\u8fc7\u5373\u53ef\u63a5\u5165\u5e94\u7528\u94fe\u3002","title":"\u5e94\u7528\u94fe\u6ce8\u518c\u7533\u8bf7"},{"location":"scan/#_9","text":"\u5728\u5b8c\u6210\u4ee5\u4e0a\u6b65\u9aa4\u4e4b\u540e\uff0c\u7528\u6237\u542f\u52a8\u8de8\u94fe\u7f51\u5173\uff0c\u5373\u5b8c\u6210\u5e94\u7528\u94fe\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u7684\u64cd\u4f5c\u3002 #\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b pier --repo = ~/.pier start","title":"\u56db\u3001\u7f51\u5173\u542f\u52a8"},{"location":"scan/#_10","text":"\u76ee\u524d\u6d4b\u8bd5\u7f51\u5df2\u7ecf\u63a5\u5165Fabric\u548cHyperchain\uff0c\u4e24\u6761\u94fe\u90fd\u90e8\u7f72\u4e86\u5b58\u8bc1\u670d\u52a1\uff0c\u7528\u6237\u5e94\u7528\u94fe\u63a5\u5165\u8de8\u94fe\u7cfb\u7edf\u540e\uff0c\u53ef\u901a\u8fc7BitXHub\u4f53\u9a8c\u8de8\u94fe\u5b58\u8bc1\u670d\u52a1\u3002 \u4e24\u6761\u6d4b\u8bd5\u5e94\u7528\u94fe\u7684\u4fe1\u606f\u5982\u4e0b\uff1a","title":"\u4e94\u3001\u8de8\u94fe\u4f53\u9a8c"},{"location":"scan/#1-fabric","text":"\u5e94\u7528\u94feDID\uff1a did:bitxhub:appchain0xc11bA472f5955B2a3b0e66a91fFc05f68995eFDf:. \u5b58\u8bc1\u5408\u7ea6\u5730\u5740\uff1a mychannel&data_swapper","title":"1. Fabric"},{"location":"scan/#2-hyperchain","text":"\u5e94\u7528\u94feDID\uff1a did:bitxhub:appchain0xe1E8c72408623Dd1825b704C21ceF7C03ab62aB6 \u5b58\u8bc1\u5408\u7ea6\u5730\u5740\uff1a 0xb8dc305352edef315f6a7844948c864717e93c84 \u5177\u4f53\u8c03\u7528\u8bf4\u660e\u5982\u4e0b\uff1a \u8de8\u94fe\u5b58\u8bc1 \u8c03\u7528\u81ea\u5df1\u5e94\u7528\u94fe\u4e0a\u7684data_swapper\u5408\u7ea6\u5411\u6211\u4eec\u5185\u90e8\u7684\u6d4b\u8bd5\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u5b58\u8bc1\u4ea4\u6613\uff0c\u8c03\u7528\u65b9\u6cd5\u662f set \uff0c\u5176\u53c2\u6570\u67093\u4e2a\uff0c\u4f9d\u6b21\u662f\u76ee\u7684\u94fe\u5408\u7ea6\u7684did\u3001\u8981\u5b58\u50a8\u7684key\uff0c\u8981\u5b58\u50a8\u7684value \u8de8\u94fe\u83b7\u53d6 \u8c03\u7528\u81ea\u5df1\u5e94\u7528\u94fe\u4e0a\u7684data_swapper\u5408\u7ea6\u5411\u6211\u4eec\u5185\u90e8\u7684\u6d4b\u8bd5\u5e94\u7528\u94fe\u53d1\u8d77\u8de8\u94fe\u4ea4\u6613\uff0c\u5c06\u83b7\u53d6\u5230\u7684\u6570\u636e\u5b58\u5230\u81ea\u5df1\u94fe\u4e0a\uff0c\u8c03\u7528\u65b9\u6cd5\u662f get \uff0c\u5176\u53c2\u6570\u67092\u4e2a\uff0c\u4f9d\u6b21\u662f \u76ee\u7684\u94fe\u5408\u7ea6\u7684did\u3001\u8981\u83b7\u53d6\u7684key\u3002 \u672c\u5730\u67e5\u8be2 \u8c03\u7528\u81ea\u5df1\u5e94\u7528\u94fe\u4e0a\u7684data_swapper\u5408\u7ea6\u67e5\u8be2\u4e0a\u4e00\u6b65\u83b7\u53d6\u7684\u6570\u636e\uff0c\u5982\u679c\u81ea\u5df1\u94fe\u662ffabric\uff0c\u5219\u8c03\u7528\u65b9\u6cd5\u662f get\uff0c\u5982\u679c\u81ea\u5df1\u94fe\u662fhyperchain\u6216\u5176\u5b83\uff0c\u5219\u8c03\u7528\u65b9\u6cd5\u662f getData\uff0c\u53c2\u6570\u5747\u53ea\u67091\u4e2a\uff0c\u5373\u8981\u67e5\u8be2\u7684key \u7528\u6237\u5982\u679c\u60f3\u9a8c\u8bc1\u76ee\u7684\u94fe\u4e0a\u662f\u5426\u771f\u6b63\u6267\u884c\u4e86\u8de8\u94fe\u64cd\u4f5c\uff0c\u53ef\u901a\u8fc7\u90e8\u7f72\u4e24\u6761\u81ea\u5df1\u7684\u5e94\u7528\u94fe\u8fdb\u884c\u8de8\u94fe\u5b58\u8bc1\u7684\u5b8c\u6574\u4f53\u9a8c\u3002","title":"2. Hyperchain"},{"location":"scan/deploy_pier_testnet/","text":"\u8de8\u94fe\u7f51\u5173\u90e8\u7f72 \u8de8\u94fe\u7f51\u5173Pier\u80fd\u591f\u652f\u6301\u4e1a\u52a1\u6240\u5728\u533a\u5757\u94fe\uff08\u4ee5\u4e0b\u7b80\u79f0 \u5e94\u7528\u94fe\uff09\u4fbf\u6377\u3001\u5feb\u901f\u7684\u63a5\u5165\u5230\u8de8\u94fe\u5e73\u53f0BitXHub\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u548c\u5176\u4ed6\u4e1a\u52a1\u533a\u5757\u94fe\u7684\u8de8\u94fe\u64cd\u4f5c\u3002\u76ee\u524d\u4e2d\u7ee7\u94fe\u548c\u8de8\u94fe\u7f51\u5173\u5df2\u7ecf\u652f\u6301 Fabric \u3001 Ethereum \u3001 BCOS \u3001 CITA \u548c Hyperchain \u4e94\u79cd\u5e94\u7528\u94fe\u63a5\u5165\u5e76\u5b8c\u6210\u8de8\u94fe\u4ea4\u6613\uff0c\u5982\u679c\u60a8\u6709\u5174\u8da3\uff0c\u4e5f\u53ef\u4ee5\u53c2\u4e0e\u5f00\u53d1\u9002\u914d\u53e6\u5916\u79cd\u7c7b\u5e94\u7528\u94fe\u7684\u63d2\u4ef6\u548c\u5408\u7ea6\u3002 \u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u9700\u8981\u63d0\u524d\u786e\u5b9a\u5e94\u7528\u94fe\u7c7b\u578b\uff08\u5bf9\u5e94\u4e0d\u540c\u7684\u63d2\u4ef6\u548c\u914d\u7f6e\uff09\uff0c\u4e5f\u9700\u8981\u63d0\u524d\u5728\u5bf9\u5e94\u7684\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\uff0c\u6211\u4eec\u5c06\u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u4f9d\u6b21\u5206\u4e3a\u5982\u4e0b\u4e94\u4e2a\u6b65\u9aa4\uff1a \u90e8\u7f72\u8de8\u94fe\u5408\u7ea6 \u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u914d\u7f6e \u90e8\u7f72\u8de8\u94fe\u5408\u7ea6 \u8fd9\u4e00\u7ae0\u662f\u8981\u5728\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\uff0c \u6ce8\u610f\uff1a\u5728\u6b64\u64cd\u4f5c\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u786e\u8ba4\u5df2\u7ecf\u90e8\u7f72\u6709\u53ef\u63a5\u5165\u7684\u5e94\u7528\u94fe \u3002 \u6211\u4eec\u63d0\u4f9b\u4e86\u9488\u5bf9\u4e0d\u540c\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u5408\u7ea6\uff0cbroker\u5408\u7ea6\u662f\u7ba1\u7406\u5408\u7ea6\uff0ctransfer\u5408\u7ea6\u662f\u4e1a\u52a1\u4ea4\u6613\u5408\u7ea6\uff0c\u9700\u8981\u8bf4\u660e\u7684\u662f transfer\u5408\u7ea6\u9700\u8981\u7ecf\u8fc7broker\u5408\u7ea6\u5ba1\u6838\u901a\u8fc7\u540e\u624d\u80fd\u53d1\u8d77\u6216\u63a5\u53d7\u8de8\u94fe\u4ea4\u6613\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\uff1a\u8c03\u7528broker\u5408\u7ea6\u7684audit\u65b9\u6cd5\uff0c\u5176\u53c2\u6570\u4f9d\u6b21\u662f\u4e1a\u52a1\u5408\u7ea6\u5730\u5740\u548c\u5408\u7ea6\u72b6\u6001\uff08\u6570\u5b571\u8868\u793a\u5ba1\u6838\u901a\u8fc7\uff0c\u6570\u5b572\u8868\u793a\u5ba1\u6838\u5931\u8d25\uff09\u3002 \u4e0b\u9762\u4ee5Ethereum\u548cFabric\u4e3a\u4f8b\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5176\u5b83\u7c7b\u578b\u7684\u5e94\u7528\u94fe\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u7684\u6b65\u9aa4\u57fa\u672c\u4e0a\u662f\u4e00\u81f4\u7684\u3002 Ethereum \u5728Ethereum\u4e0a\u90e8\u7f72\u5408\u7ea6\u7684\u5de5\u5177\u6709\u5f88\u591a\uff0c\u60a8\u53ef\u4ee5\u4f7f Remix \u8fdb\u884c\u5408\u7ea6\u7684\u7f16\u8bd1\u548c\u90e8\u7f72\uff0c\u8fd9\u91cc\u5173\u952e\u7684\u662f\u8de8\u94fe\u5408\u7ea6\u7684\u83b7\u53d6\u3002\u53ef\u4ee5\u4e0b\u8f7dpier-client-ethereum\u9879\u76ee\uff1a git clone https://github.com/meshplus/pier-client-ethereum.git && git checkout v1.6.2 \u8bf4\u660e\uff1a 1. \u5408\u7ea6\u6587\u4ef6\u5c31\u5728\u9879\u76ee\u7684example\u76ee\u5f55\u4e0b\uff0cbroker.sol\u662f\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\uff0ctransfer.sol\u662f\u793a\u4f8b\u4e1a\u52a1\u5408\u7ea6\uff1b 2. \u9996\u5148\u90e8\u7f72broker\u5408\u7ea6\uff0c\u7136\u540e\u5c06\u8fd4\u56de\u7684\u5408\u7ea6\u5730\u5740\u586b\u5165transfer\u5408\u7ea6\u4e2d\u7684 BrokerAddr \u5b57\u6bb5\uff0c\u8fd9\u6837\u4e1a\u52a1\u5408\u7ea6\u624d\u80fd\u6b63\u786e\u8de8\u94fe\u8c03\u7528\u3002 Fabric \u5728Fabric\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u5de5\u5177\u4e00\u822c\u662ffabric-cli\uff08\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u9879\u76ee\u7684\u4f7f\u7528\u8bf4\u660e \uff09\uff0c \u5728Fabric\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u7684\u8fc7\u7a0b\u548c\u90e8\u7f72\u5176\u5b83\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u53ea\u662f\u5408\u7ea6\u540d\u79f0\u548c\u4ee3\u7801\u6587\u4ef6\u9700\u8981\u66ff\u6362\uff0c\u4ee5\u4e0b\u64cd\u4f5c\u7684\u547d\u4ee4\u53ef\u4f9b\u53c2\u8003\uff0c\u9ed8\u8ba4\u5e94\u7528\u94fe\u662f\u4f7f\u7528\u7684fabric-sample\u9879\u76ee\u7684v1.4.3\u7248\u672c\u90e8\u7f72\u3002 Step1: \u5b89\u88c5\u90e8\u7f72\u5408\u7ea6\u7684\u5de5\u5177fabric-cli go get github.com/securekey/fabric-examples/fabric-cli/cmd/fabric-cli Step2: \u83b7\u53d6\u9700\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u6587\u4ef6\u5e76\u89e3\u538b git clone https://github.com/meshplus/pier-client-ethereum.git && git checkout v1.6.2 # \u9700\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u6587\u4ef6\u5c31\u5728example\u76ee\u5f55\u4e0b #\u89e3\u538b\u5373\u53ef unzip -q contracts.zip Step3: \u90e8\u7f72broker\u3001transfer\u5408\u7ea6 #\u5b89\u88c5\u548c\u793a\u4f8b\u5316broker\u5408\u7ea6 fabric-cli chaincode install --gopath ./contracts --ccp broker --ccid broker --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel fabric-cli chaincode instantiate --ccp broker --ccid broker --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel #\u5b89\u88c5\u548c\u793a\u4f8b\u5316transfer\u5408\u7ea6 fabric-cli chaincode install --gopath ./contracts --ccp transfer --ccid transfer --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel fabric-cli chaincode instantiate --ccp transfer --ccid transfer --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel #\u4e1a\u52a1\u5408\u7ea6\u9700\u8981broker\u7ba1\u7406\u5408\u7ea6\u5ba1\u8ba1\u540e\uff0c\u624d\u80fd\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613 fabric-cli chaincode invoke --cid mychannel --ccid=broker \\ --args='{\"Func\":\"audit\", \"Args\":[\"mychannel\", \"transfer\", \"1\"]}' \\ --user Admin --orgid org2 --payload --config \"${CONFIG_YAML}\" \u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u914d\u7f6e \u8fd9\u4e00\u7ae0\u662f\u8981\u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u7684\u914d\u7f6e\uff0c\u4e3a\u542f\u52a8pier\u8282\u70b9\u4f5c\u51c6\u5907\uff0c\u4e3b\u8981\u5206\u4e3apier\u672c\u8eab\u548c\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e\u4fee\u6539\u3002\u53ef\u4ee5\u901a\u8fc7\u6e90\u7801\u7f16\u8bd1\u548c\u4e8c\u8fdb\u5236\u4e0b\u8f7d\u7684\u65b9\u5f0f\u83b7\u53d6\u90e8\u7f72\u5305\u3002 \u83b7\u53d6\u90e8\u7f72\u5305 Ethereum \u6e90\u7801\u4e0b\u8f7d\u7f16\u8bd1 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier && git checkout v1.11.1 make prepare && make build # \u7f16\u8bd1Ethereum \u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-ethereum.git cd pier-client-ethereum && git checkout v1.11.1 make eth # \u8bf4\u660e\uff1a1.ethereum\u63d2\u4ef6\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u63d2\u4ef6\u9879\u76ee\u7684build\u76ee\u5f55\u751f\u6210eth-client\u6587\u4ef6\uff1b 2.pier\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u9879\u76eebin\u76ee\u5f55\u751f\u6210\u540c\u540d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4e8c\u8fdb\u5236\u4e0b\u8f7d \u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dPier\u53ca\u5176\u63d2\u4ef6\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a Pier\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u548c ethereum\u63d2\u4ef6\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u548c\u4e0b\u8f7d\u5373\u53ef\u3002 Fabric \u6e90\u7801\u4e0b\u8f7d\u7f16\u8bd1 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier && git checkout v1.11.1 make prepare && make build # \u7f16\u8bd1Fabric\u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-fabric.git cd pier-client-fabric && git checkout v1.11.1 make fabric1.4 # \u8bf4\u660e\uff1a1.fabric\u63d2\u4ef6\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u63d2\u4ef6\u9879\u76ee\u7684build\u76ee\u5f55\u751f\u6210fabric-client-1.4\u6587\u4ef6\uff1b 2.pier\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u9879\u76eebin\u76ee\u5f55\u751f\u6210\u540c\u540d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4e8c\u8fdb\u5236\u4e0b\u8f7d \u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dPier\u53ca\u5176\u63d2\u4ef6\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a Pier\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u548c fabric\u63d2\u4ef6\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u548c\u4e0b\u8f7d\u5373\u53ef\u3002 \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u76f8\u4fe1\u60a8\u5df2\u7ecf\u7f16\u8bd1\u51fa\u4e86\u90e8\u7f72Pier\u548cfabric/ethereum\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0cPier\u8282\u70b9\u8fd0\u884c\u8fd8\u9700\u8981\u5916\u90e8\u4f9d\u8d56\u5e93\uff0c\u5747\u5728\u9879\u76eebuild\u76ee\u5f55\u4e0b\uff08Macos\u4f7f\u7528libwasmer.dylib\uff0cLinux\u4f7f\u7528libwasmer.so\uff09,\u5efa\u8bae\u5c06\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u548c\u9002\u914d\u7684\u4f9d\u8d56\u5e93\u6587\u4ef6\u62f7\u8d1d\u5230\u540c\u4e00\u76ee\u5f55\uff0c\u7136\u540e\u4f7f\u7528 export LD_LIBRARY_PATH=$(pwd) \u547d\u4ee4\u6307\u5b9a\u4f9d\u8d56\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u64cd\u4f5c\u3002 \u4fee\u6539Pier\u81ea\u8eab\u7684\u914d\u7f6e \u5728\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u3001\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u7b49\u6b65\u9aa4\u4e4b\u524d\uff0c\u9700\u8981\u521d\u59cb\u5316\u8de8\u94fe\u7f51\u5173\u7684\u914d\u7f6e\u76ee\u5f55\uff0c\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b\uff1a pier --repo=~/.pier init \u8be5\u547d\u4ee4\u4f1a\u751f\u6210\u8de8\u94fe\u7f51\u5173\u7684\u4e00\u4e9b\u57fa\u7840\u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c\u4f7f\u7528 tree \u547d\u4ee4\u53ef\u67e5\u770b\u76ee\u5f55\u4fe1\u606f\uff1a tree -L 1 ~/.pier \u251c\u2500\u2500 api \u251c\u2500\u2500 certs \u251c\u2500\u2500 key.json \u251c\u2500\u2500 node.priv \u2514\u2500\u2500 pier.toml 1 directory, 4 files pier.toml\u662f\u63cf\u8ff0\u94fe\u8de8\u94fe\u7f51\u5173\u542f\u52a8\u7684\u4e3b\u8981\u914d\u7f6e\uff0c\u4e00\u822c\u9700\u8981\u4fee\u6539\u7684\u662f\u7aef\u53e3\u4fe1\u606f\u3001\u4e2d\u7ee7\u94fe\u7684\u4fe1\u606f\u3001\u5e94\u7528\u94fe\u7684\u4fe1\u606f\u3002 \u4fee\u6539\u7aef\u53e3\u4fe1\u606f [port] # \u5982\u679c\u4e0d\u51b2\u7a81\u7684\u8bdd\uff0c\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539 http = 44544 pprof = 44555 \u4fee\u6539\u4e2d\u7ee7\u94fe\u4fe1\u606f\uff08\u4e00\u822c\u53ea\u4fee\u6539addrs\u5b57\u6bb5\uff0c\u6307\u5b9abitxhub\u7684\u8282\u70b9\u5730\u5740\uff09 [mode] type = \"relay\" # relay or direct [mode.relay] addrs = [\"localhost:60011\", \"localhost:60012\", \"localhost:60013\", \"localhost:60014\"] quorum = 2 validators = [ \"0x000f1a7a08ccc48e5d30f80850cf1cf283aa3abd\", \"0xe93b92f1da08f925bdee44e91e7768380ae83307\", \"0xb18c8575e3284e79b92100025a31378feb8100d6\", \"0x856E2B9A5FA82FD1B031D1FF6863864DBAC7995D\", ] \u4fee\u6539\u5e94\u7528\u94fe\u4fe1\u606f\uff08\u9488\u5bf9\u4e0d\u540c\u5e94\u7528\u94fe\u7c7b\u578b\u8fdb\u884c\u914d\u7f6e\uff09 Ethereum [appchain] # ethereum\u63d2\u4ef6\u6587\u4ef6\u7684\u540d\u79f0 plugin = \"eth-client\" # ethereum\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"ether\" Fabric [appchain] # fabric\u63d2\u4ef6\u6587\u4ef6\u7684\u540d\u79f0 plugin = \"fabric-client-1.4\" # ethereum\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"fabric\" \u4fee\u6539\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e \u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e\u76ee\u5f55\u5373\u662fpier.toml\u4e2d\u7684config\u5b57\u6bb5\uff0c\u5b83\u7684\u6a21\u677f\u5728 pier-client-ethereum \u6216 pier-client-ethereum \u9879\u76ee\uff08\u4e4b\u524d\u62c9\u53d6\u8de8\u94fe\u5408\u7ea6\u65f6\u5df2\u7ecfclone\uff09\uff0c\u76f4\u63a5\u5728GitHub\u4e0a\u4e0b\u8f7d\u4ee3\u7801\u5373\u53ef Ethereum # \u5c06ethereum\u63d2\u4ef6\u62f7\u8d1d\u5230plugins\u76ee\u5f55\u4e0b cp ether-client ~/.pier/plugins/ # \u5207\u6362\u5230pier-client-ethereum\u9879\u76ee\u8def\u5f84\u4e0b cd pier-client-ethereum cp ./config $HOME /.pier/ether \u5176\u4e2d\u91cd\u8981\u914d\u7f6e\u5982\u4e0b\uff1a \u251c\u2500\u2500 account.key \u251c\u2500\u2500 broker.abi \u251c\u2500\u2500 ether.validators \u251c\u2500\u2500 ethereum.toml \u251c\u2500\u2500 password \u2514\u2500\u2500 validating.wasm \u8bf4\u660e \uff1aaccount.key\u548cpassword\u5efa\u8bae\u6362\u6210\u5e94\u7528\u94fe\u4e0a\u7684\u771f\u5b9e\u8d26\u6237\uff0c\u4e14\u987b\u4fdd\u8bc1\u6709\u4e00\u5b9a\u91d1\u989d\uff08ethereum\u4e0a\u8c03\u7528\u5408\u7ea6\u9700\u8981gas\u8d39\uff09\uff0cbroker.abi\u53ef\u4ee5\u4f7f\u7528\u793a\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u60a8\u81ea\u5df1\u7f16\u8bd1/\u90e8\u7f72broker\u5408\u7ea6\u65f6\u8fd4\u56de\u7684abi\uff0cether.validators\u548cvalidating.wasm\u4e00\u822c\u4e0d\u9700\u8981\u4fee\u6539\u3002ethereum.toml\u662f\u9700\u8981\u91cd\u70b9\u4fee\u6539\u7684\uff0c\u9700\u8981\u6839\u636e\u5e94\u7528\u94fe\u5b9e\u9645\u60c5\u51b5\u586b\u5199ethereum\u7f51\u7edc\u5730\u5740\u3001broker\u5408\u7ea6\u5730\u5740\u53caabi\uff0c\u8d26\u6237\u7684key\u7b49\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a [ether] addr = \"wss://kovan.infura.io/ws/v3/cc512c8c74c94938aef1c833e1b50b9a\" name = \"ether-kovan\" ## \u6b64\u5904\u5408\u7ea6\u5730\u5740\u9700\u8981\u66ff\u6362\u6210\u53d8\u91cf\u4ee3\u8868\u7684\u5b9e\u9645\u5b57\u7b26\u4e32 contract_address = \"$brokerAddr-kovan\" abi_path = \"broker.abi\" key_path = \"account.key\" password = \"password\" Fabric # \u5c06fabric\u63d2\u4ef6\u62f7\u8d1d\u5230plugins\u76ee\u5f55\u4e0b cp fabric-client-1.4 ~/.pier/plugins/ # \u5207\u6362\u5230pier-client-fabric\u9879\u76ee\u8def\u5f84\u4e0b cd pier-client-fabric cp ./config $HOME /.pier/fabric \u5176\u4e2d\u91cd\u8981\u914d\u7f6e\u5982\u4e0b\uff1a \u251c\u2500\u2500 crypto-config/ \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 fabric.toml \u251c\u2500\u2500 fabric.validators \u2514\u2500\u2500 validating.wasm \u63a5\u4e0b\u6765\u4e3b\u8981\u4fee\u6539Fabric\u7f51\u7edc\u914d\u7f6e\uff0c\u9a8c\u8bc1\u8bc1\u4e66\uff0c\u8de8\u94fe\u5408\u7ea6\u8bbe\u7f6e\uff1a fabric\u8bc1\u4e66\u914d\u7f6e \u542f\u52a8Fabric\u7f51\u7edc\u65f6\uff0c\u4f1a\u751f\u6210\u6240\u6709\u8282\u70b9\uff08\u5305\u62ecOrder\u3001peer\u7b49\uff09\u7684\u8bc1\u4e66\u4fe1\u606f\uff0c\u5e76\u4fdd\u5b58\u5728 crypto-config\u6587\u4ef6\u5939\u4e2d\uff0cFabric\u63d2\u4ef6\u548cFabric\u4ea4\u4e92\u65f6\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u8bc1\u4e66\u3002 # \u590d\u5236\u60a8\u6240\u90e8\u7f72\u7684Fabric\u6240\u4ea7\u751f\u7684crypto-config\u6587\u4ef6\u5939 cp -r /path/to/crypto-config $HOME/.pier/fabric/ # \u590d\u5236Fabric\u4e0a\u9a8c\u8bc1\u4eba\u8bc1\u4e66 cp $HOME/.pier/fabric/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/signcerts/peer1.org2.example.com-cert.pem $HOME/.pier/fabric/fabric.validators 2. \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6config.yaml config.yaml \u6587\u4ef6\u8bb0\u5f55\u7684Fabric\u7f51\u7edc\u914d\u7f6e\uff08\u7528\u60a8\u7684\u7f51\u7edc\u62d3\u6251\u914d\u7f6e\u6587\u4ef6\u66ff\u6362\u8fd9\u4e2a\u6837\u4f8b\u6587\u4ef6\uff09\uff0c\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u628a\u6240\u6709\u7684\u8def\u5f84\u90fd\u4fee\u6539\u4e3a crypto-config \u6587\u4ef6\u5939\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\u3002 {CONFIG_PATH}/fabric/crypto-config =>\uff5e/.pier/fabric/crypto-config # \u66ff\u6362\u4e3a\u60a8\u90e8\u7f72\u7684Fabric\u7f51\u7edc\u7684\u62d3\u6251\u8bbe\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u540c\u65f6\u9700\u8981\u4fee\u6539\u6240\u6709\u7684Fabric \u7684IP\u5730\u5740\uff0c\u5982\uff1a url: grpcs://localhost:7050 => url: grpcs://10.1.16.48:7050 3. \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6 fabric.toml \u793a\u4f8b\u662f\u4ee5\u5b98\u65b9\u90e8\u7f72\u811a\u672c\u8fdb\u884c\u914d\u7f6e\uff1a addr = \"localhost:7053\" // \u82e5Fabric\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u8be5\u4e3a\u670d\u52a1\u5668\u5730\u5740 event_filter = \"interchain-event-name\" username = \"Admin\" ccid = \"broker\" // \u82e5\u90e8\u7f72\u8de8\u94febroker\u5408\u7ea6\u540d\u5b57\u4e0d\u662fbroker\u9700\u8981\u4fee\u6539 channel_id = \"mychannel\" org = \"org2\" \u81f3\u6b64\uff0c\u5bf9\u63a5ethereum\u548cfabric\u5e94\u7528\u94fe\u7684pier\u53ca\u5176\u63d2\u4ef6\u7684\u914d\u7f6e\u5df2\u7ecf\u5b8c\u6210\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u5728\u6d4b\u8bd5\u7f51\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u548c\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u540e\uff0c\u518d\u542f\u52a8pier\u8282\u70b9\u3002","title":"\u8de8\u94fe\u7f51\u5173\u63a5\u5165"},{"location":"scan/deploy_pier_testnet/#_1","text":"\u8de8\u94fe\u7f51\u5173Pier\u80fd\u591f\u652f\u6301\u4e1a\u52a1\u6240\u5728\u533a\u5757\u94fe\uff08\u4ee5\u4e0b\u7b80\u79f0 \u5e94\u7528\u94fe\uff09\u4fbf\u6377\u3001\u5feb\u901f\u7684\u63a5\u5165\u5230\u8de8\u94fe\u5e73\u53f0BitXHub\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u548c\u5176\u4ed6\u4e1a\u52a1\u533a\u5757\u94fe\u7684\u8de8\u94fe\u64cd\u4f5c\u3002\u76ee\u524d\u4e2d\u7ee7\u94fe\u548c\u8de8\u94fe\u7f51\u5173\u5df2\u7ecf\u652f\u6301 Fabric \u3001 Ethereum \u3001 BCOS \u3001 CITA \u548c Hyperchain \u4e94\u79cd\u5e94\u7528\u94fe\u63a5\u5165\u5e76\u5b8c\u6210\u8de8\u94fe\u4ea4\u6613\uff0c\u5982\u679c\u60a8\u6709\u5174\u8da3\uff0c\u4e5f\u53ef\u4ee5\u53c2\u4e0e\u5f00\u53d1\u9002\u914d\u53e6\u5916\u79cd\u7c7b\u5e94\u7528\u94fe\u7684\u63d2\u4ef6\u548c\u5408\u7ea6\u3002 \u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u9700\u8981\u63d0\u524d\u786e\u5b9a\u5e94\u7528\u94fe\u7c7b\u578b\uff08\u5bf9\u5e94\u4e0d\u540c\u7684\u63d2\u4ef6\u548c\u914d\u7f6e\uff09\uff0c\u4e5f\u9700\u8981\u63d0\u524d\u5728\u5bf9\u5e94\u7684\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\uff0c\u6211\u4eec\u5c06\u8de8\u94fe\u7f51\u5173\u7684\u90e8\u7f72\u4f9d\u6b21\u5206\u4e3a\u5982\u4e0b\u4e94\u4e2a\u6b65\u9aa4\uff1a \u90e8\u7f72\u8de8\u94fe\u5408\u7ea6 \u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u914d\u7f6e","title":"\u8de8\u94fe\u7f51\u5173\u90e8\u7f72"},{"location":"scan/deploy_pier_testnet/#_2","text":"\u8fd9\u4e00\u7ae0\u662f\u8981\u5728\u5e94\u7528\u94fe\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\uff0c \u6ce8\u610f\uff1a\u5728\u6b64\u64cd\u4f5c\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u786e\u8ba4\u5df2\u7ecf\u90e8\u7f72\u6709\u53ef\u63a5\u5165\u7684\u5e94\u7528\u94fe \u3002 \u6211\u4eec\u63d0\u4f9b\u4e86\u9488\u5bf9\u4e0d\u540c\u5e94\u7528\u94fe\u7684\u8de8\u94fe\u5408\u7ea6\uff0cbroker\u5408\u7ea6\u662f\u7ba1\u7406\u5408\u7ea6\uff0ctransfer\u5408\u7ea6\u662f\u4e1a\u52a1\u4ea4\u6613\u5408\u7ea6\uff0c\u9700\u8981\u8bf4\u660e\u7684\u662f transfer\u5408\u7ea6\u9700\u8981\u7ecf\u8fc7broker\u5408\u7ea6\u5ba1\u6838\u901a\u8fc7\u540e\u624d\u80fd\u53d1\u8d77\u6216\u63a5\u53d7\u8de8\u94fe\u4ea4\u6613\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\uff1a\u8c03\u7528broker\u5408\u7ea6\u7684audit\u65b9\u6cd5\uff0c\u5176\u53c2\u6570\u4f9d\u6b21\u662f\u4e1a\u52a1\u5408\u7ea6\u5730\u5740\u548c\u5408\u7ea6\u72b6\u6001\uff08\u6570\u5b571\u8868\u793a\u5ba1\u6838\u901a\u8fc7\uff0c\u6570\u5b572\u8868\u793a\u5ba1\u6838\u5931\u8d25\uff09\u3002 \u4e0b\u9762\u4ee5Ethereum\u548cFabric\u4e3a\u4f8b\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5176\u5b83\u7c7b\u578b\u7684\u5e94\u7528\u94fe\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u7684\u6b65\u9aa4\u57fa\u672c\u4e0a\u662f\u4e00\u81f4\u7684\u3002 Ethereum \u5728Ethereum\u4e0a\u90e8\u7f72\u5408\u7ea6\u7684\u5de5\u5177\u6709\u5f88\u591a\uff0c\u60a8\u53ef\u4ee5\u4f7f Remix \u8fdb\u884c\u5408\u7ea6\u7684\u7f16\u8bd1\u548c\u90e8\u7f72\uff0c\u8fd9\u91cc\u5173\u952e\u7684\u662f\u8de8\u94fe\u5408\u7ea6\u7684\u83b7\u53d6\u3002\u53ef\u4ee5\u4e0b\u8f7dpier-client-ethereum\u9879\u76ee\uff1a git clone https://github.com/meshplus/pier-client-ethereum.git && git checkout v1.6.2 \u8bf4\u660e\uff1a 1. \u5408\u7ea6\u6587\u4ef6\u5c31\u5728\u9879\u76ee\u7684example\u76ee\u5f55\u4e0b\uff0cbroker.sol\u662f\u8de8\u94fe\u7ba1\u7406\u5408\u7ea6\uff0ctransfer.sol\u662f\u793a\u4f8b\u4e1a\u52a1\u5408\u7ea6\uff1b 2. \u9996\u5148\u90e8\u7f72broker\u5408\u7ea6\uff0c\u7136\u540e\u5c06\u8fd4\u56de\u7684\u5408\u7ea6\u5730\u5740\u586b\u5165transfer\u5408\u7ea6\u4e2d\u7684 BrokerAddr \u5b57\u6bb5\uff0c\u8fd9\u6837\u4e1a\u52a1\u5408\u7ea6\u624d\u80fd\u6b63\u786e\u8de8\u94fe\u8c03\u7528\u3002 Fabric \u5728Fabric\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u5de5\u5177\u4e00\u822c\u662ffabric-cli\uff08\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u9879\u76ee\u7684\u4f7f\u7528\u8bf4\u660e \uff09\uff0c \u5728Fabric\u4e0a\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6\u7684\u8fc7\u7a0b\u548c\u90e8\u7f72\u5176\u5b83\u5408\u7ea6\u6ca1\u6709\u533a\u522b\uff0c\u53ea\u662f\u5408\u7ea6\u540d\u79f0\u548c\u4ee3\u7801\u6587\u4ef6\u9700\u8981\u66ff\u6362\uff0c\u4ee5\u4e0b\u64cd\u4f5c\u7684\u547d\u4ee4\u53ef\u4f9b\u53c2\u8003\uff0c\u9ed8\u8ba4\u5e94\u7528\u94fe\u662f\u4f7f\u7528\u7684fabric-sample\u9879\u76ee\u7684v1.4.3\u7248\u672c\u90e8\u7f72\u3002 Step1: \u5b89\u88c5\u90e8\u7f72\u5408\u7ea6\u7684\u5de5\u5177fabric-cli go get github.com/securekey/fabric-examples/fabric-cli/cmd/fabric-cli Step2: \u83b7\u53d6\u9700\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u6587\u4ef6\u5e76\u89e3\u538b git clone https://github.com/meshplus/pier-client-ethereum.git && git checkout v1.6.2 # \u9700\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u6587\u4ef6\u5c31\u5728example\u76ee\u5f55\u4e0b #\u89e3\u538b\u5373\u53ef unzip -q contracts.zip Step3: \u90e8\u7f72broker\u3001transfer\u5408\u7ea6 #\u5b89\u88c5\u548c\u793a\u4f8b\u5316broker\u5408\u7ea6 fabric-cli chaincode install --gopath ./contracts --ccp broker --ccid broker --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel fabric-cli chaincode instantiate --ccp broker --ccid broker --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel #\u5b89\u88c5\u548c\u793a\u4f8b\u5316transfer\u5408\u7ea6 fabric-cli chaincode install --gopath ./contracts --ccp transfer --ccid transfer --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel fabric-cli chaincode instantiate --ccp transfer --ccid transfer --config \"${CONFIG_YAML}\" --orgid org2 --user Admin --cid mychannel #\u4e1a\u52a1\u5408\u7ea6\u9700\u8981broker\u7ba1\u7406\u5408\u7ea6\u5ba1\u8ba1\u540e\uff0c\u624d\u80fd\u8fdb\u884c\u8de8\u94fe\u4ea4\u6613 fabric-cli chaincode invoke --cid mychannel --ccid=broker \\ --args='{\"Func\":\"audit\", \"Args\":[\"mychannel\", \"transfer\", \"1\"]}' \\ --user Admin --orgid org2 --payload --config \"${CONFIG_YAML}\"","title":"\u90e8\u7f72\u8de8\u94fe\u5408\u7ea6"},{"location":"scan/deploy_pier_testnet/#pier","text":"\u8fd9\u4e00\u7ae0\u662f\u8981\u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u7684\u914d\u7f6e\uff0c\u4e3a\u542f\u52a8pier\u8282\u70b9\u4f5c\u51c6\u5907\uff0c\u4e3b\u8981\u5206\u4e3apier\u672c\u8eab\u548c\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e\u4fee\u6539\u3002\u53ef\u4ee5\u901a\u8fc7\u6e90\u7801\u7f16\u8bd1\u548c\u4e8c\u8fdb\u5236\u4e0b\u8f7d\u7684\u65b9\u5f0f\u83b7\u53d6\u90e8\u7f72\u5305\u3002","title":"\u83b7\u53d6\u90e8\u7f72\u5305\u548c\u4fee\u6539Pier\u914d\u7f6e"},{"location":"scan/deploy_pier_testnet/#_3","text":"Ethereum \u6e90\u7801\u4e0b\u8f7d\u7f16\u8bd1 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier && git checkout v1.11.1 make prepare && make build # \u7f16\u8bd1Ethereum \u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-ethereum.git cd pier-client-ethereum && git checkout v1.11.1 make eth # \u8bf4\u660e\uff1a1.ethereum\u63d2\u4ef6\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u63d2\u4ef6\u9879\u76ee\u7684build\u76ee\u5f55\u751f\u6210eth-client\u6587\u4ef6\uff1b 2.pier\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u9879\u76eebin\u76ee\u5f55\u751f\u6210\u540c\u540d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4e8c\u8fdb\u5236\u4e0b\u8f7d \u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dPier\u53ca\u5176\u63d2\u4ef6\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a Pier\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u548c ethereum\u63d2\u4ef6\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u548c\u4e0b\u8f7d\u5373\u53ef\u3002 Fabric \u6e90\u7801\u4e0b\u8f7d\u7f16\u8bd1 # \u7f16\u8bd1\u8de8\u94fe\u7f51\u5173\u672c\u8eab cd $HOME git clone https://github.com/meshplus/pier.git cd pier && git checkout v1.11.1 make prepare && make build # \u7f16\u8bd1Fabric\u63d2\u4ef6 cd $HOME git clone https://github.com/meshplus/pier-client-fabric.git cd pier-client-fabric && git checkout v1.11.1 make fabric1.4 # \u8bf4\u660e\uff1a1.fabric\u63d2\u4ef6\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u63d2\u4ef6\u9879\u76ee\u7684build\u76ee\u5f55\u751f\u6210fabric-client-1.4\u6587\u4ef6\uff1b 2.pier\u7f16\u8bd1\u4e4b\u540e\u4f1a\u5728\u8de8\u94fe\u7f51\u5173\u9879\u76eebin\u76ee\u5f55\u751f\u6210\u540c\u540d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4e8c\u8fdb\u5236\u4e0b\u8f7d \u9664\u4e86\u6e90\u7801\u7f16\u8bd1\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4e0b\u8f7dPier\u53ca\u5176\u63d2\u4ef6\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff0c\u4e0b\u8f7d\u5730\u5740\u94fe\u63a5\u5982\u4e0b\uff1a Pier\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u548c fabric\u63d2\u4ef6\u4e8c\u8fdb\u5236\u5305\u4e0b\u8f7d \u94fe\u63a5\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548c\u4f9d\u8d56\u5e93\uff0c\u60a8\u53ea\u9700\u8ddf\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u548c\u4e0b\u8f7d\u5373\u53ef\u3002 \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u76f8\u4fe1\u60a8\u5df2\u7ecf\u7f16\u8bd1\u51fa\u4e86\u90e8\u7f72Pier\u548cfabric/ethereum\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0cPier\u8282\u70b9\u8fd0\u884c\u8fd8\u9700\u8981\u5916\u90e8\u4f9d\u8d56\u5e93\uff0c\u5747\u5728\u9879\u76eebuild\u76ee\u5f55\u4e0b\uff08Macos\u4f7f\u7528libwasmer.dylib\uff0cLinux\u4f7f\u7528libwasmer.so\uff09,\u5efa\u8bae\u5c06\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u548c\u9002\u914d\u7684\u4f9d\u8d56\u5e93\u6587\u4ef6\u62f7\u8d1d\u5230\u540c\u4e00\u76ee\u5f55\uff0c\u7136\u540e\u4f7f\u7528 export LD_LIBRARY_PATH=$(pwd) \u547d\u4ee4\u6307\u5b9a\u4f9d\u8d56\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u64cd\u4f5c\u3002","title":"\u83b7\u53d6\u90e8\u7f72\u5305"},{"location":"scan/deploy_pier_testnet/#pier_1","text":"\u5728\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u3001\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u7b49\u6b65\u9aa4\u4e4b\u524d\uff0c\u9700\u8981\u521d\u59cb\u5316\u8de8\u94fe\u7f51\u5173\u7684\u914d\u7f6e\u76ee\u5f55\uff0c\u4ee5\u7528\u6237\u76ee\u5f55\u4e0b\u7684pier\u4e3a\u4f8b\uff1a pier --repo=~/.pier init \u8be5\u547d\u4ee4\u4f1a\u751f\u6210\u8de8\u94fe\u7f51\u5173\u7684\u4e00\u4e9b\u57fa\u7840\u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c\u4f7f\u7528 tree \u547d\u4ee4\u53ef\u67e5\u770b\u76ee\u5f55\u4fe1\u606f\uff1a tree -L 1 ~/.pier \u251c\u2500\u2500 api \u251c\u2500\u2500 certs \u251c\u2500\u2500 key.json \u251c\u2500\u2500 node.priv \u2514\u2500\u2500 pier.toml 1 directory, 4 files pier.toml\u662f\u63cf\u8ff0\u94fe\u8de8\u94fe\u7f51\u5173\u542f\u52a8\u7684\u4e3b\u8981\u914d\u7f6e\uff0c\u4e00\u822c\u9700\u8981\u4fee\u6539\u7684\u662f\u7aef\u53e3\u4fe1\u606f\u3001\u4e2d\u7ee7\u94fe\u7684\u4fe1\u606f\u3001\u5e94\u7528\u94fe\u7684\u4fe1\u606f\u3002 \u4fee\u6539\u7aef\u53e3\u4fe1\u606f [port] # \u5982\u679c\u4e0d\u51b2\u7a81\u7684\u8bdd\uff0c\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539 http = 44544 pprof = 44555 \u4fee\u6539\u4e2d\u7ee7\u94fe\u4fe1\u606f\uff08\u4e00\u822c\u53ea\u4fee\u6539addrs\u5b57\u6bb5\uff0c\u6307\u5b9abitxhub\u7684\u8282\u70b9\u5730\u5740\uff09 [mode] type = \"relay\" # relay or direct [mode.relay] addrs = [\"localhost:60011\", \"localhost:60012\", \"localhost:60013\", \"localhost:60014\"] quorum = 2 validators = [ \"0x000f1a7a08ccc48e5d30f80850cf1cf283aa3abd\", \"0xe93b92f1da08f925bdee44e91e7768380ae83307\", \"0xb18c8575e3284e79b92100025a31378feb8100d6\", \"0x856E2B9A5FA82FD1B031D1FF6863864DBAC7995D\", ] \u4fee\u6539\u5e94\u7528\u94fe\u4fe1\u606f\uff08\u9488\u5bf9\u4e0d\u540c\u5e94\u7528\u94fe\u7c7b\u578b\u8fdb\u884c\u914d\u7f6e\uff09 Ethereum [appchain] # ethereum\u63d2\u4ef6\u6587\u4ef6\u7684\u540d\u79f0 plugin = \"eth-client\" # ethereum\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"ether\" Fabric [appchain] # fabric\u63d2\u4ef6\u6587\u4ef6\u7684\u540d\u79f0 plugin = \"fabric-client-1.4\" # ethereum\u914d\u7f6e\u6587\u4ef6\u5939\u5728\u8de8\u94fe\u7f51\u5173\u914d\u7f6e\u6587\u4ef6\u5939\u4e0b\u7684\u76f8\u5bf9\u8def\u5f84 config = \"fabric\"","title":"\u4fee\u6539Pier\u81ea\u8eab\u7684\u914d\u7f6e"},{"location":"scan/deploy_pier_testnet/#_4","text":"\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e\u76ee\u5f55\u5373\u662fpier.toml\u4e2d\u7684config\u5b57\u6bb5\uff0c\u5b83\u7684\u6a21\u677f\u5728 pier-client-ethereum \u6216 pier-client-ethereum \u9879\u76ee\uff08\u4e4b\u524d\u62c9\u53d6\u8de8\u94fe\u5408\u7ea6\u65f6\u5df2\u7ecfclone\uff09\uff0c\u76f4\u63a5\u5728GitHub\u4e0a\u4e0b\u8f7d\u4ee3\u7801\u5373\u53ef Ethereum # \u5c06ethereum\u63d2\u4ef6\u62f7\u8d1d\u5230plugins\u76ee\u5f55\u4e0b cp ether-client ~/.pier/plugins/ # \u5207\u6362\u5230pier-client-ethereum\u9879\u76ee\u8def\u5f84\u4e0b cd pier-client-ethereum cp ./config $HOME /.pier/ether \u5176\u4e2d\u91cd\u8981\u914d\u7f6e\u5982\u4e0b\uff1a \u251c\u2500\u2500 account.key \u251c\u2500\u2500 broker.abi \u251c\u2500\u2500 ether.validators \u251c\u2500\u2500 ethereum.toml \u251c\u2500\u2500 password \u2514\u2500\u2500 validating.wasm \u8bf4\u660e \uff1aaccount.key\u548cpassword\u5efa\u8bae\u6362\u6210\u5e94\u7528\u94fe\u4e0a\u7684\u771f\u5b9e\u8d26\u6237\uff0c\u4e14\u987b\u4fdd\u8bc1\u6709\u4e00\u5b9a\u91d1\u989d\uff08ethereum\u4e0a\u8c03\u7528\u5408\u7ea6\u9700\u8981gas\u8d39\uff09\uff0cbroker.abi\u53ef\u4ee5\u4f7f\u7528\u793a\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u60a8\u81ea\u5df1\u7f16\u8bd1/\u90e8\u7f72broker\u5408\u7ea6\u65f6\u8fd4\u56de\u7684abi\uff0cether.validators\u548cvalidating.wasm\u4e00\u822c\u4e0d\u9700\u8981\u4fee\u6539\u3002ethereum.toml\u662f\u9700\u8981\u91cd\u70b9\u4fee\u6539\u7684\uff0c\u9700\u8981\u6839\u636e\u5e94\u7528\u94fe\u5b9e\u9645\u60c5\u51b5\u586b\u5199ethereum\u7f51\u7edc\u5730\u5740\u3001broker\u5408\u7ea6\u5730\u5740\u53caabi\uff0c\u8d26\u6237\u7684key\u7b49\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a [ether] addr = \"wss://kovan.infura.io/ws/v3/cc512c8c74c94938aef1c833e1b50b9a\" name = \"ether-kovan\" ## \u6b64\u5904\u5408\u7ea6\u5730\u5740\u9700\u8981\u66ff\u6362\u6210\u53d8\u91cf\u4ee3\u8868\u7684\u5b9e\u9645\u5b57\u7b26\u4e32 contract_address = \"$brokerAddr-kovan\" abi_path = \"broker.abi\" key_path = \"account.key\" password = \"password\" Fabric # \u5c06fabric\u63d2\u4ef6\u62f7\u8d1d\u5230plugins\u76ee\u5f55\u4e0b cp fabric-client-1.4 ~/.pier/plugins/ # \u5207\u6362\u5230pier-client-fabric\u9879\u76ee\u8def\u5f84\u4e0b cd pier-client-fabric cp ./config $HOME /.pier/fabric \u5176\u4e2d\u91cd\u8981\u914d\u7f6e\u5982\u4e0b\uff1a \u251c\u2500\u2500 crypto-config/ \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 fabric.toml \u251c\u2500\u2500 fabric.validators \u2514\u2500\u2500 validating.wasm \u63a5\u4e0b\u6765\u4e3b\u8981\u4fee\u6539Fabric\u7f51\u7edc\u914d\u7f6e\uff0c\u9a8c\u8bc1\u8bc1\u4e66\uff0c\u8de8\u94fe\u5408\u7ea6\u8bbe\u7f6e\uff1a fabric\u8bc1\u4e66\u914d\u7f6e \u542f\u52a8Fabric\u7f51\u7edc\u65f6\uff0c\u4f1a\u751f\u6210\u6240\u6709\u8282\u70b9\uff08\u5305\u62ecOrder\u3001peer\u7b49\uff09\u7684\u8bc1\u4e66\u4fe1\u606f\uff0c\u5e76\u4fdd\u5b58\u5728 crypto-config\u6587\u4ef6\u5939\u4e2d\uff0cFabric\u63d2\u4ef6\u548cFabric\u4ea4\u4e92\u65f6\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u8bc1\u4e66\u3002 # \u590d\u5236\u60a8\u6240\u90e8\u7f72\u7684Fabric\u6240\u4ea7\u751f\u7684crypto-config\u6587\u4ef6\u5939 cp -r /path/to/crypto-config $HOME/.pier/fabric/ # \u590d\u5236Fabric\u4e0a\u9a8c\u8bc1\u4eba\u8bc1\u4e66 cp $HOME/.pier/fabric/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/signcerts/peer1.org2.example.com-cert.pem $HOME/.pier/fabric/fabric.validators 2. \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6config.yaml config.yaml \u6587\u4ef6\u8bb0\u5f55\u7684Fabric\u7f51\u7edc\u914d\u7f6e\uff08\u7528\u60a8\u7684\u7f51\u7edc\u62d3\u6251\u914d\u7f6e\u6587\u4ef6\u66ff\u6362\u8fd9\u4e2a\u6837\u4f8b\u6587\u4ef6\uff09\uff0c\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u628a\u6240\u6709\u7684\u8def\u5f84\u90fd\u4fee\u6539\u4e3a crypto-config \u6587\u4ef6\u5939\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\u3002 {CONFIG_PATH}/fabric/crypto-config =>\uff5e/.pier/fabric/crypto-config # \u66ff\u6362\u4e3a\u60a8\u90e8\u7f72\u7684Fabric\u7f51\u7edc\u7684\u62d3\u6251\u8bbe\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u540c\u65f6\u9700\u8981\u4fee\u6539\u6240\u6709\u7684Fabric \u7684IP\u5730\u5740\uff0c\u5982\uff1a url: grpcs://localhost:7050 => url: grpcs://10.1.16.48:7050 3. \u4fee\u6539Plugin\u914d\u7f6e\u6587\u4ef6 fabric.toml \u793a\u4f8b\u662f\u4ee5\u5b98\u65b9\u90e8\u7f72\u811a\u672c\u8fdb\u884c\u914d\u7f6e\uff1a addr = \"localhost:7053\" // \u82e5Fabric\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u8be5\u4e3a\u670d\u52a1\u5668\u5730\u5740 event_filter = \"interchain-event-name\" username = \"Admin\" ccid = \"broker\" // \u82e5\u90e8\u7f72\u8de8\u94febroker\u5408\u7ea6\u540d\u5b57\u4e0d\u662fbroker\u9700\u8981\u4fee\u6539 channel_id = \"mychannel\" org = \"org2\" \u81f3\u6b64\uff0c\u5bf9\u63a5ethereum\u548cfabric\u5e94\u7528\u94fe\u7684pier\u53ca\u5176\u63d2\u4ef6\u7684\u914d\u7f6e\u5df2\u7ecf\u5b8c\u6210\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u5728\u6d4b\u8bd5\u7f51\u8fdb\u884c\u5e94\u7528\u94fe\u6ce8\u518c\u548c\u9a8c\u8bc1\u89c4\u5219\u90e8\u7f72\u540e\uff0c\u518d\u542f\u52a8pier\u8282\u70b9\u3002","title":"\u4fee\u6539\u5e94\u7528\u94fe\u63d2\u4ef6\u7684\u914d\u7f6e"},{"location":"sdk/gosdk/","text":"Go SDK 1 \u524d\u8a00 \u6b64SDK\u6587\u6863\u9762\u5411BitXHub\u5e73\u53f0\u7684\u5e94\u7528\u5f00\u53d1\u8005\uff0c\u63d0\u4f9bBitXHub Go SDK\u7684\u4f7f\u7528\u6307\u5357\u3002 2 \u63a5\u53e3\u4f7f\u7528\u6d41\u7a0b\u793a\u4f8b 2.1 \u57fa\u7840\u6d41\u7a0b\u793a\u4f8b \u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u63a5\u53e3\u7684\u4f7f\u7528\uff0c\u672c\u793a\u4f8b\u5c06\u4ece\u521d\u59cb\u5316Client\uff0c\u90e8\u7f72\u5408\u7ea6\uff0c\u8c03\u7528\u5408\u7ea6\u548c\u8fd4\u56de\u503c\u89e3\u6790\u8fd9\u4e2a\u5927\u81f4\u6d41\u7a0b\u4f5c\u4ecb\u7ecd\uff0c\u5177\u4f53\u8be6\u7ec6\u63a5\u53e3\u53ef\u53c2\u8003\u7b2c\u4e09\u7ae0SDK\u6587\u6863\u3002 2.1.1 \u521d\u59cb\u5316Client \u914d\u7f6e\u96c6\u7fa4\u7f51\u7edc\u5730\u5740\u3001\u65e5\u5fd7\u4ee5\u53ca\u5bc6\u94a5\u3002 \u4f8b\u5982\uff1a privKey , err := asym . GenerateKeyPair ( crypto . Secp256k1 ) var cfg = & config { addrs : [] string { \"localhost:60011\" , \"localhost:60012\" , \"localhost:60013\" , \"localhost:60014\" , }, logger : logrus . New (), privateKey : privKey , } \u521d\u59cb\u5316Client\uff0c\u6240\u6709RPC\u64cd\u4f5c\u5c06\u901a\u8fc7\u8be5\u63a5\u53e3\u4e0eBitXHub\u4ea4\u4e92\u3002 \u4f8b\u5982\uff1a cli , err := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( cfg . privateKey ), ) 2.1.2 \u90e8\u7f72\u5408\u7ea6 \u5f00\u53d1\u8005\u9700\u63d0\u4f9b\u5df2\u7ecf\u7f16\u8bd1\u7684 WebAssembly \u6587\u4ef6\u3002 \u4f8b\u5982\uff1a contract , err := ioutil . ReadFile ( \"./testdata/example.wasm\" ) \u901a\u8fc7client\u90e8\u7f72\u5408\u7ea6\uff0c\u90e8\u7f72\u5b8c\u6210\u540e\u53ef\u4ee5\u83b7\u53d6\u5408\u7ea6\u5730\u5740 addr \u3002 \u4f8b\u5982\uff1a addr , err := cli . DeployContract ( contract , nil ) // \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u8de8\u94fe\u4ea4\u6613nonce\uff0c\u4e3anil\u65f6\u53ef\u4ee5\u81ea\u52a8\u83b7\u53d6 2.1.3 \u8c03\u7528\u5408\u7ea6 \u8c03\u7528\u5408\u7ea6\u9700\u4f20\u5165\u5408\u7ea6\u5730\u5740\u3001\u5408\u7ea6\u65b9\u6cd5\u540d\u548c\u5bf9\u5e94\u7684\u53c2\u6570\u3002 \u4f8b\u5982\uff1a result , err := cli . InvokeXVMContract ( addr , \"a\" , nil , Int32 ( 1 ), Int32 ( 2 )) // \u65b9\u6cd5\u540d\u4e3aa\uff0c\u8de8\u94fe\u4ea4\u6613nonce\uff0c\u4f20\u53c21\uff0c\u4f20\u53c22 2.1.4 \u8fd4\u56de\u503c\u89e3\u6790 \u5f97\u5230\u8fd4\u56de\u503c\u7ed3\u679c\u540e\uff0c\u83b7\u5f97\u72b6\u6001\u7801\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u8c03\u7528\u6210\u529f\uff0c\u82e5\u8c03\u7528\u6210\u529f\uff0c\u89e3\u6790\u8fd4\u56de\u503c\u53ef\u770b\u5230\u8c03\u7528\u4e4b\u540e\u7684\u7ed3\u679c\u3002 \u4f8b\u5982\uff1a if cli . CheckReceipt ( result ) { fmt . Println ( string ( result . Ret )) } 2.1.5 \u5b8c\u6574\u793a\u4f8b //\u83b7\u53d6wasm\u5408\u7ea6\u5b57\u8282\u6570\u7ec4 contract , _ := ioutil . ReadFile ( \"./testdata/example.wasm\" ) //\u90e8\u7f72\u5408\u7ea6\uff0c\u83b7\u53d6\u5408\u7ea6\u5730\u5740 addr , _ := cli . DeployContract ( contract , nil ) //\u8c03\u7528\u5408\u7ea6\uff0c\u83b7\u53d6\u4ea4\u6613\u56de\u6267 result , _ := cli . InvokeXVMContract ( addr , \"a\" , nil , Int32 ( 1 ), Int32 ( 2 )) //\u5224\u65ad\u5408\u7ea6\u8c03\u7528\u4ea4\u6613\u6210\u529f\u4e0e\u5426\uff0c\u6253\u5370\u5408\u7ea6\u8c03\u7528\u6570\u636e if cli . CheckReceipt ( result ) { fmt . Println ( string ( result . Ret )) } 2.2 \u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u793a\u4f8b \u672c\u793a\u4f8b\u5c55\u793a\u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u4ee5\u53ca\u6ce8\u9500\u64cd\u4f5c\u3002 2.2.1 \u5e94\u7528\u94fe\u6ce8\u518c \u8c03\u7528BVM\u5408\u7ea6\u7684 Register \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u518c\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a args := [] * pb . Arg { rpcx . String ( \"\" ), //validators rpcx . Int32 ( 0 ), //consensus_type rpcx . String ( \"hyperchain\" ), //chain_type rpcx . String ( \"\u7a0e\u52a1\u94fe\" ), //name rpcx . String ( \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" ), //desc rpcx . String ( \"1.8\" ), //version } ret , err := cli . InvokeBVMContract ( constant . InterchainContractAddr . Address (), \"Register\" , nil , args ... ) \u83b7\u53d6\u5230\u6210\u529f\u7684\u4ea4\u6613\u56de\u6267\u540e\uff0c\u89e3\u6790\u4ea4\u6613\u56de\u6267\u5185\u5bb9\u3002 \u4f8b\u5982\uff1a { \"id\" : \"0x5098cc26b0d485145fb8258d2e79c49886cd4662\" , \\\\ \u5e94\u7528\u94feID \"name\" : \"\u7a0e\u52a1\u94fe\" , \"validators\" : \"\" , \"consensus_type\" : 0 , \"status\" : 0 , \"chain_type\" : \"hyperchain\" , \"desc\" : \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" , \"version\" : \"1.8\" } 2.2.2 \u5e94\u7528\u94fe\u5ba1\u6838 \u8c03\u7528BVM\u5408\u7ea6\u7684 Aduit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a args := [] * pb . Arg { rpcx . String ( appchainID ), rpcx . Int32 ( 1 ), //\u5ba1\u6838\u901a\u8fc7 rpcx . String ( \"\" ), //desc } ret , err = cli . InvokeBVMContract ( constant . InterchainContractAddr . Address (), \"Aduit\" , nil , args ... ) 2.2.3 \u5e94\u7528\u94fe\u6ce8\u9500 \u8c03\u7528BVM\u5408\u7ea6\u7684 DeleteAppchain \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u9500\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a ret , err = cli . InvokeBVMContract ( constant . InterchainContractAddr . Address (), \"DeleteAppchain\" , nil , rpcx . String ( appchainID )) 2.3 \u9a8c\u8bc1\u89c4\u5219\u4f7f\u7528\u793a\u4f8b \u672c\u793a\u4f8b\u5c55\u793a\u9a8c\u8bc1\u89c4\u5219\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u64cd\u4f5c\uff0c\u4ee5\u53caWebAssembly\u5408\u7ea6\u793a\u4f8b\u3002 2.3.1 \u9a8c\u8bc1\u89c4\u5219\u6ce8\u518c \u8c03\u7528BVM\u5408\u7ea6\u7684 RegisterRule \u65b9\u6cd5\uff0c\u5411\u5e94\u7528\u94fe\u6ce8\u518c\u9a8c\u8bc1\u89c4\u5219\uff08WebAssembly\u5408\u7ea6\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5148\u6ce8\u518c\u5e94\u7528\u94fe\u548c\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u5408\u7ea6\uff0c\u7136\u540e\u83b7\u53d6\u5e94\u7528\u94feID\u548c\u5408\u7ea6\u5730\u5740\u3002 \u4f8b\u5982\uff1a ret , err = cli . InvokeBVMContract ( constant . RoleContractAddr . Address (), \"RegisterRule\" , nil , rpcx . String ( chainAddr ), rpcx . String ( contractAddr )) 2.3.2 \u9a8c\u8bc1\u89c4\u5219\u5ba1\u6838 \u8c03\u7528BVM\u5408\u7ea6\u7684 Aduit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u9a8c\u8bc1\u89c4\u5219\u3002 \u4f8b\u5982\uff1a args := [] * pb . Arg { rpcx . String ( appchainID ), rpcx . Int32 ( 1 ), //\u5ba1\u6838\u901a\u8fc7 rpcx . String ( \"\" ), //desc } ret , err = cli . InvokeBVMContract ( constant . RuleManagerContractAddr . Address (), \"Aduit\" , nil , args ... ) 2.3.3 \u9a8c\u8bc1\u89c4\u5219\u793a\u4f8b\uff08WebAssembly\u5408\u7ea6, Fabric\u5b9e\u4f8b\uff09 extern crate protobuf ; extern crate sha2 ; use crate :: crypto :: ecdsa ; use crate :: model :: transaction ; use sha2 :: { Digest , Sha256 }; pub fn verify ( proof : & [ u8 ], validator : & [ u8 ]) -> bool { let cap = protobuf :: parse_from_bytes :: < transaction :: ChaincodeActionPayload > ( proof ). expect ( \"error\" ); let cap_act = cap . action . unwrap (); let endorsers = cap_act . endorsements ; let mut digest = Sha256 :: new (); let mut payload = cap_act . proposal_response_payload . to_owned (); payload . extend ( & endorsers [ 0 ]. endorser ); digest . input ( & payload ); let digest_byte = digest . result (); return ecdsa :: verify ( & endorsers [ 0 ]. signature , & digest_byte , & validator , ecdsa :: EcdsaAlgorithmn :: P256 , ); } 3 SDK\u6587\u6863 3.1 \u521d\u59cb\u5316\u548c\u542f\u52a8 3.1.1 \u521d\u59cb\u5316Client \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u83b7\u53d6\u4e0e\u4e2d\u7ee7\u94fe\u4ea4\u4e92\u7684Client\u3002 \u53c2\u6570\uff1a opts \u662f\u4e2d\u7ee7\u94fe\u7684\u7f51\u7edc\u5730\u5740\uff0c\u65e5\u5fd7\u4ee5\u53ca\u5bc6\u94a5\u7684\u914d\u7f6e\u3002 func New ( opts ... Option ) ( * ChainClient , error ) 3.1.2 \u505c\u6b62Client \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5c06\u4e0e\u4e2d\u7ee7\u94fe\u4ea4\u4e92\u7684 Client \u5173\u95ed\u3002 func Stop () error 3.2 \u4ea4\u6613\u63a5\u53e3 3.2.1 \u53d1\u9001\u4ea4\u6613 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u53d1\u9001\u4ea4\u6613\uff0c\u4ea4\u6613\u7c7b\u578b\u5305\u62ec\u666e\u901a\u4ea4\u6613\u3001\u8de8\u94fe\u4ea4\u6613\u548c\u667a\u80fd\u5408\u7ea6\u3002 \u53c2\u6570\uff1a tx \u4ea4\u6613\u5b9e\u4f8b\u3002 opts \u8de8\u94fe\u4ea4\u6613nonce\u3002 func SendTransaction ( tx * pb . Transaction , opts * TransactOpts ) ( string , error ) 3.2.2 \u67e5\u8be2\u4ea4\u6613\u56de\u6267 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u67e5\u8be2\u4ea4\u6613\u56de\u6267\u3002 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 func GetReceipt ( hash string ) ( * pb . Receipt , error ) \u7528\u4f8b\uff1a func TestChainClient_SendTransactionWithReceipt ( t * testing . T ) { // \u751f\u6210from\u79c1\u94a5 privKey , _ := asym . GenerateKeyPair ( crypto . Secp256k1 ) // \u751f\u6210to\u79c1\u94a5 toPrivKey , _ := asym . GenerateKeyPair ( crypto . Secp256k1 ) // \u914d\u7f6eClient cli , _ := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( privKey ), ) // \u83b7\u53d6from\u5730\u5740 from , _ := privKey . PublicKey (). Address () // \u83b7\u53d6to\u5730\u5740 to , _ := toPrivKey . PublicKey (). Address () // \u6784\u5efa\u4ea4\u6613\u4f53 tx := & pb . Transaction { From : from , To : to , Data : & pb . TransactionData { Amount : 10 , }, Timestamp : time . Now (). UnixNano (), Nonce : rand . Int63 (), } // \u7528from\u7684\u79c1\u94a5\u7b7e\u540d\u4ea4\u6613 _ = tx . Sign ( privKey ) // \u901a\u8fc7client\u53d1\u9001\u4ea4\u6613 hash , _ := cli . SendTransaction ( tx , nil ) // \u83b7\u53d6\u4ea4\u6613\u56de\u6267\uff0c\u5224\u65ad\u4ea4\u6613\u6267\u884c\u72b6\u6001 ret , _ := cli . GetReceipt ( hash ) require . Equal ( t , tx . Hash (). String (), ret . TxHash . String ()) // \u505c\u6b62client _ = cli . Stop () } 3.2.3 \u67e5\u8be2\u4ea4\u6613 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u67e5\u8be2\u4ea4\u6613\u3002 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 func GetTransaction ( hash string ) ( * proto . GetTransactionResponse , error ) 3.3 \u5408\u7ea6\u63a5\u53e3 \u5408\u7ea6\u7c7b\u578b\uff1a BVM\uff1aBitXHub\u5185\u7f6e\u5408\u7ea6\u3002 XVM\uff1aWebAssembly\u5408\u7ea6\u3002 3.3.1 \u90e8\u7f72\u5408\u7ea6 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u90e8\u7f72XVM\u5408\u7ea6\uff0c\u8fd4\u56de\u5408\u7ea6\u5730\u5740\u3002 \u53c2\u6570\uff1a contract wasm\u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u6570\u636e\u3002 opts \u8de8\u94fe\u4ea4\u6613nonce\u3002 func DeployContract ( contract [] byte , opts * TransactOpts ) ( contractAddr * types . Address , err error ) 3.3.2 \u8c03\u7528\u5408\u7ea6 \u7528\u9014\uff1a\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u8c03\u7528\u5408\u7ea6\u83b7\u53d6\u4ea4\u6613\u56de\u6267\u3002 \u53c2\u6570\uff1a vmType \u5408\u7ea6\u7c7b\u578b\uff1aBVM\u548cXVM\uff1b address \u5408\u7ea6\u5730\u5740\uff1b method \u5408\u7ea6\u65b9\u6cd5\uff1b opts \u8de8\u94fe\u4ea4\u6613nonce\uff1b args \u5408\u7ea6\u65b9\u6cd5\u53c2\u6570\u3002 func InvokeContract ( vmType pb . TransactionData_VMType , address types . Address , method string , opts * TransactOpts , args ...* pb . Arg ) ( * pb . Receipt , error ) \u8c03\u7528XVM\u5408\u7ea6\u7528\u4f8b\uff1a func TestChainClient_InvokeXVMContract ( t * testing . T ) { privKey , err := asym . GenerateKeyPair ( crypto . Secp256k1 ) require . Nil ( t , err ) cli , err := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( privKey ), ) require . Nil ( t , err ) contract , err := ioutil . ReadFile ( \"./testdata/example.wasm\" ) require . Nil ( t , err ) addr , err := cli . DeployContract ( contract , nil ) require . Nil ( t , err ) result , err := cli . InvokeXVMContract ( addr , \"a\" , nil , Int32 ( 1 ), Int32 ( 2 )) require . Nil ( t , err ) require . Equal ( t , \"336\" , string ( result . Ret )) } \u8c03\u7528BVM\u5408\u7ea6\u7528\u4f8b\uff1a func TestChainClient_InvokeBVMContract ( t * testing . T ) { privKey , err := asym . GenerateKeyPair ( crypto . Secp256k1 ) require . Nil ( t , err ) cli , err := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( privKey ), ) require . Nil ( t , err ) result , err := cli . InvokeBVMContract ( constant . StoreContractAddr . Address (), \"Set\" , nil , String ( \"a\" ), String ( \"10\" )) require . Nil ( t , err ) require . Nil ( t , result . Ret ) res , err := cli . InvokeBVMContract ( constant . StoreContractAddr . Address (), \"Get\" , nil , String ( \"a\" )) require . Nil ( t , err ) require . Equal ( t , string ( res . Ret ), \"10\" ) } 3.4 \u533a\u5757\u63a5\u53e3 3.4.1 \u67e5\u8be2\u533a\u5757 \u53c2\u6570\uff1a value \u533a\u5757\u9ad8\u5ea6\u6216\u8005\u533a\u5757\u54c8\u5e0c\u3002 blockType \u67e5\u8be2\u7c7b\u578b\u3002 GetBlock ( value string , blockType pb . GetBlockRequest_Type ) ( * pb . Block , error ) 3.4.2 \u6279\u91cf\u67e5\u8be2\u533a\u5757 \u7528\u9014\uff1a\u6279\u91cf\u67e5\u8be2\u533a\u5757\uff0c\u8fd4\u56de\u6307\u5b9a\u5757\u9ad8\u5ea6\u8303\u56f4\uff08start\u5230end\uff09\u7684\u533a\u5757\u4fe1\u606f\u3002 \u53c2\u6570\uff1a start \u6307\u5b9a\u8303\u56f4\u7684\u8d77\u59cb\u533a\u5757\u9ad8\u5ea6\u3002 end \u6307\u5b9a\u8303\u56f4\u7684\u7ed3\u675f\u533a\u5757\u9ad8\u5ea6\u3002 func GetBlocks ( start uint64 , end uint64 ) ( * pb . GetBlocksResponse , error ) 3.4.3 \u67e5\u8be2\u533a\u5757Meta \u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u94fe\u7684\u9ad8\u5ea6\u548c\u533a\u5757\u54c8\u5e0c\u3002 func GetChainMeta () ( * pb . ChainMeta , error ) 3.4.4 \u67e5\u8be2\u533a\u5757\u94fe\u72b6\u6001 \u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u533a\u5757\u94fe\u5171\u8bc6\u7684\u72b6\u6001\uff08\u6b63\u5e38\u6216\u8005\u4e0d\u6b63\u5e38\uff09\u3002 func GetChainStatus () ( * pb . Response , error ) 3.5 \u8ba2\u9605\u63a5\u53e3 3.5.1 \u8ba2\u9605\u4e8b\u4ef6 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u53d1\u8d77\u8ba2\u9605\u4e8b\u4ef6\u7684\u3002 \u53c2\u6570\uff1a type \u4e8b\u4ef6\u7c7b\u578b\uff0c\u5305\u542b\u533a\u5757\u4e8b\u4ef6\uff0c\u533a\u5757\u5934\u4e8b\u4ef6\uff0c\u8de8\u94fe\u4ea4\u6613\u4e8b\u4ef6\u3002 func Subscribe ( ctx context . Context , typ pb . SubscriptionRequest_Type , extra [] byte ) ( <- chan interface {}, error ) \u7528\u4f8b\uff1a func TestChainClient_Subscribe ( t * testing . T ) { privKey , err := asym . GenerateKeyPair ( crypto . Secp256k1 ) require . Nil ( t , err ) from , err := privKey . PublicKey (). Address () require . Nil ( t , err ) cli , err := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( privKey ), ) require . Nil ( t , err ) ctx , cancel := context . WithCancel ( context . Background ()) defer cancel () c , err := cli . Subscribe ( ctx , pb . SubscriptionRequest_BLOCK , nil ) assert . Nil ( t , err ) go func () { tx := & pb . Transaction { From : from , To : from , Timestamp : time . Now (). UnixNano (), Nonce : rand . Int63 (), } err = tx . Sign ( privKey ) require . Nil ( t , err ) hash , err := cli . SendTransaction ( tx , nil ) require . Nil ( t , err ) require . EqualValues ( t , 66 , len ( hash )) }() for { select { case block := <- c : if block == nil { assert . Error ( t , fmt . Errorf ( \"channel is closed\" )) return } if err := cli . Stop (); err != nil { return } return case <- ctx . Done (): return } } } 3.5.2 \u83b7\u53d6MerkleWrapper \u7528\u9014\uff1a\u83b7\u53d6\u6307\u5b9a\u533a\u5757\u9ad8\u5ea6\u8303\u56f4\u7684MerkleWrapper \u53c2\u6570\uff1a pid \u5e94\u7528\u94feID\u3002 begin \u8d77\u59cb\u533a\u5757\u9ad8\u5ea6\u3002 end \u7ed3\u675f\u533a\u5757\u9ad8\u5ea6\u3002 ch Merkle Wrapper\u7684\u901a\u9053\u3002 func GetInterchainTxWrappers ( ctx context . Context , pid string , begin , end uint64 , ch chan <- * pb . InterchainTxWrapper ) error 3.6 \u5176\u5b83\u63a5\u53e3 3.6.1 \u67e5\u8be2\u8282\u70b9\u7f51\u7edc\u4fe1\u606f \u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u533a\u5757\u94fe\u7f51\u7edc\u7684\u8282\u70b9\u4fe1\u606f\u3002 func GetNetworkMeta () ( * pb . Response , error ) 3.6.2 \u67e5\u8be2\u8d26\u6237\u4f59\u989d \u53c2\u6570\uff1a address \u5730\u5740\u3002 func GetAccountBalance ( address string ) ( * pb . Response , error ) 3.6.3 \u5220\u9664\u8282\u70b9 \u7528\u9014\uff1a\u5220\u9664\u533a\u5757\u94fe\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\uff08\u987b\u5f80f+1\u4e2a\u8282\u70b9\u53d1\u9001\u8bf7\u6c42\u624d\u53ef\u4ee5\u5220\u9664\uff09 \u53c2\u6570\uff1a pid \u8282\u70b9\u7684pid func DelVPNode ( pid string ) ( * pb . Response , error )","title":"GoSDK\u4f7f\u7528\u6587\u6863"},{"location":"sdk/gosdk/#go-sdk","text":"","title":"Go SDK"},{"location":"sdk/gosdk/#1","text":"\u6b64SDK\u6587\u6863\u9762\u5411BitXHub\u5e73\u53f0\u7684\u5e94\u7528\u5f00\u53d1\u8005\uff0c\u63d0\u4f9bBitXHub Go SDK\u7684\u4f7f\u7528\u6307\u5357\u3002","title":"1 \u524d\u8a00"},{"location":"sdk/gosdk/#2","text":"","title":"2 \u63a5\u53e3\u4f7f\u7528\u6d41\u7a0b\u793a\u4f8b"},{"location":"sdk/gosdk/#21","text":"\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u63a5\u53e3\u7684\u4f7f\u7528\uff0c\u672c\u793a\u4f8b\u5c06\u4ece\u521d\u59cb\u5316Client\uff0c\u90e8\u7f72\u5408\u7ea6\uff0c\u8c03\u7528\u5408\u7ea6\u548c\u8fd4\u56de\u503c\u89e3\u6790\u8fd9\u4e2a\u5927\u81f4\u6d41\u7a0b\u4f5c\u4ecb\u7ecd\uff0c\u5177\u4f53\u8be6\u7ec6\u63a5\u53e3\u53ef\u53c2\u8003\u7b2c\u4e09\u7ae0SDK\u6587\u6863\u3002","title":"2.1 \u57fa\u7840\u6d41\u7a0b\u793a\u4f8b"},{"location":"sdk/gosdk/#211-client","text":"\u914d\u7f6e\u96c6\u7fa4\u7f51\u7edc\u5730\u5740\u3001\u65e5\u5fd7\u4ee5\u53ca\u5bc6\u94a5\u3002 \u4f8b\u5982\uff1a privKey , err := asym . GenerateKeyPair ( crypto . Secp256k1 ) var cfg = & config { addrs : [] string { \"localhost:60011\" , \"localhost:60012\" , \"localhost:60013\" , \"localhost:60014\" , }, logger : logrus . New (), privateKey : privKey , } \u521d\u59cb\u5316Client\uff0c\u6240\u6709RPC\u64cd\u4f5c\u5c06\u901a\u8fc7\u8be5\u63a5\u53e3\u4e0eBitXHub\u4ea4\u4e92\u3002 \u4f8b\u5982\uff1a cli , err := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( cfg . privateKey ), )","title":"2.1.1 \u521d\u59cb\u5316Client"},{"location":"sdk/gosdk/#212","text":"\u5f00\u53d1\u8005\u9700\u63d0\u4f9b\u5df2\u7ecf\u7f16\u8bd1\u7684 WebAssembly \u6587\u4ef6\u3002 \u4f8b\u5982\uff1a contract , err := ioutil . ReadFile ( \"./testdata/example.wasm\" ) \u901a\u8fc7client\u90e8\u7f72\u5408\u7ea6\uff0c\u90e8\u7f72\u5b8c\u6210\u540e\u53ef\u4ee5\u83b7\u53d6\u5408\u7ea6\u5730\u5740 addr \u3002 \u4f8b\u5982\uff1a addr , err := cli . DeployContract ( contract , nil ) // \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u8de8\u94fe\u4ea4\u6613nonce\uff0c\u4e3anil\u65f6\u53ef\u4ee5\u81ea\u52a8\u83b7\u53d6","title":"2.1.2 \u90e8\u7f72\u5408\u7ea6"},{"location":"sdk/gosdk/#213","text":"\u8c03\u7528\u5408\u7ea6\u9700\u4f20\u5165\u5408\u7ea6\u5730\u5740\u3001\u5408\u7ea6\u65b9\u6cd5\u540d\u548c\u5bf9\u5e94\u7684\u53c2\u6570\u3002 \u4f8b\u5982\uff1a result , err := cli . InvokeXVMContract ( addr , \"a\" , nil , Int32 ( 1 ), Int32 ( 2 )) // \u65b9\u6cd5\u540d\u4e3aa\uff0c\u8de8\u94fe\u4ea4\u6613nonce\uff0c\u4f20\u53c21\uff0c\u4f20\u53c22","title":"2.1.3 \u8c03\u7528\u5408\u7ea6"},{"location":"sdk/gosdk/#214","text":"\u5f97\u5230\u8fd4\u56de\u503c\u7ed3\u679c\u540e\uff0c\u83b7\u5f97\u72b6\u6001\u7801\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u8c03\u7528\u6210\u529f\uff0c\u82e5\u8c03\u7528\u6210\u529f\uff0c\u89e3\u6790\u8fd4\u56de\u503c\u53ef\u770b\u5230\u8c03\u7528\u4e4b\u540e\u7684\u7ed3\u679c\u3002 \u4f8b\u5982\uff1a if cli . CheckReceipt ( result ) { fmt . Println ( string ( result . Ret )) }","title":"2.1.4 \u8fd4\u56de\u503c\u89e3\u6790"},{"location":"sdk/gosdk/#215","text":"//\u83b7\u53d6wasm\u5408\u7ea6\u5b57\u8282\u6570\u7ec4 contract , _ := ioutil . ReadFile ( \"./testdata/example.wasm\" ) //\u90e8\u7f72\u5408\u7ea6\uff0c\u83b7\u53d6\u5408\u7ea6\u5730\u5740 addr , _ := cli . DeployContract ( contract , nil ) //\u8c03\u7528\u5408\u7ea6\uff0c\u83b7\u53d6\u4ea4\u6613\u56de\u6267 result , _ := cli . InvokeXVMContract ( addr , \"a\" , nil , Int32 ( 1 ), Int32 ( 2 )) //\u5224\u65ad\u5408\u7ea6\u8c03\u7528\u4ea4\u6613\u6210\u529f\u4e0e\u5426\uff0c\u6253\u5370\u5408\u7ea6\u8c03\u7528\u6570\u636e if cli . CheckReceipt ( result ) { fmt . Println ( string ( result . Ret )) }","title":"2.1.5 \u5b8c\u6574\u793a\u4f8b"},{"location":"sdk/gosdk/#22","text":"\u672c\u793a\u4f8b\u5c55\u793a\u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u4ee5\u53ca\u6ce8\u9500\u64cd\u4f5c\u3002","title":"2.2 \u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u793a\u4f8b"},{"location":"sdk/gosdk/#221","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 Register \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u518c\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a args := [] * pb . Arg { rpcx . String ( \"\" ), //validators rpcx . Int32 ( 0 ), //consensus_type rpcx . String ( \"hyperchain\" ), //chain_type rpcx . String ( \"\u7a0e\u52a1\u94fe\" ), //name rpcx . String ( \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" ), //desc rpcx . String ( \"1.8\" ), //version } ret , err := cli . InvokeBVMContract ( constant . InterchainContractAddr . Address (), \"Register\" , nil , args ... ) \u83b7\u53d6\u5230\u6210\u529f\u7684\u4ea4\u6613\u56de\u6267\u540e\uff0c\u89e3\u6790\u4ea4\u6613\u56de\u6267\u5185\u5bb9\u3002 \u4f8b\u5982\uff1a { \"id\" : \"0x5098cc26b0d485145fb8258d2e79c49886cd4662\" , \\\\ \u5e94\u7528\u94feID \"name\" : \"\u7a0e\u52a1\u94fe\" , \"validators\" : \"\" , \"consensus_type\" : 0 , \"status\" : 0 , \"chain_type\" : \"hyperchain\" , \"desc\" : \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" , \"version\" : \"1.8\" }","title":"2.2.1 \u5e94\u7528\u94fe\u6ce8\u518c"},{"location":"sdk/gosdk/#222","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 Aduit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a args := [] * pb . Arg { rpcx . String ( appchainID ), rpcx . Int32 ( 1 ), //\u5ba1\u6838\u901a\u8fc7 rpcx . String ( \"\" ), //desc } ret , err = cli . InvokeBVMContract ( constant . InterchainContractAddr . Address (), \"Aduit\" , nil , args ... )","title":"2.2.2 \u5e94\u7528\u94fe\u5ba1\u6838"},{"location":"sdk/gosdk/#223","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 DeleteAppchain \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u9500\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a ret , err = cli . InvokeBVMContract ( constant . InterchainContractAddr . Address (), \"DeleteAppchain\" , nil , rpcx . String ( appchainID ))","title":"2.2.3 \u5e94\u7528\u94fe\u6ce8\u9500"},{"location":"sdk/gosdk/#23","text":"\u672c\u793a\u4f8b\u5c55\u793a\u9a8c\u8bc1\u89c4\u5219\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u64cd\u4f5c\uff0c\u4ee5\u53caWebAssembly\u5408\u7ea6\u793a\u4f8b\u3002","title":"2.3 \u9a8c\u8bc1\u89c4\u5219\u4f7f\u7528\u793a\u4f8b"},{"location":"sdk/gosdk/#231","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 RegisterRule \u65b9\u6cd5\uff0c\u5411\u5e94\u7528\u94fe\u6ce8\u518c\u9a8c\u8bc1\u89c4\u5219\uff08WebAssembly\u5408\u7ea6\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5148\u6ce8\u518c\u5e94\u7528\u94fe\u548c\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u5408\u7ea6\uff0c\u7136\u540e\u83b7\u53d6\u5e94\u7528\u94feID\u548c\u5408\u7ea6\u5730\u5740\u3002 \u4f8b\u5982\uff1a ret , err = cli . InvokeBVMContract ( constant . RoleContractAddr . Address (), \"RegisterRule\" , nil , rpcx . String ( chainAddr ), rpcx . String ( contractAddr ))","title":"2.3.1 \u9a8c\u8bc1\u89c4\u5219\u6ce8\u518c"},{"location":"sdk/gosdk/#232","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 Aduit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u9a8c\u8bc1\u89c4\u5219\u3002 \u4f8b\u5982\uff1a args := [] * pb . Arg { rpcx . String ( appchainID ), rpcx . Int32 ( 1 ), //\u5ba1\u6838\u901a\u8fc7 rpcx . String ( \"\" ), //desc } ret , err = cli . InvokeBVMContract ( constant . RuleManagerContractAddr . Address (), \"Aduit\" , nil , args ... )","title":"2.3.2 \u9a8c\u8bc1\u89c4\u5219\u5ba1\u6838"},{"location":"sdk/gosdk/#233-webassembly-fabric","text":"extern crate protobuf ; extern crate sha2 ; use crate :: crypto :: ecdsa ; use crate :: model :: transaction ; use sha2 :: { Digest , Sha256 }; pub fn verify ( proof : & [ u8 ], validator : & [ u8 ]) -> bool { let cap = protobuf :: parse_from_bytes :: < transaction :: ChaincodeActionPayload > ( proof ). expect ( \"error\" ); let cap_act = cap . action . unwrap (); let endorsers = cap_act . endorsements ; let mut digest = Sha256 :: new (); let mut payload = cap_act . proposal_response_payload . to_owned (); payload . extend ( & endorsers [ 0 ]. endorser ); digest . input ( & payload ); let digest_byte = digest . result (); return ecdsa :: verify ( & endorsers [ 0 ]. signature , & digest_byte , & validator , ecdsa :: EcdsaAlgorithmn :: P256 , ); }","title":"2.3.3 \u9a8c\u8bc1\u89c4\u5219\u793a\u4f8b\uff08WebAssembly\u5408\u7ea6, Fabric\u5b9e\u4f8b\uff09"},{"location":"sdk/gosdk/#3-sdk","text":"","title":"3 SDK\u6587\u6863"},{"location":"sdk/gosdk/#31","text":"","title":"3.1 \u521d\u59cb\u5316\u548c\u542f\u52a8"},{"location":"sdk/gosdk/#311-client","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u83b7\u53d6\u4e0e\u4e2d\u7ee7\u94fe\u4ea4\u4e92\u7684Client\u3002 \u53c2\u6570\uff1a opts \u662f\u4e2d\u7ee7\u94fe\u7684\u7f51\u7edc\u5730\u5740\uff0c\u65e5\u5fd7\u4ee5\u53ca\u5bc6\u94a5\u7684\u914d\u7f6e\u3002 func New ( opts ... Option ) ( * ChainClient , error )","title":"3.1.1 \u521d\u59cb\u5316Client"},{"location":"sdk/gosdk/#312-client","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5c06\u4e0e\u4e2d\u7ee7\u94fe\u4ea4\u4e92\u7684 Client \u5173\u95ed\u3002 func Stop () error","title":"3.1.2 \u505c\u6b62Client"},{"location":"sdk/gosdk/#32","text":"","title":"3.2 \u4ea4\u6613\u63a5\u53e3"},{"location":"sdk/gosdk/#321","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u53d1\u9001\u4ea4\u6613\uff0c\u4ea4\u6613\u7c7b\u578b\u5305\u62ec\u666e\u901a\u4ea4\u6613\u3001\u8de8\u94fe\u4ea4\u6613\u548c\u667a\u80fd\u5408\u7ea6\u3002 \u53c2\u6570\uff1a tx \u4ea4\u6613\u5b9e\u4f8b\u3002 opts \u8de8\u94fe\u4ea4\u6613nonce\u3002 func SendTransaction ( tx * pb . Transaction , opts * TransactOpts ) ( string , error )","title":"3.2.1 \u53d1\u9001\u4ea4\u6613"},{"location":"sdk/gosdk/#322","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u67e5\u8be2\u4ea4\u6613\u56de\u6267\u3002 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 func GetReceipt ( hash string ) ( * pb . Receipt , error ) \u7528\u4f8b\uff1a func TestChainClient_SendTransactionWithReceipt ( t * testing . T ) { // \u751f\u6210from\u79c1\u94a5 privKey , _ := asym . GenerateKeyPair ( crypto . Secp256k1 ) // \u751f\u6210to\u79c1\u94a5 toPrivKey , _ := asym . GenerateKeyPair ( crypto . Secp256k1 ) // \u914d\u7f6eClient cli , _ := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( privKey ), ) // \u83b7\u53d6from\u5730\u5740 from , _ := privKey . PublicKey (). Address () // \u83b7\u53d6to\u5730\u5740 to , _ := toPrivKey . PublicKey (). Address () // \u6784\u5efa\u4ea4\u6613\u4f53 tx := & pb . Transaction { From : from , To : to , Data : & pb . TransactionData { Amount : 10 , }, Timestamp : time . Now (). UnixNano (), Nonce : rand . Int63 (), } // \u7528from\u7684\u79c1\u94a5\u7b7e\u540d\u4ea4\u6613 _ = tx . Sign ( privKey ) // \u901a\u8fc7client\u53d1\u9001\u4ea4\u6613 hash , _ := cli . SendTransaction ( tx , nil ) // \u83b7\u53d6\u4ea4\u6613\u56de\u6267\uff0c\u5224\u65ad\u4ea4\u6613\u6267\u884c\u72b6\u6001 ret , _ := cli . GetReceipt ( hash ) require . Equal ( t , tx . Hash (). String (), ret . TxHash . String ()) // \u505c\u6b62client _ = cli . Stop () }","title":"3.2.2 \u67e5\u8be2\u4ea4\u6613\u56de\u6267"},{"location":"sdk/gosdk/#323","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u67e5\u8be2\u4ea4\u6613\u3002 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 func GetTransaction ( hash string ) ( * proto . GetTransactionResponse , error )","title":"3.2.3 \u67e5\u8be2\u4ea4\u6613"},{"location":"sdk/gosdk/#33","text":"\u5408\u7ea6\u7c7b\u578b\uff1a BVM\uff1aBitXHub\u5185\u7f6e\u5408\u7ea6\u3002 XVM\uff1aWebAssembly\u5408\u7ea6\u3002","title":"3.3 \u5408\u7ea6\u63a5\u53e3"},{"location":"sdk/gosdk/#331","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u90e8\u7f72XVM\u5408\u7ea6\uff0c\u8fd4\u56de\u5408\u7ea6\u5730\u5740\u3002 \u53c2\u6570\uff1a contract wasm\u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u6570\u636e\u3002 opts \u8de8\u94fe\u4ea4\u6613nonce\u3002 func DeployContract ( contract [] byte , opts * TransactOpts ) ( contractAddr * types . Address , err error )","title":"3.3.1 \u90e8\u7f72\u5408\u7ea6"},{"location":"sdk/gosdk/#332","text":"\u7528\u9014\uff1a\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u8c03\u7528\u5408\u7ea6\u83b7\u53d6\u4ea4\u6613\u56de\u6267\u3002 \u53c2\u6570\uff1a vmType \u5408\u7ea6\u7c7b\u578b\uff1aBVM\u548cXVM\uff1b address \u5408\u7ea6\u5730\u5740\uff1b method \u5408\u7ea6\u65b9\u6cd5\uff1b opts \u8de8\u94fe\u4ea4\u6613nonce\uff1b args \u5408\u7ea6\u65b9\u6cd5\u53c2\u6570\u3002 func InvokeContract ( vmType pb . TransactionData_VMType , address types . Address , method string , opts * TransactOpts , args ...* pb . Arg ) ( * pb . Receipt , error ) \u8c03\u7528XVM\u5408\u7ea6\u7528\u4f8b\uff1a func TestChainClient_InvokeXVMContract ( t * testing . T ) { privKey , err := asym . GenerateKeyPair ( crypto . Secp256k1 ) require . Nil ( t , err ) cli , err := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( privKey ), ) require . Nil ( t , err ) contract , err := ioutil . ReadFile ( \"./testdata/example.wasm\" ) require . Nil ( t , err ) addr , err := cli . DeployContract ( contract , nil ) require . Nil ( t , err ) result , err := cli . InvokeXVMContract ( addr , \"a\" , nil , Int32 ( 1 ), Int32 ( 2 )) require . Nil ( t , err ) require . Equal ( t , \"336\" , string ( result . Ret )) } \u8c03\u7528BVM\u5408\u7ea6\u7528\u4f8b\uff1a func TestChainClient_InvokeBVMContract ( t * testing . T ) { privKey , err := asym . GenerateKeyPair ( crypto . Secp256k1 ) require . Nil ( t , err ) cli , err := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( privKey ), ) require . Nil ( t , err ) result , err := cli . InvokeBVMContract ( constant . StoreContractAddr . Address (), \"Set\" , nil , String ( \"a\" ), String ( \"10\" )) require . Nil ( t , err ) require . Nil ( t , result . Ret ) res , err := cli . InvokeBVMContract ( constant . StoreContractAddr . Address (), \"Get\" , nil , String ( \"a\" )) require . Nil ( t , err ) require . Equal ( t , string ( res . Ret ), \"10\" ) }","title":"3.3.2 \u8c03\u7528\u5408\u7ea6"},{"location":"sdk/gosdk/#34","text":"","title":"3.4 \u533a\u5757\u63a5\u53e3"},{"location":"sdk/gosdk/#341","text":"\u53c2\u6570\uff1a value \u533a\u5757\u9ad8\u5ea6\u6216\u8005\u533a\u5757\u54c8\u5e0c\u3002 blockType \u67e5\u8be2\u7c7b\u578b\u3002 GetBlock ( value string , blockType pb . GetBlockRequest_Type ) ( * pb . Block , error )","title":"3.4.1 \u67e5\u8be2\u533a\u5757"},{"location":"sdk/gosdk/#342","text":"\u7528\u9014\uff1a\u6279\u91cf\u67e5\u8be2\u533a\u5757\uff0c\u8fd4\u56de\u6307\u5b9a\u5757\u9ad8\u5ea6\u8303\u56f4\uff08start\u5230end\uff09\u7684\u533a\u5757\u4fe1\u606f\u3002 \u53c2\u6570\uff1a start \u6307\u5b9a\u8303\u56f4\u7684\u8d77\u59cb\u533a\u5757\u9ad8\u5ea6\u3002 end \u6307\u5b9a\u8303\u56f4\u7684\u7ed3\u675f\u533a\u5757\u9ad8\u5ea6\u3002 func GetBlocks ( start uint64 , end uint64 ) ( * pb . GetBlocksResponse , error )","title":"3.4.2 \u6279\u91cf\u67e5\u8be2\u533a\u5757"},{"location":"sdk/gosdk/#343-meta","text":"\u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u94fe\u7684\u9ad8\u5ea6\u548c\u533a\u5757\u54c8\u5e0c\u3002 func GetChainMeta () ( * pb . ChainMeta , error )","title":"3.4.3 \u67e5\u8be2\u533a\u5757Meta"},{"location":"sdk/gosdk/#344","text":"\u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u533a\u5757\u94fe\u5171\u8bc6\u7684\u72b6\u6001\uff08\u6b63\u5e38\u6216\u8005\u4e0d\u6b63\u5e38\uff09\u3002 func GetChainStatus () ( * pb . Response , error )","title":"3.4.4 \u67e5\u8be2\u533a\u5757\u94fe\u72b6\u6001"},{"location":"sdk/gosdk/#35","text":"","title":"3.5 \u8ba2\u9605\u63a5\u53e3"},{"location":"sdk/gosdk/#351","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u53d1\u8d77\u8ba2\u9605\u4e8b\u4ef6\u7684\u3002 \u53c2\u6570\uff1a type \u4e8b\u4ef6\u7c7b\u578b\uff0c\u5305\u542b\u533a\u5757\u4e8b\u4ef6\uff0c\u533a\u5757\u5934\u4e8b\u4ef6\uff0c\u8de8\u94fe\u4ea4\u6613\u4e8b\u4ef6\u3002 func Subscribe ( ctx context . Context , typ pb . SubscriptionRequest_Type , extra [] byte ) ( <- chan interface {}, error ) \u7528\u4f8b\uff1a func TestChainClient_Subscribe ( t * testing . T ) { privKey , err := asym . GenerateKeyPair ( crypto . Secp256k1 ) require . Nil ( t , err ) from , err := privKey . PublicKey (). Address () require . Nil ( t , err ) cli , err := New ( WithAddrs ( cfg . addrs ), WithLogger ( cfg . logger ), WithPrivateKey ( privKey ), ) require . Nil ( t , err ) ctx , cancel := context . WithCancel ( context . Background ()) defer cancel () c , err := cli . Subscribe ( ctx , pb . SubscriptionRequest_BLOCK , nil ) assert . Nil ( t , err ) go func () { tx := & pb . Transaction { From : from , To : from , Timestamp : time . Now (). UnixNano (), Nonce : rand . Int63 (), } err = tx . Sign ( privKey ) require . Nil ( t , err ) hash , err := cli . SendTransaction ( tx , nil ) require . Nil ( t , err ) require . EqualValues ( t , 66 , len ( hash )) }() for { select { case block := <- c : if block == nil { assert . Error ( t , fmt . Errorf ( \"channel is closed\" )) return } if err := cli . Stop (); err != nil { return } return case <- ctx . Done (): return } } }","title":"3.5.1 \u8ba2\u9605\u4e8b\u4ef6"},{"location":"sdk/gosdk/#352-merklewrapper","text":"\u7528\u9014\uff1a\u83b7\u53d6\u6307\u5b9a\u533a\u5757\u9ad8\u5ea6\u8303\u56f4\u7684MerkleWrapper \u53c2\u6570\uff1a pid \u5e94\u7528\u94feID\u3002 begin \u8d77\u59cb\u533a\u5757\u9ad8\u5ea6\u3002 end \u7ed3\u675f\u533a\u5757\u9ad8\u5ea6\u3002 ch Merkle Wrapper\u7684\u901a\u9053\u3002 func GetInterchainTxWrappers ( ctx context . Context , pid string , begin , end uint64 , ch chan <- * pb . InterchainTxWrapper ) error","title":"3.5.2 \u83b7\u53d6MerkleWrapper"},{"location":"sdk/gosdk/#36","text":"","title":"3.6 \u5176\u5b83\u63a5\u53e3"},{"location":"sdk/gosdk/#361","text":"\u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u533a\u5757\u94fe\u7f51\u7edc\u7684\u8282\u70b9\u4fe1\u606f\u3002 func GetNetworkMeta () ( * pb . Response , error )","title":"3.6.1 \u67e5\u8be2\u8282\u70b9\u7f51\u7edc\u4fe1\u606f"},{"location":"sdk/gosdk/#362","text":"\u53c2\u6570\uff1a address \u5730\u5740\u3002 func GetAccountBalance ( address string ) ( * pb . Response , error )","title":"3.6.2 \u67e5\u8be2\u8d26\u6237\u4f59\u989d"},{"location":"sdk/gosdk/#363","text":"\u7528\u9014\uff1a\u5220\u9664\u533a\u5757\u94fe\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\uff08\u987b\u5f80f+1\u4e2a\u8282\u70b9\u53d1\u9001\u8bf7\u6c42\u624d\u53ef\u4ee5\u5220\u9664\uff09 \u53c2\u6570\uff1a pid \u8282\u70b9\u7684pid func DelVPNode ( pid string ) ( * pb . Response , error )","title":"3.6.3 \u5220\u9664\u8282\u70b9"},{"location":"sdk/javasdk/","text":"Java SDK 1 \u524d\u8a00 \u6b64SDK\u6587\u6863\u9762\u5411BitXHub\u5e73\u53f0\u7684\u5e94\u7528\u5f00\u53d1\u8005\uff0c\u63d0\u4f9bBitXHub Java SDK\u7684\u4f7f\u7528\u6307\u5357\u3002 2 \u63a5\u53e3\u4f7f\u7528\u6d41\u7a0b\u793a\u4f8b 2.1 \u57fa\u7840\u6d41\u7a0b\u793a\u4f8b \u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u63a5\u53e3\u7684\u4f7f\u7528\uff0c\u672c\u793a\u4f8b\u5c06\u4ece\u521d\u59cb\u5316Client\uff0c\u90e8\u7f72\u5408\u7ea6\uff0c\u8c03\u7528\u5408\u7ea6\u548c\u8fd4\u56de\u503c\u89e3\u6790\u8fd9\u4e2a\u5927\u81f4\u6d41\u7a0b\u4f5c\u4ecb\u7ecd\uff0c\u5177\u4f53\u8be6\u7ec6\u63a5\u53e3\u53ef\u53c2\u8003\u7b2c\u4e09\u7ae0SDK\u6587\u6863\u3002 2.1.1 \u521d\u59cb\u5316Client \u4f7f\u7528\u9ed8\u8ba4\u7684\u914d\u7f6e\u7c7b\u521d\u59cb\u5316Grpc Client\u3002 \u4f8b\u5982\uff1a GrpcClient client = new GrpcClientImpl ( Config . defaultConfig ()); \u4f7f\u7528\u5b9a\u5236\u5316\u7684\u914d\u7f6e\u7c7b\u521d\u59cb\u5316Grpc Client\u3002 \u4f8b\u5982\uff1a Config config = Config . builder () . host ( \"localhost\" ) . port ( 60011 ) . ecKey ( new ECKeyP256 ()) . build (); GrpcClient client = new GrpcClientImpl ( config ); 2.1.2 \u90e8\u7f72\u5408\u7ea6 \u5f00\u53d1\u8005\u9700\u63d0\u4f9b\u5df2\u7ecf\u7f16\u8bd1\u7684 WebAssembly \u6587\u4ef6\u3002 \u4f8b\u5982\uff1a byte [] contractBytes = IOUtils . toByteArray ( new FileInputStream ( \"./example.wasm\" )); \u901a\u8fc7client\u90e8\u7f72\u5408\u7ea6\uff0c\u90e8\u7f72\u5b8c\u6210\u540e\u53ef\u4ee5\u83b7\u53d6\u5408\u7ea6\u5730\u5740 contractAddress \u3002 \u4f8b\u5982\uff1a String contractAddress = client . deployContract ( contractBytes ); 2.1.3 \u8c03\u7528\u5408\u7ea6 \u8c03\u7528\u5408\u7ea6\u9700\u4f20\u5165\u5408\u7ea6\u5730\u5740\u3001\u5408\u7ea6\u65b9\u6cd5\u540d\u548c\u5bf9\u5e94\u7684\u53c2\u6570\u3002 \u4f8b\u5982\uff1a ReceiptOuterClass . Receipt receipt = client . invokeXVMContract ( contractAddress , \"a\" , Types . i32 ( 1 ), Types . i32 ( 1 )); \\\\ \u65b9\u6cd5\u540d\u4e3aa \uff0c \u4f20\u53c21 \uff0c \u4f20\u53c22 2.1.4 \u8fd4\u56de\u503c\u89e3\u6790 \u5f97\u5230\u8fd4\u56de\u503c\u7ed3\u679c\u540e\uff0c\u83b7\u5f97\u72b6\u6001\u7801\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u8c03\u7528\u6210\u529f\uff0c\u82e5\u8c03\u7528\u6210\u529f\uff0c\u89e3\u6790\u8fd4\u56de\u503c\u53ef\u770b\u5230\u8c03\u7528\u4e4b\u540e\u7684\u7ed3\u679c\u3002 \u4f8b\u5982\uff1a if ( receipt . getStatus () == ReceiptOuterClass . Receipt . Status . SUCCESS ) { log . info ( receipt . getRet (). toStringUtf8 ()); } 2.1.5 \u5b8c\u6574\u793a\u4f8b //\u83b7\u53d6wasm\u5b57\u8282\u6570\u7ec4 byte [] contractBytes = IOUtils . toByteArray ( new FileInputStream ( \"./example.wasm\" )); //\u90e8\u7f72\u5408\u7ea6\uff0c\u83b7\u53d6\u5408\u7ea6\u5730\u5740 String contractAddress = client . deployContract ( contractBytes ); //\u8c03\u7528\u5408\u7ea6\uff0c\u83b7\u53d6\u4ea4\u6613\u56de\u6267 ReceiptOuterClass . Receipt receipt = client . invokeXVMContract ( contractAddress , \"a\" , Types . i32 ( 1 ), Types . i32 ( 1 )); //\u5224\u65ad\u5408\u7ea6\u8c03\u7528\u4ea4\u6613\u6210\u529f\u4e0e\u5426\uff0c\u6253\u5370\u5408\u7ea6\u8c03\u7528\u6570\u636e if ( receipt . getStatus () == ReceiptOuterClass . Receipt . Status . SUCCESS ) { log . info ( receipt . getRet (). toStringUtf8 ()); } 2.2 \u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u793a\u4f8b \u672c\u793a\u4f8b\u5c55\u793a\u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u4ee5\u53ca\u6ce8\u9500\u64cd\u4f5c\u3002 2.2.1 \u5e94\u7528\u94fe\u6ce8\u518c \u8c03\u7528BVM\u5408\u7ea6\u7684 Register \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u518c\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] args = Types . toArgArray ( Types . string ( \"\" ), //validators Types . i32 ( 0 ), //consensus_type Types . string ( \"hyperchain\" ), //chain_type Types . string ( \"\u7a0e\u52a1\u94fe\" ), //name Types . string ( \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" ), //desc Types . string ( \"1.8\" )); //version Types . string ( \"\" )); //public key ReceiptOuterClass . Receipt receipt = client . invokeBVMContract ( BVMAddr . APPCHAIN_MANAGER_CONTRACT_ADDR , \"Register\" , args ); \u83b7\u53d6\u5230\u6210\u529f\u7684\u4ea4\u6613\u56de\u6267\u540e\uff0c\u89e3\u6790\u4ea4\u6613\u56de\u6267\u5185\u5bb9\u3002 \u4f8b\u5982\uff1a { \"id\" : \"0x5098cc26b0d485145fb8258d2e79c49886cd4662\" , \\\\ \u5e94\u7528\u94feID \"name\" : \"\u7a0e\u52a1\u94fe\" , \"validators\" : \"\" , \"consensus_type\" : 0 , \"status\" : 0 , \"chain_type\" : \"hyperchain\" , \"desc\" : \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" , \"version\" : \"1.8\" , \"public_key\" : \"\" } 2.2.2 \u5e94\u7528\u94fe\u5ba1\u6838 \u8c03\u7528BVM\u5408\u7ea6\u7684 Audit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] adultArgs = Types . toArgArray ( Types . string ( appchainID ), //\u5e94\u7528\u94feID Types . i32 ( 1 ), //\u5ba1\u6838\u901a\u8fc7 Types . string ( \"\" )); //\u63cf\u8ff0\u4fe1\u606f ReceiptOuterClass . Receipt adultReceipt = client . invokeBVMContract ( BVMAddr . APPCHAIN_MANAGER_CONTRACT_ADDR , \"Audit\" , adultArgs ); 2.2.3 \u5e94\u7528\u94fe\u6ce8\u9500 \u8c03\u7528BVM\u5408\u7ea6\u7684 DeleteAppchain \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u9500\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] deleteArgs = Types . toArgArray ( Types . string ( appchainID ); //\u5e94\u7528\u94feID ReceiptOuterClass . Receipt deleteReceipt = client . invokeBVMContract ( BVMAddr . APPCHAIN_MANAGER_CONTRACT_ADDR , \"DeleteAppchain\" , deleteArgs ); 2.3 \u9a8c\u8bc1\u89c4\u5219\u4f7f\u7528\u793a\u4f8b \u672c\u793a\u4f8b\u5c55\u793a\u9a8c\u8bc1\u89c4\u5219\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u64cd\u4f5c\uff0c\u4ee5\u53caWebAssembly\u5408\u7ea6\u793a\u4f8b\u3002 2.3.1 \u9a8c\u8bc1\u89c4\u5219\u6ce8\u518c \u8c03\u7528BVM\u5408\u7ea6\u7684 RegisterRule \u65b9\u6cd5\uff0c\u5411\u5e94\u7528\u94fe\u6ce8\u518c\u9a8c\u8bc1\u89c4\u5219\uff08WebAssembly\u5408\u7ea6\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5148\u6ce8\u518c\u5e94\u7528\u94fe\u548c\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u5408\u7ea6\uff0c\u7136\u540e\u83b7\u53d6\u5e94\u7528\u94feID\u548c\u5408\u7ea6\u5730\u5740\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] ruleArgs = Types . toArgArray ( Types . string ( appchainID ), Types . string ( contractAddress )); ReceiptOuterClass . Receipt ruleReceipt = client . invokeBVMContract ( BVMAddr . RULE_MANAGER_CONTRACT_ADDR , \"RegisterRule\" , ruleArgs ); 2.3.2 \u9a8c\u8bc1\u89c4\u5219\u5ba1\u6838 \u8c03\u7528BVM\u5408\u7ea6\u7684 Audit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u9a8c\u8bc1\u89c4\u5219\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] adultArgs = Types . toArgArray ( Types . string ( contractAddress ), //\u9a8c\u8bc1\u89c4\u5219\u7684\u5408\u7ea6\u5730\u5740 Types . i32 ( 1 ), //\u5ba1\u6838\u901a\u8fc7 Types . string ( \"\" )); //\u63cf\u8ff0\u4fe1\u606f ReceiptOuterClass . Receipt adultReceipt = client . invokeBVMContract ( BVMAddr . RULE_MANAGER_CONTRACT_ADDR , \"Audit\" , adultArgs ); 2.3.3 \u9a8c\u8bc1\u89c4\u5219\u793a\u4f8b\uff08WebAssembly\u5408\u7ea6, Fabric\u5b9e\u4f8b\uff09 extern crate protobuf ; extern crate sha2 ; use crate :: crypto :: ecdsa ; use crate :: model :: transaction ; use sha2 :: { Digest , Sha256 }; pub fn verify ( proof : & [ u8 ], validator : & [ u8 ]) -> bool { let cap = protobuf :: parse_from_bytes :: < transaction :: ChaincodeActionPayload > ( proof ). expect ( \"error\" ); let cap_act = cap . action . unwrap (); let endorsers = cap_act . endorsements ; let mut digest = Sha256 :: new (); let mut payload = cap_act . proposal_response_payload . to_owned (); payload . extend ( & endorsers [ 0 ]. endorser ); digest . input ( & payload ); let digest_byte = digest . result (); return ecdsa :: verify ( & endorsers [ 0 ]. signature , & digest_byte , & validator , ecdsa :: EcdsaAlgorithmn :: P256 , ); } 3 SDK\u6587\u6863 3.1 \u521d\u59cb\u5316 3.1.1 \u521d\u59cb\u5316Client \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u83b7\u53d6\u4e0eBitXHub\u4ea4\u4e92\u7684Client\u3002 GrpcClient client = new GrpcClientImpl ( Config . defaultConfig ()); \u5165\u53c2\uff1a Config \u662fBitXHub\u7684\u7f51\u7edc\u5730\u5740, \u7aef\u53e3\u4ee5\u53ca\u5bc6\u94a5\u7684\u914d\u7f6e\u3002 \u8fd4\u56de\u503c\uff1a\u4e0eBitXHub\u4ea4\u4e92\u7684 Client \u3002 3.1.2 \u505c\u6b62Client \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5c06\u4e0eBitXHub\u4ea4\u4e92\u7684 Client \u5173\u95ed\u3002 public void stop () throws InterruptedException 3.2 \u4ea4\u6613\u63a5\u53e3 3.2.1 \u53d1\u9001\u4ea4\u6613 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u53d1\u9001\u4ea4\u6613\uff0c\u4ea4\u6613\u7c7b\u578b\u5305\u62ec\u666e\u901a\u4ea4\u6613\u3001\u8de8\u94fe\u4ea4\u6613\u548c\u667a\u80fd\u5408\u7ea6\u4ea4\u6613\u3002 \u53c2\u6570\uff1a transaction \u4ea4\u6613\u3002 opts \u8de8\u94fe\u4ea4\u6613nonce\u3002 public String sendTransaction ( TransactionOuterClass . Transaction transaction , TransactOpts opts ); \u7528\u4f8b\uff1a public void sendTransaction () { TransactionOuterClass . Transaction unsignedTx = TransactionOuterClass . Transaction . newBuilder () . setFrom ( ByteString . copyFrom ( from )) . setTo ( ByteString . copyFrom ( to )) . setTimestamp ( Utils . genTimestamp ()) . setPayload ( TransactionOuterClass . TransactionData . newBuilder (). setAmount ( 100000L ). build (). toByteString ()) . build (); TransactionOuterClass . Transaction signedTx = SignUtils . sign ( unsignedTx , config . getEcKey ()); String txHash = client . sendTransaction ( signedTx , null ); } 3.2.2 \u67e5\u8be2\u4ea4\u6613\u56de\u6267 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 ReceiptOuterClass . Receipt getReceipt ( String hash ); 3.2.3 \u67e5\u8be2\u4ea4\u6613 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 Broker . GetTransactionResponse getTransaction ( String hash ); 3.3 \u5408\u7ea6\u63a5\u53e3 \u5408\u7ea6\u7c7b\u578b\uff1a BVM\uff1aBitXHub\u5185\u7f6e\u5408\u7ea6 XVM\uff1aWebAssembly\u5408\u7ea6 3.3.1 \u90e8\u7f72\u5408\u7ea6 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u90e8\u7f72XVM\u5408\u7ea6\u3002 \u53c2\u6570\uff1a contract \u5408\u7ea6\u6570\u636e\u3002 String deployContract ( byte [] contract ); 3.3.2 \u8c03\u7528\u5408\u7ea6 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u8c03\u7528BVM\u6216\u8005XVM\u5408\u7ea6\u3002 \u53c2\u6570\uff1a vmType \u5408\u7ea6\u7c7b\u578b\uff1aBVM\u548cXVM\u3002 contractAddress \u5408\u7ea6\u5730\u5740\u3002 method \u5408\u7ea6\u65b9\u6cd5\uff1b args \u5408\u7ea6\u65b9\u6cd5\u53c2\u6570\u3002 ReceiptOuterClass . Receipt invokeContract ( TransactionOuterClass . TransactionData . VMType vmType , String contractAddress , String method , ArgOuterClass . Arg ... args ); \u7528\u4f8b\uff1a public void invokeContract () throws IOException { byte [] contractBytes = IOUtils . toByteArray ( new FileInputStream ( \"./example.wasm\" )); String contractAddress = client . deployContract ( contractBytes ); ReceiptOuterClass . Receipt receipt = client . invokeContract ( TransactionOuterClass . TransactionData . VMType . XVM , contractAddress , \"a\" , Types . i32 ( 1 ), Types . i32 ( 1 )); } 3.4 \u533a\u5757\u63a5\u53e3 3.4.1 \u67e5\u8be2\u533a\u5757 \u53c2\u6570\uff1a value \u533a\u5757\u9ad8\u5ea6\u6216\u8005\u533a\u5757\u54c8\u5e0c\u3002 type \u67e5\u8be2\u7c7b\u578b\u3002 type\u7c7b\u578b \u3002 BlockOuterClass . Block getBlock ( String value , Broker . GetBlockRequest . Type type ); 3.4.2 \u6279\u91cf\u67e5\u8be2\u533a\u5757 \u7528\u9014\uff1a\u6279\u91cf\u67e5\u8be2\u533a\u5757\uff0c\u8fd4\u56de\u6307\u5b9a\u5757\u9ad8\u5ea6\u8303\u56f4\uff08start\u5230end\uff09\u7684\u533a\u5757\u4fe1\u606f\u3002 \u53c2\u6570\uff1a start \u6307\u5b9a\u8303\u56f4\u7684\u8d77\u59cb\u533a\u5757\u9ad8\u5ea6\u3002 end \u6307\u5b9a\u8303\u56f4\u7684\u7ed3\u675f\u533a\u5757\u9ad8\u5ea6\u3002 Broker . GetBlocksResponse getBlocks ( Long start , Long end ); 3.4.3 \u67e5\u8be2\u533a\u5757Meta \u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u94fe\u7684\u9ad8\u5ea6\u548c\u533a\u5757\u54c8\u5e0c\u3002 Chain . ChainMeta getChainMeta (); 3.4.4 \u67e5\u8be2\u533a\u5757\u94fe\u72b6\u6001 \u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u533a\u5757\u94fe\u5171\u8bc6\u7684\u72b6\u6001\uff08\u6b63\u5e38\u6216\u8005\u4e0d\u6b63\u5e38\uff09\u3002 Broker . Response getChainStatus (); 3.5 \u8ba2\u9605\u63a5\u53e3 3.5.1 \u8ba2\u9605\u4e8b\u4ef6 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u53d1\u8d77\u8ba2\u9605\u4e8b\u4ef6\u3002 \u53c2\u6570\uff1a streamObserver \u4e8b\u4ef6\u901a\u9053\u3002 type \u4e8b\u4ef6\u7c7b\u578b\u3002 \u7528\u4f8b\uff1a void subscribe ( Broker . SubscriptionRequest . Type type , StreamObserver < Broker . Response > observer ); public void subscribe () throws InterruptedException { CountDownLatch asyncLatch = new CountDownLatch ( 1 ); StreamObserver < Broker . Response > observer = new StreamObserver < Broker . Response > () { @Override public void onNext ( Broker . Response response ) { ByteString data = response . getData (); BlockOuterClass . Block block = null ; try { block = BlockOuterClass . Block . parseFrom ( data ); } catch ( InvalidProtocolBufferException e ) { e . printStackTrace (); } } @Override public void onError ( Throwable throwable ) { throwable . printStackTrace (); asyncLatch . countDown (); } @Override public void onCompleted () { asyncLatch . countDown (); } }; client . subscribe ( Broker . SubscriptionRequest . Type . BLOCK , observer ); asyncLatch . await (); } 3.6 \u5176\u5b83\u63a5\u53e3 3.6.1 \u67e5\u8be2\u8282\u70b9\u7f51\u7edc\u4fe1\u606f \u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u533a\u5757\u94fe\u7f51\u7edc\u7684\u8282\u70b9\u4fe1\u606f\u3002 Broker . Response getNetworkMeta (); 3.6.2 \u67e5\u8be2\u8d26\u6237\u4f59\u989d \u53c2\u6570\uff1a address \u5730\u5740\u3002 Broker . Response getAccountBalance ( String address );","title":"JavaSDK\u4f7f\u7528"},{"location":"sdk/javasdk/#java-sdk","text":"","title":"Java SDK"},{"location":"sdk/javasdk/#1","text":"\u6b64SDK\u6587\u6863\u9762\u5411BitXHub\u5e73\u53f0\u7684\u5e94\u7528\u5f00\u53d1\u8005\uff0c\u63d0\u4f9bBitXHub Java SDK\u7684\u4f7f\u7528\u6307\u5357\u3002","title":"1 \u524d\u8a00"},{"location":"sdk/javasdk/#2","text":"","title":"2 \u63a5\u53e3\u4f7f\u7528\u6d41\u7a0b\u793a\u4f8b"},{"location":"sdk/javasdk/#21","text":"\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u63a5\u53e3\u7684\u4f7f\u7528\uff0c\u672c\u793a\u4f8b\u5c06\u4ece\u521d\u59cb\u5316Client\uff0c\u90e8\u7f72\u5408\u7ea6\uff0c\u8c03\u7528\u5408\u7ea6\u548c\u8fd4\u56de\u503c\u89e3\u6790\u8fd9\u4e2a\u5927\u81f4\u6d41\u7a0b\u4f5c\u4ecb\u7ecd\uff0c\u5177\u4f53\u8be6\u7ec6\u63a5\u53e3\u53ef\u53c2\u8003\u7b2c\u4e09\u7ae0SDK\u6587\u6863\u3002","title":"2.1 \u57fa\u7840\u6d41\u7a0b\u793a\u4f8b"},{"location":"sdk/javasdk/#211-client","text":"\u4f7f\u7528\u9ed8\u8ba4\u7684\u914d\u7f6e\u7c7b\u521d\u59cb\u5316Grpc Client\u3002 \u4f8b\u5982\uff1a GrpcClient client = new GrpcClientImpl ( Config . defaultConfig ()); \u4f7f\u7528\u5b9a\u5236\u5316\u7684\u914d\u7f6e\u7c7b\u521d\u59cb\u5316Grpc Client\u3002 \u4f8b\u5982\uff1a Config config = Config . builder () . host ( \"localhost\" ) . port ( 60011 ) . ecKey ( new ECKeyP256 ()) . build (); GrpcClient client = new GrpcClientImpl ( config );","title":"2.1.1 \u521d\u59cb\u5316Client"},{"location":"sdk/javasdk/#212","text":"\u5f00\u53d1\u8005\u9700\u63d0\u4f9b\u5df2\u7ecf\u7f16\u8bd1\u7684 WebAssembly \u6587\u4ef6\u3002 \u4f8b\u5982\uff1a byte [] contractBytes = IOUtils . toByteArray ( new FileInputStream ( \"./example.wasm\" )); \u901a\u8fc7client\u90e8\u7f72\u5408\u7ea6\uff0c\u90e8\u7f72\u5b8c\u6210\u540e\u53ef\u4ee5\u83b7\u53d6\u5408\u7ea6\u5730\u5740 contractAddress \u3002 \u4f8b\u5982\uff1a String contractAddress = client . deployContract ( contractBytes );","title":"2.1.2 \u90e8\u7f72\u5408\u7ea6"},{"location":"sdk/javasdk/#213","text":"\u8c03\u7528\u5408\u7ea6\u9700\u4f20\u5165\u5408\u7ea6\u5730\u5740\u3001\u5408\u7ea6\u65b9\u6cd5\u540d\u548c\u5bf9\u5e94\u7684\u53c2\u6570\u3002 \u4f8b\u5982\uff1a ReceiptOuterClass . Receipt receipt = client . invokeXVMContract ( contractAddress , \"a\" , Types . i32 ( 1 ), Types . i32 ( 1 )); \\\\ \u65b9\u6cd5\u540d\u4e3aa \uff0c \u4f20\u53c21 \uff0c \u4f20\u53c22","title":"2.1.3 \u8c03\u7528\u5408\u7ea6"},{"location":"sdk/javasdk/#214","text":"\u5f97\u5230\u8fd4\u56de\u503c\u7ed3\u679c\u540e\uff0c\u83b7\u5f97\u72b6\u6001\u7801\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u8c03\u7528\u6210\u529f\uff0c\u82e5\u8c03\u7528\u6210\u529f\uff0c\u89e3\u6790\u8fd4\u56de\u503c\u53ef\u770b\u5230\u8c03\u7528\u4e4b\u540e\u7684\u7ed3\u679c\u3002 \u4f8b\u5982\uff1a if ( receipt . getStatus () == ReceiptOuterClass . Receipt . Status . SUCCESS ) { log . info ( receipt . getRet (). toStringUtf8 ()); }","title":"2.1.4 \u8fd4\u56de\u503c\u89e3\u6790"},{"location":"sdk/javasdk/#215","text":"//\u83b7\u53d6wasm\u5b57\u8282\u6570\u7ec4 byte [] contractBytes = IOUtils . toByteArray ( new FileInputStream ( \"./example.wasm\" )); //\u90e8\u7f72\u5408\u7ea6\uff0c\u83b7\u53d6\u5408\u7ea6\u5730\u5740 String contractAddress = client . deployContract ( contractBytes ); //\u8c03\u7528\u5408\u7ea6\uff0c\u83b7\u53d6\u4ea4\u6613\u56de\u6267 ReceiptOuterClass . Receipt receipt = client . invokeXVMContract ( contractAddress , \"a\" , Types . i32 ( 1 ), Types . i32 ( 1 )); //\u5224\u65ad\u5408\u7ea6\u8c03\u7528\u4ea4\u6613\u6210\u529f\u4e0e\u5426\uff0c\u6253\u5370\u5408\u7ea6\u8c03\u7528\u6570\u636e if ( receipt . getStatus () == ReceiptOuterClass . Receipt . Status . SUCCESS ) { log . info ( receipt . getRet (). toStringUtf8 ()); }","title":"2.1.5 \u5b8c\u6574\u793a\u4f8b"},{"location":"sdk/javasdk/#22","text":"\u672c\u793a\u4f8b\u5c55\u793a\u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u4ee5\u53ca\u6ce8\u9500\u64cd\u4f5c\u3002","title":"2.2 \u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u793a\u4f8b"},{"location":"sdk/javasdk/#221","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 Register \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u518c\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] args = Types . toArgArray ( Types . string ( \"\" ), //validators Types . i32 ( 0 ), //consensus_type Types . string ( \"hyperchain\" ), //chain_type Types . string ( \"\u7a0e\u52a1\u94fe\" ), //name Types . string ( \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" ), //desc Types . string ( \"1.8\" )); //version Types . string ( \"\" )); //public key ReceiptOuterClass . Receipt receipt = client . invokeBVMContract ( BVMAddr . APPCHAIN_MANAGER_CONTRACT_ADDR , \"Register\" , args ); \u83b7\u53d6\u5230\u6210\u529f\u7684\u4ea4\u6613\u56de\u6267\u540e\uff0c\u89e3\u6790\u4ea4\u6613\u56de\u6267\u5185\u5bb9\u3002 \u4f8b\u5982\uff1a { \"id\" : \"0x5098cc26b0d485145fb8258d2e79c49886cd4662\" , \\\\ \u5e94\u7528\u94feID \"name\" : \"\u7a0e\u52a1\u94fe\" , \"validators\" : \"\" , \"consensus_type\" : 0 , \"status\" : 0 , \"chain_type\" : \"hyperchain\" , \"desc\" : \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" , \"version\" : \"1.8\" , \"public_key\" : \"\" }","title":"2.2.1 \u5e94\u7528\u94fe\u6ce8\u518c"},{"location":"sdk/javasdk/#222","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 Audit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] adultArgs = Types . toArgArray ( Types . string ( appchainID ), //\u5e94\u7528\u94feID Types . i32 ( 1 ), //\u5ba1\u6838\u901a\u8fc7 Types . string ( \"\" )); //\u63cf\u8ff0\u4fe1\u606f ReceiptOuterClass . Receipt adultReceipt = client . invokeBVMContract ( BVMAddr . APPCHAIN_MANAGER_CONTRACT_ADDR , \"Audit\" , adultArgs );","title":"2.2.2 \u5e94\u7528\u94fe\u5ba1\u6838"},{"location":"sdk/javasdk/#223","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 DeleteAppchain \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u9500\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] deleteArgs = Types . toArgArray ( Types . string ( appchainID ); //\u5e94\u7528\u94feID ReceiptOuterClass . Receipt deleteReceipt = client . invokeBVMContract ( BVMAddr . APPCHAIN_MANAGER_CONTRACT_ADDR , \"DeleteAppchain\" , deleteArgs );","title":"2.2.3 \u5e94\u7528\u94fe\u6ce8\u9500"},{"location":"sdk/javasdk/#23","text":"\u672c\u793a\u4f8b\u5c55\u793a\u9a8c\u8bc1\u89c4\u5219\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u64cd\u4f5c\uff0c\u4ee5\u53caWebAssembly\u5408\u7ea6\u793a\u4f8b\u3002","title":"2.3 \u9a8c\u8bc1\u89c4\u5219\u4f7f\u7528\u793a\u4f8b"},{"location":"sdk/javasdk/#231","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 RegisterRule \u65b9\u6cd5\uff0c\u5411\u5e94\u7528\u94fe\u6ce8\u518c\u9a8c\u8bc1\u89c4\u5219\uff08WebAssembly\u5408\u7ea6\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5148\u6ce8\u518c\u5e94\u7528\u94fe\u548c\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u5408\u7ea6\uff0c\u7136\u540e\u83b7\u53d6\u5e94\u7528\u94feID\u548c\u5408\u7ea6\u5730\u5740\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] ruleArgs = Types . toArgArray ( Types . string ( appchainID ), Types . string ( contractAddress )); ReceiptOuterClass . Receipt ruleReceipt = client . invokeBVMContract ( BVMAddr . RULE_MANAGER_CONTRACT_ADDR , \"RegisterRule\" , ruleArgs );","title":"2.3.1 \u9a8c\u8bc1\u89c4\u5219\u6ce8\u518c"},{"location":"sdk/javasdk/#232","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 Audit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u9a8c\u8bc1\u89c4\u5219\u3002 \u4f8b\u5982\uff1a ArgOuterClass . Arg [] adultArgs = Types . toArgArray ( Types . string ( contractAddress ), //\u9a8c\u8bc1\u89c4\u5219\u7684\u5408\u7ea6\u5730\u5740 Types . i32 ( 1 ), //\u5ba1\u6838\u901a\u8fc7 Types . string ( \"\" )); //\u63cf\u8ff0\u4fe1\u606f ReceiptOuterClass . Receipt adultReceipt = client . invokeBVMContract ( BVMAddr . RULE_MANAGER_CONTRACT_ADDR , \"Audit\" , adultArgs );","title":"2.3.2 \u9a8c\u8bc1\u89c4\u5219\u5ba1\u6838"},{"location":"sdk/javasdk/#233-webassembly-fabric","text":"extern crate protobuf ; extern crate sha2 ; use crate :: crypto :: ecdsa ; use crate :: model :: transaction ; use sha2 :: { Digest , Sha256 }; pub fn verify ( proof : & [ u8 ], validator : & [ u8 ]) -> bool { let cap = protobuf :: parse_from_bytes :: < transaction :: ChaincodeActionPayload > ( proof ). expect ( \"error\" ); let cap_act = cap . action . unwrap (); let endorsers = cap_act . endorsements ; let mut digest = Sha256 :: new (); let mut payload = cap_act . proposal_response_payload . to_owned (); payload . extend ( & endorsers [ 0 ]. endorser ); digest . input ( & payload ); let digest_byte = digest . result (); return ecdsa :: verify ( & endorsers [ 0 ]. signature , & digest_byte , & validator , ecdsa :: EcdsaAlgorithmn :: P256 , ); }","title":"2.3.3 \u9a8c\u8bc1\u89c4\u5219\u793a\u4f8b\uff08WebAssembly\u5408\u7ea6, Fabric\u5b9e\u4f8b\uff09"},{"location":"sdk/javasdk/#3-sdk","text":"","title":"3 SDK\u6587\u6863"},{"location":"sdk/javasdk/#31","text":"","title":"3.1 \u521d\u59cb\u5316"},{"location":"sdk/javasdk/#311-client","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u83b7\u53d6\u4e0eBitXHub\u4ea4\u4e92\u7684Client\u3002 GrpcClient client = new GrpcClientImpl ( Config . defaultConfig ()); \u5165\u53c2\uff1a Config \u662fBitXHub\u7684\u7f51\u7edc\u5730\u5740, \u7aef\u53e3\u4ee5\u53ca\u5bc6\u94a5\u7684\u914d\u7f6e\u3002 \u8fd4\u56de\u503c\uff1a\u4e0eBitXHub\u4ea4\u4e92\u7684 Client \u3002","title":"3.1.1 \u521d\u59cb\u5316Client"},{"location":"sdk/javasdk/#312-client","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5c06\u4e0eBitXHub\u4ea4\u4e92\u7684 Client \u5173\u95ed\u3002 public void stop () throws InterruptedException","title":"3.1.2 \u505c\u6b62Client"},{"location":"sdk/javasdk/#32","text":"","title":"3.2 \u4ea4\u6613\u63a5\u53e3"},{"location":"sdk/javasdk/#321","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u53d1\u9001\u4ea4\u6613\uff0c\u4ea4\u6613\u7c7b\u578b\u5305\u62ec\u666e\u901a\u4ea4\u6613\u3001\u8de8\u94fe\u4ea4\u6613\u548c\u667a\u80fd\u5408\u7ea6\u4ea4\u6613\u3002 \u53c2\u6570\uff1a transaction \u4ea4\u6613\u3002 opts \u8de8\u94fe\u4ea4\u6613nonce\u3002 public String sendTransaction ( TransactionOuterClass . Transaction transaction , TransactOpts opts ); \u7528\u4f8b\uff1a public void sendTransaction () { TransactionOuterClass . Transaction unsignedTx = TransactionOuterClass . Transaction . newBuilder () . setFrom ( ByteString . copyFrom ( from )) . setTo ( ByteString . copyFrom ( to )) . setTimestamp ( Utils . genTimestamp ()) . setPayload ( TransactionOuterClass . TransactionData . newBuilder (). setAmount ( 100000L ). build (). toByteString ()) . build (); TransactionOuterClass . Transaction signedTx = SignUtils . sign ( unsignedTx , config . getEcKey ()); String txHash = client . sendTransaction ( signedTx , null ); }","title":"3.2.1 \u53d1\u9001\u4ea4\u6613"},{"location":"sdk/javasdk/#322","text":"\u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 ReceiptOuterClass . Receipt getReceipt ( String hash );","title":"3.2.2 \u67e5\u8be2\u4ea4\u6613\u56de\u6267"},{"location":"sdk/javasdk/#323","text":"\u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 Broker . GetTransactionResponse getTransaction ( String hash );","title":"3.2.3 \u67e5\u8be2\u4ea4\u6613"},{"location":"sdk/javasdk/#33","text":"\u5408\u7ea6\u7c7b\u578b\uff1a BVM\uff1aBitXHub\u5185\u7f6e\u5408\u7ea6 XVM\uff1aWebAssembly\u5408\u7ea6","title":"3.3 \u5408\u7ea6\u63a5\u53e3"},{"location":"sdk/javasdk/#331","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u90e8\u7f72XVM\u5408\u7ea6\u3002 \u53c2\u6570\uff1a contract \u5408\u7ea6\u6570\u636e\u3002 String deployContract ( byte [] contract );","title":"3.3.1 \u90e8\u7f72\u5408\u7ea6"},{"location":"sdk/javasdk/#332","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u8c03\u7528BVM\u6216\u8005XVM\u5408\u7ea6\u3002 \u53c2\u6570\uff1a vmType \u5408\u7ea6\u7c7b\u578b\uff1aBVM\u548cXVM\u3002 contractAddress \u5408\u7ea6\u5730\u5740\u3002 method \u5408\u7ea6\u65b9\u6cd5\uff1b args \u5408\u7ea6\u65b9\u6cd5\u53c2\u6570\u3002 ReceiptOuterClass . Receipt invokeContract ( TransactionOuterClass . TransactionData . VMType vmType , String contractAddress , String method , ArgOuterClass . Arg ... args ); \u7528\u4f8b\uff1a public void invokeContract () throws IOException { byte [] contractBytes = IOUtils . toByteArray ( new FileInputStream ( \"./example.wasm\" )); String contractAddress = client . deployContract ( contractBytes ); ReceiptOuterClass . Receipt receipt = client . invokeContract ( TransactionOuterClass . TransactionData . VMType . XVM , contractAddress , \"a\" , Types . i32 ( 1 ), Types . i32 ( 1 )); }","title":"3.3.2 \u8c03\u7528\u5408\u7ea6"},{"location":"sdk/javasdk/#34","text":"","title":"3.4 \u533a\u5757\u63a5\u53e3"},{"location":"sdk/javasdk/#341","text":"\u53c2\u6570\uff1a value \u533a\u5757\u9ad8\u5ea6\u6216\u8005\u533a\u5757\u54c8\u5e0c\u3002 type \u67e5\u8be2\u7c7b\u578b\u3002 type\u7c7b\u578b \u3002 BlockOuterClass . Block getBlock ( String value , Broker . GetBlockRequest . Type type );","title":"3.4.1 \u67e5\u8be2\u533a\u5757"},{"location":"sdk/javasdk/#342","text":"\u7528\u9014\uff1a\u6279\u91cf\u67e5\u8be2\u533a\u5757\uff0c\u8fd4\u56de\u6307\u5b9a\u5757\u9ad8\u5ea6\u8303\u56f4\uff08start\u5230end\uff09\u7684\u533a\u5757\u4fe1\u606f\u3002 \u53c2\u6570\uff1a start \u6307\u5b9a\u8303\u56f4\u7684\u8d77\u59cb\u533a\u5757\u9ad8\u5ea6\u3002 end \u6307\u5b9a\u8303\u56f4\u7684\u7ed3\u675f\u533a\u5757\u9ad8\u5ea6\u3002 Broker . GetBlocksResponse getBlocks ( Long start , Long end );","title":"3.4.2 \u6279\u91cf\u67e5\u8be2\u533a\u5757"},{"location":"sdk/javasdk/#343-meta","text":"\u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u94fe\u7684\u9ad8\u5ea6\u548c\u533a\u5757\u54c8\u5e0c\u3002 Chain . ChainMeta getChainMeta ();","title":"3.4.3 \u67e5\u8be2\u533a\u5757Meta"},{"location":"sdk/javasdk/#344","text":"\u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u533a\u5757\u94fe\u5171\u8bc6\u7684\u72b6\u6001\uff08\u6b63\u5e38\u6216\u8005\u4e0d\u6b63\u5e38\uff09\u3002 Broker . Response getChainStatus ();","title":"3.4.4 \u67e5\u8be2\u533a\u5757\u94fe\u72b6\u6001"},{"location":"sdk/javasdk/#35","text":"","title":"3.5 \u8ba2\u9605\u63a5\u53e3"},{"location":"sdk/javasdk/#351","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u53d1\u8d77\u8ba2\u9605\u4e8b\u4ef6\u3002 \u53c2\u6570\uff1a streamObserver \u4e8b\u4ef6\u901a\u9053\u3002 type \u4e8b\u4ef6\u7c7b\u578b\u3002 \u7528\u4f8b\uff1a void subscribe ( Broker . SubscriptionRequest . Type type , StreamObserver < Broker . Response > observer ); public void subscribe () throws InterruptedException { CountDownLatch asyncLatch = new CountDownLatch ( 1 ); StreamObserver < Broker . Response > observer = new StreamObserver < Broker . Response > () { @Override public void onNext ( Broker . Response response ) { ByteString data = response . getData (); BlockOuterClass . Block block = null ; try { block = BlockOuterClass . Block . parseFrom ( data ); } catch ( InvalidProtocolBufferException e ) { e . printStackTrace (); } } @Override public void onError ( Throwable throwable ) { throwable . printStackTrace (); asyncLatch . countDown (); } @Override public void onCompleted () { asyncLatch . countDown (); } }; client . subscribe ( Broker . SubscriptionRequest . Type . BLOCK , observer ); asyncLatch . await (); }","title":"3.5.1 \u8ba2\u9605\u4e8b\u4ef6"},{"location":"sdk/javasdk/#36","text":"","title":"3.6 \u5176\u5b83\u63a5\u53e3"},{"location":"sdk/javasdk/#361","text":"\u7528\u9014\uff1a\u8fd4\u56de\u5f53\u524d\u533a\u5757\u94fe\u7f51\u7edc\u7684\u8282\u70b9\u4fe1\u606f\u3002 Broker . Response getNetworkMeta ();","title":"3.6.1 \u67e5\u8be2\u8282\u70b9\u7f51\u7edc\u4fe1\u606f"},{"location":"sdk/javasdk/#362","text":"\u53c2\u6570\uff1a address \u5730\u5740\u3002 Broker . Response getAccountBalance ( String address );","title":"3.6.2 \u67e5\u8be2\u8d26\u6237\u4f59\u989d"},{"location":"sdk/jssdk/","text":"Js SDK 1 \u524d\u8a00 \u6b64SDK\u6587\u6863\u9762\u5411BitXHub\u5e73\u53f0\u7684\u5e94\u7528\u5f00\u53d1\u8005\uff0c\u63d0\u4f9bBitXHub JS SDK\u7684\u4f7f\u7528\u6307\u5357\u3002 2 \u63a5\u53e3\u4f7f\u7528\u6d41\u7a0b\u793a\u4f8b \u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u63a5\u53e3\u7684\u4f7f\u7528\uff0c\u672c\u793a\u4f8b\u5c06\u4ece\u521d\u59cb\u5316Client\uff0c\u90e8\u7f72\u5408\u7ea6\uff0c\u8c03\u7528\u5408\u7ea6\u548c\u8fd4\u56de\u503c\u89e3\u6790\u8fd9\u4e2a\u5927\u81f4\u6d41\u7a0b\u4f5c\u4ecb\u7ecd\uff0c\u5177\u4f53\u8be6\u7ec6\u63a5\u53e3\u53ef\u53c2\u8003\u7b2c\u4e09\u7ae0SDK\u6587\u6863\u3002 2.1 \u57fa\u672c\u6d41\u7a0b 2.1.1 \u5b89\u88c5\u5e76\u521d\u59cb\u5316Client \u53ef\u4ee5\u901a\u8fc7npm\u5b89\u88c5JS SDK\u5e76\u5f15\u5165\u5230JS\u7684\u9879\u76ee\u4e2d npm install @meshplus/js-bitxhub-client@1.5.0 JS SDK\u5206\u4e3a\u51e0\u4e2a\u78e8\u5757\u4f9b\u7528\u6237\u5206\u5f00\u8fdb\u884c\u8c03\u7528\uff0c\u5206\u522b\u4e3a\uff1aClient, PbType, Config, Transaction, Block, TripleDES\u4ee5\u53caAES\u3002 \u7528\u6237\u5728\u8c03\u7528JS SDK\u4e0eBitXHub\u8fdb\u884c\u4ea4\u4e92\u65f6\uff0c\u4e3b\u8981\u662f\u9700\u8981\u4f7f\u7528Client, PbType\u548cConfig\u8fd9\u4e09\u4e2a\u6a21\u5757\u3002 \u7528\u6237\u5f15\u5165JS SDK\u7684\u5e93\u4ee5\u540e\u9996\u5148\u9700\u8981\u914d\u7f6e\u7f51\u7edc\u5730\u5740\u548c\u63a5\u53e3\u3002 \u4f8b\u5982\uff1a import { Config } from '@meshplus/js-bitxhub-client' ; Config . setHosts ([ \"localhost\" ]); Config . setPorts ([ \"9091\" ]); \u521d\u59cb\u5316Client\uff0c\u6240\u6709\u64cd\u4f5c\u5c06\u901a\u8fc7\u8be5\u5bf9\u8c61\u4e0eBitXHub\u4ea4\u4e92\u3002 \u4f8b\u5982\uff1a import { Client } from '@meshplus/js-bitxhub-client' ; let client = new Client ( privateKey ); 2.1.2 \u90e8\u7f72\u5408\u7ea6 \u5f00\u53d1\u8005\u9700\u63d0\u4f9b\u5df2\u7ecf\u7f16\u8bd1\u7684 WebAssembly \u6587\u4ef6\u3002 \u4f8b\u5982\uff1a import { fs } from 'fs' ; let contract = fs . readFileSync ( \"./testdata/example.wasm\" ); \u901a\u8fc7client\u90e8\u7f72\u5408\u7ea6\uff0c\u90e8\u7f72\u5b8c\u6210\u540e\u53ef\u4ee5\u83b7\u53d6\u5408\u7ea6\u5730\u5740 addr \u3002 \u4f8b\u5982\uff1a let address = await cli . DeployContract ( contract ) 2.1.3 \u8c03\u7528\u5408\u7ea6 \u8c03\u7528\u5408\u7ea6\u9700\u4f20\u5165\u5408\u7ea6\u5730\u5740\u3001\u5408\u7ea6\u65b9\u6cd5\u540d\u548c\u5bf9\u5e94\u7684\u53c2\u6570\u3002 \u4f8b\u5982\uff1a result = cli . InvokeContract ( 0 , address , \"a\" , PbType . pbInt32 ( 1 ), PbType . pbInt32 ( 2 )) //\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8c03\u7528XVM\u5408\u7ea6\u8fd8\u662fBVM\u5408\u7ea6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5408\u7ea6\u5730\u5740\uff0c \u65b9\u6cd5\u540d\u4e3aa\uff0c\u4f20\u53c21\uff0c\u4f20\u53c22 2.1.4 \u5b8c\u6574\u793a\u4f8b import { fs } from 'fs' ; import { Client } from '@meshplus/js-bitxhub-client' ; let contract = fs . readFileSync ( \"./testdata/example.wasm\" ); let client = new Client ( privateKey ); //\u90e8\u7f72\u5408\u7ea6\uff0c\u83b7\u53d6\u5408\u7ea6\u5730\u5740 let address = await cli . DeployContract ( contract ); //\u8c03\u7528\u5408\u7ea6\uff0c\u83b7\u53d6\u4ea4\u6613\u56de\u6267 result = cli . InvokeContract ( 1 , address , \"a\" , PbType . pbInt32 ( 1 ), PbType . pbInt32 ( 2 )); //\u6253\u5370\u5408\u7ea6\u8fd4\u56de\u6570\u636e console . log ( result ); 2.2 \u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u793a\u4f8b \u672c\u793a\u4f8b\u5c55\u793a\u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u4ee5\u53ca\u6ce8\u9500\u64cd\u4f5c\u3002 2.2.1 \u5e94\u7528\u94fe\u6ce8\u518c \u8c03\u7528BVM\u5408\u7ea6\u7684 Register \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u518c\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , InterchainContractAddr , \"Register\" , PbType . pbString ( validator ), PbType . pbInt32 ( 0 ), PbType . pbString ( chainType ), PbType . pbString ( name ), PbType . pbString ( desc ), PbType . pbString ( version ), PbType . pbString ( pubKey ) ); \u83b7\u53d6\u5230\u6210\u529f\u7684\u4ea4\u6613\u56de\u6267\u540e\uff0c\u5f97\u5230\u4ea4\u6613\u56de\u6267\u5185\u5bb9\u3002 \u4f8b\u5982\uff1a { \"id\" : \"0x5098cc26b0d485145fb8258d2e79c49886cd4662\" , \\\\ \u5e94\u7528\u94feID \"name\" : \"\u7a0e\u52a1\u94fe\" , \"validators\" : \"\" , \"consensus_type\" : 0 , \"status\" : 0 , \"chain_type\" : \"hyperchain\" , \"desc\" : \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" , \"version\" : \"1.8\" } 2.2.2 \u5e94\u7528\u94fe\u5ba1\u6838 \u8c03\u7528BVM\u5408\u7ea6\u7684 Aduit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , InterchainContractAddr , \"Aduit\" , PbType . pbString ( address ), PbType . pbInt32 ( 1 ), PbType . pbString ( desc ) ); 2.2.3 \u5e94\u7528\u94fe\u6ce8\u9500 \u8c03\u7528BVM\u5408\u7ea6\u7684 DeleteAppchain \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u9500\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , InterchainContractAddr , \"DeleteAppchain\" , PbType . pbString ( address )); 2.3 \u9a8c\u8bc1\u89c4\u5219\u4f7f\u7528\u793a\u4f8b \u672c\u793a\u4f8b\u5c55\u793a\u9a8c\u8bc1\u89c4\u5219\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u64cd\u4f5c\uff0c\u4ee5\u53caWebAssembly\u5408\u7ea6\u793a\u4f8b\u3002 2.3.1 \u9a8c\u8bc1\u89c4\u5219\u6ce8\u518c \u8c03\u7528BVM\u5408\u7ea6\u7684 RegisterRule \u65b9\u6cd5\uff0c\u5411\u5e94\u7528\u94fe\u6ce8\u518c\u9a8c\u8bc1\u89c4\u5219\uff08WebAssembly\u5408\u7ea6\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5148\u6ce8\u518c\u5e94\u7528\u94fe\u548c\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u5408\u7ea6\uff0c\u7136\u540e\u83b7\u53d6\u5e94\u7528\u94feID\u548c\u5408\u7ea6\u5730\u5740\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , RoleContractAddr , \"RegisterRule\" , PbType . pbString ( chainAddr ), PbType . pbString ( contractAddr )); 2.3.2 \u9a8c\u8bc1\u89c4\u5219\u5ba1\u6838 \u8c03\u7528BVM\u5408\u7ea6\u7684 Aduit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u9a8c\u8bc1\u89c4\u5219\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , RoleContractAddr , \"Aduit\" , PbType . pbString ( chainAddr ), PbType . pbInt32 ( 1 ), PbType . pbString ( desc ) ); 2.3.3 \u9a8c\u8bc1\u89c4\u5219\u793a\u4f8b\uff08WebAssembly\u5408\u7ea6, Fabric\u5b9e\u4f8b\uff09 extern crate protobuf ; extern crate sha2 ; use crate :: crypto :: ecdsa ; use crate :: model :: transaction ; use sha2 :: { Digest , Sha256 }; pub fn verify ( proof : & [ u8 ], validator : & [ u8 ]) -> bool { let cap = protobuf :: parse_from_bytes :: < transaction :: ChaincodeActionPayload > ( proof ). expect ( \"error\" ); let cap_act = cap . action . unwrap (); let endorsers = cap_act . endorsements ; let mut digest = Sha256 :: new (); let mut payload = cap_act . proposal_response_payload . to_owned (); payload . extend ( & endorsers [ 0 ]. endorser ); digest . input ( & payload ); let digest_byte = digest . result (); return ecdsa :: verify ( & endorsers [ 0 ]. signature , & digest_byte , & validator , ecdsa :: EcdsaAlgorithmn :: P256 , ); } 3 SDK\u6587\u6863 3.1 \u4ea4\u6613\u63a5\u53e3 3.1.1 \u53d1\u9001\u4ea4\u6613 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u53d1\u9001\u4ea4\u6613\uff0c\u4ea4\u6613\u7c7b\u578b\u5305\u62ec\u666e\u901a\u4ea4\u6613\u3001\u8de8\u94fe\u4ea4\u6613\u548c\u667a\u80fd\u5408\u7ea6\u3002 \u53c2\u6570\uff1a tx \u4ea4\u6613\u5b9e\u4f8b\u3002 function SendTransaction ( transaction ) 3.1.2 \u67e5\u8be2\u4ea4\u6613\u56de\u6267 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u67e5\u8be2\u4ea4\u6613\u56de\u6267\u3002 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 function GetReceipt ( hash ) 3.1.3 \u67e5\u8be2\u4ea4\u6613 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u67e5\u8be2\u4ea4\u6613\u3002 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 function GetTransaction ( hash ) 3.2 \u5408\u7ea6\u63a5\u53e3 \u5408\u7ea6\u7c7b\u578b\uff1a BVM\uff1aBitXHub\u5185\u7f6e\u5408\u7ea6\u3002 XVM\uff1aWebAssembly\u5408\u7ea6\u3002 3.2.1 \u90e8\u7f72\u5408\u7ea6 \u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u90e8\u7f72XVM\u5408\u7ea6\uff0c\u8fd4\u56de\u5408\u7ea6\u5730\u5740\u3002 \u53c2\u6570\uff1a ctx wasm\u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u6570\u636e\u3002 function DeployContract ( ctx ) 3.2.2 \u8c03\u7528\u5408\u7ea6 \u7528\u9014\uff1a\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u8c03\u7528\u5408\u7ea6\u83b7\u53d6\u4ea4\u6613\u56de\u6267\u3002 \u53c2\u6570\uff1a vmType \u5408\u7ea6\u7c7b\u578b\uff1aBVM\u548cXVM\uff1b address \u5408\u7ea6\u5730\u5740\uff1b method \u5408\u7ea6\u65b9\u6cd5\uff1b args \u5408\u7ea6\u65b9\u6cd5\u53c2\u6570\u3002 function InvokeContract ( vmType , address , method , ... args ) 3.3 \u533a\u5757\u63a5\u53e3 3.3.1 \u67e5\u8be2\u533a\u5757 \u53c2\u6570\uff1a value \u533a\u5757\u9ad8\u5ea6\u6216\u8005\u533a\u5757\u54c8\u5e0c\u3002 type \u67e5\u8be2\u7c7b\u578b\u3002 function GetBlock ( type , value ) 3.3.2 \u6279\u91cf\u67e5\u8be2\u533a\u5757 \u7528\u9014\uff1a\u6279\u91cf\u67e5\u8be2\u533a\u5757\uff0c\u8fd4\u56de\u6307\u5b9a\u5757\u9ad8\u5ea6\u8303\u56f4\uff08start\u5230end\uff09\u7684\u533a\u5757\u4fe1\u606f\u3002 \u53c2\u6570\uff1a start \u6307\u5b9a\u8303\u56f4\u7684\u8d77\u59cb\u533a\u5757\u9ad8\u5ea6\u3002 end \u6307\u5b9a\u8303\u56f4\u7684\u7ed3\u675f\u533a\u5757\u9ad8\u5ea6\u3002 function GetBlocks ( start , end )","title":"JsSDK\u4f7f\u7528\u6587\u6863"},{"location":"sdk/jssdk/#js-sdk","text":"","title":"Js SDK"},{"location":"sdk/jssdk/#1","text":"\u6b64SDK\u6587\u6863\u9762\u5411BitXHub\u5e73\u53f0\u7684\u5e94\u7528\u5f00\u53d1\u8005\uff0c\u63d0\u4f9bBitXHub JS SDK\u7684\u4f7f\u7528\u6307\u5357\u3002","title":"1 \u524d\u8a00"},{"location":"sdk/jssdk/#2","text":"\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u63a5\u53e3\u7684\u4f7f\u7528\uff0c\u672c\u793a\u4f8b\u5c06\u4ece\u521d\u59cb\u5316Client\uff0c\u90e8\u7f72\u5408\u7ea6\uff0c\u8c03\u7528\u5408\u7ea6\u548c\u8fd4\u56de\u503c\u89e3\u6790\u8fd9\u4e2a\u5927\u81f4\u6d41\u7a0b\u4f5c\u4ecb\u7ecd\uff0c\u5177\u4f53\u8be6\u7ec6\u63a5\u53e3\u53ef\u53c2\u8003\u7b2c\u4e09\u7ae0SDK\u6587\u6863\u3002","title":"2 \u63a5\u53e3\u4f7f\u7528\u6d41\u7a0b\u793a\u4f8b"},{"location":"sdk/jssdk/#21","text":"","title":"2.1 \u57fa\u672c\u6d41\u7a0b"},{"location":"sdk/jssdk/#211-client","text":"\u53ef\u4ee5\u901a\u8fc7npm\u5b89\u88c5JS SDK\u5e76\u5f15\u5165\u5230JS\u7684\u9879\u76ee\u4e2d npm install @meshplus/js-bitxhub-client@1.5.0 JS SDK\u5206\u4e3a\u51e0\u4e2a\u78e8\u5757\u4f9b\u7528\u6237\u5206\u5f00\u8fdb\u884c\u8c03\u7528\uff0c\u5206\u522b\u4e3a\uff1aClient, PbType, Config, Transaction, Block, TripleDES\u4ee5\u53caAES\u3002 \u7528\u6237\u5728\u8c03\u7528JS SDK\u4e0eBitXHub\u8fdb\u884c\u4ea4\u4e92\u65f6\uff0c\u4e3b\u8981\u662f\u9700\u8981\u4f7f\u7528Client, PbType\u548cConfig\u8fd9\u4e09\u4e2a\u6a21\u5757\u3002 \u7528\u6237\u5f15\u5165JS SDK\u7684\u5e93\u4ee5\u540e\u9996\u5148\u9700\u8981\u914d\u7f6e\u7f51\u7edc\u5730\u5740\u548c\u63a5\u53e3\u3002 \u4f8b\u5982\uff1a import { Config } from '@meshplus/js-bitxhub-client' ; Config . setHosts ([ \"localhost\" ]); Config . setPorts ([ \"9091\" ]); \u521d\u59cb\u5316Client\uff0c\u6240\u6709\u64cd\u4f5c\u5c06\u901a\u8fc7\u8be5\u5bf9\u8c61\u4e0eBitXHub\u4ea4\u4e92\u3002 \u4f8b\u5982\uff1a import { Client } from '@meshplus/js-bitxhub-client' ; let client = new Client ( privateKey );","title":"2.1.1 \u5b89\u88c5\u5e76\u521d\u59cb\u5316Client"},{"location":"sdk/jssdk/#212","text":"\u5f00\u53d1\u8005\u9700\u63d0\u4f9b\u5df2\u7ecf\u7f16\u8bd1\u7684 WebAssembly \u6587\u4ef6\u3002 \u4f8b\u5982\uff1a import { fs } from 'fs' ; let contract = fs . readFileSync ( \"./testdata/example.wasm\" ); \u901a\u8fc7client\u90e8\u7f72\u5408\u7ea6\uff0c\u90e8\u7f72\u5b8c\u6210\u540e\u53ef\u4ee5\u83b7\u53d6\u5408\u7ea6\u5730\u5740 addr \u3002 \u4f8b\u5982\uff1a let address = await cli . DeployContract ( contract )","title":"2.1.2 \u90e8\u7f72\u5408\u7ea6"},{"location":"sdk/jssdk/#213","text":"\u8c03\u7528\u5408\u7ea6\u9700\u4f20\u5165\u5408\u7ea6\u5730\u5740\u3001\u5408\u7ea6\u65b9\u6cd5\u540d\u548c\u5bf9\u5e94\u7684\u53c2\u6570\u3002 \u4f8b\u5982\uff1a result = cli . InvokeContract ( 0 , address , \"a\" , PbType . pbInt32 ( 1 ), PbType . pbInt32 ( 2 )) //\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8c03\u7528XVM\u5408\u7ea6\u8fd8\u662fBVM\u5408\u7ea6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5408\u7ea6\u5730\u5740\uff0c \u65b9\u6cd5\u540d\u4e3aa\uff0c\u4f20\u53c21\uff0c\u4f20\u53c22","title":"2.1.3 \u8c03\u7528\u5408\u7ea6"},{"location":"sdk/jssdk/#214","text":"import { fs } from 'fs' ; import { Client } from '@meshplus/js-bitxhub-client' ; let contract = fs . readFileSync ( \"./testdata/example.wasm\" ); let client = new Client ( privateKey ); //\u90e8\u7f72\u5408\u7ea6\uff0c\u83b7\u53d6\u5408\u7ea6\u5730\u5740 let address = await cli . DeployContract ( contract ); //\u8c03\u7528\u5408\u7ea6\uff0c\u83b7\u53d6\u4ea4\u6613\u56de\u6267 result = cli . InvokeContract ( 1 , address , \"a\" , PbType . pbInt32 ( 1 ), PbType . pbInt32 ( 2 )); //\u6253\u5370\u5408\u7ea6\u8fd4\u56de\u6570\u636e console . log ( result );","title":"2.1.4 \u5b8c\u6574\u793a\u4f8b"},{"location":"sdk/jssdk/#22","text":"\u672c\u793a\u4f8b\u5c55\u793a\u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u4ee5\u53ca\u6ce8\u9500\u64cd\u4f5c\u3002","title":"2.2 \u5e94\u7528\u94fe\u7ba1\u7406\u6d41\u7a0b\u793a\u4f8b"},{"location":"sdk/jssdk/#221","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 Register \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u518c\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , InterchainContractAddr , \"Register\" , PbType . pbString ( validator ), PbType . pbInt32 ( 0 ), PbType . pbString ( chainType ), PbType . pbString ( name ), PbType . pbString ( desc ), PbType . pbString ( version ), PbType . pbString ( pubKey ) ); \u83b7\u53d6\u5230\u6210\u529f\u7684\u4ea4\u6613\u56de\u6267\u540e\uff0c\u5f97\u5230\u4ea4\u6613\u56de\u6267\u5185\u5bb9\u3002 \u4f8b\u5982\uff1a { \"id\" : \"0x5098cc26b0d485145fb8258d2e79c49886cd4662\" , \\\\ \u5e94\u7528\u94feID \"name\" : \"\u7a0e\u52a1\u94fe\" , \"validators\" : \"\" , \"consensus_type\" : 0 , \"status\" : 0 , \"chain_type\" : \"hyperchain\" , \"desc\" : \"\u8da3\u94fe\u7a0e\u52a1\u94fe\" , \"version\" : \"1.8\" }","title":"2.2.1 \u5e94\u7528\u94fe\u6ce8\u518c"},{"location":"sdk/jssdk/#222","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 Aduit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , InterchainContractAddr , \"Aduit\" , PbType . pbString ( address ), PbType . pbInt32 ( 1 ), PbType . pbString ( desc ) );","title":"2.2.2 \u5e94\u7528\u94fe\u5ba1\u6838"},{"location":"sdk/jssdk/#223","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 DeleteAppchain \u65b9\u6cd5\uff0c\u5411BitXHub\u6ce8\u9500\u5e94\u7528\u94fe\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , InterchainContractAddr , \"DeleteAppchain\" , PbType . pbString ( address ));","title":"2.2.3 \u5e94\u7528\u94fe\u6ce8\u9500"},{"location":"sdk/jssdk/#23","text":"\u672c\u793a\u4f8b\u5c55\u793a\u9a8c\u8bc1\u89c4\u5219\u4e2d\u7684\u6ce8\u518c\u3001\u5ba1\u6838\u64cd\u4f5c\uff0c\u4ee5\u53caWebAssembly\u5408\u7ea6\u793a\u4f8b\u3002","title":"2.3 \u9a8c\u8bc1\u89c4\u5219\u4f7f\u7528\u793a\u4f8b"},{"location":"sdk/jssdk/#231","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 RegisterRule \u65b9\u6cd5\uff0c\u5411\u5e94\u7528\u94fe\u6ce8\u518c\u9a8c\u8bc1\u89c4\u5219\uff08WebAssembly\u5408\u7ea6\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5148\u6ce8\u518c\u5e94\u7528\u94fe\u548c\u90e8\u7f72\u9a8c\u8bc1\u89c4\u5219\u5408\u7ea6\uff0c\u7136\u540e\u83b7\u53d6\u5e94\u7528\u94feID\u548c\u5408\u7ea6\u5730\u5740\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , RoleContractAddr , \"RegisterRule\" , PbType . pbString ( chainAddr ), PbType . pbString ( contractAddr ));","title":"2.3.1 \u9a8c\u8bc1\u89c4\u5219\u6ce8\u518c"},{"location":"sdk/jssdk/#232","text":"\u8c03\u7528BVM\u5408\u7ea6\u7684 Aduit \u65b9\u6cd5\uff0c\u5411BitXHub\u5ba1\u6838\u9a8c\u8bc1\u89c4\u5219\u3002 \u4f8b\u5982\uff1a let ret = cli . InvokeContract ( 0 , RoleContractAddr , \"Aduit\" , PbType . pbString ( chainAddr ), PbType . pbInt32 ( 1 ), PbType . pbString ( desc ) );","title":"2.3.2 \u9a8c\u8bc1\u89c4\u5219\u5ba1\u6838"},{"location":"sdk/jssdk/#233-webassembly-fabric","text":"extern crate protobuf ; extern crate sha2 ; use crate :: crypto :: ecdsa ; use crate :: model :: transaction ; use sha2 :: { Digest , Sha256 }; pub fn verify ( proof : & [ u8 ], validator : & [ u8 ]) -> bool { let cap = protobuf :: parse_from_bytes :: < transaction :: ChaincodeActionPayload > ( proof ). expect ( \"error\" ); let cap_act = cap . action . unwrap (); let endorsers = cap_act . endorsements ; let mut digest = Sha256 :: new (); let mut payload = cap_act . proposal_response_payload . to_owned (); payload . extend ( & endorsers [ 0 ]. endorser ); digest . input ( & payload ); let digest_byte = digest . result (); return ecdsa :: verify ( & endorsers [ 0 ]. signature , & digest_byte , & validator , ecdsa :: EcdsaAlgorithmn :: P256 , ); }","title":"2.3.3 \u9a8c\u8bc1\u89c4\u5219\u793a\u4f8b\uff08WebAssembly\u5408\u7ea6, Fabric\u5b9e\u4f8b\uff09"},{"location":"sdk/jssdk/#3-sdk","text":"","title":"3 SDK\u6587\u6863"},{"location":"sdk/jssdk/#31","text":"","title":"3.1 \u4ea4\u6613\u63a5\u53e3"},{"location":"sdk/jssdk/#311","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u53d1\u9001\u4ea4\u6613\uff0c\u4ea4\u6613\u7c7b\u578b\u5305\u62ec\u666e\u901a\u4ea4\u6613\u3001\u8de8\u94fe\u4ea4\u6613\u548c\u667a\u80fd\u5408\u7ea6\u3002 \u53c2\u6570\uff1a tx \u4ea4\u6613\u5b9e\u4f8b\u3002 function SendTransaction ( transaction )","title":"3.1.1 \u53d1\u9001\u4ea4\u6613"},{"location":"sdk/jssdk/#312","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u67e5\u8be2\u4ea4\u6613\u56de\u6267\u3002 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 function GetReceipt ( hash )","title":"3.1.2 \u67e5\u8be2\u4ea4\u6613\u56de\u6267"},{"location":"sdk/jssdk/#313","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u67e5\u8be2\u4ea4\u6613\u3002 \u53c2\u6570\uff1a hash \u4ea4\u6613\u54c8\u5e0c\u3002 function GetTransaction ( hash )","title":"3.1.3 \u67e5\u8be2\u4ea4\u6613"},{"location":"sdk/jssdk/#32","text":"\u5408\u7ea6\u7c7b\u578b\uff1a BVM\uff1aBitXHub\u5185\u7f6e\u5408\u7ea6\u3002 XVM\uff1aWebAssembly\u5408\u7ea6\u3002","title":"3.2 \u5408\u7ea6\u63a5\u53e3"},{"location":"sdk/jssdk/#321","text":"\u7528\u9014\uff1a\u8c03\u7528\u8be5\u63a5\u53e3\u5411BitXHub\u90e8\u7f72XVM\u5408\u7ea6\uff0c\u8fd4\u56de\u5408\u7ea6\u5730\u5740\u3002 \u53c2\u6570\uff1a ctx wasm\u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u6570\u636e\u3002 function DeployContract ( ctx )","title":"3.2.1 \u90e8\u7f72\u5408\u7ea6"},{"location":"sdk/jssdk/#322","text":"\u7528\u9014\uff1a\u8be5\u63a5\u53e3\u5411\u4e2d\u7ee7\u94fe\u8c03\u7528\u5408\u7ea6\u83b7\u53d6\u4ea4\u6613\u56de\u6267\u3002 \u53c2\u6570\uff1a vmType \u5408\u7ea6\u7c7b\u578b\uff1aBVM\u548cXVM\uff1b address \u5408\u7ea6\u5730\u5740\uff1b method \u5408\u7ea6\u65b9\u6cd5\uff1b args \u5408\u7ea6\u65b9\u6cd5\u53c2\u6570\u3002 function InvokeContract ( vmType , address , method , ... args )","title":"3.2.2 \u8c03\u7528\u5408\u7ea6"},{"location":"sdk/jssdk/#33","text":"","title":"3.3 \u533a\u5757\u63a5\u53e3"},{"location":"sdk/jssdk/#331","text":"\u53c2\u6570\uff1a value \u533a\u5757\u9ad8\u5ea6\u6216\u8005\u533a\u5757\u54c8\u5e0c\u3002 type \u67e5\u8be2\u7c7b\u578b\u3002 function GetBlock ( type , value )","title":"3.3.1 \u67e5\u8be2\u533a\u5757"},{"location":"sdk/jssdk/#332","text":"\u7528\u9014\uff1a\u6279\u91cf\u67e5\u8be2\u533a\u5757\uff0c\u8fd4\u56de\u6307\u5b9a\u5757\u9ad8\u5ea6\u8303\u56f4\uff08start\u5230end\uff09\u7684\u533a\u5757\u4fe1\u606f\u3002 \u53c2\u6570\uff1a start \u6307\u5b9a\u8303\u56f4\u7684\u8d77\u59cb\u533a\u5757\u9ad8\u5ea6\u3002 end \u6307\u5b9a\u8303\u56f4\u7684\u7ed3\u675f\u533a\u5757\u9ad8\u5ea6\u3002 function GetBlocks ( start , end )","title":"3.3.2 \u6279\u91cf\u67e5\u8be2\u533a\u5757"}]}